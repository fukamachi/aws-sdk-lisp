;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(uiop/package:define-package #:aws-sdk/services/chime-sdk-voice/api (:use)
                             (:nicknames #:aws/chime-sdk-voice)
                             (:import-from #:aws-sdk/generator/shape)
                             (:import-from #:aws-sdk/generator/operation)
                             (:import-from #:aws-sdk/api)
                             (:import-from #:aws-sdk/request)
                             (:import-from #:aws-sdk/json-request)
                             (:import-from #:aws-sdk/rest-json-request)
                             (:import-from #:aws-sdk/rest-xml-request)
                             (:import-from #:aws-sdk/query-request)
                             (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/chime-sdk-voice/api)
(common-lisp:progn
 (common-lisp:define-condition chime-sdk-voice-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'chime-sdk-voice-error))
(common-lisp:progn
 (common-lisp:defclass chime-sdk-voice-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "chime-sdk-voice"
                        :api-version "2022-08-03" :host-prefix "voice-chime"
                        :signing-name "chime" :global-host common-lisp:nil))
 (common-lisp:export 'chime-sdk-voice-request))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("BadRequestException" . bad-request-exception)
    ("ConflictException" . conflict-exception)
    ("ForbiddenException" . forbidden-exception)
    ("GoneException" . gone-exception)
    ("NotFoundException" . not-found-exception)
    ("ResourceLimitExceededException" . resource-limit-exceeded-exception)
    ("ServiceFailureException" . service-failure-exception)
    ("ServiceUnavailableException" . service-unavailable-exception)
    ("ThrottledClientException" . throttled-client-exception)
    ("UnauthorizedClientException" . unauthorized-client-exception)
    ("UnprocessableEntityException" . unprocessable-entity-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (chime-sdk-voice-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'access-denied-exception)))
(common-lisp:progn
 (common-lisp:defclass address common-lisp:nil
                       ((street-name :initarg :street-name :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor struct-shape-address-street-name :shape
                         "SensitiveNonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (street-suffix :initarg :street-suffix :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor struct-shape-address-street-suffix :shape
                         "SensitiveNonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (post-directional :initarg :post-directional :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor struct-shape-address-post-directional :shape
                         "SensitiveNonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (pre-directional :initarg :pre-directional :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor struct-shape-address-pre-directional :shape
                         "SensitiveNonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (street-number :initarg :street-number :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor struct-shape-address-street-number :shape
                         "SensitiveNonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (city :initarg :city :initform common-lisp:nil :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor struct-shape-address-city :shape
                         "SensitiveNonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor struct-shape-address-state :shape
                         "SensitiveNonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (postal-code :initarg :postal-code :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor struct-shape-address-postal-code :shape
                         "SensitiveNonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (postal-code-plus4 :initarg :postal-code-plus4
                         :initform common-lisp:nil :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor struct-shape-address-postal-code-plus4
                         :shape "SensitiveNonEmptyString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (country :initarg :country :initform common-lisp:nil
                         :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor struct-shape-address-country :shape
                         "SensitiveNonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-address
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'address
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'address 'make-address))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input address))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input address))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'street-name))
      (common-lisp:list
       (common-lisp:cons "streetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'street-suffix))
      (common-lisp:list
       (common-lisp:cons "streetSuffix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'post-directional))
      (common-lisp:list
       (common-lisp:cons "postDirectional"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pre-directional))
      (common-lisp:list
       (common-lisp:cons "preDirectional"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'street-number))
      (common-lisp:list
       (common-lisp:cons "streetNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'city))
      (common-lisp:list
       (common-lisp:cons "city"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'postal-code))
      (common-lisp:list
       (common-lisp:cons "postalCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'postal-code-plus4))
      (common-lisp:list
       (common-lisp:cons "postalCodePlus4"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'country))
      (common-lisp:list
       (common-lisp:cons "country"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input address))
   common-lisp:nil))
(common-lisp:deftype alexa-skill-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype alexa-skill-id-list ()
   '(trivial-types:proper-list alexa-skill-id))
 (common-lisp:defun make-alexa-skill-id-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list alexa-skill-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype alexa-skill-status () 'common-lisp:string)
(common-lisp:deftype alpha2country-code () 'common-lisp:string)
(common-lisp:deftype area-code () 'common-lisp:string)
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass
  associate-phone-numbers-with-voice-connector-group-request common-lisp:nil
  ((voice-connector-group-id :initarg :voice-connector-group-id :initform
    (common-lisp:error ":voice-connector-group-id is required") :type
    (common-lisp:or non-empty-string common-lisp:null) :accessor
    struct-shape-associate-phone-numbers-with-voice-connector-group-request-voice-connector-group-id
    :shape "NonEmptyString" :location "uri" :location-name
    "voiceConnectorGroupId")
   (e164phone-numbers :initarg :e164phone-numbers :initform
    (common-lisp:error ":e164phone-numbers is required") :type
    (common-lisp:or e164phone-number-list common-lisp:null) :accessor
    struct-shape-associate-phone-numbers-with-voice-connector-group-request-e164phone-numbers
    :shape "E164PhoneNumberList" :location common-lisp:nil :location-name
    common-lisp:nil)
   (force-associate :initarg :force-associate :initform common-lisp:nil :type
    (common-lisp:or nullable-boolean common-lisp:null) :accessor
    struct-shape-associate-phone-numbers-with-voice-connector-group-request-force-associate
    :shape "NullableBoolean" :location common-lisp:nil :location-name
    common-lisp:nil))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-associate-phone-numbers-with-voice-connector-group-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'associate-phone-numbers-with-voice-connector-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'associate-phone-numbers-with-voice-connector-group-request
                    'make-associate-phone-numbers-with-voice-connector-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-numbers-with-voice-connector-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-numbers-with-voice-connector-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'e164phone-numbers))
      (common-lisp:list
       (common-lisp:cons "E164PhoneNumbers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'force-associate))
      (common-lisp:list
       (common-lisp:cons "ForceAssociate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-numbers-with-voice-connector-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  associate-phone-numbers-with-voice-connector-group-response common-lisp:nil
  ((phone-number-errors :initarg :phone-number-errors :initform common-lisp:nil
    :type (common-lisp:or phone-number-error-list common-lisp:null) :accessor
    struct-shape-associate-phone-numbers-with-voice-connector-group-response-phone-number-errors
    :shape "PhoneNumberErrorList" :location common-lisp:nil :location-name
    common-lisp:nil))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-associate-phone-numbers-with-voice-connector-group-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'associate-phone-numbers-with-voice-connector-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list
   'associate-phone-numbers-with-voice-connector-group-response
   'make-associate-phone-numbers-with-voice-connector-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-numbers-with-voice-connector-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-numbers-with-voice-connector-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-errors))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberErrors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-numbers-with-voice-connector-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass associate-phone-numbers-with-voice-connector-request
                       common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-associate-phone-numbers-with-voice-connector-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId")
                        (e164phone-numbers :initarg :e164phone-numbers
                         :initform
                         (common-lisp:error ":e164phone-numbers is required")
                         :type
                         (common-lisp:or e164phone-number-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-associate-phone-numbers-with-voice-connector-request-e164phone-numbers
                         :shape "E164PhoneNumberList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (force-associate :initarg :force-associate :initform
                         common-lisp:nil :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor
                         struct-shape-associate-phone-numbers-with-voice-connector-request-force-associate
                         :shape "NullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-associate-phone-numbers-with-voice-connector-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'associate-phone-numbers-with-voice-connector-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'associate-phone-numbers-with-voice-connector-request
                    'make-associate-phone-numbers-with-voice-connector-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-numbers-with-voice-connector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-numbers-with-voice-connector-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'e164phone-numbers))
      (common-lisp:list
       (common-lisp:cons "E164PhoneNumbers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'force-associate))
      (common-lisp:list
       (common-lisp:cons "ForceAssociate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-numbers-with-voice-connector-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass associate-phone-numbers-with-voice-connector-response
                       common-lisp:nil
                       ((phone-number-errors :initarg :phone-number-errors
                         :initform common-lisp:nil :type
                         (common-lisp:or phone-number-error-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-associate-phone-numbers-with-voice-connector-response-phone-number-errors
                         :shape "PhoneNumberErrorList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-associate-phone-numbers-with-voice-connector-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'associate-phone-numbers-with-voice-connector-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'associate-phone-numbers-with-voice-connector-response
                    'make-associate-phone-numbers-with-voice-connector-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-numbers-with-voice-connector-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-numbers-with-voice-connector-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-errors))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberErrors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-numbers-with-voice-connector-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition bad-request-exception
     (chime-sdk-voice-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'bad-request-exception)))
(common-lisp:progn
 (common-lisp:defclass batch-delete-phone-number-request common-lisp:nil
                       ((phone-number-ids :initarg :phone-number-ids :initform
                         (common-lisp:error ":phone-number-ids is required")
                         :type
                         (common-lisp:or non-empty-string-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-delete-phone-number-request-phone-number-ids
                         :shape "NonEmptyStringList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-delete-phone-number-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-delete-phone-number-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-delete-phone-number-request
                    'make-batch-delete-phone-number-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-delete-phone-number-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-delete-phone-number-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-ids))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-delete-phone-number-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-delete-phone-number-response common-lisp:nil
                       ((phone-number-errors :initarg :phone-number-errors
                         :initform common-lisp:nil :type
                         (common-lisp:or phone-number-error-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-delete-phone-number-response-phone-number-errors
                         :shape "PhoneNumberErrorList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-delete-phone-number-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-delete-phone-number-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-delete-phone-number-response
                    'make-batch-delete-phone-number-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-delete-phone-number-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-delete-phone-number-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-errors))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberErrors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-delete-phone-number-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-update-phone-number-request common-lisp:nil
                       ((update-phone-number-request-items :initarg
                         :update-phone-number-request-items :initform
                         (common-lisp:error
                          ":update-phone-number-request-items is required")
                         :type
                         (common-lisp:or update-phone-number-request-item-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-update-phone-number-request-update-phone-number-request-items
                         :shape "UpdatePhoneNumberRequestItemList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-update-phone-number-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-update-phone-number-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-update-phone-number-request
                    'make-batch-update-phone-number-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-update-phone-number-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-update-phone-number-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'update-phone-number-request-items))
      (common-lisp:list
       (common-lisp:cons "UpdatePhoneNumberRequestItems"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-update-phone-number-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-update-phone-number-response common-lisp:nil
                       ((phone-number-errors :initarg :phone-number-errors
                         :initform common-lisp:nil :type
                         (common-lisp:or phone-number-error-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-update-phone-number-response-phone-number-errors
                         :shape "PhoneNumberErrorList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-update-phone-number-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-update-phone-number-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-update-phone-number-response
                    'make-batch-update-phone-number-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-update-phone-number-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-update-phone-number-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-errors))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberErrors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-update-phone-number-response))
   common-lisp:nil))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defclass call-details common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform common-lisp:nil :type
                         (common-lisp:or non-empty-string128 common-lisp:null)
                         :accessor struct-shape-call-details-voice-connector-id
                         :shape "NonEmptyString128" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (transaction-id :initarg :transaction-id :initform
                         common-lisp:nil :type
                         (common-lisp:or non-empty-string256 common-lisp:null)
                         :accessor struct-shape-call-details-transaction-id
                         :shape "NonEmptyString256" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (is-caller :initarg :is-caller :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-call-details-is-caller :shape "Boolean"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-call-details
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'call-details
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'call-details 'make-call-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input call-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input call-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-connector-id))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'transaction-id))
      (common-lisp:list
       (common-lisp:cons "TransactionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-caller))
      (common-lisp:list
       (common-lisp:cons "IsCaller"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input call-details))
   common-lisp:nil))
(common-lisp:deftype call-leg-type () 'common-lisp:string)
(common-lisp:deftype calling-name () 'common-lisp:string)
(common-lisp:deftype calling-name-status () 'common-lisp:string)
(common-lisp:deftype calling-region () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype calling-region-list ()
   '(trivial-types:proper-list calling-region))
 (common-lisp:defun make-calling-region-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list calling-region))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass candidate-address common-lisp:nil
                       ((street-info :initarg :street-info :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor struct-shape-candidate-address-street-info
                         :shape "SensitiveNonEmptyString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (street-number :initarg :street-number :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor struct-shape-candidate-address-street-number
                         :shape "SensitiveNonEmptyString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (city :initarg :city :initform common-lisp:nil :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor struct-shape-candidate-address-city :shape
                         "SensitiveNonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor struct-shape-candidate-address-state :shape
                         "SensitiveNonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (postal-code :initarg :postal-code :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor struct-shape-candidate-address-postal-code
                         :shape "SensitiveNonEmptyString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (postal-code-plus4 :initarg :postal-code-plus4
                         :initform common-lisp:nil :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-candidate-address-postal-code-plus4
                         :shape "SensitiveNonEmptyString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (country :initarg :country :initform common-lisp:nil
                         :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor struct-shape-candidate-address-country
                         :shape "SensitiveNonEmptyString" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-candidate-address
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'candidate-address
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'candidate-address 'make-candidate-address))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input candidate-address))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input candidate-address))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'street-info))
      (common-lisp:list
       (common-lisp:cons "streetInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'street-number))
      (common-lisp:list
       (common-lisp:cons "streetNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'city))
      (common-lisp:list
       (common-lisp:cons "city"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'postal-code))
      (common-lisp:list
       (common-lisp:cons "postalCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'postal-code-plus4))
      (common-lisp:list
       (common-lisp:cons "postalCodePlus4"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'country))
      (common-lisp:list
       (common-lisp:cons "country"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input candidate-address))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype candidate-address-list ()
   '(trivial-types:proper-list candidate-address))
 (common-lisp:defun make-candidate-address-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list candidate-address))
   aws-sdk/generator/shape::members))
(common-lisp:deftype capability () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype capability-list ()
   '(trivial-types:proper-list capability))
 (common-lisp:defun make-capability-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list capability))
   aws-sdk/generator/shape::members))
(common-lisp:deftype client-request-id () 'common-lisp:string)
(common-lisp:deftype confidence-score () 'common-lisp:single-float)
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (chime-sdk-voice-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'conflict-exception)))
(common-lisp:deftype country () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype country-list () '(trivial-types:proper-list country))
 (common-lisp:defun make-country-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list country))
   aws-sdk/generator/shape::members))
(common-lisp:deftype cps-limit () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass create-phone-number-order-request common-lisp:nil
                       ((product-type :initarg :product-type :initform
                         (common-lisp:error ":product-type is required") :type
                         (common-lisp:or phone-number-product-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-phone-number-order-request-product-type
                         :shape "PhoneNumberProductType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (e164phone-numbers :initarg :e164phone-numbers
                         :initform
                         (common-lisp:error ":e164phone-numbers is required")
                         :type
                         (common-lisp:or e164phone-number-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-phone-number-order-request-e164phone-numbers
                         :shape "E164PhoneNumberList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or phone-number-name common-lisp:null)
                         :accessor
                         struct-shape-create-phone-number-order-request-name
                         :shape "PhoneNumberName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-phone-number-order-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-phone-number-order-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-phone-number-order-request
                    'make-create-phone-number-order-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-phone-number-order-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-phone-number-order-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'product-type))
      (common-lisp:list
       (common-lisp:cons "ProductType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'e164phone-numbers))
      (common-lisp:list
       (common-lisp:cons "E164PhoneNumbers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-phone-number-order-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-phone-number-order-response common-lisp:nil
                       ((phone-number-order :initarg :phone-number-order
                         :initform common-lisp:nil :type
                         (common-lisp:or phone-number-order common-lisp:null)
                         :accessor
                         struct-shape-create-phone-number-order-response-phone-number-order
                         :shape "PhoneNumberOrder" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-phone-number-order-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-phone-number-order-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-phone-number-order-response
                    'make-create-phone-number-order-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-phone-number-order-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-phone-number-order-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-order))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberOrder"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-phone-number-order-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-proxy-session-request common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string128 common-lisp:null)
                         :accessor
                         struct-shape-create-proxy-session-request-voice-connector-id
                         :shape "NonEmptyString128" :location "uri"
                         :location-name "voiceConnectorId")
                        (participant-phone-numbers :initarg
                         :participant-phone-numbers :initform
                         (common-lisp:error
                          ":participant-phone-numbers is required")
                         :type
                         (common-lisp:or participant-phone-number-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-proxy-session-request-participant-phone-numbers
                         :shape "ParticipantPhoneNumberList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or proxy-session-name-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-proxy-session-request-name :shape
                         "ProxySessionNameString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (expiry-minutes :initarg :expiry-minutes :initform
                         common-lisp:nil :type
                         (common-lisp:or positive-integer common-lisp:null)
                         :accessor
                         struct-shape-create-proxy-session-request-expiry-minutes
                         :shape "PositiveInteger" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (capabilities :initarg :capabilities :initform
                         (common-lisp:error ":capabilities is required") :type
                         (common-lisp:or capability-list common-lisp:null)
                         :accessor
                         struct-shape-create-proxy-session-request-capabilities
                         :shape "CapabilityList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (number-selection-behavior :initarg
                         :number-selection-behavior :initform common-lisp:nil
                         :type
                         (common-lisp:or number-selection-behavior
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-proxy-session-request-number-selection-behavior
                         :shape "NumberSelectionBehavior" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (geo-match-level :initarg :geo-match-level :initform
                         common-lisp:nil :type
                         (common-lisp:or geo-match-level common-lisp:null)
                         :accessor
                         struct-shape-create-proxy-session-request-geo-match-level
                         :shape "GeoMatchLevel" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (geo-match-params :initarg :geo-match-params :initform
                         common-lisp:nil :type
                         (common-lisp:or geo-match-params common-lisp:null)
                         :accessor
                         struct-shape-create-proxy-session-request-geo-match-params
                         :shape "GeoMatchParams" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-proxy-session-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-proxy-session-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-proxy-session-request
                    'make-create-proxy-session-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-proxy-session-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-proxy-session-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'participant-phone-numbers))
      (common-lisp:list
       (common-lisp:cons "ParticipantPhoneNumbers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiry-minutes))
      (common-lisp:list
       (common-lisp:cons "ExpiryMinutes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'capabilities))
      (common-lisp:list
       (common-lisp:cons "Capabilities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-selection-behavior))
      (common-lisp:list
       (common-lisp:cons "NumberSelectionBehavior"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'geo-match-level))
      (common-lisp:list
       (common-lisp:cons "GeoMatchLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'geo-match-params))
      (common-lisp:list
       (common-lisp:cons "GeoMatchParams"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-proxy-session-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-proxy-session-response common-lisp:nil
                       ((proxy-session :initarg :proxy-session :initform
                         common-lisp:nil :type
                         (common-lisp:or proxy-session common-lisp:null)
                         :accessor
                         struct-shape-create-proxy-session-response-proxy-session
                         :shape "ProxySession" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-proxy-session-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-proxy-session-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-proxy-session-response
                    'make-create-proxy-session-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-proxy-session-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-proxy-session-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proxy-session))
      (common-lisp:list
       (common-lisp:cons "ProxySession"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-proxy-session-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-sip-media-application-call-request
                       common-lisp:nil
                       ((from-phone-number :initarg :from-phone-number
                         :initform
                         (common-lisp:error ":from-phone-number is required")
                         :type
                         (common-lisp:or e164phone-number common-lisp:null)
                         :accessor
                         struct-shape-create-sip-media-application-call-request-from-phone-number
                         :shape "E164PhoneNumber" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (to-phone-number :initarg :to-phone-number :initform
                         (common-lisp:error ":to-phone-number is required")
                         :type
                         (common-lisp:or e164phone-number common-lisp:null)
                         :accessor
                         struct-shape-create-sip-media-application-call-request-to-phone-number
                         :shape "E164PhoneNumber" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sip-media-application-id :initarg
                         :sip-media-application-id :initform
                         (common-lisp:error
                          ":sip-media-application-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-create-sip-media-application-call-request-sip-media-application-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "sipMediaApplicationId")
                        (sip-headers :initarg :sip-headers :initform
                         common-lisp:nil :type
                         (common-lisp:or sip-headers-map common-lisp:null)
                         :accessor
                         struct-shape-create-sip-media-application-call-request-sip-headers
                         :shape "SipHeadersMap" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (arguments-map :initarg :arguments-map :initform
                         common-lisp:nil :type
                         (common-lisp:or smacreate-call-arguments-map
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-sip-media-application-call-request-arguments-map
                         :shape "SMACreateCallArgumentsMap" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-sip-media-application-call-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-sip-media-application-call-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-sip-media-application-call-request
                    'make-create-sip-media-application-call-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-media-application-call-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-media-application-call-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-phone-number))
      (common-lisp:list
       (common-lisp:cons "FromPhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'to-phone-number))
      (common-lisp:list
       (common-lisp:cons "ToPhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sip-headers))
      (common-lisp:list
       (common-lisp:cons "SipHeaders"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arguments-map))
      (common-lisp:list
       (common-lisp:cons "ArgumentsMap"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-media-application-call-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-sip-media-application-call-response
                       common-lisp:nil
                       ((sip-media-application-call :initarg
                         :sip-media-application-call :initform common-lisp:nil
                         :type
                         (common-lisp:or sip-media-application-call
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-sip-media-application-call-response-sip-media-application-call
                         :shape "SipMediaApplicationCall" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-sip-media-application-call-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-sip-media-application-call-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-sip-media-application-call-response
                    'make-create-sip-media-application-call-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-media-application-call-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-media-application-call-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application-call))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplicationCall"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-media-application-call-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-sip-media-application-request common-lisp:nil
                       ((aws-region :initarg :aws-region :initform
                         (common-lisp:error ":aws-region is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-sip-media-application-request-aws-region
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or sip-media-application-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-sip-media-application-request-name
                         :shape "SipMediaApplicationName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (endpoints :initarg :endpoints :initform
                         (common-lisp:error ":endpoints is required") :type
                         (common-lisp:or sip-media-application-endpoint-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-sip-media-application-request-endpoints
                         :shape "SipMediaApplicationEndpointList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-create-sip-media-application-request-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-sip-media-application-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-sip-media-application-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-sip-media-application-request
                    'make-create-sip-media-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-media-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-media-application-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-region))
      (common-lisp:list
       (common-lisp:cons "AwsRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoints))
      (common-lisp:list
       (common-lisp:cons "Endpoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-media-application-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-sip-media-application-response common-lisp:nil
                       ((sip-media-application :initarg :sip-media-application
                         :initform common-lisp:nil :type
                         (common-lisp:or sip-media-application
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-sip-media-application-response-sip-media-application
                         :shape "SipMediaApplication" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-sip-media-application-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-sip-media-application-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-sip-media-application-response
                    'make-create-sip-media-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-media-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-media-application-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplication"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-media-application-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-sip-rule-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or sip-rule-name common-lisp:null)
                         :accessor struct-shape-create-sip-rule-request-name
                         :shape "SipRuleName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (trigger-type :initarg :trigger-type :initform
                         (common-lisp:error ":trigger-type is required") :type
                         (common-lisp:or sip-rule-trigger-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-sip-rule-request-trigger-type
                         :shape "SipRuleTriggerType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (trigger-value :initarg :trigger-value :initform
                         (common-lisp:error ":trigger-value is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-create-sip-rule-request-trigger-value
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (disabled :initarg :disabled :initform common-lisp:nil
                         :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor
                         struct-shape-create-sip-rule-request-disabled :shape
                         "NullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (target-applications :initarg :target-applications
                         :initform common-lisp:nil :type
                         (common-lisp:or sip-rule-target-application-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-sip-rule-request-target-applications
                         :shape "SipRuleTargetApplicationList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-sip-rule-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-sip-rule-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-sip-rule-request 'make-create-sip-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-rule-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'trigger-type))
      (common-lisp:list
       (common-lisp:cons "TriggerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'trigger-value))
      (common-lisp:list
       (common-lisp:cons "TriggerValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disabled))
      (common-lisp:list
       (common-lisp:cons "Disabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-applications))
      (common-lisp:list
       (common-lisp:cons "TargetApplications"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-rule-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-sip-rule-response common-lisp:nil
                       ((sip-rule :initarg :sip-rule :initform common-lisp:nil
                         :type (common-lisp:or sip-rule common-lisp:null)
                         :accessor
                         struct-shape-create-sip-rule-response-sip-rule :shape
                         "SipRule" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-sip-rule-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-sip-rule-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-sip-rule-response 'make-create-sip-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-rule-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-rule-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sip-rule))
      (common-lisp:list
       (common-lisp:cons "SipRule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-rule-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-voice-connector-group-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or voice-connector-group-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-voice-connector-group-request-name
                         :shape "VoiceConnectorGroupName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (voice-connector-items :initarg :voice-connector-items
                         :initform common-lisp:nil :type
                         (common-lisp:or voice-connector-item-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-voice-connector-group-request-voice-connector-items
                         :shape "VoiceConnectorItemList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-voice-connector-group-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-voice-connector-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-voice-connector-group-request
                    'make-create-voice-connector-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-connector-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-connector-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-connector-items))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorItems"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-connector-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-voice-connector-group-response common-lisp:nil
                       ((voice-connector-group :initarg :voice-connector-group
                         :initform common-lisp:nil :type
                         (common-lisp:or voice-connector-group
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-voice-connector-group-response-voice-connector-group
                         :shape "VoiceConnectorGroup" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-voice-connector-group-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-voice-connector-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-voice-connector-group-response
                    'make-create-voice-connector-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-connector-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-connector-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-connector-group))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-connector-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-voice-connector-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or voice-connector-name common-lisp:null)
                         :accessor
                         struct-shape-create-voice-connector-request-name
                         :shape "VoiceConnectorName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (aws-region :initarg :aws-region :initform
                         common-lisp:nil :type
                         (common-lisp:or voice-connector-aws-region
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-voice-connector-request-aws-region
                         :shape "VoiceConnectorAwsRegion" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (require-encryption :initarg :require-encryption
                         :initform
                         (common-lisp:error ":require-encryption is required")
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         struct-shape-create-voice-connector-request-require-encryption
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-create-voice-connector-request-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-voice-connector-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-voice-connector-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-voice-connector-request
                    'make-create-voice-connector-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-connector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-connector-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-region))
      (common-lisp:list
       (common-lisp:cons "AwsRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'require-encryption))
      (common-lisp:list
       (common-lisp:cons "RequireEncryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-connector-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-voice-connector-response common-lisp:nil
                       ((voice-connector :initarg :voice-connector :initform
                         common-lisp:nil :type
                         (common-lisp:or voice-connector common-lisp:null)
                         :accessor
                         struct-shape-create-voice-connector-response-voice-connector
                         :shape "VoiceConnector" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-voice-connector-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-voice-connector-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-voice-connector-response
                    'make-create-voice-connector-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-connector-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-connector-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-connector))
      (common-lisp:list
       (common-lisp:cons "VoiceConnector"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-connector-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-voice-profile-domain-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or voice-profile-domain-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-voice-profile-domain-request-name
                         :shape "VoiceProfileDomainName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or voice-profile-domain-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-voice-profile-domain-request-description
                         :shape "VoiceProfileDomainDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (server-side-encryption-configuration :initarg
                         :server-side-encryption-configuration :initform
                         (common-lisp:error
                          ":server-side-encryption-configuration is required")
                         :type
                         (common-lisp:or server-side-encryption-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-voice-profile-domain-request-server-side-encryption-configuration
                         :shape "ServerSideEncryptionConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (client-request-token :initarg :client-request-token
                         :initform common-lisp:nil :type
                         (common-lisp:or client-request-id common-lisp:null)
                         :accessor
                         struct-shape-create-voice-profile-domain-request-client-request-token
                         :shape "ClientRequestId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-create-voice-profile-domain-request-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-voice-profile-domain-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-voice-profile-domain-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-voice-profile-domain-request
                    'make-create-voice-profile-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-profile-domain-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-profile-domain-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'server-side-encryption-configuration))
      (common-lisp:list
       (common-lisp:cons "ServerSideEncryptionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-profile-domain-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-voice-profile-domain-response common-lisp:nil
                       ((voice-profile-domain :initarg :voice-profile-domain
                         :initform common-lisp:nil :type
                         (common-lisp:or voice-profile-domain common-lisp:null)
                         :accessor
                         struct-shape-create-voice-profile-domain-response-voice-profile-domain
                         :shape "VoiceProfileDomain" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-voice-profile-domain-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-voice-profile-domain-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-voice-profile-domain-response
                    'make-create-voice-profile-domain-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-profile-domain-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-profile-domain-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-profile-domain))
      (common-lisp:list
       (common-lisp:cons "VoiceProfileDomain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-profile-domain-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-voice-profile-request common-lisp:nil
                       ((speaker-search-task-id :initarg
                         :speaker-search-task-id :initform
                         (common-lisp:error
                          ":speaker-search-task-id is required")
                         :type
                         (common-lisp:or non-empty-string256 common-lisp:null)
                         :accessor
                         struct-shape-create-voice-profile-request-speaker-search-task-id
                         :shape "NonEmptyString256" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-voice-profile-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-voice-profile-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-voice-profile-request
                    'make-create-voice-profile-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-profile-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-profile-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'speaker-search-task-id))
      (common-lisp:list
       (common-lisp:cons "SpeakerSearchTaskId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-profile-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-voice-profile-response common-lisp:nil
                       ((voice-profile :initarg :voice-profile :initform
                         common-lisp:nil :type
                         (common-lisp:or voice-profile common-lisp:null)
                         :accessor
                         struct-shape-create-voice-profile-response-voice-profile
                         :shape "VoiceProfile" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-voice-profile-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-voice-profile-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-voice-profile-response
                    'make-create-voice-profile-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-profile-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-profile-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-profile))
      (common-lisp:list
       (common-lisp:cons "VoiceProfile"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-profile-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass credential common-lisp:nil
                       ((username :initarg :username :initform common-lisp:nil
                         :type
                         (common-lisp:or sensitive-string common-lisp:null)
                         :accessor struct-shape-credential-username :shape
                         "SensitiveString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (password :initarg :password :initform common-lisp:nil
                         :type
                         (common-lisp:or sensitive-string common-lisp:null)
                         :accessor struct-shape-credential-password :shape
                         "SensitiveString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-credential
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'credential
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'credential 'make-credential))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input credential))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input credential))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input credential))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype credential-list ()
   '(trivial-types:proper-list credential))
 (common-lisp:defun make-credential-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list credential))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass dnisemergency-calling-configuration common-lisp:nil
                       ((emergency-phone-number :initarg
                         :emergency-phone-number :initform
                         (common-lisp:error
                          ":emergency-phone-number is required")
                         :type
                         (common-lisp:or e164phone-number common-lisp:null)
                         :accessor
                         struct-shape-dnisemergency-calling-configuration-emergency-phone-number
                         :shape "E164PhoneNumber" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (test-phone-number :initarg :test-phone-number
                         :initform common-lisp:nil :type
                         (common-lisp:or e164phone-number common-lisp:null)
                         :accessor
                         struct-shape-dnisemergency-calling-configuration-test-phone-number
                         :shape "E164PhoneNumber" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (calling-country :initarg :calling-country :initform
                         (common-lisp:error ":calling-country is required")
                         :type
                         (common-lisp:or alpha2country-code common-lisp:null)
                         :accessor
                         struct-shape-dnisemergency-calling-configuration-calling-country
                         :shape "Alpha2CountryCode" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-dnisemergency-calling-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'dnisemergency-calling-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'dnisemergency-calling-configuration
                    'make-dnisemergency-calling-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dnisemergency-calling-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dnisemergency-calling-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'emergency-phone-number))
      (common-lisp:list
       (common-lisp:cons "EmergencyPhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'test-phone-number))
      (common-lisp:list
       (common-lisp:cons "TestPhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'calling-country))
      (common-lisp:list
       (common-lisp:cons "CallingCountry"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dnisemergency-calling-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype dnisemergency-calling-configuration-list ()
   '(trivial-types:proper-list dnisemergency-calling-configuration))
 (common-lisp:defun make-dnisemergency-calling-configuration-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            dnisemergency-calling-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:deftype data-retention-in-hours () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass delete-phone-number-request common-lisp:nil
                       ((phone-number-id :initarg :phone-number-id :initform
                         (common-lisp:error ":phone-number-id is required")
                         :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-phone-number-request-phone-number-id
                         :shape "SensitiveNonEmptyString" :location "uri"
                         :location-name "phoneNumberId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-phone-number-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-phone-number-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-phone-number-request
                    'make-delete-phone-number-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-phone-number-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-phone-number-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-phone-number-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-proxy-session-request common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string128 common-lisp:null)
                         :accessor
                         struct-shape-delete-proxy-session-request-voice-connector-id
                         :shape "NonEmptyString128" :location "uri"
                         :location-name "voiceConnectorId")
                        (proxy-session-id :initarg :proxy-session-id :initform
                         (common-lisp:error ":proxy-session-id is required")
                         :type
                         (common-lisp:or non-empty-string128 common-lisp:null)
                         :accessor
                         struct-shape-delete-proxy-session-request-proxy-session-id
                         :shape "NonEmptyString128" :location "uri"
                         :location-name "proxySessionId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-proxy-session-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-proxy-session-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-proxy-session-request
                    'make-delete-proxy-session-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-proxy-session-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-proxy-session-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-proxy-session-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-sip-media-application-request common-lisp:nil
                       ((sip-media-application-id :initarg
                         :sip-media-application-id :initform
                         (common-lisp:error
                          ":sip-media-application-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-delete-sip-media-application-request-sip-media-application-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "sipMediaApplicationId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-sip-media-application-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-sip-media-application-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-sip-media-application-request
                    'make-delete-sip-media-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-sip-media-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-sip-media-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-sip-media-application-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-sip-rule-request common-lisp:nil
                       ((sip-rule-id :initarg :sip-rule-id :initform
                         (common-lisp:error ":sip-rule-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-delete-sip-rule-request-sip-rule-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "sipRuleId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-sip-rule-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-sip-rule-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-sip-rule-request 'make-delete-sip-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-sip-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-sip-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-sip-rule-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  delete-voice-connector-emergency-calling-configuration-request
  common-lisp:nil
  ((voice-connector-id :initarg :voice-connector-id :initform
    (common-lisp:error ":voice-connector-id is required") :type
    (common-lisp:or non-empty-string common-lisp:null) :accessor
    struct-shape-delete-voice-connector-emergency-calling-configuration-request-voice-connector-id
    :shape "NonEmptyString" :location "uri" :location-name "voiceConnectorId"))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-voice-connector-emergency-calling-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-voice-connector-emergency-calling-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list
   'delete-voice-connector-emergency-calling-configuration-request
   'make-delete-voice-connector-emergency-calling-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-emergency-calling-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-emergency-calling-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-emergency-calling-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-voice-connector-group-request common-lisp:nil
                       ((voice-connector-group-id :initarg
                         :voice-connector-group-id :initform
                         (common-lisp:error
                          ":voice-connector-group-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-delete-voice-connector-group-request-voice-connector-group-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorGroupId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-voice-connector-group-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-voice-connector-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-voice-connector-group-request
                    'make-delete-voice-connector-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-voice-connector-origination-request
                       common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-delete-voice-connector-origination-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-voice-connector-origination-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-voice-connector-origination-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-voice-connector-origination-request
                    'make-delete-voice-connector-origination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-origination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-origination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-origination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-voice-connector-proxy-request common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string128 common-lisp:null)
                         :accessor
                         struct-shape-delete-voice-connector-proxy-request-voice-connector-id
                         :shape "NonEmptyString128" :location "uri"
                         :location-name "voiceConnectorId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-voice-connector-proxy-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-voice-connector-proxy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-voice-connector-proxy-request
                    'make-delete-voice-connector-proxy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-proxy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-proxy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-proxy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-voice-connector-request common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-delete-voice-connector-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-voice-connector-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-voice-connector-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-voice-connector-request
                    'make-delete-voice-connector-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-voice-connector-streaming-configuration-request
                       common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-delete-voice-connector-streaming-configuration-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-voice-connector-streaming-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-voice-connector-streaming-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-voice-connector-streaming-configuration-request
                    'make-delete-voice-connector-streaming-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-streaming-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-streaming-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-streaming-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-voice-connector-termination-credentials-request
                       common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-delete-voice-connector-termination-credentials-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId")
                        (usernames :initarg :usernames :initform
                         (common-lisp:error ":usernames is required") :type
                         (common-lisp:or sensitive-string-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-voice-connector-termination-credentials-request-usernames
                         :shape "SensitiveStringList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-voice-connector-termination-credentials-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-voice-connector-termination-credentials-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-voice-connector-termination-credentials-request
                    'make-delete-voice-connector-termination-credentials-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-termination-credentials-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-termination-credentials-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'usernames))
      (common-lisp:list
       (common-lisp:cons "Usernames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-termination-credentials-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-voice-connector-termination-request
                       common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-delete-voice-connector-termination-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-voice-connector-termination-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-voice-connector-termination-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-voice-connector-termination-request
                    'make-delete-voice-connector-termination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-termination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-termination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-termination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-voice-profile-domain-request common-lisp:nil
                       ((voice-profile-domain-id :initarg
                         :voice-profile-domain-id :initform
                         (common-lisp:error
                          ":voice-profile-domain-id is required")
                         :type
                         (common-lisp:or non-empty-string256 common-lisp:null)
                         :accessor
                         struct-shape-delete-voice-profile-domain-request-voice-profile-domain-id
                         :shape "NonEmptyString256" :location "uri"
                         :location-name "VoiceProfileDomainId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-voice-profile-domain-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-voice-profile-domain-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-voice-profile-domain-request
                    'make-delete-voice-profile-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-profile-domain-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-profile-domain-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-profile-domain-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-voice-profile-request common-lisp:nil
                       ((voice-profile-id :initarg :voice-profile-id :initform
                         (common-lisp:error ":voice-profile-id is required")
                         :type
                         (common-lisp:or non-empty-string256 common-lisp:null)
                         :accessor
                         struct-shape-delete-voice-profile-request-voice-profile-id
                         :shape "NonEmptyString256" :location "uri"
                         :location-name "VoiceProfileId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-voice-profile-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-voice-profile-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-voice-profile-request
                    'make-delete-voice-profile-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-profile-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-profile-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-profile-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  disassociate-phone-numbers-from-voice-connector-group-request common-lisp:nil
  ((voice-connector-group-id :initarg :voice-connector-group-id :initform
    (common-lisp:error ":voice-connector-group-id is required") :type
    (common-lisp:or non-empty-string common-lisp:null) :accessor
    struct-shape-disassociate-phone-numbers-from-voice-connector-group-request-voice-connector-group-id
    :shape "NonEmptyString" :location "uri" :location-name
    "voiceConnectorGroupId")
   (e164phone-numbers :initarg :e164phone-numbers :initform
    (common-lisp:error ":e164phone-numbers is required") :type
    (common-lisp:or e164phone-number-list common-lisp:null) :accessor
    struct-shape-disassociate-phone-numbers-from-voice-connector-group-request-e164phone-numbers
    :shape "E164PhoneNumberList" :location common-lisp:nil :location-name
    common-lisp:nil))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disassociate-phone-numbers-from-voice-connector-group-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-phone-numbers-from-voice-connector-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list
   'disassociate-phone-numbers-from-voice-connector-group-request
   'make-disassociate-phone-numbers-from-voice-connector-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-numbers-from-voice-connector-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-numbers-from-voice-connector-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'e164phone-numbers))
      (common-lisp:list
       (common-lisp:cons "E164PhoneNumbers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-numbers-from-voice-connector-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  disassociate-phone-numbers-from-voice-connector-group-response
  common-lisp:nil
  ((phone-number-errors :initarg :phone-number-errors :initform common-lisp:nil
    :type (common-lisp:or phone-number-error-list common-lisp:null) :accessor
    struct-shape-disassociate-phone-numbers-from-voice-connector-group-response-phone-number-errors
    :shape "PhoneNumberErrorList" :location common-lisp:nil :location-name
    common-lisp:nil))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disassociate-phone-numbers-from-voice-connector-group-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-phone-numbers-from-voice-connector-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list
   'disassociate-phone-numbers-from-voice-connector-group-response
   'make-disassociate-phone-numbers-from-voice-connector-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-numbers-from-voice-connector-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-numbers-from-voice-connector-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-errors))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberErrors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-numbers-from-voice-connector-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-phone-numbers-from-voice-connector-request
                       common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-disassociate-phone-numbers-from-voice-connector-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId")
                        (e164phone-numbers :initarg :e164phone-numbers
                         :initform
                         (common-lisp:error ":e164phone-numbers is required")
                         :type
                         (common-lisp:or e164phone-number-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-disassociate-phone-numbers-from-voice-connector-request-e164phone-numbers
                         :shape "E164PhoneNumberList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disassociate-phone-numbers-from-voice-connector-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-phone-numbers-from-voice-connector-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'disassociate-phone-numbers-from-voice-connector-request
                    'make-disassociate-phone-numbers-from-voice-connector-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-numbers-from-voice-connector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-numbers-from-voice-connector-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'e164phone-numbers))
      (common-lisp:list
       (common-lisp:cons "E164PhoneNumbers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-numbers-from-voice-connector-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-phone-numbers-from-voice-connector-response
                       common-lisp:nil
                       ((phone-number-errors :initarg :phone-number-errors
                         :initform common-lisp:nil :type
                         (common-lisp:or phone-number-error-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-disassociate-phone-numbers-from-voice-connector-response-phone-number-errors
                         :shape "PhoneNumberErrorList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disassociate-phone-numbers-from-voice-connector-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-phone-numbers-from-voice-connector-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'disassociate-phone-numbers-from-voice-connector-response
                    'make-disassociate-phone-numbers-from-voice-connector-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-numbers-from-voice-connector-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-numbers-from-voice-connector-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-errors))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberErrors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-numbers-from-voice-connector-response))
   common-lisp:nil))
(common-lisp:deftype e164phone-number () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype e164phone-number-list ()
   '(trivial-types:proper-list e164phone-number))
 (common-lisp:defun make-e164phone-number-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list e164phone-number))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass emergency-calling-configuration common-lisp:nil
                       ((dnis :initarg :dnis :initform common-lisp:nil :type
                         (common-lisp:or
                          dnisemergency-calling-configuration-list
                          common-lisp:null)
                         :accessor
                         struct-shape-emergency-calling-configuration-dnis
                         :shape "DNISEmergencyCallingConfigurationList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-emergency-calling-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'emergency-calling-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'emergency-calling-configuration
                    'make-emergency-calling-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          emergency-calling-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          emergency-calling-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dnis))
      (common-lisp:list
       (common-lisp:cons "DNIS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          emergency-calling-configuration))
   common-lisp:nil))
(common-lisp:deftype error-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition forbidden-exception
     (chime-sdk-voice-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'forbidden-exception)))
(common-lisp:deftype function-arn () 'common-lisp:string)
(common-lisp:deftype geo-match-level () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass geo-match-params common-lisp:nil
                       ((country :initarg :country :initform
                         (common-lisp:error ":country is required") :type
                         (common-lisp:or country common-lisp:null) :accessor
                         struct-shape-geo-match-params-country :shape "Country"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (area-code :initarg :area-code :initform
                         (common-lisp:error ":area-code is required") :type
                         (common-lisp:or area-code common-lisp:null) :accessor
                         struct-shape-geo-match-params-area-code :shape
                         "AreaCode" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-geo-match-params
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'geo-match-params
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'geo-match-params 'make-geo-match-params))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input geo-match-params))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input geo-match-params))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'country))
      (common-lisp:list
       (common-lisp:cons "Country"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'area-code))
      (common-lisp:list
       (common-lisp:cons "AreaCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input geo-match-params))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-global-settings-response common-lisp:nil
                       ((voice-connector :initarg :voice-connector :initform
                         common-lisp:nil :type
                         (common-lisp:or voice-connector-settings
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-global-settings-response-voice-connector
                         :shape "VoiceConnectorSettings" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-global-settings-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-global-settings-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-global-settings-response
                    'make-get-global-settings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-global-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-global-settings-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-connector))
      (common-lisp:list
       (common-lisp:cons "VoiceConnector"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-global-settings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-phone-number-order-request common-lisp:nil
                       ((phone-number-order-id :initarg :phone-number-order-id
                         :initform
                         (common-lisp:error
                          ":phone-number-order-id is required")
                         :type (common-lisp:or guid-string common-lisp:null)
                         :accessor
                         struct-shape-get-phone-number-order-request-phone-number-order-id
                         :shape "GuidString" :location "uri" :location-name
                         "phoneNumberOrderId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-phone-number-order-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-phone-number-order-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-phone-number-order-request
                    'make-get-phone-number-order-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-order-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-order-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-order-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-phone-number-order-response common-lisp:nil
                       ((phone-number-order :initarg :phone-number-order
                         :initform common-lisp:nil :type
                         (common-lisp:or phone-number-order common-lisp:null)
                         :accessor
                         struct-shape-get-phone-number-order-response-phone-number-order
                         :shape "PhoneNumberOrder" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-phone-number-order-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-phone-number-order-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-phone-number-order-response
                    'make-get-phone-number-order-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-order-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-order-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-order))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberOrder"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-order-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-phone-number-request common-lisp:nil
                       ((phone-number-id :initarg :phone-number-id :initform
                         (common-lisp:error ":phone-number-id is required")
                         :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-phone-number-request-phone-number-id
                         :shape "SensitiveNonEmptyString" :location "uri"
                         :location-name "phoneNumberId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-phone-number-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-phone-number-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-phone-number-request 'make-get-phone-number-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-phone-number-response common-lisp:nil
                       ((phone-number :initarg :phone-number :initform
                         common-lisp:nil :type
                         (common-lisp:or phone-number common-lisp:null)
                         :accessor
                         struct-shape-get-phone-number-response-phone-number
                         :shape "PhoneNumber" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-phone-number-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-phone-number-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-phone-number-response
                    'make-get-phone-number-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number))
      (common-lisp:list
       (common-lisp:cons "PhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-phone-number-settings-response common-lisp:nil
                       ((calling-name :initarg :calling-name :initform
                         common-lisp:nil :type
                         (common-lisp:or calling-name common-lisp:null)
                         :accessor
                         struct-shape-get-phone-number-settings-response-calling-name
                         :shape "CallingName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (calling-name-updated-timestamp :initarg
                         :calling-name-updated-timestamp :initform
                         common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-get-phone-number-settings-response-calling-name-updated-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-phone-number-settings-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-phone-number-settings-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-phone-number-settings-response
                    'make-get-phone-number-settings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-settings-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'calling-name))
      (common-lisp:list
       (common-lisp:cons "CallingName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'calling-name-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "CallingNameUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-settings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-proxy-session-request common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string128 common-lisp:null)
                         :accessor
                         struct-shape-get-proxy-session-request-voice-connector-id
                         :shape "NonEmptyString128" :location "uri"
                         :location-name "voiceConnectorId")
                        (proxy-session-id :initarg :proxy-session-id :initform
                         (common-lisp:error ":proxy-session-id is required")
                         :type
                         (common-lisp:or non-empty-string128 common-lisp:null)
                         :accessor
                         struct-shape-get-proxy-session-request-proxy-session-id
                         :shape "NonEmptyString128" :location "uri"
                         :location-name "proxySessionId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-proxy-session-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-proxy-session-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-proxy-session-request
                    'make-get-proxy-session-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-proxy-session-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-proxy-session-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-proxy-session-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-proxy-session-response common-lisp:nil
                       ((proxy-session :initarg :proxy-session :initform
                         common-lisp:nil :type
                         (common-lisp:or proxy-session common-lisp:null)
                         :accessor
                         struct-shape-get-proxy-session-response-proxy-session
                         :shape "ProxySession" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-proxy-session-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-proxy-session-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-proxy-session-response
                    'make-get-proxy-session-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-proxy-session-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-proxy-session-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proxy-session))
      (common-lisp:list
       (common-lisp:cons "ProxySession"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-proxy-session-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  get-sip-media-application-alexa-skill-configuration-request common-lisp:nil
  ((sip-media-application-id :initarg :sip-media-application-id :initform
    (common-lisp:error ":sip-media-application-id is required") :type
    (common-lisp:or non-empty-string common-lisp:null) :accessor
    struct-shape-get-sip-media-application-alexa-skill-configuration-request-sip-media-application-id
    :shape "NonEmptyString" :location "uri" :location-name
    "sipMediaApplicationId"))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-sip-media-application-alexa-skill-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-sip-media-application-alexa-skill-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list
   'get-sip-media-application-alexa-skill-configuration-request
   'make-get-sip-media-application-alexa-skill-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-alexa-skill-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-alexa-skill-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-alexa-skill-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  get-sip-media-application-alexa-skill-configuration-response common-lisp:nil
  ((sip-media-application-alexa-skill-configuration :initarg
    :sip-media-application-alexa-skill-configuration :initform common-lisp:nil
    :type
    (common-lisp:or sip-media-application-alexa-skill-configuration
                    common-lisp:null)
    :accessor
    struct-shape-get-sip-media-application-alexa-skill-configuration-response-sip-media-application-alexa-skill-configuration
    :shape "SipMediaApplicationAlexaSkillConfiguration" :location
    common-lisp:nil :location-name common-lisp:nil))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-sip-media-application-alexa-skill-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-sip-media-application-alexa-skill-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list
   'get-sip-media-application-alexa-skill-configuration-response
   'make-get-sip-media-application-alexa-skill-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-alexa-skill-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-alexa-skill-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application-alexa-skill-configuration))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplicationAlexaSkillConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-alexa-skill-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-sip-media-application-logging-configuration-request
                       common-lisp:nil
                       ((sip-media-application-id :initarg
                         :sip-media-application-id :initform
                         (common-lisp:error
                          ":sip-media-application-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-get-sip-media-application-logging-configuration-request-sip-media-application-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "sipMediaApplicationId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-sip-media-application-logging-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-sip-media-application-logging-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-sip-media-application-logging-configuration-request
                    'make-get-sip-media-application-logging-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-logging-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-logging-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-logging-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-sip-media-application-logging-configuration-response
                       common-lisp:nil
                       ((sip-media-application-logging-configuration :initarg
                         :sip-media-application-logging-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          sip-media-application-logging-configuration
                          common-lisp:null)
                         :accessor
                         struct-shape-get-sip-media-application-logging-configuration-response-sip-media-application-logging-configuration
                         :shape "SipMediaApplicationLoggingConfiguration"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-sip-media-application-logging-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-sip-media-application-logging-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-sip-media-application-logging-configuration-response
                    'make-get-sip-media-application-logging-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-logging-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-logging-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application-logging-configuration))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplicationLoggingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-logging-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-sip-media-application-request common-lisp:nil
                       ((sip-media-application-id :initarg
                         :sip-media-application-id :initform
                         (common-lisp:error
                          ":sip-media-application-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-get-sip-media-application-request-sip-media-application-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "sipMediaApplicationId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-sip-media-application-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-sip-media-application-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-sip-media-application-request
                    'make-get-sip-media-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-sip-media-application-response common-lisp:nil
                       ((sip-media-application :initarg :sip-media-application
                         :initform common-lisp:nil :type
                         (common-lisp:or sip-media-application
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-sip-media-application-response-sip-media-application
                         :shape "SipMediaApplication" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-sip-media-application-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-sip-media-application-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-sip-media-application-response
                    'make-get-sip-media-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplication"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-sip-rule-request common-lisp:nil
                       ((sip-rule-id :initarg :sip-rule-id :initform
                         (common-lisp:error ":sip-rule-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-get-sip-rule-request-sip-rule-id :shape
                         "NonEmptyString" :location "uri" :location-name
                         "sipRuleId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-sip-rule-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-sip-rule-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-sip-rule-request 'make-get-sip-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-sip-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-sip-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-sip-rule-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-sip-rule-response common-lisp:nil
                       ((sip-rule :initarg :sip-rule :initform common-lisp:nil
                         :type (common-lisp:or sip-rule common-lisp:null)
                         :accessor struct-shape-get-sip-rule-response-sip-rule
                         :shape "SipRule" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-sip-rule-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-sip-rule-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-sip-rule-response 'make-get-sip-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-rule-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-rule-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sip-rule))
      (common-lisp:list
       (common-lisp:cons "SipRule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-rule-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-speaker-search-task-request common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string128 common-lisp:null)
                         :accessor
                         struct-shape-get-speaker-search-task-request-voice-connector-id
                         :shape "NonEmptyString128" :location "uri"
                         :location-name "VoiceConnectorId")
                        (speaker-search-task-id :initarg
                         :speaker-search-task-id :initform
                         (common-lisp:error
                          ":speaker-search-task-id is required")
                         :type
                         (common-lisp:or non-empty-string256 common-lisp:null)
                         :accessor
                         struct-shape-get-speaker-search-task-request-speaker-search-task-id
                         :shape "NonEmptyString256" :location "uri"
                         :location-name "SpeakerSearchTaskId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-speaker-search-task-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-speaker-search-task-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-speaker-search-task-request
                    'make-get-speaker-search-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-speaker-search-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-speaker-search-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-speaker-search-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-speaker-search-task-response common-lisp:nil
                       ((speaker-search-task :initarg :speaker-search-task
                         :initform common-lisp:nil :type
                         (common-lisp:or speaker-search-task common-lisp:null)
                         :accessor
                         struct-shape-get-speaker-search-task-response-speaker-search-task
                         :shape "SpeakerSearchTask" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-speaker-search-task-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-speaker-search-task-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-speaker-search-task-response
                    'make-get-speaker-search-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-speaker-search-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-speaker-search-task-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'speaker-search-task))
      (common-lisp:list
       (common-lisp:cons "SpeakerSearchTask"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-speaker-search-task-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  get-voice-connector-emergency-calling-configuration-request common-lisp:nil
  ((voice-connector-id :initarg :voice-connector-id :initform
    (common-lisp:error ":voice-connector-id is required") :type
    (common-lisp:or non-empty-string common-lisp:null) :accessor
    struct-shape-get-voice-connector-emergency-calling-configuration-request-voice-connector-id
    :shape "NonEmptyString" :location "uri" :location-name "voiceConnectorId"))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-connector-emergency-calling-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-voice-connector-emergency-calling-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list
   'get-voice-connector-emergency-calling-configuration-request
   'make-get-voice-connector-emergency-calling-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-emergency-calling-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-emergency-calling-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-emergency-calling-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  get-voice-connector-emergency-calling-configuration-response common-lisp:nil
  ((emergency-calling-configuration :initarg :emergency-calling-configuration
    :initform common-lisp:nil :type
    (common-lisp:or emergency-calling-configuration common-lisp:null) :accessor
    struct-shape-get-voice-connector-emergency-calling-configuration-response-emergency-calling-configuration
    :shape "EmergencyCallingConfiguration" :location common-lisp:nil
    :location-name common-lisp:nil))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-connector-emergency-calling-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-voice-connector-emergency-calling-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list
   'get-voice-connector-emergency-calling-configuration-response
   'make-get-voice-connector-emergency-calling-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-emergency-calling-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-emergency-calling-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'emergency-calling-configuration))
      (common-lisp:list
       (common-lisp:cons "EmergencyCallingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-emergency-calling-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-connector-group-request common-lisp:nil
                       ((voice-connector-group-id :initarg
                         :voice-connector-group-id :initform
                         (common-lisp:error
                          ":voice-connector-group-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-get-voice-connector-group-request-voice-connector-group-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorGroupId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-connector-group-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-voice-connector-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-group-request
                    'make-get-voice-connector-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-connector-group-response common-lisp:nil
                       ((voice-connector-group :initarg :voice-connector-group
                         :initform common-lisp:nil :type
                         (common-lisp:or voice-connector-group
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-voice-connector-group-response-voice-connector-group
                         :shape "VoiceConnectorGroup" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-connector-group-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-voice-connector-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-group-response
                    'make-get-voice-connector-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-connector-group))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-connector-logging-configuration-request
                       common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-get-voice-connector-logging-configuration-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-connector-logging-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-voice-connector-logging-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-logging-configuration-request
                    'make-get-voice-connector-logging-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-logging-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-logging-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-logging-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-connector-logging-configuration-response
                       common-lisp:nil
                       ((logging-configuration :initarg :logging-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or logging-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-voice-connector-logging-configuration-response-logging-configuration
                         :shape "LoggingConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-connector-logging-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-voice-connector-logging-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-logging-configuration-response
                    'make-get-voice-connector-logging-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-logging-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-logging-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'logging-configuration))
      (common-lisp:list
       (common-lisp:cons "LoggingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-logging-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-connector-origination-request common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-get-voice-connector-origination-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-connector-origination-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-voice-connector-origination-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-origination-request
                    'make-get-voice-connector-origination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-origination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-origination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-origination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-connector-origination-response common-lisp:nil
                       ((origination :initarg :origination :initform
                         common-lisp:nil :type
                         (common-lisp:or origination common-lisp:null)
                         :accessor
                         struct-shape-get-voice-connector-origination-response-origination
                         :shape "Origination" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-connector-origination-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-voice-connector-origination-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-origination-response
                    'make-get-voice-connector-origination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-origination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-origination-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origination))
      (common-lisp:list
       (common-lisp:cons "Origination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-origination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-connector-proxy-request common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string128 common-lisp:null)
                         :accessor
                         struct-shape-get-voice-connector-proxy-request-voice-connector-id
                         :shape "NonEmptyString128" :location "uri"
                         :location-name "voiceConnectorId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-connector-proxy-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-voice-connector-proxy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-proxy-request
                    'make-get-voice-connector-proxy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-proxy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-proxy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-proxy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-connector-proxy-response common-lisp:nil
                       ((proxy :initarg :proxy :initform common-lisp:nil :type
                         (common-lisp:or proxy common-lisp:null) :accessor
                         struct-shape-get-voice-connector-proxy-response-proxy
                         :shape "Proxy" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-connector-proxy-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-voice-connector-proxy-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-proxy-response
                    'make-get-voice-connector-proxy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-proxy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-proxy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proxy))
      (common-lisp:list
       (common-lisp:cons "Proxy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-proxy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-connector-request common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-get-voice-connector-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-connector-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-voice-connector-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-request
                    'make-get-voice-connector-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-connector-response common-lisp:nil
                       ((voice-connector :initarg :voice-connector :initform
                         common-lisp:nil :type
                         (common-lisp:or voice-connector common-lisp:null)
                         :accessor
                         struct-shape-get-voice-connector-response-voice-connector
                         :shape "VoiceConnector" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-connector-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-voice-connector-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-response
                    'make-get-voice-connector-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-connector))
      (common-lisp:list
       (common-lisp:cons "VoiceConnector"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-connector-streaming-configuration-request
                       common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-get-voice-connector-streaming-configuration-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-connector-streaming-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-voice-connector-streaming-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-streaming-configuration-request
                    'make-get-voice-connector-streaming-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-streaming-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-streaming-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-streaming-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-connector-streaming-configuration-response
                       common-lisp:nil
                       ((streaming-configuration :initarg
                         :streaming-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or streaming-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-voice-connector-streaming-configuration-response-streaming-configuration
                         :shape "StreamingConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-connector-streaming-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-voice-connector-streaming-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-streaming-configuration-response
                    'make-get-voice-connector-streaming-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-streaming-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-streaming-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'streaming-configuration))
      (common-lisp:list
       (common-lisp:cons "StreamingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-streaming-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-connector-termination-health-request
                       common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-get-voice-connector-termination-health-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-connector-termination-health-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-voice-connector-termination-health-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-termination-health-request
                    'make-get-voice-connector-termination-health-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-termination-health-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-termination-health-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-termination-health-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-connector-termination-health-response
                       common-lisp:nil
                       ((termination-health :initarg :termination-health
                         :initform common-lisp:nil :type
                         (common-lisp:or termination-health common-lisp:null)
                         :accessor
                         struct-shape-get-voice-connector-termination-health-response-termination-health
                         :shape "TerminationHealth" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-connector-termination-health-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-voice-connector-termination-health-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-termination-health-response
                    'make-get-voice-connector-termination-health-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-termination-health-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-termination-health-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'termination-health))
      (common-lisp:list
       (common-lisp:cons "TerminationHealth"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-termination-health-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-connector-termination-request common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-get-voice-connector-termination-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-connector-termination-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-voice-connector-termination-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-termination-request
                    'make-get-voice-connector-termination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-termination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-termination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-termination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-connector-termination-response common-lisp:nil
                       ((termination :initarg :termination :initform
                         common-lisp:nil :type
                         (common-lisp:or termination common-lisp:null)
                         :accessor
                         struct-shape-get-voice-connector-termination-response-termination
                         :shape "Termination" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-connector-termination-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-voice-connector-termination-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-termination-response
                    'make-get-voice-connector-termination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-termination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-termination-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'termination))
      (common-lisp:list
       (common-lisp:cons "Termination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-termination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-profile-domain-request common-lisp:nil
                       ((voice-profile-domain-id :initarg
                         :voice-profile-domain-id :initform
                         (common-lisp:error
                          ":voice-profile-domain-id is required")
                         :type
                         (common-lisp:or non-empty-string256 common-lisp:null)
                         :accessor
                         struct-shape-get-voice-profile-domain-request-voice-profile-domain-id
                         :shape "NonEmptyString256" :location "uri"
                         :location-name "VoiceProfileDomainId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-profile-domain-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-voice-profile-domain-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-profile-domain-request
                    'make-get-voice-profile-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-profile-domain-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-profile-domain-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-profile-domain-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-profile-domain-response common-lisp:nil
                       ((voice-profile-domain :initarg :voice-profile-domain
                         :initform common-lisp:nil :type
                         (common-lisp:or voice-profile-domain common-lisp:null)
                         :accessor
                         struct-shape-get-voice-profile-domain-response-voice-profile-domain
                         :shape "VoiceProfileDomain" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-profile-domain-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-voice-profile-domain-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-profile-domain-response
                    'make-get-voice-profile-domain-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-profile-domain-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-profile-domain-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-profile-domain))
      (common-lisp:list
       (common-lisp:cons "VoiceProfileDomain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-profile-domain-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-profile-request common-lisp:nil
                       ((voice-profile-id :initarg :voice-profile-id :initform
                         (common-lisp:error ":voice-profile-id is required")
                         :type
                         (common-lisp:or non-empty-string256 common-lisp:null)
                         :accessor
                         struct-shape-get-voice-profile-request-voice-profile-id
                         :shape "NonEmptyString256" :location "uri"
                         :location-name "VoiceProfileId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-profile-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-voice-profile-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-profile-request
                    'make-get-voice-profile-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-profile-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-profile-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-profile-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-profile-response common-lisp:nil
                       ((voice-profile :initarg :voice-profile :initform
                         common-lisp:nil :type
                         (common-lisp:or voice-profile common-lisp:null)
                         :accessor
                         struct-shape-get-voice-profile-response-voice-profile
                         :shape "VoiceProfile" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-profile-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-voice-profile-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-profile-response
                    'make-get-voice-profile-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-profile-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-profile-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-profile))
      (common-lisp:list
       (common-lisp:cons "VoiceProfile"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-profile-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-tone-analysis-task-request common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string128 common-lisp:null)
                         :accessor
                         struct-shape-get-voice-tone-analysis-task-request-voice-connector-id
                         :shape "NonEmptyString128" :location "uri"
                         :location-name "VoiceConnectorId")
                        (voice-tone-analysis-task-id :initarg
                         :voice-tone-analysis-task-id :initform
                         (common-lisp:error
                          ":voice-tone-analysis-task-id is required")
                         :type
                         (common-lisp:or non-empty-string256 common-lisp:null)
                         :accessor
                         struct-shape-get-voice-tone-analysis-task-request-voice-tone-analysis-task-id
                         :shape "NonEmptyString256" :location "uri"
                         :location-name "VoiceToneAnalysisTaskId")
                        (is-caller :initarg :is-caller :initform
                         (common-lisp:error ":is-caller is required") :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-get-voice-tone-analysis-task-request-is-caller
                         :shape "Boolean" :location "querystring"
                         :location-name "isCaller"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-tone-analysis-task-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-voice-tone-analysis-task-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-tone-analysis-task-request
                    'make-get-voice-tone-analysis-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-tone-analysis-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-tone-analysis-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-tone-analysis-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-tone-analysis-task-response common-lisp:nil
                       ((voice-tone-analysis-task :initarg
                         :voice-tone-analysis-task :initform common-lisp:nil
                         :type
                         (common-lisp:or voice-tone-analysis-task
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-voice-tone-analysis-task-response-voice-tone-analysis-task
                         :shape "VoiceToneAnalysisTask" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-tone-analysis-task-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-voice-tone-analysis-task-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-tone-analysis-task-response
                    'make-get-voice-tone-analysis-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-tone-analysis-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-tone-analysis-task-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-tone-analysis-task))
      (common-lisp:list
       (common-lisp:cons "VoiceToneAnalysisTask"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-tone-analysis-task-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition gone-exception
     (chime-sdk-voice-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'gone-exception)))
(common-lisp:deftype guid-string () 'common-lisp:string)
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:deftype iso8601timestamp () 'common-lisp:string)
(common-lisp:deftype language-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass list-available-voice-connector-regions-response
                       common-lisp:nil
                       ((voice-connector-regions :initarg
                         :voice-connector-regions :initform common-lisp:nil
                         :type
                         (common-lisp:or voice-connector-aws-region-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-available-voice-connector-regions-response-voice-connector-regions
                         :shape "VoiceConnectorAwsRegionList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-available-voice-connector-regions-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-available-voice-connector-regions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-available-voice-connector-regions-response
                    'make-list-available-voice-connector-regions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-available-voice-connector-regions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-available-voice-connector-regions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-connector-regions))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorRegions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-available-voice-connector-regions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-phone-number-orders-request common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-phone-number-orders-request-next-token
                         :shape "String" :location "querystring" :location-name
                         "next-token")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or result-max common-lisp:null) :accessor
                         struct-shape-list-phone-number-orders-request-max-results
                         :shape "ResultMax" :location "querystring"
                         :location-name "max-results"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-phone-number-orders-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-phone-number-orders-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-phone-number-orders-request
                    'make-list-phone-number-orders-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-number-orders-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-number-orders-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-number-orders-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-phone-number-orders-response common-lisp:nil
                       ((phone-number-orders :initarg :phone-number-orders
                         :initform common-lisp:nil :type
                         (common-lisp:or phone-number-order-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-phone-number-orders-response-phone-number-orders
                         :shape "PhoneNumberOrderList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-phone-number-orders-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-phone-number-orders-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-phone-number-orders-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-phone-number-orders-response
                    'make-list-phone-number-orders-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-number-orders-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-number-orders-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-orders))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberOrders"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-number-orders-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-phone-numbers-request common-lisp:nil
                       ((status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-list-phone-numbers-request-status :shape
                         "String" :location "querystring" :location-name
                         "status")
                        (product-type :initarg :product-type :initform
                         common-lisp:nil :type
                         (common-lisp:or phone-number-product-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-phone-numbers-request-product-type
                         :shape "PhoneNumberProductType" :location
                         "querystring" :location-name "product-type")
                        (filter-name :initarg :filter-name :initform
                         common-lisp:nil :type
                         (common-lisp:or phone-number-association-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-phone-numbers-request-filter-name
                         :shape "PhoneNumberAssociationName" :location
                         "querystring" :location-name "filter-name")
                        (filter-value :initarg :filter-value :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-phone-numbers-request-filter-value
                         :shape "String" :location "querystring" :location-name
                         "filter-value")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or result-max common-lisp:null) :accessor
                         struct-shape-list-phone-numbers-request-max-results
                         :shape "ResultMax" :location "querystring"
                         :location-name "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-phone-numbers-request-next-token
                         :shape "String" :location "querystring" :location-name
                         "next-token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-phone-numbers-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-phone-numbers-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-phone-numbers-request
                    'make-list-phone-numbers-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-numbers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-numbers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-numbers-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-phone-numbers-response common-lisp:nil
                       ((phone-numbers :initarg :phone-numbers :initform
                         common-lisp:nil :type
                         (common-lisp:or phone-number-list common-lisp:null)
                         :accessor
                         struct-shape-list-phone-numbers-response-phone-numbers
                         :shape "PhoneNumberList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-phone-numbers-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-phone-numbers-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-phone-numbers-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-phone-numbers-response
                    'make-list-phone-numbers-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-numbers-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-numbers-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-numbers))
      (common-lisp:list
       (common-lisp:cons "PhoneNumbers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-numbers-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-proxy-sessions-request common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string128 common-lisp:null)
                         :accessor
                         struct-shape-list-proxy-sessions-request-voice-connector-id
                         :shape "NonEmptyString128" :location "uri"
                         :location-name "voiceConnectorId")
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or proxy-session-status common-lisp:null)
                         :accessor
                         struct-shape-list-proxy-sessions-request-status :shape
                         "ProxySessionStatus" :location "querystring"
                         :location-name "status")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token-string common-lisp:null)
                         :accessor
                         struct-shape-list-proxy-sessions-request-next-token
                         :shape "NextTokenString" :location "querystring"
                         :location-name "next-token")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or result-max common-lisp:null) :accessor
                         struct-shape-list-proxy-sessions-request-max-results
                         :shape "ResultMax" :location "querystring"
                         :location-name "max-results"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-proxy-sessions-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-proxy-sessions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-proxy-sessions-request
                    'make-list-proxy-sessions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-proxy-sessions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-proxy-sessions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-proxy-sessions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-proxy-sessions-response common-lisp:nil
                       ((proxy-sessions :initarg :proxy-sessions :initform
                         common-lisp:nil :type
                         (common-lisp:or proxy-sessions common-lisp:null)
                         :accessor
                         struct-shape-list-proxy-sessions-response-proxy-sessions
                         :shape "ProxySessions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token-string common-lisp:null)
                         :accessor
                         struct-shape-list-proxy-sessions-response-next-token
                         :shape "NextTokenString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-proxy-sessions-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-proxy-sessions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-proxy-sessions-response
                    'make-list-proxy-sessions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-proxy-sessions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-proxy-sessions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proxy-sessions))
      (common-lisp:list
       (common-lisp:cons "ProxySessions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-proxy-sessions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-sip-media-applications-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or result-max common-lisp:null) :accessor
                         struct-shape-list-sip-media-applications-request-max-results
                         :shape "ResultMax" :location "querystring"
                         :location-name "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token-string common-lisp:null)
                         :accessor
                         struct-shape-list-sip-media-applications-request-next-token
                         :shape "NextTokenString" :location "querystring"
                         :location-name "next-token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-sip-media-applications-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-sip-media-applications-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-sip-media-applications-request
                    'make-list-sip-media-applications-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-sip-media-applications-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-sip-media-applications-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-sip-media-applications-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-sip-media-applications-response common-lisp:nil
                       ((sip-media-applications :initarg
                         :sip-media-applications :initform common-lisp:nil
                         :type
                         (common-lisp:or sip-media-application-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-sip-media-applications-response-sip-media-applications
                         :shape "SipMediaApplicationList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token-string common-lisp:null)
                         :accessor
                         struct-shape-list-sip-media-applications-response-next-token
                         :shape "NextTokenString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-sip-media-applications-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-sip-media-applications-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-sip-media-applications-response
                    'make-list-sip-media-applications-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-sip-media-applications-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-sip-media-applications-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-applications))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplications"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-sip-media-applications-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-sip-rules-request common-lisp:nil
                       ((sip-media-application-id :initarg
                         :sip-media-application-id :initform common-lisp:nil
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-list-sip-rules-request-sip-media-application-id
                         :shape "NonEmptyString" :location "querystring"
                         :location-name "sip-media-application")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or result-max common-lisp:null) :accessor
                         struct-shape-list-sip-rules-request-max-results :shape
                         "ResultMax" :location "querystring" :location-name
                         "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token-string common-lisp:null)
                         :accessor
                         struct-shape-list-sip-rules-request-next-token :shape
                         "NextTokenString" :location "querystring"
                         :location-name "next-token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-sip-rules-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-sip-rules-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-sip-rules-request 'make-list-sip-rules-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-sip-rules-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-sip-rules-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-sip-rules-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-sip-rules-response common-lisp:nil
                       ((sip-rules :initarg :sip-rules :initform
                         common-lisp:nil :type
                         (common-lisp:or sip-rule-list common-lisp:null)
                         :accessor
                         struct-shape-list-sip-rules-response-sip-rules :shape
                         "SipRuleList" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token-string common-lisp:null)
                         :accessor
                         struct-shape-list-sip-rules-response-next-token :shape
                         "NextTokenString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-sip-rules-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-sip-rules-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-sip-rules-response 'make-list-sip-rules-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-sip-rules-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-sip-rules-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sip-rules))
      (common-lisp:list
       (common-lisp:cons "SipRules"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-sip-rules-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-supported-phone-number-countries-request
                       common-lisp:nil
                       ((product-type :initarg :product-type :initform
                         (common-lisp:error ":product-type is required") :type
                         (common-lisp:or phone-number-product-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-supported-phone-number-countries-request-product-type
                         :shape "PhoneNumberProductType" :location
                         "querystring" :location-name "product-type"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-supported-phone-number-countries-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-supported-phone-number-countries-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-supported-phone-number-countries-request
                    'make-list-supported-phone-number-countries-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-supported-phone-number-countries-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-supported-phone-number-countries-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-supported-phone-number-countries-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-supported-phone-number-countries-response
                       common-lisp:nil
                       ((phone-number-countries :initarg
                         :phone-number-countries :initform common-lisp:nil
                         :type
                         (common-lisp:or phone-number-countries-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-supported-phone-number-countries-response-phone-number-countries
                         :shape "PhoneNumberCountriesList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-supported-phone-number-countries-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-supported-phone-number-countries-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-supported-phone-number-countries-response
                    'make-list-supported-phone-number-countries-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-supported-phone-number-countries-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-supported-phone-number-countries-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'phone-number-countries))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberCountries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-supported-phone-number-countries-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-request-resource-arn
                         :shape "Arn" :location "querystring" :location-name
                         "arn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-response-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-voice-connector-groups-request common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-voice-connector-groups-request-next-token
                         :shape "String" :location "querystring" :location-name
                         "next-token")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or result-max common-lisp:null) :accessor
                         struct-shape-list-voice-connector-groups-request-max-results
                         :shape "ResultMax" :location "querystring"
                         :location-name "max-results"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-voice-connector-groups-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-voice-connector-groups-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-voice-connector-groups-request
                    'make-list-voice-connector-groups-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connector-groups-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connector-groups-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connector-groups-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-voice-connector-groups-response common-lisp:nil
                       ((voice-connector-groups :initarg
                         :voice-connector-groups :initform common-lisp:nil
                         :type
                         (common-lisp:or voice-connector-group-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-voice-connector-groups-response-voice-connector-groups
                         :shape "VoiceConnectorGroupList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-voice-connector-groups-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-voice-connector-groups-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-voice-connector-groups-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-voice-connector-groups-response
                    'make-list-voice-connector-groups-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connector-groups-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connector-groups-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-connector-groups))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connector-groups-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-voice-connector-termination-credentials-request
                       common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-list-voice-connector-termination-credentials-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-voice-connector-termination-credentials-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-voice-connector-termination-credentials-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-voice-connector-termination-credentials-request
                    'make-list-voice-connector-termination-credentials-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connector-termination-credentials-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connector-termination-credentials-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connector-termination-credentials-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-voice-connector-termination-credentials-response
                       common-lisp:nil
                       ((usernames :initarg :usernames :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitive-string-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-voice-connector-termination-credentials-response-usernames
                         :shape "SensitiveStringList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-voice-connector-termination-credentials-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-voice-connector-termination-credentials-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-voice-connector-termination-credentials-response
                    'make-list-voice-connector-termination-credentials-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connector-termination-credentials-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connector-termination-credentials-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'usernames))
      (common-lisp:list
       (common-lisp:cons "Usernames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connector-termination-credentials-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-voice-connectors-request common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-voice-connectors-request-next-token
                         :shape "String" :location "querystring" :location-name
                         "next-token")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or result-max common-lisp:null) :accessor
                         struct-shape-list-voice-connectors-request-max-results
                         :shape "ResultMax" :location "querystring"
                         :location-name "max-results"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-voice-connectors-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-voice-connectors-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-voice-connectors-request
                    'make-list-voice-connectors-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connectors-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connectors-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connectors-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-voice-connectors-response common-lisp:nil
                       ((voice-connectors :initarg :voice-connectors :initform
                         common-lisp:nil :type
                         (common-lisp:or voice-connector-list common-lisp:null)
                         :accessor
                         struct-shape-list-voice-connectors-response-voice-connectors
                         :shape "VoiceConnectorList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-voice-connectors-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-voice-connectors-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-voice-connectors-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-voice-connectors-response
                    'make-list-voice-connectors-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connectors-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connectors-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-connectors))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connectors-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-voice-profile-domains-request common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-voice-profile-domains-request-next-token
                         :shape "String" :location "querystring" :location-name
                         "next-token")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or result-max common-lisp:null) :accessor
                         struct-shape-list-voice-profile-domains-request-max-results
                         :shape "ResultMax" :location "querystring"
                         :location-name "max-results"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-voice-profile-domains-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-voice-profile-domains-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-voice-profile-domains-request
                    'make-list-voice-profile-domains-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-profile-domains-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-profile-domains-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-profile-domains-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-voice-profile-domains-response common-lisp:nil
                       ((voice-profile-domains :initarg :voice-profile-domains
                         :initform common-lisp:nil :type
                         (common-lisp:or voice-profile-domain-summary-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-voice-profile-domains-response-voice-profile-domains
                         :shape "VoiceProfileDomainSummaryList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-voice-profile-domains-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-voice-profile-domains-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-voice-profile-domains-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-voice-profile-domains-response
                    'make-list-voice-profile-domains-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-profile-domains-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-profile-domains-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-profile-domains))
      (common-lisp:list
       (common-lisp:cons "VoiceProfileDomains"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-profile-domains-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-voice-profiles-request common-lisp:nil
                       ((voice-profile-domain-id :initarg
                         :voice-profile-domain-id :initform
                         (common-lisp:error
                          ":voice-profile-domain-id is required")
                         :type
                         (common-lisp:or non-empty-string256 common-lisp:null)
                         :accessor
                         struct-shape-list-voice-profiles-request-voice-profile-domain-id
                         :shape "NonEmptyString256" :location "querystring"
                         :location-name "voice-profile-domain-id")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-voice-profiles-request-next-token
                         :shape "String" :location "querystring" :location-name
                         "next-token")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or result-max common-lisp:null) :accessor
                         struct-shape-list-voice-profiles-request-max-results
                         :shape "ResultMax" :location "querystring"
                         :location-name "max-results"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-voice-profiles-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-voice-profiles-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-voice-profiles-request
                    'make-list-voice-profiles-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-profiles-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-profiles-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-profiles-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-voice-profiles-response common-lisp:nil
                       ((voice-profiles :initarg :voice-profiles :initform
                         common-lisp:nil :type
                         (common-lisp:or voice-profile-summary-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-voice-profiles-response-voice-profiles
                         :shape "VoiceProfileSummaryList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-voice-profiles-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-voice-profiles-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-voice-profiles-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-voice-profiles-response
                    'make-list-voice-profiles-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-profiles-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-profiles-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-profiles))
      (common-lisp:list
       (common-lisp:cons "VoiceProfiles"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-profiles-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass logging-configuration common-lisp:nil
                       ((enable-siplogs :initarg :enable-siplogs :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-logging-configuration-enable-siplogs
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (enable-media-metric-logs :initarg
                         :enable-media-metric-logs :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         struct-shape-logging-configuration-enable-media-metric-logs
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-logging-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'logging-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'logging-configuration 'make-logging-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          logging-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          logging-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enable-siplogs))
      (common-lisp:list
       (common-lisp:cons "EnableSIPLogs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-media-metric-logs))
      (common-lisp:list
       (common-lisp:cons "EnableMediaMetricLogs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          logging-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass media-insights-configuration common-lisp:nil
                       ((disabled :initarg :disabled :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         struct-shape-media-insights-configuration-disabled
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (configuration-arn :initarg :configuration-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-media-insights-configuration-configuration-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-media-insights-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'media-insights-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'media-insights-configuration
                    'make-media-insights-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          media-insights-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          media-insights-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disabled))
      (common-lisp:list
       (common-lisp:cons "Disabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration-arn))
      (common-lisp:list
       (common-lisp:cons "ConfigurationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          media-insights-configuration))
   common-lisp:nil))
(common-lisp:deftype next-token-string () 'common-lisp:string)
(common-lisp:deftype non-empty-string () 'common-lisp:string)
(common-lisp:deftype non-empty-string128 () 'common-lisp:string)
(common-lisp:deftype non-empty-string256 () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype non-empty-string-list ()
   '(trivial-types:proper-list string))
 (common-lisp:defun make-non-empty-string-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition not-found-exception
     (chime-sdk-voice-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'not-found-exception)))
(common-lisp:deftype notification-target () 'common-lisp:string)
(common-lisp:deftype nullable-boolean () 'common-lisp:boolean)
(common-lisp:deftype number-selection-behavior () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass ordered-phone-number common-lisp:nil
                       ((e164phone-number :initarg :e164phone-number :initform
                         common-lisp:nil :type
                         (common-lisp:or e164phone-number common-lisp:null)
                         :accessor
                         struct-shape-ordered-phone-number-e164phone-number
                         :shape "E164PhoneNumber" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or ordered-phone-number-status
                                         common-lisp:null)
                         :accessor struct-shape-ordered-phone-number-status
                         :shape "OrderedPhoneNumberStatus" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ordered-phone-number
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'ordered-phone-number
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'ordered-phone-number 'make-ordered-phone-number))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input ordered-phone-number))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input ordered-phone-number))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'e164phone-number))
      (common-lisp:list
       (common-lisp:cons "E164PhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input ordered-phone-number))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype ordered-phone-number-list ()
   '(trivial-types:proper-list ordered-phone-number))
 (common-lisp:defun make-ordered-phone-number-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ordered-phone-number))
   aws-sdk/generator/shape::members))
(common-lisp:deftype ordered-phone-number-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass origination common-lisp:nil
                       ((routes :initarg :routes :initform common-lisp:nil
                         :type
                         (common-lisp:or origination-route-list
                                         common-lisp:null)
                         :accessor struct-shape-origination-routes :shape
                         "OriginationRouteList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (disabled :initarg :disabled :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor struct-shape-origination-disabled :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-origination
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'origination
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'origination 'make-origination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input origination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input origination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'routes))
      (common-lisp:list
       (common-lisp:cons "Routes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disabled))
      (common-lisp:list
       (common-lisp:cons "Disabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input origination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass origination-route common-lisp:nil
                       ((host :initarg :host :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-origination-route-host :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (port :initarg :port :initform common-lisp:nil :type
                         (common-lisp:or port common-lisp:null) :accessor
                         struct-shape-origination-route-port :shape "Port"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (protocol :initarg :protocol :initform common-lisp:nil
                         :type
                         (common-lisp:or origination-route-protocol
                                         common-lisp:null)
                         :accessor struct-shape-origination-route-protocol
                         :shape "OriginationRouteProtocol" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (priority :initarg :priority :initform common-lisp:nil
                         :type
                         (common-lisp:or origination-route-priority
                                         common-lisp:null)
                         :accessor struct-shape-origination-route-priority
                         :shape "OriginationRoutePriority" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (weight :initarg :weight :initform common-lisp:nil
                         :type
                         (common-lisp:or origination-route-weight
                                         common-lisp:null)
                         :accessor struct-shape-origination-route-weight :shape
                         "OriginationRouteWeight" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-origination-route
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'origination-route
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'origination-route 'make-origination-route))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input origination-route))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input origination-route))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host))
      (common-lisp:list
       (common-lisp:cons "Host"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'port))
      (common-lisp:list
       (common-lisp:cons "Port"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "Protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'priority))
      (common-lisp:list
       (common-lisp:cons "Priority"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'weight))
      (common-lisp:list
       (common-lisp:cons "Weight"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input origination-route))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype origination-route-list ()
   '(trivial-types:proper-list origination-route))
 (common-lisp:defun make-origination-route-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list origination-route))
   aws-sdk/generator/shape::members))
(common-lisp:deftype origination-route-priority () 'common-lisp:integer)
(common-lisp:deftype origination-route-protocol () 'common-lisp:string)
(common-lisp:deftype origination-route-weight () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass participant common-lisp:nil
                       ((phone-number :initarg :phone-number :initform
                         common-lisp:nil :type
                         (common-lisp:or e164phone-number common-lisp:null)
                         :accessor struct-shape-participant-phone-number :shape
                         "E164PhoneNumber" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (proxy-phone-number :initarg :proxy-phone-number
                         :initform common-lisp:nil :type
                         (common-lisp:or e164phone-number common-lisp:null)
                         :accessor struct-shape-participant-proxy-phone-number
                         :shape "E164PhoneNumber" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-participant
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'participant
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'participant 'make-participant))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input participant))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input participant))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number))
      (common-lisp:list
       (common-lisp:cons "PhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proxy-phone-number))
      (common-lisp:list
       (common-lisp:cons "ProxyPhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input participant))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype participant-phone-number-list ()
   '(trivial-types:proper-list e164phone-number))
 (common-lisp:defun make-participant-phone-number-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list e164phone-number))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype participants () '(trivial-types:proper-list participant))
 (common-lisp:defun make-participants
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list participant))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass phone-number common-lisp:nil
                       ((phone-number-id :initarg :phone-number-id :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor struct-shape-phone-number-phone-number-id
                         :shape "SensitiveNonEmptyString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (e164phone-number :initarg :e164phone-number :initform
                         common-lisp:nil :type
                         (common-lisp:or e164phone-number common-lisp:null)
                         :accessor struct-shape-phone-number-e164phone-number
                         :shape "E164PhoneNumber" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (country :initarg :country :initform common-lisp:nil
                         :type
                         (common-lisp:or alpha2country-code common-lisp:null)
                         :accessor struct-shape-phone-number-country :shape
                         "Alpha2CountryCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or phone-number-type common-lisp:null)
                         :accessor struct-shape-phone-number-type :shape
                         "PhoneNumberType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (product-type :initarg :product-type :initform
                         common-lisp:nil :type
                         (common-lisp:or phone-number-product-type
                                         common-lisp:null)
                         :accessor struct-shape-phone-number-product-type
                         :shape "PhoneNumberProductType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or phone-number-status common-lisp:null)
                         :accessor struct-shape-phone-number-status :shape
                         "PhoneNumberStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (capabilities :initarg :capabilities :initform
                         common-lisp:nil :type
                         (common-lisp:or phone-number-capabilities
                                         common-lisp:null)
                         :accessor struct-shape-phone-number-capabilities
                         :shape "PhoneNumberCapabilities" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (associations :initarg :associations :initform
                         common-lisp:nil :type
                         (common-lisp:or phone-number-association-list
                                         common-lisp:null)
                         :accessor struct-shape-phone-number-associations
                         :shape "PhoneNumberAssociationList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (calling-name :initarg :calling-name :initform
                         common-lisp:nil :type
                         (common-lisp:or calling-name common-lisp:null)
                         :accessor struct-shape-phone-number-calling-name
                         :shape "CallingName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (calling-name-status :initarg :calling-name-status
                         :initform common-lisp:nil :type
                         (common-lisp:or calling-name-status common-lisp:null)
                         :accessor
                         struct-shape-phone-number-calling-name-status :shape
                         "CallingNameStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-phone-number-created-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-timestamp :initarg :updated-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-phone-number-updated-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (deletion-timestamp :initarg :deletion-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-phone-number-deletion-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (order-id :initarg :order-id :initform common-lisp:nil
                         :type (common-lisp:or guid-string common-lisp:null)
                         :accessor struct-shape-phone-number-order-id :shape
                         "GuidString" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or phone-number-name common-lisp:null)
                         :accessor struct-shape-phone-number-name :shape
                         "PhoneNumberName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-phone-number
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'phone-number
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'phone-number 'make-phone-number))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input phone-number))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input phone-number))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-id))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'e164phone-number))
      (common-lisp:list
       (common-lisp:cons "E164PhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'country))
      (common-lisp:list
       (common-lisp:cons "Country"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'product-type))
      (common-lisp:list
       (common-lisp:cons "ProductType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'capabilities))
      (common-lisp:list
       (common-lisp:cons "Capabilities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'associations))
      (common-lisp:list
       (common-lisp:cons "Associations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'calling-name))
      (common-lisp:list
       (common-lisp:cons "CallingName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'calling-name-status))
      (common-lisp:list
       (common-lisp:cons "CallingNameStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deletion-timestamp))
      (common-lisp:list
       (common-lisp:cons "DeletionTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'order-id))
      (common-lisp:list
       (common-lisp:cons "OrderId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input phone-number))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass phone-number-association common-lisp:nil
                       ((value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-phone-number-association-value :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or phone-number-association-name
                                         common-lisp:null)
                         :accessor struct-shape-phone-number-association-name
                         :shape "PhoneNumberAssociationName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (associated-timestamp :initarg :associated-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-phone-number-association-associated-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-phone-number-association
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'phone-number-association
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'phone-number-association 'make-phone-number-association))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          phone-number-association))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          phone-number-association))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'associated-timestamp))
      (common-lisp:list
       (common-lisp:cons "AssociatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          phone-number-association))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype phone-number-association-list ()
   '(trivial-types:proper-list phone-number-association))
 (common-lisp:defun make-phone-number-association-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            phone-number-association))
   aws-sdk/generator/shape::members))
(common-lisp:deftype phone-number-association-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass phone-number-capabilities common-lisp:nil
                       ((inbound-call :initarg :inbound-call :initform
                         common-lisp:nil :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor
                         struct-shape-phone-number-capabilities-inbound-call
                         :shape "NullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (outbound-call :initarg :outbound-call :initform
                         common-lisp:nil :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor
                         struct-shape-phone-number-capabilities-outbound-call
                         :shape "NullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (inbound-sms :initarg :inbound-sms :initform
                         common-lisp:nil :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor
                         struct-shape-phone-number-capabilities-inbound-sms
                         :shape "NullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (outbound-sms :initarg :outbound-sms :initform
                         common-lisp:nil :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor
                         struct-shape-phone-number-capabilities-outbound-sms
                         :shape "NullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (inbound-mms :initarg :inbound-mms :initform
                         common-lisp:nil :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor
                         struct-shape-phone-number-capabilities-inbound-mms
                         :shape "NullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (outbound-mms :initarg :outbound-mms :initform
                         common-lisp:nil :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor
                         struct-shape-phone-number-capabilities-outbound-mms
                         :shape "NullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-phone-number-capabilities
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'phone-number-capabilities
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'phone-number-capabilities
                    'make-phone-number-capabilities))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          phone-number-capabilities))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          phone-number-capabilities))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inbound-call))
      (common-lisp:list
       (common-lisp:cons "InboundCall"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outbound-call))
      (common-lisp:list
       (common-lisp:cons "OutboundCall"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inbound-sms))
      (common-lisp:list
       (common-lisp:cons "InboundSMS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outbound-sms))
      (common-lisp:list
       (common-lisp:cons "OutboundSMS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inbound-mms))
      (common-lisp:list
       (common-lisp:cons "InboundMMS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outbound-mms))
      (common-lisp:list
       (common-lisp:cons "OutboundMMS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          phone-number-capabilities))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype phone-number-countries-list ()
   '(trivial-types:proper-list phone-number-country))
 (common-lisp:defun make-phone-number-countries-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list phone-number-country))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass phone-number-country common-lisp:nil
                       ((country-code :initarg :country-code :initform
                         common-lisp:nil :type
                         (common-lisp:or alpha2country-code common-lisp:null)
                         :accessor
                         struct-shape-phone-number-country-country-code :shape
                         "Alpha2CountryCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (supported-phone-number-types :initarg
                         :supported-phone-number-types :initform
                         common-lisp:nil :type
                         (common-lisp:or phone-number-type-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-phone-number-country-supported-phone-number-types
                         :shape "PhoneNumberTypeList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-phone-number-country
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'phone-number-country
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'phone-number-country 'make-phone-number-country))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input phone-number-country))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input phone-number-country))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'country-code))
      (common-lisp:list
       (common-lisp:cons "CountryCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'supported-phone-number-types))
      (common-lisp:list
       (common-lisp:cons "SupportedPhoneNumberTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input phone-number-country))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass phone-number-error common-lisp:nil
                       ((phone-number-id :initarg :phone-number-id :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-phone-number-error-phone-number-id :shape
                         "SensitiveNonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (error-code :initarg :error-code :initform
                         common-lisp:nil :type
                         (common-lisp:or error-code common-lisp:null) :accessor
                         struct-shape-phone-number-error-error-code :shape
                         "ErrorCode" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (error-message :initarg :error-message :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-phone-number-error-error-message :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-phone-number-error
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'phone-number-error
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'phone-number-error 'make-phone-number-error))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input phone-number-error))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input phone-number-error))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-id))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "ErrorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "ErrorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input phone-number-error))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype phone-number-error-list ()
   '(trivial-types:proper-list phone-number-error))
 (common-lisp:defun make-phone-number-error-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list phone-number-error))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype phone-number-list ()
   '(trivial-types:proper-list phone-number))
 (common-lisp:defun make-phone-number-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list phone-number))
   aws-sdk/generator/shape::members))
(common-lisp:deftype phone-number-max-results () 'common-lisp:integer)
(common-lisp:deftype phone-number-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass phone-number-order common-lisp:nil
                       ((phone-number-order-id :initarg :phone-number-order-id
                         :initform common-lisp:nil :type
                         (common-lisp:or guid-string common-lisp:null)
                         :accessor
                         struct-shape-phone-number-order-phone-number-order-id
                         :shape "GuidString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (product-type :initarg :product-type :initform
                         common-lisp:nil :type
                         (common-lisp:or phone-number-product-type
                                         common-lisp:null)
                         :accessor struct-shape-phone-number-order-product-type
                         :shape "PhoneNumberProductType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or phone-number-order-status
                                         common-lisp:null)
                         :accessor struct-shape-phone-number-order-status
                         :shape "PhoneNumberOrderStatus" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (order-type :initarg :order-type :initform
                         common-lisp:nil :type
                         (common-lisp:or phone-number-order-type
                                         common-lisp:null)
                         :accessor struct-shape-phone-number-order-order-type
                         :shape "PhoneNumberOrderType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (ordered-phone-numbers :initarg :ordered-phone-numbers
                         :initform common-lisp:nil :type
                         (common-lisp:or ordered-phone-number-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-phone-number-order-ordered-phone-numbers
                         :shape "OrderedPhoneNumberList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-phone-number-order-created-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-timestamp :initarg :updated-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-phone-number-order-updated-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-phone-number-order
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'phone-number-order
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'phone-number-order 'make-phone-number-order))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input phone-number-order))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input phone-number-order))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'phone-number-order-id))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberOrderId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'product-type))
      (common-lisp:list
       (common-lisp:cons "ProductType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'order-type))
      (common-lisp:list
       (common-lisp:cons "OrderType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ordered-phone-numbers))
      (common-lisp:list
       (common-lisp:cons "OrderedPhoneNumbers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input phone-number-order))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype phone-number-order-list ()
   '(trivial-types:proper-list phone-number-order))
 (common-lisp:defun make-phone-number-order-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list phone-number-order))
   aws-sdk/generator/shape::members))
(common-lisp:deftype phone-number-order-status () 'common-lisp:string)
(common-lisp:deftype phone-number-order-type () 'common-lisp:string)
(common-lisp:deftype phone-number-product-type () 'common-lisp:string)
(common-lisp:deftype phone-number-status () 'common-lisp:string)
(common-lisp:deftype phone-number-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype phone-number-type-list ()
   '(trivial-types:proper-list phone-number-type))
 (common-lisp:defun make-phone-number-type-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list phone-number-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype port () 'common-lisp:integer)
(common-lisp:deftype positive-integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass proxy common-lisp:nil
                       ((default-session-expiry-minutes :initarg
                         :default-session-expiry-minutes :initform
                         common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-proxy-default-session-expiry-minutes
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (disabled :initarg :disabled :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor struct-shape-proxy-disabled :shape "Boolean"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (fall-back-phone-number :initarg
                         :fall-back-phone-number :initform common-lisp:nil
                         :type
                         (common-lisp:or e164phone-number common-lisp:null)
                         :accessor struct-shape-proxy-fall-back-phone-number
                         :shape "E164PhoneNumber" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (phone-number-countries :initarg
                         :phone-number-countries :initform common-lisp:nil
                         :type (common-lisp:or string-list common-lisp:null)
                         :accessor struct-shape-proxy-phone-number-countries
                         :shape "StringList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-proxy
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'proxy
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'proxy 'make-proxy))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input proxy))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input proxy))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-session-expiry-minutes))
      (common-lisp:list
       (common-lisp:cons "DefaultSessionExpiryMinutes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disabled))
      (common-lisp:list
       (common-lisp:cons "Disabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'fall-back-phone-number))
      (common-lisp:list
       (common-lisp:cons "FallBackPhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'phone-number-countries))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberCountries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input proxy))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass proxy-session common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform common-lisp:nil :type
                         (common-lisp:or non-empty-string128 common-lisp:null)
                         :accessor
                         struct-shape-proxy-session-voice-connector-id :shape
                         "NonEmptyString128" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (proxy-session-id :initarg :proxy-session-id :initform
                         common-lisp:nil :type
                         (common-lisp:or non-empty-string128 common-lisp:null)
                         :accessor struct-shape-proxy-session-proxy-session-id
                         :shape "NonEmptyString128" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string128 common-lisp:null) :accessor
                         struct-shape-proxy-session-name :shape "String128"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or proxy-session-status common-lisp:null)
                         :accessor struct-shape-proxy-session-status :shape
                         "ProxySessionStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (expiry-minutes :initarg :expiry-minutes :initform
                         common-lisp:nil :type
                         (common-lisp:or positive-integer common-lisp:null)
                         :accessor struct-shape-proxy-session-expiry-minutes
                         :shape "PositiveInteger" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (capabilities :initarg :capabilities :initform
                         common-lisp:nil :type
                         (common-lisp:or capability-list common-lisp:null)
                         :accessor struct-shape-proxy-session-capabilities
                         :shape "CapabilityList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-proxy-session-created-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-timestamp :initarg :updated-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-proxy-session-updated-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (ended-timestamp :initarg :ended-timestamp :initform
                         common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-proxy-session-ended-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (participants :initarg :participants :initform
                         common-lisp:nil :type
                         (common-lisp:or participants common-lisp:null)
                         :accessor struct-shape-proxy-session-participants
                         :shape "Participants" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (number-selection-behavior :initarg
                         :number-selection-behavior :initform common-lisp:nil
                         :type
                         (common-lisp:or number-selection-behavior
                                         common-lisp:null)
                         :accessor
                         struct-shape-proxy-session-number-selection-behavior
                         :shape "NumberSelectionBehavior" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (geo-match-level :initarg :geo-match-level :initform
                         common-lisp:nil :type
                         (common-lisp:or geo-match-level common-lisp:null)
                         :accessor struct-shape-proxy-session-geo-match-level
                         :shape "GeoMatchLevel" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (geo-match-params :initarg :geo-match-params :initform
                         common-lisp:nil :type
                         (common-lisp:or geo-match-params common-lisp:null)
                         :accessor struct-shape-proxy-session-geo-match-params
                         :shape "GeoMatchParams" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-proxy-session
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'proxy-session
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'proxy-session 'make-proxy-session))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input proxy-session))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input proxy-session))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-connector-id))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proxy-session-id))
      (common-lisp:list
       (common-lisp:cons "ProxySessionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiry-minutes))
      (common-lisp:list
       (common-lisp:cons "ExpiryMinutes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'capabilities))
      (common-lisp:list
       (common-lisp:cons "Capabilities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ended-timestamp))
      (common-lisp:list
       (common-lisp:cons "EndedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'participants))
      (common-lisp:list
       (common-lisp:cons "Participants"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-selection-behavior))
      (common-lisp:list
       (common-lisp:cons "NumberSelectionBehavior"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'geo-match-level))
      (common-lisp:list
       (common-lisp:cons "GeoMatchLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'geo-match-params))
      (common-lisp:list
       (common-lisp:cons "GeoMatchParams"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input proxy-session))
   common-lisp:nil))
(common-lisp:deftype proxy-session-name-string () 'common-lisp:string)
(common-lisp:deftype proxy-session-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype proxy-sessions ()
   '(trivial-types:proper-list proxy-session))
 (common-lisp:defun make-proxy-sessions
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list proxy-session))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass
  put-sip-media-application-alexa-skill-configuration-request common-lisp:nil
  ((sip-media-application-id :initarg :sip-media-application-id :initform
    (common-lisp:error ":sip-media-application-id is required") :type
    (common-lisp:or non-empty-string common-lisp:null) :accessor
    struct-shape-put-sip-media-application-alexa-skill-configuration-request-sip-media-application-id
    :shape "NonEmptyString" :location "uri" :location-name
    "sipMediaApplicationId")
   (sip-media-application-alexa-skill-configuration :initarg
    :sip-media-application-alexa-skill-configuration :initform common-lisp:nil
    :type
    (common-lisp:or sip-media-application-alexa-skill-configuration
                    common-lisp:null)
    :accessor
    struct-shape-put-sip-media-application-alexa-skill-configuration-request-sip-media-application-alexa-skill-configuration
    :shape "SipMediaApplicationAlexaSkillConfiguration" :location
    common-lisp:nil :location-name common-lisp:nil))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-sip-media-application-alexa-skill-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-sip-media-application-alexa-skill-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list
   'put-sip-media-application-alexa-skill-configuration-request
   'make-put-sip-media-application-alexa-skill-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-sip-media-application-alexa-skill-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-sip-media-application-alexa-skill-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application-alexa-skill-configuration))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplicationAlexaSkillConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-sip-media-application-alexa-skill-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  put-sip-media-application-alexa-skill-configuration-response common-lisp:nil
  ((sip-media-application-alexa-skill-configuration :initarg
    :sip-media-application-alexa-skill-configuration :initform common-lisp:nil
    :type
    (common-lisp:or sip-media-application-alexa-skill-configuration
                    common-lisp:null)
    :accessor
    struct-shape-put-sip-media-application-alexa-skill-configuration-response-sip-media-application-alexa-skill-configuration
    :shape "SipMediaApplicationAlexaSkillConfiguration" :location
    common-lisp:nil :location-name common-lisp:nil))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-sip-media-application-alexa-skill-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-sip-media-application-alexa-skill-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list
   'put-sip-media-application-alexa-skill-configuration-response
   'make-put-sip-media-application-alexa-skill-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-sip-media-application-alexa-skill-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-sip-media-application-alexa-skill-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application-alexa-skill-configuration))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplicationAlexaSkillConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-sip-media-application-alexa-skill-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-sip-media-application-logging-configuration-request
                       common-lisp:nil
                       ((sip-media-application-id :initarg
                         :sip-media-application-id :initform
                         (common-lisp:error
                          ":sip-media-application-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-put-sip-media-application-logging-configuration-request-sip-media-application-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "sipMediaApplicationId")
                        (sip-media-application-logging-configuration :initarg
                         :sip-media-application-logging-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          sip-media-application-logging-configuration
                          common-lisp:null)
                         :accessor
                         struct-shape-put-sip-media-application-logging-configuration-request-sip-media-application-logging-configuration
                         :shape "SipMediaApplicationLoggingConfiguration"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-sip-media-application-logging-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-sip-media-application-logging-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-sip-media-application-logging-configuration-request
                    'make-put-sip-media-application-logging-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-sip-media-application-logging-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-sip-media-application-logging-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application-logging-configuration))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplicationLoggingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-sip-media-application-logging-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-sip-media-application-logging-configuration-response
                       common-lisp:nil
                       ((sip-media-application-logging-configuration :initarg
                         :sip-media-application-logging-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          sip-media-application-logging-configuration
                          common-lisp:null)
                         :accessor
                         struct-shape-put-sip-media-application-logging-configuration-response-sip-media-application-logging-configuration
                         :shape "SipMediaApplicationLoggingConfiguration"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-sip-media-application-logging-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-sip-media-application-logging-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-sip-media-application-logging-configuration-response
                    'make-put-sip-media-application-logging-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-sip-media-application-logging-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-sip-media-application-logging-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application-logging-configuration))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplicationLoggingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-sip-media-application-logging-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  put-voice-connector-emergency-calling-configuration-request common-lisp:nil
  ((voice-connector-id :initarg :voice-connector-id :initform
    (common-lisp:error ":voice-connector-id is required") :type
    (common-lisp:or non-empty-string common-lisp:null) :accessor
    struct-shape-put-voice-connector-emergency-calling-configuration-request-voice-connector-id
    :shape "NonEmptyString" :location "uri" :location-name "voiceConnectorId")
   (emergency-calling-configuration :initarg :emergency-calling-configuration
    :initform
    (common-lisp:error ":emergency-calling-configuration is required") :type
    (common-lisp:or emergency-calling-configuration common-lisp:null) :accessor
    struct-shape-put-voice-connector-emergency-calling-configuration-request-emergency-calling-configuration
    :shape "EmergencyCallingConfiguration" :location common-lisp:nil
    :location-name common-lisp:nil))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-voice-connector-emergency-calling-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-voice-connector-emergency-calling-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list
   'put-voice-connector-emergency-calling-configuration-request
   'make-put-voice-connector-emergency-calling-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-emergency-calling-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-emergency-calling-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'emergency-calling-configuration))
      (common-lisp:list
       (common-lisp:cons "EmergencyCallingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-emergency-calling-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  put-voice-connector-emergency-calling-configuration-response common-lisp:nil
  ((emergency-calling-configuration :initarg :emergency-calling-configuration
    :initform common-lisp:nil :type
    (common-lisp:or emergency-calling-configuration common-lisp:null) :accessor
    struct-shape-put-voice-connector-emergency-calling-configuration-response-emergency-calling-configuration
    :shape "EmergencyCallingConfiguration" :location common-lisp:nil
    :location-name common-lisp:nil))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-voice-connector-emergency-calling-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-voice-connector-emergency-calling-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list
   'put-voice-connector-emergency-calling-configuration-response
   'make-put-voice-connector-emergency-calling-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-emergency-calling-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-emergency-calling-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'emergency-calling-configuration))
      (common-lisp:list
       (common-lisp:cons "EmergencyCallingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-emergency-calling-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-voice-connector-logging-configuration-request
                       common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-logging-configuration-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId")
                        (logging-configuration :initarg :logging-configuration
                         :initform
                         (common-lisp:error
                          ":logging-configuration is required")
                         :type
                         (common-lisp:or logging-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-logging-configuration-request-logging-configuration
                         :shape "LoggingConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-voice-connector-logging-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-voice-connector-logging-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-voice-connector-logging-configuration-request
                    'make-put-voice-connector-logging-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-logging-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-logging-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'logging-configuration))
      (common-lisp:list
       (common-lisp:cons "LoggingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-logging-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-voice-connector-logging-configuration-response
                       common-lisp:nil
                       ((logging-configuration :initarg :logging-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or logging-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-logging-configuration-response-logging-configuration
                         :shape "LoggingConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-voice-connector-logging-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-voice-connector-logging-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-voice-connector-logging-configuration-response
                    'make-put-voice-connector-logging-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-logging-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-logging-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'logging-configuration))
      (common-lisp:list
       (common-lisp:cons "LoggingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-logging-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-voice-connector-origination-request common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-origination-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId")
                        (origination :initarg :origination :initform
                         (common-lisp:error ":origination is required") :type
                         (common-lisp:or origination common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-origination-request-origination
                         :shape "Origination" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-voice-connector-origination-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-voice-connector-origination-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-voice-connector-origination-request
                    'make-put-voice-connector-origination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-origination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-origination-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origination))
      (common-lisp:list
       (common-lisp:cons "Origination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-origination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-voice-connector-origination-response common-lisp:nil
                       ((origination :initarg :origination :initform
                         common-lisp:nil :type
                         (common-lisp:or origination common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-origination-response-origination
                         :shape "Origination" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-voice-connector-origination-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-voice-connector-origination-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-voice-connector-origination-response
                    'make-put-voice-connector-origination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-origination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-origination-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origination))
      (common-lisp:list
       (common-lisp:cons "Origination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-origination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-voice-connector-proxy-request common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string128 common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-proxy-request-voice-connector-id
                         :shape "NonEmptyString128" :location "uri"
                         :location-name "voiceConnectorId")
                        (default-session-expiry-minutes :initarg
                         :default-session-expiry-minutes :initform
                         (common-lisp:error
                          ":default-session-expiry-minutes is required")
                         :type (common-lisp:or integer common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-proxy-request-default-session-expiry-minutes
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (phone-number-pool-countries :initarg
                         :phone-number-pool-countries :initform
                         (common-lisp:error
                          ":phone-number-pool-countries is required")
                         :type (common-lisp:or country-list common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-proxy-request-phone-number-pool-countries
                         :shape "CountryList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (fall-back-phone-number :initarg
                         :fall-back-phone-number :initform common-lisp:nil
                         :type
                         (common-lisp:or e164phone-number common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-proxy-request-fall-back-phone-number
                         :shape "E164PhoneNumber" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (disabled :initarg :disabled :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-proxy-request-disabled
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-voice-connector-proxy-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-voice-connector-proxy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-voice-connector-proxy-request
                    'make-put-voice-connector-proxy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-proxy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-proxy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-session-expiry-minutes))
      (common-lisp:list
       (common-lisp:cons "DefaultSessionExpiryMinutes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'phone-number-pool-countries))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberPoolCountries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'fall-back-phone-number))
      (common-lisp:list
       (common-lisp:cons "FallBackPhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disabled))
      (common-lisp:list
       (common-lisp:cons "Disabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-proxy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-voice-connector-proxy-response common-lisp:nil
                       ((proxy :initarg :proxy :initform common-lisp:nil :type
                         (common-lisp:or proxy common-lisp:null) :accessor
                         struct-shape-put-voice-connector-proxy-response-proxy
                         :shape "Proxy" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-voice-connector-proxy-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-voice-connector-proxy-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-voice-connector-proxy-response
                    'make-put-voice-connector-proxy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-proxy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-proxy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proxy))
      (common-lisp:list
       (common-lisp:cons "Proxy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-proxy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-voice-connector-streaming-configuration-request
                       common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-streaming-configuration-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId")
                        (streaming-configuration :initarg
                         :streaming-configuration :initform
                         (common-lisp:error
                          ":streaming-configuration is required")
                         :type
                         (common-lisp:or streaming-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-streaming-configuration-request-streaming-configuration
                         :shape "StreamingConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-voice-connector-streaming-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-voice-connector-streaming-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-voice-connector-streaming-configuration-request
                    'make-put-voice-connector-streaming-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-streaming-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-streaming-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'streaming-configuration))
      (common-lisp:list
       (common-lisp:cons "StreamingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-streaming-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-voice-connector-streaming-configuration-response
                       common-lisp:nil
                       ((streaming-configuration :initarg
                         :streaming-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or streaming-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-streaming-configuration-response-streaming-configuration
                         :shape "StreamingConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-voice-connector-streaming-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-voice-connector-streaming-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-voice-connector-streaming-configuration-response
                    'make-put-voice-connector-streaming-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-streaming-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-streaming-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'streaming-configuration))
      (common-lisp:list
       (common-lisp:cons "StreamingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-streaming-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-voice-connector-termination-credentials-request
                       common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-termination-credentials-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId")
                        (credentials :initarg :credentials :initform
                         common-lisp:nil :type
                         (common-lisp:or credential-list common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-termination-credentials-request-credentials
                         :shape "CredentialList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-voice-connector-termination-credentials-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-voice-connector-termination-credentials-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-voice-connector-termination-credentials-request
                    'make-put-voice-connector-termination-credentials-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-termination-credentials-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-termination-credentials-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials))
      (common-lisp:list
       (common-lisp:cons "Credentials"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-termination-credentials-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-voice-connector-termination-request common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-termination-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId")
                        (termination :initarg :termination :initform
                         (common-lisp:error ":termination is required") :type
                         (common-lisp:or termination common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-termination-request-termination
                         :shape "Termination" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-voice-connector-termination-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-voice-connector-termination-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-voice-connector-termination-request
                    'make-put-voice-connector-termination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-termination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-termination-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'termination))
      (common-lisp:list
       (common-lisp:cons "Termination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-termination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-voice-connector-termination-response common-lisp:nil
                       ((termination :initarg :termination :initform
                         common-lisp:nil :type
                         (common-lisp:or termination common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-termination-response-termination
                         :shape "Termination" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-voice-connector-termination-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-voice-connector-termination-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-voice-connector-termination-response
                    'make-put-voice-connector-termination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-termination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-termination-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'termination))
      (common-lisp:list
       (common-lisp:cons "Termination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-termination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition resource-limit-exceeded-exception
     (chime-sdk-voice-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'resource-limit-exceeded-exception)))
(common-lisp:progn
 (common-lisp:defclass restore-phone-number-request common-lisp:nil
                       ((phone-number-id :initarg :phone-number-id :initform
                         (common-lisp:error ":phone-number-id is required")
                         :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-restore-phone-number-request-phone-number-id
                         :shape "SensitiveNonEmptyString" :location "uri"
                         :location-name "phoneNumberId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-restore-phone-number-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'restore-phone-number-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'restore-phone-number-request
                    'make-restore-phone-number-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          restore-phone-number-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          restore-phone-number-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          restore-phone-number-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass restore-phone-number-response common-lisp:nil
                       ((phone-number :initarg :phone-number :initform
                         common-lisp:nil :type
                         (common-lisp:or phone-number common-lisp:null)
                         :accessor
                         struct-shape-restore-phone-number-response-phone-number
                         :shape "PhoneNumber" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-restore-phone-number-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'restore-phone-number-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'restore-phone-number-response
                    'make-restore-phone-number-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          restore-phone-number-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          restore-phone-number-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number))
      (common-lisp:list
       (common-lisp:cons "PhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          restore-phone-number-response))
   common-lisp:nil))
(common-lisp:deftype result-max () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype smacreate-call-arguments-map () 'common-lisp:hash-table)
 (common-lisp:defun make-smacreate-call-arguments-map
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype smaupdate-call-arguments-map () 'common-lisp:hash-table)
 (common-lisp:defun make-smaupdate-call-arguments-map
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass search-available-phone-numbers-request common-lisp:nil
                       ((area-code :initarg :area-code :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-search-available-phone-numbers-request-area-code
                         :shape "String" :location "querystring" :location-name
                         "area-code")
                        (city :initarg :city :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-search-available-phone-numbers-request-city
                         :shape "String" :location "querystring" :location-name
                         "city")
                        (country :initarg :country :initform common-lisp:nil
                         :type
                         (common-lisp:or alpha2country-code common-lisp:null)
                         :accessor
                         struct-shape-search-available-phone-numbers-request-country
                         :shape "Alpha2CountryCode" :location "querystring"
                         :location-name "country")
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-search-available-phone-numbers-request-state
                         :shape "String" :location "querystring" :location-name
                         "state")
                        (toll-free-prefix :initarg :toll-free-prefix :initform
                         common-lisp:nil :type
                         (common-lisp:or toll-free-prefix common-lisp:null)
                         :accessor
                         struct-shape-search-available-phone-numbers-request-toll-free-prefix
                         :shape "TollFreePrefix" :location "querystring"
                         :location-name "toll-free-prefix")
                        (phone-number-type :initarg :phone-number-type
                         :initform common-lisp:nil :type
                         (common-lisp:or phone-number-type common-lisp:null)
                         :accessor
                         struct-shape-search-available-phone-numbers-request-phone-number-type
                         :shape "PhoneNumberType" :location "querystring"
                         :location-name "phone-number-type")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or phone-number-max-results
                                         common-lisp:null)
                         :accessor
                         struct-shape-search-available-phone-numbers-request-max-results
                         :shape "PhoneNumberMaxResults" :location "querystring"
                         :location-name "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-search-available-phone-numbers-request-next-token
                         :shape "String" :location "querystring" :location-name
                         "next-token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-search-available-phone-numbers-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'search-available-phone-numbers-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'search-available-phone-numbers-request
                    'make-search-available-phone-numbers-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          search-available-phone-numbers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          search-available-phone-numbers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          search-available-phone-numbers-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass search-available-phone-numbers-response common-lisp:nil
                       ((e164phone-numbers :initarg :e164phone-numbers
                         :initform common-lisp:nil :type
                         (common-lisp:or e164phone-number-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-search-available-phone-numbers-response-e164phone-numbers
                         :shape "E164PhoneNumberList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-search-available-phone-numbers-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-search-available-phone-numbers-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'search-available-phone-numbers-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'search-available-phone-numbers-response
                    'make-search-available-phone-numbers-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          search-available-phone-numbers-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          search-available-phone-numbers-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'e164phone-numbers))
      (common-lisp:list
       (common-lisp:cons "E164PhoneNumbers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          search-available-phone-numbers-response))
   common-lisp:nil))
(common-lisp:deftype sensitive-non-empty-string () 'common-lisp:string)
(common-lisp:deftype sensitive-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype sensitive-string-list ()
   '(trivial-types:proper-list sensitive-string))
 (common-lisp:defun make-sensitive-string-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list sensitive-string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass server-side-encryption-configuration common-lisp:nil
                       ((kms-key-arn :initarg :kms-key-arn :initform
                         (common-lisp:error ":kms-key-arn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-server-side-encryption-configuration-kms-key-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-server-side-encryption-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'server-side-encryption-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'server-side-encryption-configuration
                    'make-server-side-encryption-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          server-side-encryption-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          server-side-encryption-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-arn))
      (common-lisp:list
       (common-lisp:cons "KmsKeyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          server-side-encryption-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition service-failure-exception
     (chime-sdk-voice-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'service-failure-exception)))
(common-lisp:progn
 (common-lisp:define-condition service-unavailable-exception
     (chime-sdk-voice-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'service-unavailable-exception)))
(common-lisp:deftype sip-application-priority () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype sip-headers-map () 'common-lisp:hash-table)
 (common-lisp:defun make-sip-headers-map (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass sip-media-application common-lisp:nil
                       ((sip-media-application-id :initarg
                         :sip-media-application-id :initform common-lisp:nil
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-sip-media-application-sip-media-application-id
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (aws-region :initarg :aws-region :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-sip-media-application-aws-region :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or sip-media-application-name
                                         common-lisp:null)
                         :accessor struct-shape-sip-media-application-name
                         :shape "SipMediaApplicationName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (endpoints :initarg :endpoints :initform
                         common-lisp:nil :type
                         (common-lisp:or sip-media-application-endpoint-list
                                         common-lisp:null)
                         :accessor struct-shape-sip-media-application-endpoints
                         :shape "SipMediaApplicationEndpointList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-sip-media-application-created-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-timestamp :initarg :updated-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-sip-media-application-updated-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sip-media-application-arn :initarg
                         :sip-media-application-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-sip-media-application-sip-media-application-arn
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-sip-media-application
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'sip-media-application
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'sip-media-application 'make-sip-media-application))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application-id))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-region))
      (common-lisp:list
       (common-lisp:cons "AwsRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoints))
      (common-lisp:list
       (common-lisp:cons "Endpoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application-arn))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass sip-media-application-alexa-skill-configuration
                       common-lisp:nil
                       ((alexa-skill-status :initarg :alexa-skill-status
                         :initform
                         (common-lisp:error ":alexa-skill-status is required")
                         :type
                         (common-lisp:or alexa-skill-status common-lisp:null)
                         :accessor
                         struct-shape-sip-media-application-alexa-skill-configuration-alexa-skill-status
                         :shape "AlexaSkillStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (alexa-skill-ids :initarg :alexa-skill-ids :initform
                         (common-lisp:error ":alexa-skill-ids is required")
                         :type
                         (common-lisp:or alexa-skill-id-list common-lisp:null)
                         :accessor
                         struct-shape-sip-media-application-alexa-skill-configuration-alexa-skill-ids
                         :shape "AlexaSkillIdList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-sip-media-application-alexa-skill-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'sip-media-application-alexa-skill-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'sip-media-application-alexa-skill-configuration
                    'make-sip-media-application-alexa-skill-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application-alexa-skill-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application-alexa-skill-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alexa-skill-status))
      (common-lisp:list
       (common-lisp:cons "AlexaSkillStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alexa-skill-ids))
      (common-lisp:list
       (common-lisp:cons "AlexaSkillIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application-alexa-skill-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass sip-media-application-call common-lisp:nil
                       ((transaction-id :initarg :transaction-id :initform
                         common-lisp:nil :type
                         (common-lisp:or guid-string common-lisp:null)
                         :accessor
                         struct-shape-sip-media-application-call-transaction-id
                         :shape "GuidString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-sip-media-application-call
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'sip-media-application-call
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'sip-media-application-call
                    'make-sip-media-application-call))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application-call))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application-call))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'transaction-id))
      (common-lisp:list
       (common-lisp:cons "TransactionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application-call))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass sip-media-application-endpoint common-lisp:nil
                       ((lambda-arn :initarg :lambda-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or function-arn common-lisp:null)
                         :accessor
                         struct-shape-sip-media-application-endpoint-lambda-arn
                         :shape "FunctionArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-sip-media-application-endpoint
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'sip-media-application-endpoint
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'sip-media-application-endpoint
                    'make-sip-media-application-endpoint))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application-endpoint))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application-endpoint))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lambda-arn))
      (common-lisp:list
       (common-lisp:cons "LambdaArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application-endpoint))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype sip-media-application-endpoint-list ()
   '(trivial-types:proper-list sip-media-application-endpoint))
 (common-lisp:defun make-sip-media-application-endpoint-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            sip-media-application-endpoint))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype sip-media-application-list ()
   '(trivial-types:proper-list sip-media-application))
 (common-lisp:defun make-sip-media-application-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list sip-media-application))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass sip-media-application-logging-configuration
                       common-lisp:nil
                       ((enable-sip-media-application-message-logs :initarg
                         :enable-sip-media-application-message-logs :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-sip-media-application-logging-configuration-enable-sip-media-application-message-logs
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-sip-media-application-logging-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'sip-media-application-logging-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'sip-media-application-logging-configuration
                    'make-sip-media-application-logging-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application-logging-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application-logging-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-sip-media-application-message-logs))
      (common-lisp:list
       (common-lisp:cons "EnableSipMediaApplicationMessageLogs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application-logging-configuration))
   common-lisp:nil))
(common-lisp:deftype sip-media-application-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass sip-rule common-lisp:nil
                       ((sip-rule-id :initarg :sip-rule-id :initform
                         common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-sip-rule-sip-rule-id :shape
                         "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or sip-rule-name common-lisp:null)
                         :accessor struct-shape-sip-rule-name :shape
                         "SipRuleName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (disabled :initarg :disabled :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor struct-shape-sip-rule-disabled :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (trigger-type :initarg :trigger-type :initform
                         common-lisp:nil :type
                         (common-lisp:or sip-rule-trigger-type
                                         common-lisp:null)
                         :accessor struct-shape-sip-rule-trigger-type :shape
                         "SipRuleTriggerType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (trigger-value :initarg :trigger-value :initform
                         common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-sip-rule-trigger-value :shape
                         "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (target-applications :initarg :target-applications
                         :initform common-lisp:nil :type
                         (common-lisp:or sip-rule-target-application-list
                                         common-lisp:null)
                         :accessor struct-shape-sip-rule-target-applications
                         :shape "SipRuleTargetApplicationList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-sip-rule-created-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-timestamp :initarg :updated-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-sip-rule-updated-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-sip-rule
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'sip-rule
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'sip-rule 'make-sip-rule))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sip-rule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sip-rule))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sip-rule-id))
      (common-lisp:list
       (common-lisp:cons "SipRuleId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disabled))
      (common-lisp:list
       (common-lisp:cons "Disabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'trigger-type))
      (common-lisp:list
       (common-lisp:cons "TriggerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'trigger-value))
      (common-lisp:list
       (common-lisp:cons "TriggerValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-applications))
      (common-lisp:list
       (common-lisp:cons "TargetApplications"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sip-rule))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype sip-rule-list () '(trivial-types:proper-list sip-rule))
 (common-lisp:defun make-sip-rule-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list sip-rule))
   aws-sdk/generator/shape::members))
(common-lisp:deftype sip-rule-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass sip-rule-target-application common-lisp:nil
                       ((sip-media-application-id :initarg
                         :sip-media-application-id :initform common-lisp:nil
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-sip-rule-target-application-sip-media-application-id
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (priority :initarg :priority :initform common-lisp:nil
                         :type
                         (common-lisp:or sip-application-priority
                                         common-lisp:null)
                         :accessor
                         struct-shape-sip-rule-target-application-priority
                         :shape "SipApplicationPriority" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (aws-region :initarg :aws-region :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-sip-rule-target-application-aws-region
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-sip-rule-target-application
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'sip-rule-target-application
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'sip-rule-target-application
                    'make-sip-rule-target-application))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sip-rule-target-application))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sip-rule-target-application))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application-id))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'priority))
      (common-lisp:list
       (common-lisp:cons "Priority"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-region))
      (common-lisp:list
       (common-lisp:cons "AwsRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sip-rule-target-application))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype sip-rule-target-application-list ()
   '(trivial-types:proper-list sip-rule-target-application))
 (common-lisp:defun make-sip-rule-target-application-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            sip-rule-target-application))
   aws-sdk/generator/shape::members))
(common-lisp:deftype sip-rule-trigger-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass speaker-search-details common-lisp:nil
                       ((results :initarg :results :initform common-lisp:nil
                         :type
                         (common-lisp:or speaker-search-result-list
                                         common-lisp:null)
                         :accessor struct-shape-speaker-search-details-results
                         :shape "SpeakerSearchResultList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (voiceprint-generation-status :initarg
                         :voiceprint-generation-status :initform
                         common-lisp:nil :type
                         (common-lisp:or non-empty-string256 common-lisp:null)
                         :accessor
                         struct-shape-speaker-search-details-voiceprint-generation-status
                         :shape "NonEmptyString256" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-speaker-search-details
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'speaker-search-details
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'speaker-search-details 'make-speaker-search-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          speaker-search-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          speaker-search-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'results))
      (common-lisp:list
       (common-lisp:cons "Results"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voiceprint-generation-status))
      (common-lisp:list
       (common-lisp:cons "VoiceprintGenerationStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          speaker-search-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass speaker-search-result common-lisp:nil
                       ((confidence-score :initarg :confidence-score :initform
                         common-lisp:nil :type
                         (common-lisp:or confidence-score common-lisp:null)
                         :accessor
                         struct-shape-speaker-search-result-confidence-score
                         :shape "ConfidenceScore" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (voice-profile-id :initarg :voice-profile-id :initform
                         common-lisp:nil :type
                         (common-lisp:or non-empty-string256 common-lisp:null)
                         :accessor
                         struct-shape-speaker-search-result-voice-profile-id
                         :shape "NonEmptyString256" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-speaker-search-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'speaker-search-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'speaker-search-result 'make-speaker-search-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          speaker-search-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          speaker-search-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'confidence-score))
      (common-lisp:list
       (common-lisp:cons "ConfidenceScore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-profile-id))
      (common-lisp:list
       (common-lisp:cons "VoiceProfileId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          speaker-search-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype speaker-search-result-list ()
   '(trivial-types:proper-list speaker-search-result))
 (common-lisp:defun make-speaker-search-result-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list speaker-search-result))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass speaker-search-task common-lisp:nil
                       ((speaker-search-task-id :initarg
                         :speaker-search-task-id :initform common-lisp:nil
                         :type
                         (common-lisp:or non-empty-string256 common-lisp:null)
                         :accessor
                         struct-shape-speaker-search-task-speaker-search-task-id
                         :shape "NonEmptyString256" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (speaker-search-task-status :initarg
                         :speaker-search-task-status :initform common-lisp:nil
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-speaker-search-task-speaker-search-task-status
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (call-details :initarg :call-details :initform
                         common-lisp:nil :type
                         (common-lisp:or call-details common-lisp:null)
                         :accessor
                         struct-shape-speaker-search-task-call-details :shape
                         "CallDetails" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (speaker-search-details :initarg
                         :speaker-search-details :initform common-lisp:nil
                         :type
                         (common-lisp:or speaker-search-details
                                         common-lisp:null)
                         :accessor
                         struct-shape-speaker-search-task-speaker-search-details
                         :shape "SpeakerSearchDetails" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-speaker-search-task-created-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-timestamp :initarg :updated-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-speaker-search-task-updated-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (started-timestamp :initarg :started-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-speaker-search-task-started-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status-message :initarg :status-message :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-speaker-search-task-status-message :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-speaker-search-task
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'speaker-search-task
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'speaker-search-task 'make-speaker-search-task))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input speaker-search-task))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input speaker-search-task))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'speaker-search-task-id))
      (common-lisp:list
       (common-lisp:cons "SpeakerSearchTaskId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'speaker-search-task-status))
      (common-lisp:list
       (common-lisp:cons "SpeakerSearchTaskStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'call-details))
      (common-lisp:list
       (common-lisp:cons "CallDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'speaker-search-details))
      (common-lisp:list
       (common-lisp:cons "SpeakerSearchDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'started-timestamp))
      (common-lisp:list
       (common-lisp:cons "StartedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "StatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input speaker-search-task))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-speaker-search-task-request common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string128 common-lisp:null)
                         :accessor
                         struct-shape-start-speaker-search-task-request-voice-connector-id
                         :shape "NonEmptyString128" :location "uri"
                         :location-name "VoiceConnectorId")
                        (transaction-id :initarg :transaction-id :initform
                         (common-lisp:error ":transaction-id is required")
                         :type
                         (common-lisp:or non-empty-string256 common-lisp:null)
                         :accessor
                         struct-shape-start-speaker-search-task-request-transaction-id
                         :shape "NonEmptyString256" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (voice-profile-domain-id :initarg
                         :voice-profile-domain-id :initform
                         (common-lisp:error
                          ":voice-profile-domain-id is required")
                         :type
                         (common-lisp:or non-empty-string256 common-lisp:null)
                         :accessor
                         struct-shape-start-speaker-search-task-request-voice-profile-domain-id
                         :shape "NonEmptyString256" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-request-token :initarg :client-request-token
                         :initform common-lisp:nil :type
                         (common-lisp:or client-request-id common-lisp:null)
                         :accessor
                         struct-shape-start-speaker-search-task-request-client-request-token
                         :shape "ClientRequestId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (call-leg :initarg :call-leg :initform common-lisp:nil
                         :type (common-lisp:or call-leg-type common-lisp:null)
                         :accessor
                         struct-shape-start-speaker-search-task-request-call-leg
                         :shape "CallLegType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-speaker-search-task-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-speaker-search-task-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-speaker-search-task-request
                    'make-start-speaker-search-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-speaker-search-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-speaker-search-task-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'transaction-id))
      (common-lisp:list
       (common-lisp:cons "TransactionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-profile-domain-id))
      (common-lisp:list
       (common-lisp:cons "VoiceProfileDomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'call-leg))
      (common-lisp:list
       (common-lisp:cons "CallLeg"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-speaker-search-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-speaker-search-task-response common-lisp:nil
                       ((speaker-search-task :initarg :speaker-search-task
                         :initform common-lisp:nil :type
                         (common-lisp:or speaker-search-task common-lisp:null)
                         :accessor
                         struct-shape-start-speaker-search-task-response-speaker-search-task
                         :shape "SpeakerSearchTask" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-speaker-search-task-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-speaker-search-task-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-speaker-search-task-response
                    'make-start-speaker-search-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-speaker-search-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-speaker-search-task-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'speaker-search-task))
      (common-lisp:list
       (common-lisp:cons "SpeakerSearchTask"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-speaker-search-task-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-voice-tone-analysis-task-request common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string128 common-lisp:null)
                         :accessor
                         struct-shape-start-voice-tone-analysis-task-request-voice-connector-id
                         :shape "NonEmptyString128" :location "uri"
                         :location-name "VoiceConnectorId")
                        (transaction-id :initarg :transaction-id :initform
                         (common-lisp:error ":transaction-id is required")
                         :type
                         (common-lisp:or non-empty-string256 common-lisp:null)
                         :accessor
                         struct-shape-start-voice-tone-analysis-task-request-transaction-id
                         :shape "NonEmptyString256" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (language-code :initarg :language-code :initform
                         (common-lisp:error ":language-code is required") :type
                         (common-lisp:or language-code common-lisp:null)
                         :accessor
                         struct-shape-start-voice-tone-analysis-task-request-language-code
                         :shape "LanguageCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-request-token :initarg :client-request-token
                         :initform common-lisp:nil :type
                         (common-lisp:or client-request-id common-lisp:null)
                         :accessor
                         struct-shape-start-voice-tone-analysis-task-request-client-request-token
                         :shape "ClientRequestId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-voice-tone-analysis-task-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-voice-tone-analysis-task-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-voice-tone-analysis-task-request
                    'make-start-voice-tone-analysis-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-voice-tone-analysis-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-voice-tone-analysis-task-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'transaction-id))
      (common-lisp:list
       (common-lisp:cons "TransactionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-voice-tone-analysis-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-voice-tone-analysis-task-response common-lisp:nil
                       ((voice-tone-analysis-task :initarg
                         :voice-tone-analysis-task :initform common-lisp:nil
                         :type
                         (common-lisp:or voice-tone-analysis-task
                                         common-lisp:null)
                         :accessor
                         struct-shape-start-voice-tone-analysis-task-response-voice-tone-analysis-task
                         :shape "VoiceToneAnalysisTask" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-voice-tone-analysis-task-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-voice-tone-analysis-task-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-voice-tone-analysis-task-response
                    'make-start-voice-tone-analysis-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-voice-tone-analysis-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-voice-tone-analysis-task-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-tone-analysis-task))
      (common-lisp:list
       (common-lisp:cons "VoiceToneAnalysisTask"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-voice-tone-analysis-task-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-speaker-search-task-request common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string128 common-lisp:null)
                         :accessor
                         struct-shape-stop-speaker-search-task-request-voice-connector-id
                         :shape "NonEmptyString128" :location "uri"
                         :location-name "VoiceConnectorId")
                        (speaker-search-task-id :initarg
                         :speaker-search-task-id :initform
                         (common-lisp:error
                          ":speaker-search-task-id is required")
                         :type
                         (common-lisp:or non-empty-string256 common-lisp:null)
                         :accessor
                         struct-shape-stop-speaker-search-task-request-speaker-search-task-id
                         :shape "NonEmptyString256" :location "uri"
                         :location-name "SpeakerSearchTaskId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stop-speaker-search-task-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'stop-speaker-search-task-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stop-speaker-search-task-request
                    'make-stop-speaker-search-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-speaker-search-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-speaker-search-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-speaker-search-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-voice-tone-analysis-task-request common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string128 common-lisp:null)
                         :accessor
                         struct-shape-stop-voice-tone-analysis-task-request-voice-connector-id
                         :shape "NonEmptyString128" :location "uri"
                         :location-name "VoiceConnectorId")
                        (voice-tone-analysis-task-id :initarg
                         :voice-tone-analysis-task-id :initform
                         (common-lisp:error
                          ":voice-tone-analysis-task-id is required")
                         :type
                         (common-lisp:or non-empty-string256 common-lisp:null)
                         :accessor
                         struct-shape-stop-voice-tone-analysis-task-request-voice-tone-analysis-task-id
                         :shape "NonEmptyString256" :location "uri"
                         :location-name "VoiceToneAnalysisTaskId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stop-voice-tone-analysis-task-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'stop-voice-tone-analysis-task-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stop-voice-tone-analysis-task-request
                    'make-stop-voice-tone-analysis-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-voice-tone-analysis-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-voice-tone-analysis-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-voice-tone-analysis-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass streaming-configuration common-lisp:nil
                       ((data-retention-in-hours :initarg
                         :data-retention-in-hours :initform
                         (common-lisp:error
                          ":data-retention-in-hours is required")
                         :type
                         (common-lisp:or data-retention-in-hours
                                         common-lisp:null)
                         :accessor
                         struct-shape-streaming-configuration-data-retention-in-hours
                         :shape "DataRetentionInHours" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (disabled :initarg :disabled :initform
                         (common-lisp:error ":disabled is required") :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-streaming-configuration-disabled :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (streaming-notification-targets :initarg
                         :streaming-notification-targets :initform
                         common-lisp:nil :type
                         (common-lisp:or streaming-notification-target-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-streaming-configuration-streaming-notification-targets
                         :shape "StreamingNotificationTargetList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (media-insights-configuration :initarg
                         :media-insights-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or media-insights-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-streaming-configuration-media-insights-configuration
                         :shape "MediaInsightsConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-streaming-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'streaming-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'streaming-configuration 'make-streaming-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          streaming-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          streaming-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-retention-in-hours))
      (common-lisp:list
       (common-lisp:cons "DataRetentionInHours"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disabled))
      (common-lisp:list
       (common-lisp:cons "Disabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'streaming-notification-targets))
      (common-lisp:list
       (common-lisp:cons "StreamingNotificationTargets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'media-insights-configuration))
      (common-lisp:list
       (common-lisp:cons "MediaInsightsConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          streaming-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass streaming-notification-target common-lisp:nil
                       ((notification-target :initarg :notification-target
                         :initform common-lisp:nil :type
                         (common-lisp:or notification-target common-lisp:null)
                         :accessor
                         struct-shape-streaming-notification-target-notification-target
                         :shape "NotificationTarget" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-streaming-notification-target
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'streaming-notification-target
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'streaming-notification-target
                    'make-streaming-notification-target))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          streaming-notification-target))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          streaming-notification-target))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'notification-target))
      (common-lisp:list
       (common-lisp:cons "NotificationTarget"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          streaming-notification-target))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype streaming-notification-target-list ()
   '(trivial-types:proper-list streaming-notification-target))
 (common-lisp:defun make-streaming-notification-target-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            streaming-notification-target))
   aws-sdk/generator/shape::members))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:deftype string128 () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype string-list () '(trivial-types:proper-list string))
 (common-lisp:defun make-string-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass tag common-lisp:nil
                       ((key :initarg :key :initform
                         (common-lisp:error ":key is required") :type
                         (common-lisp:or tag-key common-lisp:null) :accessor
                         struct-shape-tag-key :shape "TagKey" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (value :initarg :value :initform
                         (common-lisp:error ":value is required") :type
                         (common-lisp:or tag-value common-lisp:null) :accessor
                         struct-shape-tag-value :shape "TagValue" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun make-tag-key-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun make-tag-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-tag-resource-request-resource-arn :shape
                         "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-tag-resource-request-tags :shape
                         "TagList" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass termination common-lisp:nil
                       ((cps-limit :initarg :cps-limit :initform
                         common-lisp:nil :type
                         (common-lisp:or cps-limit common-lisp:null) :accessor
                         struct-shape-termination-cps-limit :shape "CpsLimit"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (default-phone-number :initarg :default-phone-number
                         :initform common-lisp:nil :type
                         (common-lisp:or e164phone-number common-lisp:null)
                         :accessor
                         struct-shape-termination-default-phone-number :shape
                         "E164PhoneNumber" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (calling-regions :initarg :calling-regions :initform
                         common-lisp:nil :type
                         (common-lisp:or calling-region-list common-lisp:null)
                         :accessor struct-shape-termination-calling-regions
                         :shape "CallingRegionList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cidr-allowed-list :initarg :cidr-allowed-list
                         :initform common-lisp:nil :type
                         (common-lisp:or string-list common-lisp:null)
                         :accessor struct-shape-termination-cidr-allowed-list
                         :shape "StringList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (disabled :initarg :disabled :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor struct-shape-termination-disabled :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-termination
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'termination
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'termination 'make-termination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input termination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input termination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cps-limit))
      (common-lisp:list
       (common-lisp:cons "CpsLimit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-phone-number))
      (common-lisp:list
       (common-lisp:cons "DefaultPhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'calling-regions))
      (common-lisp:list
       (common-lisp:cons "CallingRegions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cidr-allowed-list))
      (common-lisp:list
       (common-lisp:cons "CidrAllowedList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disabled))
      (common-lisp:list
       (common-lisp:cons "Disabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input termination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass termination-health common-lisp:nil
                       ((timestamp :initarg :timestamp :initform
                         common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-termination-health-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (source :initarg :source :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-termination-health-source
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-termination-health
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'termination-health
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'termination-health 'make-termination-health))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input termination-health))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input termination-health))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamp))
      (common-lisp:list
       (common-lisp:cons "Timestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "Source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input termination-health))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition throttled-client-exception
     (chime-sdk-voice-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'throttled-client-exception)))
(common-lisp:deftype toll-free-prefix () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition unauthorized-client-exception
     (chime-sdk-voice-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'unauthorized-client-exception)))
(common-lisp:progn
 (common-lisp:define-condition unprocessable-entity-exception
     (chime-sdk-voice-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'unprocessable-entity-exception)))
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-untag-resource-request-resource-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tag-keys :initarg :tag-keys :initform
                         (common-lisp:error ":tag-keys is required") :type
                         (common-lisp:or tag-key-list common-lisp:null)
                         :accessor struct-shape-untag-resource-request-tag-keys
                         :shape "TagKeyList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "TagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-global-settings-request common-lisp:nil
                       ((voice-connector :initarg :voice-connector :initform
                         common-lisp:nil :type
                         (common-lisp:or voice-connector-settings
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-global-settings-request-voice-connector
                         :shape "VoiceConnectorSettings" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-global-settings-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-global-settings-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-global-settings-request
                    'make-update-global-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-global-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-global-settings-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-connector))
      (common-lisp:list
       (common-lisp:cons "VoiceConnector"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-global-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-phone-number-request common-lisp:nil
                       ((phone-number-id :initarg :phone-number-id :initform
                         (common-lisp:error ":phone-number-id is required")
                         :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-phone-number-request-phone-number-id
                         :shape "SensitiveNonEmptyString" :location "uri"
                         :location-name "phoneNumberId")
                        (product-type :initarg :product-type :initform
                         common-lisp:nil :type
                         (common-lisp:or phone-number-product-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-phone-number-request-product-type
                         :shape "PhoneNumberProductType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (calling-name :initarg :calling-name :initform
                         common-lisp:nil :type
                         (common-lisp:or calling-name common-lisp:null)
                         :accessor
                         struct-shape-update-phone-number-request-calling-name
                         :shape "CallingName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or phone-number-name common-lisp:null)
                         :accessor
                         struct-shape-update-phone-number-request-name :shape
                         "PhoneNumberName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-phone-number-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-phone-number-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-phone-number-request
                    'make-update-phone-number-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-phone-number-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-phone-number-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'product-type))
      (common-lisp:list
       (common-lisp:cons "ProductType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'calling-name))
      (common-lisp:list
       (common-lisp:cons "CallingName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-phone-number-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-phone-number-request-item common-lisp:nil
                       ((phone-number-id :initarg :phone-number-id :initform
                         (common-lisp:error ":phone-number-id is required")
                         :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-phone-number-request-item-phone-number-id
                         :shape "SensitiveNonEmptyString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (product-type :initarg :product-type :initform
                         common-lisp:nil :type
                         (common-lisp:or phone-number-product-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-phone-number-request-item-product-type
                         :shape "PhoneNumberProductType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (calling-name :initarg :calling-name :initform
                         common-lisp:nil :type
                         (common-lisp:or calling-name common-lisp:null)
                         :accessor
                         struct-shape-update-phone-number-request-item-calling-name
                         :shape "CallingName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or phone-number-name common-lisp:null)
                         :accessor
                         struct-shape-update-phone-number-request-item-name
                         :shape "PhoneNumberName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-phone-number-request-item
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-phone-number-request-item
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-phone-number-request-item
                    'make-update-phone-number-request-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-phone-number-request-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-phone-number-request-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-id))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'product-type))
      (common-lisp:list
       (common-lisp:cons "ProductType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'calling-name))
      (common-lisp:list
       (common-lisp:cons "CallingName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-phone-number-request-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype update-phone-number-request-item-list ()
   '(trivial-types:proper-list update-phone-number-request-item))
 (common-lisp:defun make-update-phone-number-request-item-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            update-phone-number-request-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass update-phone-number-response common-lisp:nil
                       ((phone-number :initarg :phone-number :initform
                         common-lisp:nil :type
                         (common-lisp:or phone-number common-lisp:null)
                         :accessor
                         struct-shape-update-phone-number-response-phone-number
                         :shape "PhoneNumber" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-phone-number-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-phone-number-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-phone-number-response
                    'make-update-phone-number-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-phone-number-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-phone-number-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number))
      (common-lisp:list
       (common-lisp:cons "PhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-phone-number-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-phone-number-settings-request common-lisp:nil
                       ((calling-name :initarg :calling-name :initform
                         (common-lisp:error ":calling-name is required") :type
                         (common-lisp:or calling-name common-lisp:null)
                         :accessor
                         struct-shape-update-phone-number-settings-request-calling-name
                         :shape "CallingName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-phone-number-settings-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-phone-number-settings-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-phone-number-settings-request
                    'make-update-phone-number-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-phone-number-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-phone-number-settings-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'calling-name))
      (common-lisp:list
       (common-lisp:cons "CallingName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-phone-number-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-proxy-session-request common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string128 common-lisp:null)
                         :accessor
                         struct-shape-update-proxy-session-request-voice-connector-id
                         :shape "NonEmptyString128" :location "uri"
                         :location-name "voiceConnectorId")
                        (proxy-session-id :initarg :proxy-session-id :initform
                         (common-lisp:error ":proxy-session-id is required")
                         :type
                         (common-lisp:or non-empty-string128 common-lisp:null)
                         :accessor
                         struct-shape-update-proxy-session-request-proxy-session-id
                         :shape "NonEmptyString128" :location "uri"
                         :location-name "proxySessionId")
                        (capabilities :initarg :capabilities :initform
                         (common-lisp:error ":capabilities is required") :type
                         (common-lisp:or capability-list common-lisp:null)
                         :accessor
                         struct-shape-update-proxy-session-request-capabilities
                         :shape "CapabilityList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (expiry-minutes :initarg :expiry-minutes :initform
                         common-lisp:nil :type
                         (common-lisp:or positive-integer common-lisp:null)
                         :accessor
                         struct-shape-update-proxy-session-request-expiry-minutes
                         :shape "PositiveInteger" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-proxy-session-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-proxy-session-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-proxy-session-request
                    'make-update-proxy-session-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-proxy-session-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-proxy-session-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'capabilities))
      (common-lisp:list
       (common-lisp:cons "Capabilities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiry-minutes))
      (common-lisp:list
       (common-lisp:cons "ExpiryMinutes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-proxy-session-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-proxy-session-response common-lisp:nil
                       ((proxy-session :initarg :proxy-session :initform
                         common-lisp:nil :type
                         (common-lisp:or proxy-session common-lisp:null)
                         :accessor
                         struct-shape-update-proxy-session-response-proxy-session
                         :shape "ProxySession" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-proxy-session-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-proxy-session-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-proxy-session-response
                    'make-update-proxy-session-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-proxy-session-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-proxy-session-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proxy-session))
      (common-lisp:list
       (common-lisp:cons "ProxySession"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-proxy-session-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-sip-media-application-call-request
                       common-lisp:nil
                       ((sip-media-application-id :initarg
                         :sip-media-application-id :initform
                         (common-lisp:error
                          ":sip-media-application-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-update-sip-media-application-call-request-sip-media-application-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "sipMediaApplicationId")
                        (transaction-id :initarg :transaction-id :initform
                         (common-lisp:error ":transaction-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-update-sip-media-application-call-request-transaction-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "transactionId")
                        (arguments :initarg :arguments :initform
                         (common-lisp:error ":arguments is required") :type
                         (common-lisp:or smaupdate-call-arguments-map
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-sip-media-application-call-request-arguments
                         :shape "SMAUpdateCallArgumentsMap" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-sip-media-application-call-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-sip-media-application-call-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-sip-media-application-call-request
                    'make-update-sip-media-application-call-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-media-application-call-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-media-application-call-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arguments))
      (common-lisp:list
       (common-lisp:cons "Arguments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-media-application-call-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-sip-media-application-call-response
                       common-lisp:nil
                       ((sip-media-application-call :initarg
                         :sip-media-application-call :initform common-lisp:nil
                         :type
                         (common-lisp:or sip-media-application-call
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-sip-media-application-call-response-sip-media-application-call
                         :shape "SipMediaApplicationCall" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-sip-media-application-call-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-sip-media-application-call-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-sip-media-application-call-response
                    'make-update-sip-media-application-call-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-media-application-call-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-media-application-call-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application-call))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplicationCall"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-media-application-call-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-sip-media-application-request common-lisp:nil
                       ((sip-media-application-id :initarg
                         :sip-media-application-id :initform
                         (common-lisp:error
                          ":sip-media-application-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-update-sip-media-application-request-sip-media-application-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "sipMediaApplicationId")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or sip-media-application-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-sip-media-application-request-name
                         :shape "SipMediaApplicationName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (endpoints :initarg :endpoints :initform
                         common-lisp:nil :type
                         (common-lisp:or sip-media-application-endpoint-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-sip-media-application-request-endpoints
                         :shape "SipMediaApplicationEndpointList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-sip-media-application-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-sip-media-application-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-sip-media-application-request
                    'make-update-sip-media-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-media-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-media-application-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoints))
      (common-lisp:list
       (common-lisp:cons "Endpoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-media-application-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-sip-media-application-response common-lisp:nil
                       ((sip-media-application :initarg :sip-media-application
                         :initform common-lisp:nil :type
                         (common-lisp:or sip-media-application
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-sip-media-application-response-sip-media-application
                         :shape "SipMediaApplication" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-sip-media-application-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-sip-media-application-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-sip-media-application-response
                    'make-update-sip-media-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-media-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-media-application-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplication"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-media-application-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-sip-rule-request common-lisp:nil
                       ((sip-rule-id :initarg :sip-rule-id :initform
                         (common-lisp:error ":sip-rule-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-update-sip-rule-request-sip-rule-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "sipRuleId")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or sip-rule-name common-lisp:null)
                         :accessor struct-shape-update-sip-rule-request-name
                         :shape "SipRuleName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (disabled :initarg :disabled :initform common-lisp:nil
                         :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor
                         struct-shape-update-sip-rule-request-disabled :shape
                         "NullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (target-applications :initarg :target-applications
                         :initform common-lisp:nil :type
                         (common-lisp:or sip-rule-target-application-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-sip-rule-request-target-applications
                         :shape "SipRuleTargetApplicationList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-sip-rule-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-sip-rule-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-sip-rule-request 'make-update-sip-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-rule-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disabled))
      (common-lisp:list
       (common-lisp:cons "Disabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-applications))
      (common-lisp:list
       (common-lisp:cons "TargetApplications"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-rule-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-sip-rule-response common-lisp:nil
                       ((sip-rule :initarg :sip-rule :initform common-lisp:nil
                         :type (common-lisp:or sip-rule common-lisp:null)
                         :accessor
                         struct-shape-update-sip-rule-response-sip-rule :shape
                         "SipRule" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-sip-rule-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-sip-rule-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-sip-rule-response 'make-update-sip-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-rule-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-rule-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sip-rule))
      (common-lisp:list
       (common-lisp:cons "SipRule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-rule-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-voice-connector-group-request common-lisp:nil
                       ((voice-connector-group-id :initarg
                         :voice-connector-group-id :initform
                         (common-lisp:error
                          ":voice-connector-group-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-update-voice-connector-group-request-voice-connector-group-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorGroupId")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or voice-connector-group-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-voice-connector-group-request-name
                         :shape "VoiceConnectorGroupName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (voice-connector-items :initarg :voice-connector-items
                         :initform
                         (common-lisp:error
                          ":voice-connector-items is required")
                         :type
                         (common-lisp:or voice-connector-item-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-voice-connector-group-request-voice-connector-items
                         :shape "VoiceConnectorItemList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-voice-connector-group-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-voice-connector-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-voice-connector-group-request
                    'make-update-voice-connector-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-connector-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-connector-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-connector-items))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorItems"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-connector-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-voice-connector-group-response common-lisp:nil
                       ((voice-connector-group :initarg :voice-connector-group
                         :initform common-lisp:nil :type
                         (common-lisp:or voice-connector-group
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-voice-connector-group-response-voice-connector-group
                         :shape "VoiceConnectorGroup" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-voice-connector-group-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-voice-connector-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-voice-connector-group-response
                    'make-update-voice-connector-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-connector-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-connector-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-connector-group))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-connector-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-voice-connector-request common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-update-voice-connector-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or voice-connector-name common-lisp:null)
                         :accessor
                         struct-shape-update-voice-connector-request-name
                         :shape "VoiceConnectorName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (require-encryption :initarg :require-encryption
                         :initform
                         (common-lisp:error ":require-encryption is required")
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         struct-shape-update-voice-connector-request-require-encryption
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-voice-connector-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-voice-connector-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-voice-connector-request
                    'make-update-voice-connector-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-connector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-connector-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'require-encryption))
      (common-lisp:list
       (common-lisp:cons "RequireEncryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-connector-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-voice-connector-response common-lisp:nil
                       ((voice-connector :initarg :voice-connector :initform
                         common-lisp:nil :type
                         (common-lisp:or voice-connector common-lisp:null)
                         :accessor
                         struct-shape-update-voice-connector-response-voice-connector
                         :shape "VoiceConnector" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-voice-connector-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-voice-connector-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-voice-connector-response
                    'make-update-voice-connector-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-connector-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-connector-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-connector))
      (common-lisp:list
       (common-lisp:cons "VoiceConnector"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-connector-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-voice-profile-domain-request common-lisp:nil
                       ((voice-profile-domain-id :initarg
                         :voice-profile-domain-id :initform
                         (common-lisp:error
                          ":voice-profile-domain-id is required")
                         :type
                         (common-lisp:or non-empty-string256 common-lisp:null)
                         :accessor
                         struct-shape-update-voice-profile-domain-request-voice-profile-domain-id
                         :shape "NonEmptyString256" :location "uri"
                         :location-name "VoiceProfileDomainId")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or voice-profile-domain-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-voice-profile-domain-request-name
                         :shape "VoiceProfileDomainName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or voice-profile-domain-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-voice-profile-domain-request-description
                         :shape "VoiceProfileDomainDescription" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-voice-profile-domain-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-voice-profile-domain-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-voice-profile-domain-request
                    'make-update-voice-profile-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-profile-domain-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-profile-domain-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-profile-domain-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-voice-profile-domain-response common-lisp:nil
                       ((voice-profile-domain :initarg :voice-profile-domain
                         :initform common-lisp:nil :type
                         (common-lisp:or voice-profile-domain common-lisp:null)
                         :accessor
                         struct-shape-update-voice-profile-domain-response-voice-profile-domain
                         :shape "VoiceProfileDomain" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-voice-profile-domain-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-voice-profile-domain-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-voice-profile-domain-response
                    'make-update-voice-profile-domain-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-profile-domain-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-profile-domain-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-profile-domain))
      (common-lisp:list
       (common-lisp:cons "VoiceProfileDomain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-profile-domain-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-voice-profile-request common-lisp:nil
                       ((voice-profile-id :initarg :voice-profile-id :initform
                         (common-lisp:error ":voice-profile-id is required")
                         :type
                         (common-lisp:or non-empty-string256 common-lisp:null)
                         :accessor
                         struct-shape-update-voice-profile-request-voice-profile-id
                         :shape "NonEmptyString256" :location "uri"
                         :location-name "VoiceProfileId")
                        (speaker-search-task-id :initarg
                         :speaker-search-task-id :initform
                         (common-lisp:error
                          ":speaker-search-task-id is required")
                         :type
                         (common-lisp:or non-empty-string256 common-lisp:null)
                         :accessor
                         struct-shape-update-voice-profile-request-speaker-search-task-id
                         :shape "NonEmptyString256" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-voice-profile-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-voice-profile-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-voice-profile-request
                    'make-update-voice-profile-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-profile-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-profile-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'speaker-search-task-id))
      (common-lisp:list
       (common-lisp:cons "SpeakerSearchTaskId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-profile-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-voice-profile-response common-lisp:nil
                       ((voice-profile :initarg :voice-profile :initform
                         common-lisp:nil :type
                         (common-lisp:or voice-profile common-lisp:null)
                         :accessor
                         struct-shape-update-voice-profile-response-voice-profile
                         :shape "VoiceProfile" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-voice-profile-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-voice-profile-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-voice-profile-response
                    'make-update-voice-profile-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-profile-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-profile-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-profile))
      (common-lisp:list
       (common-lisp:cons "VoiceProfile"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-profile-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass validate-e911address-request common-lisp:nil
                       ((aws-account-id :initarg :aws-account-id :initform
                         (common-lisp:error ":aws-account-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-validate-e911address-request-aws-account-id
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (street-number :initarg :street-number :initform
                         (common-lisp:error ":street-number is required") :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-validate-e911address-request-street-number
                         :shape "SensitiveNonEmptyString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (street-info :initarg :street-info :initform
                         (common-lisp:error ":street-info is required") :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-validate-e911address-request-street-info
                         :shape "SensitiveNonEmptyString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (city :initarg :city :initform
                         (common-lisp:error ":city is required") :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-validate-e911address-request-city :shape
                         "SensitiveNonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform
                         (common-lisp:error ":state is required") :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-validate-e911address-request-state :shape
                         "SensitiveNonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (country :initarg :country :initform
                         (common-lisp:error ":country is required") :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-validate-e911address-request-country
                         :shape "SensitiveNonEmptyString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (postal-code :initarg :postal-code :initform
                         (common-lisp:error ":postal-code is required") :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-validate-e911address-request-postal-code
                         :shape "SensitiveNonEmptyString" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-validate-e911address-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'validate-e911address-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'validate-e911address-request
                    'make-validate-e911address-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          validate-e911address-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          validate-e911address-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-account-id))
      (common-lisp:list
       (common-lisp:cons "AwsAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'street-number))
      (common-lisp:list
       (common-lisp:cons "StreetNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'street-info))
      (common-lisp:list
       (common-lisp:cons "StreetInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'city))
      (common-lisp:list
       (common-lisp:cons "City"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'country))
      (common-lisp:list
       (common-lisp:cons "Country"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'postal-code))
      (common-lisp:list
       (common-lisp:cons "PostalCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          validate-e911address-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass validate-e911address-response common-lisp:nil
                       ((validation-result :initarg :validation-result
                         :initform common-lisp:nil :type
                         (common-lisp:or validation-result common-lisp:null)
                         :accessor
                         struct-shape-validate-e911address-response-validation-result
                         :shape "ValidationResult" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (address-external-id :initarg :address-external-id
                         :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-validate-e911address-response-address-external-id
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (address :initarg :address :initform common-lisp:nil
                         :type (common-lisp:or address common-lisp:null)
                         :accessor
                         struct-shape-validate-e911address-response-address
                         :shape "Address" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (candidate-address-list :initarg
                         :candidate-address-list :initform common-lisp:nil
                         :type
                         (common-lisp:or candidate-address-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-validate-e911address-response-candidate-address-list
                         :shape "CandidateAddressList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-validate-e911address-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'validate-e911address-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'validate-e911address-response
                    'make-validate-e911address-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          validate-e911address-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          validate-e911address-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'validation-result))
      (common-lisp:list
       (common-lisp:cons "ValidationResult"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'address-external-id))
      (common-lisp:list
       (common-lisp:cons "AddressExternalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'address))
      (common-lisp:list
       (common-lisp:cons "Address"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'candidate-address-list))
      (common-lisp:list
       (common-lisp:cons "CandidateAddressList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          validate-e911address-response))
   common-lisp:nil))
(common-lisp:deftype validation-result () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass voice-connector common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-voice-connector-voice-connector-id :shape
                         "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (aws-region :initarg :aws-region :initform
                         common-lisp:nil :type
                         (common-lisp:or voice-connector-aws-region
                                         common-lisp:null)
                         :accessor struct-shape-voice-connector-aws-region
                         :shape "VoiceConnectorAwsRegion" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or voice-connector-name common-lisp:null)
                         :accessor struct-shape-voice-connector-name :shape
                         "VoiceConnectorName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (outbound-host-name :initarg :outbound-host-name
                         :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-voice-connector-outbound-host-name :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (require-encryption :initarg :require-encryption
                         :initform common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-voice-connector-require-encryption :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-voice-connector-created-timestamp :shape
                         "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-timestamp :initarg :updated-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-voice-connector-updated-timestamp :shape
                         "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (voice-connector-arn :initarg :voice-connector-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-voice-connector-voice-connector-arn
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-voice-connector
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'voice-connector
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'voice-connector 'make-voice-connector))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input voice-connector))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input voice-connector))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-connector-id))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-region))
      (common-lisp:list
       (common-lisp:cons "AwsRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outbound-host-name))
      (common-lisp:list
       (common-lisp:cons "OutboundHostName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'require-encryption))
      (common-lisp:list
       (common-lisp:cons "RequireEncryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-connector-arn))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input voice-connector))
   common-lisp:nil))
(common-lisp:deftype voice-connector-aws-region () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype voice-connector-aws-region-list ()
   '(trivial-types:proper-list voice-connector-aws-region))
 (common-lisp:defun make-voice-connector-aws-region-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            voice-connector-aws-region))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass voice-connector-group common-lisp:nil
                       ((voice-connector-group-id :initarg
                         :voice-connector-group-id :initform common-lisp:nil
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-voice-connector-group-voice-connector-group-id
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or voice-connector-group-name
                                         common-lisp:null)
                         :accessor struct-shape-voice-connector-group-name
                         :shape "VoiceConnectorGroupName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (voice-connector-items :initarg :voice-connector-items
                         :initform common-lisp:nil :type
                         (common-lisp:or voice-connector-item-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-voice-connector-group-voice-connector-items
                         :shape "VoiceConnectorItemList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-voice-connector-group-created-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-timestamp :initarg :updated-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-voice-connector-group-updated-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (voice-connector-group-arn :initarg
                         :voice-connector-group-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-voice-connector-group-voice-connector-group-arn
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-voice-connector-group
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'voice-connector-group
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'voice-connector-group 'make-voice-connector-group))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          voice-connector-group))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          voice-connector-group))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-connector-group-id))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-connector-items))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorItems"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-connector-group-arn))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          voice-connector-group))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype voice-connector-group-list ()
   '(trivial-types:proper-list voice-connector-group))
 (common-lisp:defun make-voice-connector-group-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list voice-connector-group))
   aws-sdk/generator/shape::members))
(common-lisp:deftype voice-connector-group-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass voice-connector-item common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-voice-connector-item-voice-connector-id
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (priority :initarg :priority :initform
                         (common-lisp:error ":priority is required") :type
                         (common-lisp:or voice-connector-item-priority
                                         common-lisp:null)
                         :accessor struct-shape-voice-connector-item-priority
                         :shape "VoiceConnectorItemPriority" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-voice-connector-item
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'voice-connector-item
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'voice-connector-item 'make-voice-connector-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input voice-connector-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input voice-connector-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-connector-id))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'priority))
      (common-lisp:list
       (common-lisp:cons "Priority"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input voice-connector-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype voice-connector-item-list ()
   '(trivial-types:proper-list voice-connector-item))
 (common-lisp:defun make-voice-connector-item-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list voice-connector-item))
   aws-sdk/generator/shape::members))
(common-lisp:deftype voice-connector-item-priority () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype voice-connector-list ()
   '(trivial-types:proper-list voice-connector))
 (common-lisp:defun make-voice-connector-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list voice-connector))
   aws-sdk/generator/shape::members))
(common-lisp:deftype voice-connector-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass voice-connector-settings common-lisp:nil
                       ((cdr-bucket :initarg :cdr-bucket :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-voice-connector-settings-cdr-bucket
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-voice-connector-settings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'voice-connector-settings
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'voice-connector-settings 'make-voice-connector-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          voice-connector-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          voice-connector-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cdr-bucket))
      (common-lisp:list
       (common-lisp:cons "CdrBucket"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          voice-connector-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass voice-profile common-lisp:nil
                       ((voice-profile-id :initarg :voice-profile-id :initform
                         common-lisp:nil :type
                         (common-lisp:or non-empty-string256 common-lisp:null)
                         :accessor struct-shape-voice-profile-voice-profile-id
                         :shape "NonEmptyString256" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (voice-profile-arn :initarg :voice-profile-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-voice-profile-voice-profile-arn :shape
                         "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (voice-profile-domain-id :initarg
                         :voice-profile-domain-id :initform common-lisp:nil
                         :type
                         (common-lisp:or non-empty-string256 common-lisp:null)
                         :accessor
                         struct-shape-voice-profile-voice-profile-domain-id
                         :shape "NonEmptyString256" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-voice-profile-created-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-timestamp :initarg :updated-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-voice-profile-updated-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (expiration-timestamp :initarg :expiration-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-voice-profile-expiration-timestamp :shape
                         "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-voice-profile
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'voice-profile
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'voice-profile 'make-voice-profile))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input voice-profile))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input voice-profile))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-profile-id))
      (common-lisp:list
       (common-lisp:cons "VoiceProfileId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-profile-arn))
      (common-lisp:list
       (common-lisp:cons "VoiceProfileArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-profile-domain-id))
      (common-lisp:list
       (common-lisp:cons "VoiceProfileDomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'expiration-timestamp))
      (common-lisp:list
       (common-lisp:cons "ExpirationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input voice-profile))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass voice-profile-domain common-lisp:nil
                       ((voice-profile-domain-id :initarg
                         :voice-profile-domain-id :initform common-lisp:nil
                         :type
                         (common-lisp:or non-empty-string256 common-lisp:null)
                         :accessor
                         struct-shape-voice-profile-domain-voice-profile-domain-id
                         :shape "NonEmptyString256" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (voice-profile-domain-arn :initarg
                         :voice-profile-domain-arn :initform common-lisp:nil
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-voice-profile-domain-voice-profile-domain-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or voice-profile-domain-name
                                         common-lisp:null)
                         :accessor struct-shape-voice-profile-domain-name
                         :shape "VoiceProfileDomainName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or voice-profile-domain-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-voice-profile-domain-description :shape
                         "VoiceProfileDomainDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (server-side-encryption-configuration :initarg
                         :server-side-encryption-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or server-side-encryption-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-voice-profile-domain-server-side-encryption-configuration
                         :shape "ServerSideEncryptionConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-voice-profile-domain-created-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-timestamp :initarg :updated-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-voice-profile-domain-updated-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-voice-profile-domain
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'voice-profile-domain
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'voice-profile-domain 'make-voice-profile-domain))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input voice-profile-domain))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input voice-profile-domain))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-profile-domain-id))
      (common-lisp:list
       (common-lisp:cons "VoiceProfileDomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-profile-domain-arn))
      (common-lisp:list
       (common-lisp:cons "VoiceProfileDomainArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'server-side-encryption-configuration))
      (common-lisp:list
       (common-lisp:cons "ServerSideEncryptionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input voice-profile-domain))
   common-lisp:nil))
(common-lisp:deftype voice-profile-domain-description () 'common-lisp:string)
(common-lisp:deftype voice-profile-domain-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass voice-profile-domain-summary common-lisp:nil
                       ((voice-profile-domain-id :initarg
                         :voice-profile-domain-id :initform common-lisp:nil
                         :type
                         (common-lisp:or non-empty-string256 common-lisp:null)
                         :accessor
                         struct-shape-voice-profile-domain-summary-voice-profile-domain-id
                         :shape "NonEmptyString256" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (voice-profile-domain-arn :initarg
                         :voice-profile-domain-arn :initform common-lisp:nil
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-voice-profile-domain-summary-voice-profile-domain-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or voice-profile-domain-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-voice-profile-domain-summary-name :shape
                         "VoiceProfileDomainName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or voice-profile-domain-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-voice-profile-domain-summary-description
                         :shape "VoiceProfileDomainDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-voice-profile-domain-summary-created-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-timestamp :initarg :updated-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-voice-profile-domain-summary-updated-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-voice-profile-domain-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'voice-profile-domain-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'voice-profile-domain-summary
                    'make-voice-profile-domain-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          voice-profile-domain-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          voice-profile-domain-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-profile-domain-id))
      (common-lisp:list
       (common-lisp:cons "VoiceProfileDomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-profile-domain-arn))
      (common-lisp:list
       (common-lisp:cons "VoiceProfileDomainArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          voice-profile-domain-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype voice-profile-domain-summary-list ()
   '(trivial-types:proper-list voice-profile-domain-summary))
 (common-lisp:defun make-voice-profile-domain-summary-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            voice-profile-domain-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass voice-profile-summary common-lisp:nil
                       ((voice-profile-id :initarg :voice-profile-id :initform
                         common-lisp:nil :type
                         (common-lisp:or non-empty-string256 common-lisp:null)
                         :accessor
                         struct-shape-voice-profile-summary-voice-profile-id
                         :shape "NonEmptyString256" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (voice-profile-arn :initarg :voice-profile-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-voice-profile-summary-voice-profile-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (voice-profile-domain-id :initarg
                         :voice-profile-domain-id :initform common-lisp:nil
                         :type
                         (common-lisp:or non-empty-string256 common-lisp:null)
                         :accessor
                         struct-shape-voice-profile-summary-voice-profile-domain-id
                         :shape "NonEmptyString256" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-voice-profile-summary-created-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-timestamp :initarg :updated-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-voice-profile-summary-updated-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (expiration-timestamp :initarg :expiration-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-voice-profile-summary-expiration-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-voice-profile-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'voice-profile-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'voice-profile-summary 'make-voice-profile-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          voice-profile-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          voice-profile-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-profile-id))
      (common-lisp:list
       (common-lisp:cons "VoiceProfileId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-profile-arn))
      (common-lisp:list
       (common-lisp:cons "VoiceProfileArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-profile-domain-id))
      (common-lisp:list
       (common-lisp:cons "VoiceProfileDomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'expiration-timestamp))
      (common-lisp:list
       (common-lisp:cons "ExpirationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          voice-profile-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype voice-profile-summary-list ()
   '(trivial-types:proper-list voice-profile-summary))
 (common-lisp:defun make-voice-profile-summary-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list voice-profile-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass voice-tone-analysis-task common-lisp:nil
                       ((voice-tone-analysis-task-id :initarg
                         :voice-tone-analysis-task-id :initform common-lisp:nil
                         :type
                         (common-lisp:or non-empty-string256 common-lisp:null)
                         :accessor
                         struct-shape-voice-tone-analysis-task-voice-tone-analysis-task-id
                         :shape "NonEmptyString256" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (voice-tone-analysis-task-status :initarg
                         :voice-tone-analysis-task-status :initform
                         common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-voice-tone-analysis-task-voice-tone-analysis-task-status
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (call-details :initarg :call-details :initform
                         common-lisp:nil :type
                         (common-lisp:or call-details common-lisp:null)
                         :accessor
                         struct-shape-voice-tone-analysis-task-call-details
                         :shape "CallDetails" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-voice-tone-analysis-task-created-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-timestamp :initarg :updated-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-voice-tone-analysis-task-updated-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (started-timestamp :initarg :started-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-voice-tone-analysis-task-started-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status-message :initarg :status-message :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-voice-tone-analysis-task-status-message
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-voice-tone-analysis-task
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'voice-tone-analysis-task
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'voice-tone-analysis-task 'make-voice-tone-analysis-task))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          voice-tone-analysis-task))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          voice-tone-analysis-task))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-tone-analysis-task-id))
      (common-lisp:list
       (common-lisp:cons "VoiceToneAnalysisTaskId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-tone-analysis-task-status))
      (common-lisp:list
       (common-lisp:cons "VoiceToneAnalysisTaskStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'call-details))
      (common-lisp:list
       (common-lisp:cons "CallDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'started-timestamp))
      (common-lisp:list
       (common-lisp:cons "StartedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "StatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          voice-tone-analysis-task))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defun associate-phone-numbers-with-voice-connector
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id e164phone-numbers
                     force-associate)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id e164phone-numbers
     force-associate))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-associate-phone-numbers-with-voice-connector-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A?operation=associate-phone-numbers"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "AssociatePhoneNumbersWithVoiceConnector"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'associate-phone-numbers-with-voice-connector))
(common-lisp:progn
 (common-lisp:defun associate-phone-numbers-with-voice-connector-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-group-id
                     e164phone-numbers force-associate)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-group-id e164phone-numbers
     force-associate))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-associate-phone-numbers-with-voice-connector-group-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connector-groups/~A?operation=associate-phone-numbers"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-group-id))))
        "AssociatePhoneNumbersWithVoiceConnectorGroup"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'associate-phone-numbers-with-voice-connector-group))
(common-lisp:progn
 (common-lisp:defun batch-delete-phone-number
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key phone-number-ids)
   (common-lisp:declare (common-lisp:ignorable phone-number-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-batch-delete-phone-number-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        "/phone-numbers?operation=batch-delete" "BatchDeletePhoneNumber"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'batch-delete-phone-number))
(common-lisp:progn
 (common-lisp:defun batch-update-phone-number
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key update-phone-number-request-items)
   (common-lisp:declare
    (common-lisp:ignorable update-phone-number-request-items))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-batch-update-phone-number-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        "/phone-numbers?operation=batch-update" "BatchUpdatePhoneNumber"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'batch-update-phone-number))
(common-lisp:progn
 (common-lisp:defun create-phone-number-order
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key product-type e164phone-numbers name)
   (common-lisp:declare
    (common-lisp:ignorable product-type e164phone-numbers name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-phone-number-order-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        "/phone-number-orders" "CreatePhoneNumberOrder"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-phone-number-order))
(common-lisp:progn
 (common-lisp:defun create-proxy-session
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id
                     participant-phone-numbers name expiry-minutes capabilities
                     number-selection-behavior geo-match-level
                     geo-match-params)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id participant-phone-numbers name
     expiry-minutes capabilities number-selection-behavior geo-match-level
     geo-match-params))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-proxy-session-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/proxy-sessions"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "CreateProxySession"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-proxy-session))
(common-lisp:progn
 (common-lisp:defun create-sip-media-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key aws-region name endpoints tags)
   (common-lisp:declare (common-lisp:ignorable aws-region name endpoints tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-sip-media-application-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        "/sip-media-applications" "CreateSipMediaApplication"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-sip-media-application))
(common-lisp:progn
 (common-lisp:defun create-sip-media-application-call
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key from-phone-number to-phone-number
                     sip-media-application-id sip-headers arguments-map)
   (common-lisp:declare
    (common-lisp:ignorable from-phone-number to-phone-number
     sip-media-application-id sip-headers arguments-map))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-sip-media-application-call-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/sip-media-applications/~A/calls"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'sip-media-application-id))))
        "CreateSipMediaApplicationCall"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-sip-media-application-call))
(common-lisp:progn
 (common-lisp:defun create-sip-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name trigger-type trigger-value disabled
                     target-applications)
   (common-lisp:declare
    (common-lisp:ignorable name trigger-type trigger-value disabled
     target-applications))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-sip-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        "/sip-rules" "CreateSipRule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-sip-rule))
(common-lisp:progn
 (common-lisp:defun create-voice-connector
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name aws-region require-encryption tags)
   (common-lisp:declare
    (common-lisp:ignorable name aws-region require-encryption tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-voice-connector-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        "/voice-connectors" "CreateVoiceConnector"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-voice-connector))
(common-lisp:progn
 (common-lisp:defun create-voice-connector-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name voice-connector-items)
   (common-lisp:declare (common-lisp:ignorable name voice-connector-items))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-voice-connector-group-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        "/voice-connector-groups" "CreateVoiceConnectorGroup"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-voice-connector-group))
(common-lisp:progn
 (common-lisp:defun create-voice-profile
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key speaker-search-task-id)
   (common-lisp:declare (common-lisp:ignorable speaker-search-task-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-voice-profile-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        "/voice-profiles" "CreateVoiceProfile"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-voice-profile))
(common-lisp:progn
 (common-lisp:defun create-voice-profile-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description
                     server-side-encryption-configuration client-request-token
                     tags)
   (common-lisp:declare
    (common-lisp:ignorable name description
     server-side-encryption-configuration client-request-token tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-voice-profile-domain-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        "/voice-profile-domains" "CreateVoiceProfileDomain"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-voice-profile-domain))
(common-lisp:progn
 (common-lisp:defun delete-phone-number
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key phone-number-id)
   (common-lisp:declare (common-lisp:ignorable phone-number-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-phone-number-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/phone-numbers/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'phone-number-id))))
        "DeletePhoneNumber"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-phone-number))
(common-lisp:progn
 (common-lisp:defun delete-proxy-session
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id proxy-session-id)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id proxy-session-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-proxy-session-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/proxy-sessions/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'proxy-session-id))))
        "DeleteProxySession"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-proxy-session))
(common-lisp:progn
 (common-lisp:defun delete-sip-media-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sip-media-application-id)
   (common-lisp:declare (common-lisp:ignorable sip-media-application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-sip-media-application-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/sip-media-applications/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'sip-media-application-id))))
        "DeleteSipMediaApplication"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-sip-media-application))
(common-lisp:progn
 (common-lisp:defun delete-sip-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sip-rule-id)
   (common-lisp:declare (common-lisp:ignorable sip-rule-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-sip-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/sip-rules/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'sip-rule-id))))
        "DeleteSipRule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-sip-rule))
(common-lisp:progn
 (common-lisp:defun delete-voice-connector
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-voice-connector-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/voice-connectors/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "DeleteVoiceConnector"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-voice-connector))
(common-lisp:progn
 (common-lisp:defun delete-voice-connector-emergency-calling-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-voice-connector-emergency-calling-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/emergency-calling-configuration"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "DeleteVoiceConnectorEmergencyCallingConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-voice-connector-emergency-calling-configuration))
(common-lisp:progn
 (common-lisp:defun delete-voice-connector-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-group-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-group-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-voice-connector-group-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/voice-connector-groups/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-group-id))))
        "DeleteVoiceConnectorGroup"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-voice-connector-group))
(common-lisp:progn
 (common-lisp:defun delete-voice-connector-origination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-voice-connector-origination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/origination"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "DeleteVoiceConnectorOrigination"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-voice-connector-origination))
(common-lisp:progn
 (common-lisp:defun delete-voice-connector-proxy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-voice-connector-proxy-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/programmable-numbers/proxy"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "DeleteVoiceConnectorProxy"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-voice-connector-proxy))
(common-lisp:progn
 (common-lisp:defun delete-voice-connector-streaming-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-voice-connector-streaming-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/streaming-configuration"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "DeleteVoiceConnectorStreamingConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-voice-connector-streaming-configuration))
(common-lisp:progn
 (common-lisp:defun delete-voice-connector-termination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-voice-connector-termination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/termination"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "DeleteVoiceConnectorTermination"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-voice-connector-termination))
(common-lisp:progn
 (common-lisp:defun delete-voice-connector-termination-credentials
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id usernames)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id usernames))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-voice-connector-termination-credentials-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/termination/credentials?operation=delete"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "DeleteVoiceConnectorTerminationCredentials"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-voice-connector-termination-credentials))
(common-lisp:progn
 (common-lisp:defun delete-voice-profile
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-profile-id)
   (common-lisp:declare (common-lisp:ignorable voice-profile-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-voice-profile-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/voice-profiles/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-profile-id))))
        "DeleteVoiceProfile"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-voice-profile))
(common-lisp:progn
 (common-lisp:defun delete-voice-profile-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-profile-domain-id)
   (common-lisp:declare (common-lisp:ignorable voice-profile-domain-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-voice-profile-domain-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/voice-profile-domains/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-profile-domain-id))))
        "DeleteVoiceProfileDomain"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-voice-profile-domain))
(common-lisp:progn
 (common-lisp:defun disassociate-phone-numbers-from-voice-connector
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id e164phone-numbers)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id e164phone-numbers))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disassociate-phone-numbers-from-voice-connector-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A?operation=disassociate-phone-numbers"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "DisassociatePhoneNumbersFromVoiceConnector"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'disassociate-phone-numbers-from-voice-connector))
(common-lisp:progn
 (common-lisp:defun disassociate-phone-numbers-from-voice-connector-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-group-id
                     e164phone-numbers)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-group-id e164phone-numbers))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disassociate-phone-numbers-from-voice-connector-group-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connector-groups/~A?operation=disassociate-phone-numbers"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-group-id))))
        "DisassociatePhoneNumbersFromVoiceConnectorGroup"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'disassociate-phone-numbers-from-voice-connector-group))
(common-lisp:progn
 (common-lisp:defun get-global-settings ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'chime-sdk-voice-request :method "GET" :path
                                "/settings" :operation "GetGlobalSettings"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-global-settings))
(common-lisp:progn
 (common-lisp:defun get-phone-number
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key phone-number-id)
   (common-lisp:declare (common-lisp:ignorable phone-number-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-phone-number-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/phone-numbers/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'phone-number-id))))
        "GetPhoneNumber"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-phone-number))
(common-lisp:progn
 (common-lisp:defun get-phone-number-order
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key phone-number-order-id)
   (common-lisp:declare (common-lisp:ignorable phone-number-order-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-phone-number-order-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/phone-number-orders/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'phone-number-order-id))))
        "GetPhoneNumberOrder"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-phone-number-order))
(common-lisp:progn
 (common-lisp:defun get-phone-number-settings ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'chime-sdk-voice-request :method "GET" :path
                                "/settings/phone-number" :operation
                                "GetPhoneNumberSettings"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-phone-number-settings))
(common-lisp:progn
 (common-lisp:defun get-proxy-session
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id proxy-session-id)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id proxy-session-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-proxy-session-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/proxy-sessions/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'proxy-session-id))))
        "GetProxySession"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-proxy-session))
(common-lisp:progn
 (common-lisp:defun get-sip-media-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sip-media-application-id)
   (common-lisp:declare (common-lisp:ignorable sip-media-application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-sip-media-application-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/sip-media-applications/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'sip-media-application-id))))
        "GetSipMediaApplication"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-sip-media-application))
(common-lisp:progn
 (common-lisp:defun get-sip-media-application-alexa-skill-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sip-media-application-id)
   (common-lisp:declare (common-lisp:ignorable sip-media-application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-sip-media-application-alexa-skill-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/sip-media-applications/~A/alexa-skill-configuration"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'sip-media-application-id))))
        "GetSipMediaApplicationAlexaSkillConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-sip-media-application-alexa-skill-configuration))
(common-lisp:progn
 (common-lisp:defun get-sip-media-application-logging-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sip-media-application-id)
   (common-lisp:declare (common-lisp:ignorable sip-media-application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-sip-media-application-logging-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/sip-media-applications/~A/logging-configuration"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'sip-media-application-id))))
        "GetSipMediaApplicationLoggingConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-sip-media-application-logging-configuration))
(common-lisp:progn
 (common-lisp:defun get-sip-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sip-rule-id)
   (common-lisp:declare (common-lisp:ignorable sip-rule-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-sip-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/sip-rules/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'sip-rule-id))))
        "GetSipRule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-sip-rule))
(common-lisp:progn
 (common-lisp:defun get-speaker-search-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id
                     speaker-search-task-id)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id speaker-search-task-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-speaker-search-task-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/speaker-search-tasks/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'speaker-search-task-id))))
        "GetSpeakerSearchTask"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-speaker-search-task))
(common-lisp:progn
 (common-lisp:defun get-voice-connector
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-voice-connector-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/voice-connectors/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "GetVoiceConnector"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-voice-connector))
(common-lisp:progn
 (common-lisp:defun get-voice-connector-emergency-calling-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-voice-connector-emergency-calling-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/emergency-calling-configuration"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "GetVoiceConnectorEmergencyCallingConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-voice-connector-emergency-calling-configuration))
(common-lisp:progn
 (common-lisp:defun get-voice-connector-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-group-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-group-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-voice-connector-group-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/voice-connector-groups/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-group-id))))
        "GetVoiceConnectorGroup"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-voice-connector-group))
(common-lisp:progn
 (common-lisp:defun get-voice-connector-logging-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-voice-connector-logging-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/logging-configuration"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "GetVoiceConnectorLoggingConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-voice-connector-logging-configuration))
(common-lisp:progn
 (common-lisp:defun get-voice-connector-origination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-voice-connector-origination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/origination"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "GetVoiceConnectorOrigination"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-voice-connector-origination))
(common-lisp:progn
 (common-lisp:defun get-voice-connector-proxy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-voice-connector-proxy-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/programmable-numbers/proxy"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "GetVoiceConnectorProxy"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-voice-connector-proxy))
(common-lisp:progn
 (common-lisp:defun get-voice-connector-streaming-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-voice-connector-streaming-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/streaming-configuration"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "GetVoiceConnectorStreamingConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-voice-connector-streaming-configuration))
(common-lisp:progn
 (common-lisp:defun get-voice-connector-termination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-voice-connector-termination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/termination"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "GetVoiceConnectorTermination"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-voice-connector-termination))
(common-lisp:progn
 (common-lisp:defun get-voice-connector-termination-health
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-voice-connector-termination-health-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/termination/health"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "GetVoiceConnectorTerminationHealth"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-voice-connector-termination-health))
(common-lisp:progn
 (common-lisp:defun get-voice-profile
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-profile-id)
   (common-lisp:declare (common-lisp:ignorable voice-profile-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-voice-profile-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/voice-profiles/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-profile-id))))
        "GetVoiceProfile"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-voice-profile))
(common-lisp:progn
 (common-lisp:defun get-voice-profile-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-profile-domain-id)
   (common-lisp:declare (common-lisp:ignorable voice-profile-domain-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-voice-profile-domain-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/voice-profile-domains/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-profile-domain-id))))
        "GetVoiceProfileDomain"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-voice-profile-domain))
(common-lisp:progn
 (common-lisp:defun get-voice-tone-analysis-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id
                     voice-tone-analysis-task-id is-caller)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id voice-tone-analysis-task-id
     is-caller))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-voice-tone-analysis-task-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/voice-tone-analysis-tasks/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-tone-analysis-task-id))))
        "GetVoiceToneAnalysisTask"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-voice-tone-analysis-task))
(common-lisp:progn
 (common-lisp:defun list-available-voice-connector-regions ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'chime-sdk-voice-request :method "GET" :path
                                "/voice-connector-regions" :operation
                                "ListAvailableVoiceConnectorRegions"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'list-available-voice-connector-regions))
(common-lisp:progn
 (common-lisp:defun list-phone-number-orders
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-phone-number-orders-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        "/phone-number-orders" "ListPhoneNumberOrders"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-phone-number-orders))
(common-lisp:progn
 (common-lisp:defun list-phone-numbers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key status product-type filter-name
                     filter-value max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable status product-type filter-name filter-value
     max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-phone-numbers-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        "/phone-numbers" "ListPhoneNumbers"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-phone-numbers))
(common-lisp:progn
 (common-lisp:defun list-proxy-sessions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id status next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id status next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-proxy-sessions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/proxy-sessions"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "ListProxySessions"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-proxy-sessions))
(common-lisp:progn
 (common-lisp:defun list-sip-media-applications
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-sip-media-applications-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        "/sip-media-applications" "ListSipMediaApplications"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-sip-media-applications))
(common-lisp:progn
 (common-lisp:defun list-sip-rules
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sip-media-application-id max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable sip-media-application-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-sip-rules-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        "/sip-rules" "ListSipRules"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-sip-rules))
(common-lisp:progn
 (common-lisp:defun list-supported-phone-number-countries
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key product-type)
   (common-lisp:declare (common-lisp:ignorable product-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-supported-phone-number-countries-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        "/phone-number-countries" "ListSupportedPhoneNumberCountries"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-supported-phone-number-countries))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        "/tags" "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun list-voice-connector-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-voice-connector-groups-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        "/voice-connector-groups" "ListVoiceConnectorGroups"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-voice-connector-groups))
(common-lisp:progn
 (common-lisp:defun list-voice-connector-termination-credentials
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-voice-connector-termination-credentials-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/termination/credentials"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "ListVoiceConnectorTerminationCredentials"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-voice-connector-termination-credentials))
(common-lisp:progn
 (common-lisp:defun list-voice-connectors
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-voice-connectors-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        "/voice-connectors" "ListVoiceConnectors"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-voice-connectors))
(common-lisp:progn
 (common-lisp:defun list-voice-profile-domains
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-voice-profile-domains-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        "/voice-profile-domains" "ListVoiceProfileDomains"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-voice-profile-domains))
(common-lisp:progn
 (common-lisp:defun list-voice-profiles
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-profile-domain-id next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable voice-profile-domain-id next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-voice-profiles-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        "/voice-profiles" "ListVoiceProfiles"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-voice-profiles))
(common-lisp:progn
 (common-lisp:defun put-sip-media-application-alexa-skill-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sip-media-application-id
                     sip-media-application-alexa-skill-configuration)
   (common-lisp:declare
    (common-lisp:ignorable sip-media-application-id
     sip-media-application-alexa-skill-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-sip-media-application-alexa-skill-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/sip-media-applications/~A/alexa-skill-configuration"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'sip-media-application-id))))
        "PutSipMediaApplicationAlexaSkillConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-sip-media-application-alexa-skill-configuration))
(common-lisp:progn
 (common-lisp:defun put-sip-media-application-logging-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sip-media-application-id
                     sip-media-application-logging-configuration)
   (common-lisp:declare
    (common-lisp:ignorable sip-media-application-id
     sip-media-application-logging-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-sip-media-application-logging-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/sip-media-applications/~A/logging-configuration"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'sip-media-application-id))))
        "PutSipMediaApplicationLoggingConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-sip-media-application-logging-configuration))
(common-lisp:progn
 (common-lisp:defun put-voice-connector-emergency-calling-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id
                     emergency-calling-configuration)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id emergency-calling-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-voice-connector-emergency-calling-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/emergency-calling-configuration"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "PutVoiceConnectorEmergencyCallingConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-voice-connector-emergency-calling-configuration))
(common-lisp:progn
 (common-lisp:defun put-voice-connector-logging-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id logging-configuration)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id logging-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-voice-connector-logging-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/logging-configuration"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "PutVoiceConnectorLoggingConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-voice-connector-logging-configuration))
(common-lisp:progn
 (common-lisp:defun put-voice-connector-origination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id origination)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id origination))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-voice-connector-origination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/origination"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "PutVoiceConnectorOrigination"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-voice-connector-origination))
(common-lisp:progn
 (common-lisp:defun put-voice-connector-proxy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id
                     default-session-expiry-minutes phone-number-pool-countries
                     fall-back-phone-number disabled)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id default-session-expiry-minutes
     phone-number-pool-countries fall-back-phone-number disabled))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-voice-connector-proxy-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/programmable-numbers/proxy"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "PutVoiceConnectorProxy"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-voice-connector-proxy))
(common-lisp:progn
 (common-lisp:defun put-voice-connector-streaming-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id
                     streaming-configuration)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id streaming-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-voice-connector-streaming-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/streaming-configuration"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "PutVoiceConnectorStreamingConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-voice-connector-streaming-configuration))
(common-lisp:progn
 (common-lisp:defun put-voice-connector-termination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id termination)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id termination))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-voice-connector-termination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/termination"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "PutVoiceConnectorTermination"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-voice-connector-termination))
(common-lisp:progn
 (common-lisp:defun put-voice-connector-termination-credentials
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id credentials)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id credentials))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-voice-connector-termination-credentials-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/termination/credentials?operation=put"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "PutVoiceConnectorTerminationCredentials"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-voice-connector-termination-credentials))
(common-lisp:progn
 (common-lisp:defun restore-phone-number
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key phone-number-id)
   (common-lisp:declare (common-lisp:ignorable phone-number-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-restore-phone-number-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/phone-numbers/~A?operation=restore"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'phone-number-id))))
        "RestorePhoneNumber"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'restore-phone-number))
(common-lisp:progn
 (common-lisp:defun search-available-phone-numbers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key area-code city country state
                     toll-free-prefix phone-number-type max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable area-code city country state toll-free-prefix
     phone-number-type max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-search-available-phone-numbers-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "GET"
        "/search?type=phone-numbers" "SearchAvailablePhoneNumbers"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'search-available-phone-numbers))
(common-lisp:progn
 (common-lisp:defun start-speaker-search-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id transaction-id
                     voice-profile-domain-id client-request-token call-leg)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id transaction-id
     voice-profile-domain-id client-request-token call-leg))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-speaker-search-task-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/speaker-search-tasks"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "StartSpeakerSearchTask"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'start-speaker-search-task))
(common-lisp:progn
 (common-lisp:defun start-voice-tone-analysis-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id transaction-id
                     language-code client-request-token)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id transaction-id language-code
     client-request-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-voice-tone-analysis-task-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/voice-tone-analysis-tasks"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "StartVoiceToneAnalysisTask"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'start-voice-tone-analysis-task))
(common-lisp:progn
 (common-lisp:defun stop-speaker-search-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id
                     speaker-search-task-id)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id speaker-search-task-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-speaker-search-task-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/speaker-search-tasks/~A?operation=stop"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'speaker-search-task-id))))
        "StopSpeakerSearchTask"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'stop-speaker-search-task))
(common-lisp:progn
 (common-lisp:defun stop-voice-tone-analysis-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id
                     voice-tone-analysis-task-id)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id voice-tone-analysis-task-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-stop-voice-tone-analysis-task-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/voice-tone-analysis-tasks/~A?operation=stop"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-tone-analysis-task-id))))
        "StopVoiceToneAnalysisTask"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'stop-voice-tone-analysis-task))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        "/tags?operation=tag-resource" "TagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        "/tags?operation=untag-resource" "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-global-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector)
   (common-lisp:declare (common-lisp:ignorable voice-connector))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-global-settings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "PUT"
        "/settings" "UpdateGlobalSettings"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-global-settings))
(common-lisp:progn
 (common-lisp:defun update-phone-number
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key phone-number-id product-type calling-name
                     name)
   (common-lisp:declare
    (common-lisp:ignorable phone-number-id product-type calling-name name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-phone-number-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/phone-numbers/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'phone-number-id))))
        "UpdatePhoneNumber"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-phone-number))
(common-lisp:progn
 (common-lisp:defun update-phone-number-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key calling-name)
   (common-lisp:declare (common-lisp:ignorable calling-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-phone-number-settings-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "PUT"
        "/settings/phone-number" "UpdatePhoneNumberSettings"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-phone-number-settings))
(common-lisp:progn
 (common-lisp:defun update-proxy-session
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id proxy-session-id
                     capabilities expiry-minutes)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id proxy-session-id capabilities
     expiry-minutes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-proxy-session-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/voice-connectors/~A/proxy-sessions/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'proxy-session-id))))
        "UpdateProxySession"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-proxy-session))
(common-lisp:progn
 (common-lisp:defun update-sip-media-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sip-media-application-id name endpoints)
   (common-lisp:declare
    (common-lisp:ignorable sip-media-application-id name endpoints))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-sip-media-application-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/sip-media-applications/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'sip-media-application-id))))
        "UpdateSipMediaApplication"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-sip-media-application))
(common-lisp:progn
 (common-lisp:defun update-sip-media-application-call
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sip-media-application-id transaction-id
                     arguments)
   (common-lisp:declare
    (common-lisp:ignorable sip-media-application-id transaction-id arguments))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-sip-media-application-call-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/sip-media-applications/~A/calls/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'sip-media-application-id))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'transaction-id))))
        "UpdateSipMediaApplicationCall"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-sip-media-application-call))
(common-lisp:progn
 (common-lisp:defun update-sip-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sip-rule-id name disabled
                     target-applications)
   (common-lisp:declare
    (common-lisp:ignorable sip-rule-id name disabled target-applications))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-sip-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/sip-rules/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'sip-rule-id))))
        "UpdateSipRule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-sip-rule))
(common-lisp:progn
 (common-lisp:defun update-voice-connector
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id name
                     require-encryption)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id name require-encryption))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-voice-connector-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/voice-connectors/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-id))))
        "UpdateVoiceConnector"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-voice-connector))
(common-lisp:progn
 (common-lisp:defun update-voice-connector-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-group-id name
                     voice-connector-items)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-group-id name
     voice-connector-items))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-voice-connector-group-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/voice-connector-groups/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-connector-group-id))))
        "UpdateVoiceConnectorGroup"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-voice-connector-group))
(common-lisp:progn
 (common-lisp:defun update-voice-profile
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-profile-id speaker-search-task-id)
   (common-lisp:declare
    (common-lisp:ignorable voice-profile-id speaker-search-task-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-voice-profile-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/voice-profiles/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-profile-id))))
        "UpdateVoiceProfile"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-voice-profile))
(common-lisp:progn
 (common-lisp:defun update-voice-profile-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-profile-domain-id name description)
   (common-lisp:declare
    (common-lisp:ignorable voice-profile-domain-id name description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-voice-profile-domain-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/voice-profile-domains/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'voice-profile-domain-id))))
        "UpdateVoiceProfileDomain"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-voice-profile-domain))
(common-lisp:progn
 (common-lisp:defun validate-e911address
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key aws-account-id street-number street-info
                     city state country postal-code)
   (common-lisp:declare
    (common-lisp:ignorable aws-account-id street-number street-info city state
     country postal-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-validate-e911address-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-voice-request aws-sdk/generator/operation::input "POST"
        "/emergency-calling/address" "ValidateE911Address"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'validate-e911address))
