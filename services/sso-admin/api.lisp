;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/sso-admin/api
  (:use)
  (:nicknames #:aws/sso-admin)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/json-request)
  (:import-from #:aws-sdk/rest-json-request)
  (:import-from #:aws-sdk/rest-xml-request)
  (:import-from #:aws-sdk/query-request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/sso-admin/api)
(common-lisp:progn
 (common-lisp:define-condition sso-admin-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'sso-admin-error))
(common-lisp:progn
 (common-lisp:defclass sso-admin-request (aws-sdk/json-request:json-request)
                       common-lisp:nil
                       (:default-initargs :service "sso-admin" :api-version
                        "2020-07-20" :host-prefix "sso" :signing-name "sso"
                        :global-host common-lisp:nil :target-prefix
                        "SWBExternalService" :json-version "1.1"))
 (common-lisp:export 'sso-admin-request))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceQuotaExceededException" . service-quota-exceeded-exception)
    ("ThrottlingException" . throttling-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:defclass access-control-attribute common-lisp:nil
                       ((key :initarg :key :initform
                         (common-lisp:error ":key is required") :type
                         (common-lisp:or access-control-attribute-key
                                         common-lisp:null)
                         :accessor struct-shape-access-control-attribute-key
                         :shape "AccessControlAttributeKey" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (value :initarg :value :initform
                         (common-lisp:error ":value is required") :type
                         (common-lisp:or access-control-attribute-value
                                         common-lisp:null)
                         :accessor struct-shape-access-control-attribute-value
                         :shape "AccessControlAttributeValue" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-access-control-attribute
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'access-control-attribute
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'access-control-attribute 'make-access-control-attribute))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          access-control-attribute))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          access-control-attribute))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          access-control-attribute))
   common-lisp:nil))
(common-lisp:deftype access-control-attribute-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype access-control-attribute-list ()
   '(trivial-types:proper-list access-control-attribute))
 (common-lisp:defun make-access-control-attribute-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            access-control-attribute))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass access-control-attribute-value common-lisp:nil
                       ((source :initarg :source :initform
                         (common-lisp:error ":source is required") :type
                         (common-lisp:or
                          access-control-attribute-value-source-list
                          common-lisp:null)
                         :accessor
                         struct-shape-access-control-attribute-value-source
                         :shape "AccessControlAttributeValueSourceList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-access-control-attribute-value
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'access-control-attribute-value
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'access-control-attribute-value
                    'make-access-control-attribute-value))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          access-control-attribute-value))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          access-control-attribute-value))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "Source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          access-control-attribute-value))
   common-lisp:nil))
(common-lisp:deftype access-control-attribute-value-source ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype access-control-attribute-value-source-list ()
   '(trivial-types:proper-list access-control-attribute-value-source))
 (common-lisp:defun make-access-control-attribute-value-source-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            access-control-attribute-value-source))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (sso-admin-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:deftype access-denied-exception-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass account-assignment common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-account-assignment-account-id :shape
                         "AccountId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (permission-set-arn :initarg :permission-set-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or permission-set-arn common-lisp:null)
                         :accessor
                         struct-shape-account-assignment-permission-set-arn
                         :shape "PermissionSetArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (principal-id :initarg :principal-id :initform
                         common-lisp:nil :type
                         (common-lisp:or principal-id common-lisp:null)
                         :accessor struct-shape-account-assignment-principal-id
                         :shape "PrincipalId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (principal-type :initarg :principal-type :initform
                         common-lisp:nil :type
                         (common-lisp:or principal-type common-lisp:null)
                         :accessor
                         struct-shape-account-assignment-principal-type :shape
                         "PrincipalType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-account-assignment
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'account-assignment
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'account-assignment 'make-account-assignment))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input account-assignment))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input account-assignment))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-id))
      (common-lisp:list
       (common-lisp:cons "PrincipalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-type))
      (common-lisp:list
       (common-lisp:cons "PrincipalType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input account-assignment))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass account-assignment-for-principal common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-account-assignment-for-principal-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (permission-set-arn :initarg :permission-set-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or permission-set-arn common-lisp:null)
                         :accessor
                         struct-shape-account-assignment-for-principal-permission-set-arn
                         :shape "PermissionSetArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (principal-id :initarg :principal-id :initform
                         common-lisp:nil :type
                         (common-lisp:or principal-id common-lisp:null)
                         :accessor
                         struct-shape-account-assignment-for-principal-principal-id
                         :shape "PrincipalId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (principal-type :initarg :principal-type :initform
                         common-lisp:nil :type
                         (common-lisp:or principal-type common-lisp:null)
                         :accessor
                         struct-shape-account-assignment-for-principal-principal-type
                         :shape "PrincipalType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-account-assignment-for-principal
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'account-assignment-for-principal
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'account-assignment-for-principal
                    'make-account-assignment-for-principal))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          account-assignment-for-principal))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          account-assignment-for-principal))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-id))
      (common-lisp:list
       (common-lisp:cons "PrincipalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-type))
      (common-lisp:list
       (common-lisp:cons "PrincipalType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          account-assignment-for-principal))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype account-assignment-list ()
   '(trivial-types:proper-list account-assignment))
 (common-lisp:defun make-account-assignment-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list account-assignment))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype account-assignment-list-for-principal ()
   '(trivial-types:proper-list account-assignment-for-principal))
 (common-lisp:defun make-account-assignment-list-for-principal
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            account-assignment-for-principal))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass account-assignment-operation-status common-lisp:nil
                       ((created-date :initarg :created-date :initform
                         common-lisp:nil :type
                         (common-lisp:or date common-lisp:null) :accessor
                         struct-shape-account-assignment-operation-status-created-date
                         :shape "Date" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (failure-reason :initarg :failure-reason :initform
                         common-lisp:nil :type
                         (common-lisp:or reason common-lisp:null) :accessor
                         struct-shape-account-assignment-operation-status-failure-reason
                         :shape "Reason" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (permission-set-arn :initarg :permission-set-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or permission-set-arn common-lisp:null)
                         :accessor
                         struct-shape-account-assignment-operation-status-permission-set-arn
                         :shape "PermissionSetArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (principal-id :initarg :principal-id :initform
                         common-lisp:nil :type
                         (common-lisp:or principal-id common-lisp:null)
                         :accessor
                         struct-shape-account-assignment-operation-status-principal-id
                         :shape "PrincipalId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (principal-type :initarg :principal-type :initform
                         common-lisp:nil :type
                         (common-lisp:or principal-type common-lisp:null)
                         :accessor
                         struct-shape-account-assignment-operation-status-principal-type
                         :shape "PrincipalType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (request-id :initarg :request-id :initform
                         common-lisp:nil :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-account-assignment-operation-status-request-id
                         :shape "UUId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or status-values common-lisp:null)
                         :accessor
                         struct-shape-account-assignment-operation-status-status
                         :shape "StatusValues" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (target-id :initarg :target-id :initform
                         common-lisp:nil :type
                         (common-lisp:or target-id common-lisp:null) :accessor
                         struct-shape-account-assignment-operation-status-target-id
                         :shape "TargetId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (target-type :initarg :target-type :initform
                         common-lisp:nil :type
                         (common-lisp:or target-type common-lisp:null)
                         :accessor
                         struct-shape-account-assignment-operation-status-target-type
                         :shape "TargetType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-account-assignment-operation-status
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'account-assignment-operation-status
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'account-assignment-operation-status
                    'make-account-assignment-operation-status))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          account-assignment-operation-status))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          account-assignment-operation-status))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failure-reason))
      (common-lisp:list
       (common-lisp:cons "FailureReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-id))
      (common-lisp:list
       (common-lisp:cons "PrincipalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-type))
      (common-lisp:list
       (common-lisp:cons "PrincipalType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-id))
      (common-lisp:list
       (common-lisp:cons "RequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-id))
      (common-lisp:list
       (common-lisp:cons "TargetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-type))
      (common-lisp:list
       (common-lisp:cons "TargetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          account-assignment-operation-status))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype account-assignment-operation-status-list ()
   '(trivial-types:proper-list account-assignment-operation-status-metadata))
 (common-lisp:defun make-account-assignment-operation-status-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            account-assignment-operation-status-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass account-assignment-operation-status-metadata
                       common-lisp:nil
                       ((created-date :initarg :created-date :initform
                         common-lisp:nil :type
                         (common-lisp:or date common-lisp:null) :accessor
                         struct-shape-account-assignment-operation-status-metadata-created-date
                         :shape "Date" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (request-id :initarg :request-id :initform
                         common-lisp:nil :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-account-assignment-operation-status-metadata-request-id
                         :shape "UUId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or status-values common-lisp:null)
                         :accessor
                         struct-shape-account-assignment-operation-status-metadata-status
                         :shape "StatusValues" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-account-assignment-operation-status-metadata
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'account-assignment-operation-status-metadata
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'account-assignment-operation-status-metadata
                    'make-account-assignment-operation-status-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          account-assignment-operation-status-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          account-assignment-operation-status-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-id))
      (common-lisp:list
       (common-lisp:cons "RequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          account-assignment-operation-status-metadata))
   common-lisp:nil))
(common-lisp:deftype account-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype account-list () '(trivial-types:proper-list account-id))
 (common-lisp:defun make-account-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list account-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass application common-lisp:nil
                       ((application-account :initarg :application-account
                         :initform common-lisp:nil :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-application-application-account :shape
                         "AccountId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (application-arn :initarg :application-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or application-arn common-lisp:null)
                         :accessor struct-shape-application-application-arn
                         :shape "ApplicationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (application-provider-arn :initarg
                         :application-provider-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or application-provider-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-application-application-provider-arn
                         :shape "ApplicationProviderArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (created-date :initarg :created-date :initform
                         common-lisp:nil :type
                         (common-lisp:or date common-lisp:null) :accessor
                         struct-shape-application-created-date :shape "Date"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or description common-lisp:null)
                         :accessor struct-shape-application-description :shape
                         "Description" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (instance-arn :initarg :instance-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor struct-shape-application-instance-arn :shape
                         "InstanceArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or name-type common-lisp:null) :accessor
                         struct-shape-application-name :shape "NameType"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (portal-options :initarg :portal-options :initform
                         common-lisp:nil :type
                         (common-lisp:or portal-options common-lisp:null)
                         :accessor struct-shape-application-portal-options
                         :shape "PortalOptions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or application-status common-lisp:null)
                         :accessor struct-shape-application-status :shape
                         "ApplicationStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-application
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'application
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'application 'make-application))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input application))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input application))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-account))
      (common-lisp:list
       (common-lisp:cons "ApplicationAccount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-provider-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationProviderArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'portal-options))
      (common-lisp:list
       (common-lisp:cons "PortalOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input application))
   common-lisp:nil))
(common-lisp:deftype application-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass application-assignment common-lisp:nil
                       ((application-arn :initarg :application-arn :initform
                         (common-lisp:error ":application-arn is required")
                         :type
                         (common-lisp:or application-arn common-lisp:null)
                         :accessor
                         struct-shape-application-assignment-application-arn
                         :shape "ApplicationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (principal-id :initarg :principal-id :initform
                         (common-lisp:error ":principal-id is required") :type
                         (common-lisp:or principal-id common-lisp:null)
                         :accessor
                         struct-shape-application-assignment-principal-id
                         :shape "PrincipalId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (principal-type :initarg :principal-type :initform
                         (common-lisp:error ":principal-type is required")
                         :type (common-lisp:or principal-type common-lisp:null)
                         :accessor
                         struct-shape-application-assignment-principal-type
                         :shape "PrincipalType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-application-assignment
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'application-assignment
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'application-assignment 'make-application-assignment))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          application-assignment))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          application-assignment))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-id))
      (common-lisp:list
       (common-lisp:cons "PrincipalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-type))
      (common-lisp:list
       (common-lisp:cons "PrincipalType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          application-assignment))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass application-assignment-for-principal common-lisp:nil
                       ((application-arn :initarg :application-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or application-arn common-lisp:null)
                         :accessor
                         struct-shape-application-assignment-for-principal-application-arn
                         :shape "ApplicationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (principal-id :initarg :principal-id :initform
                         common-lisp:nil :type
                         (common-lisp:or principal-id common-lisp:null)
                         :accessor
                         struct-shape-application-assignment-for-principal-principal-id
                         :shape "PrincipalId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (principal-type :initarg :principal-type :initform
                         common-lisp:nil :type
                         (common-lisp:or principal-type common-lisp:null)
                         :accessor
                         struct-shape-application-assignment-for-principal-principal-type
                         :shape "PrincipalType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-application-assignment-for-principal
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'application-assignment-for-principal
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'application-assignment-for-principal
                    'make-application-assignment-for-principal))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          application-assignment-for-principal))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          application-assignment-for-principal))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-id))
      (common-lisp:list
       (common-lisp:cons "PrincipalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-type))
      (common-lisp:list
       (common-lisp:cons "PrincipalType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          application-assignment-for-principal))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype application-assignment-list-for-principal ()
   '(trivial-types:proper-list application-assignment-for-principal))
 (common-lisp:defun make-application-assignment-list-for-principal
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            application-assignment-for-principal))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype application-assignments-list ()
   '(trivial-types:proper-list application-assignment))
 (common-lisp:defun make-application-assignments-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list application-assignment))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype application-list ()
   '(trivial-types:proper-list application))
 (common-lisp:defun make-application-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list application))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass application-provider common-lisp:nil
                       ((application-provider-arn :initarg
                         :application-provider-arn :initform
                         (common-lisp:error
                          ":application-provider-arn is required")
                         :type
                         (common-lisp:or application-provider-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-application-provider-application-provider-arn
                         :shape "ApplicationProviderArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (display-data :initarg :display-data :initform
                         common-lisp:nil :type
                         (common-lisp:or display-data common-lisp:null)
                         :accessor
                         struct-shape-application-provider-display-data :shape
                         "DisplayData" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (federation-protocol :initarg :federation-protocol
                         :initform common-lisp:nil :type
                         (common-lisp:or federation-protocol common-lisp:null)
                         :accessor
                         struct-shape-application-provider-federation-protocol
                         :shape "FederationProtocol" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-server-config :initarg
                         :resource-server-config :initform common-lisp:nil
                         :type
                         (common-lisp:or resource-server-config
                                         common-lisp:null)
                         :accessor
                         struct-shape-application-provider-resource-server-config
                         :shape "ResourceServerConfig" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-application-provider
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'application-provider
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'application-provider 'make-application-provider))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input application-provider))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input application-provider))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-provider-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationProviderArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'display-data))
      (common-lisp:list
       (common-lisp:cons "DisplayData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'federation-protocol))
      (common-lisp:list
       (common-lisp:cons "FederationProtocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-server-config))
      (common-lisp:list
       (common-lisp:cons "ResourceServerConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input application-provider))
   common-lisp:nil))
(common-lisp:deftype application-provider-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype application-provider-list ()
   '(trivial-types:proper-list application-provider))
 (common-lisp:defun make-application-provider-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list application-provider))
   aws-sdk/generator/shape::members))
(common-lisp:deftype application-status () 'common-lisp:string)
(common-lisp:deftype application-url () 'common-lisp:string)
(common-lisp:deftype application-visibility () 'common-lisp:string)
(common-lisp:deftype assignment-required () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defclass
  attach-customer-managed-policy-reference-to-permission-set-request
  common-lisp:nil
  ((customer-managed-policy-reference :initarg
    :customer-managed-policy-reference :initform
    (common-lisp:error ":customer-managed-policy-reference is required") :type
    (common-lisp:or customer-managed-policy-reference common-lisp:null)
    :accessor
    struct-shape-attach-customer-managed-policy-reference-to-permission-set-request-customer-managed-policy-reference
    :shape "CustomerManagedPolicyReference" :location common-lisp:nil
    :location-name common-lisp:nil)
   (instance-arn :initarg :instance-arn :initform
    (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null) :accessor
    struct-shape-attach-customer-managed-policy-reference-to-permission-set-request-instance-arn
    :shape "InstanceArn" :location common-lisp:nil :location-name
    common-lisp:nil)
   (permission-set-arn :initarg :permission-set-arn :initform
    (common-lisp:error ":permission-set-arn is required") :type
    (common-lisp:or permission-set-arn common-lisp:null) :accessor
    struct-shape-attach-customer-managed-policy-reference-to-permission-set-request-permission-set-arn
    :shape "PermissionSetArn" :location common-lisp:nil :location-name
    common-lisp:nil))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-attach-customer-managed-policy-reference-to-permission-set-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'attach-customer-managed-policy-reference-to-permission-set-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list
   'attach-customer-managed-policy-reference-to-permission-set-request
   'make-attach-customer-managed-policy-reference-to-permission-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          attach-customer-managed-policy-reference-to-permission-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          attach-customer-managed-policy-reference-to-permission-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'customer-managed-policy-reference))
      (common-lisp:list
       (common-lisp:cons "CustomerManagedPolicyReference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          attach-customer-managed-policy-reference-to-permission-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  attach-customer-managed-policy-reference-to-permission-set-response
  common-lisp:nil common-lisp:nil
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-attach-customer-managed-policy-reference-to-permission-set-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'attach-customer-managed-policy-reference-to-permission-set-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list
   'attach-customer-managed-policy-reference-to-permission-set-response
   'make-attach-customer-managed-policy-reference-to-permission-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          attach-customer-managed-policy-reference-to-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          attach-customer-managed-policy-reference-to-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          attach-customer-managed-policy-reference-to-permission-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass attach-managed-policy-to-permission-set-request
                       common-lisp:nil
                       ((instance-arn :initarg :instance-arn :initform
                         (common-lisp:error ":instance-arn is required") :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-attach-managed-policy-to-permission-set-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (managed-policy-arn :initarg :managed-policy-arn
                         :initform
                         (common-lisp:error ":managed-policy-arn is required")
                         :type
                         (common-lisp:or managed-policy-arn common-lisp:null)
                         :accessor
                         struct-shape-attach-managed-policy-to-permission-set-request-managed-policy-arn
                         :shape "ManagedPolicyArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (permission-set-arn :initarg :permission-set-arn
                         :initform
                         (common-lisp:error ":permission-set-arn is required")
                         :type
                         (common-lisp:or permission-set-arn common-lisp:null)
                         :accessor
                         struct-shape-attach-managed-policy-to-permission-set-request-permission-set-arn
                         :shape "PermissionSetArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-attach-managed-policy-to-permission-set-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'attach-managed-policy-to-permission-set-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'attach-managed-policy-to-permission-set-request
                    'make-attach-managed-policy-to-permission-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          attach-managed-policy-to-permission-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          attach-managed-policy-to-permission-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'managed-policy-arn))
      (common-lisp:list
       (common-lisp:cons "ManagedPolicyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          attach-managed-policy-to-permission-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass attach-managed-policy-to-permission-set-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-attach-managed-policy-to-permission-set-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'attach-managed-policy-to-permission-set-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'attach-managed-policy-to-permission-set-response
                    'make-attach-managed-policy-to-permission-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          attach-managed-policy-to-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          attach-managed-policy-to-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          attach-managed-policy-to-permission-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass attached-managed-policy common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or managed-policy-arn common-lisp:null)
                         :accessor struct-shape-attached-managed-policy-arn
                         :shape "ManagedPolicyArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-attached-managed-policy-name :shape
                         "Name" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-attached-managed-policy
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'attached-managed-policy
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'attached-managed-policy 'make-attached-managed-policy))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          attached-managed-policy))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          attached-managed-policy))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          attached-managed-policy))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype attached-managed-policy-list ()
   '(trivial-types:proper-list attached-managed-policy))
 (common-lisp:defun make-attached-managed-policy-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attached-managed-policy))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass authentication-method common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-authentication-method
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'authentication-method
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'authentication-method 'make-authentication-method))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          authentication-method))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          authentication-method))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          authentication-method))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass authentication-method-item common-lisp:nil
                       ((authentication-method :initarg :authentication-method
                         :initform common-lisp:nil :type
                         (common-lisp:or authentication-method
                                         common-lisp:null)
                         :accessor
                         struct-shape-authentication-method-item-authentication-method
                         :shape "AuthenticationMethod" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (authentication-method-type :initarg
                         :authentication-method-type :initform common-lisp:nil
                         :type
                         (common-lisp:or authentication-method-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-authentication-method-item-authentication-method-type
                         :shape "AuthenticationMethodType" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-authentication-method-item
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'authentication-method-item
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'authentication-method-item
                    'make-authentication-method-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          authentication-method-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          authentication-method-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-method))
      (common-lisp:list
       (common-lisp:cons "AuthenticationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-method-type))
      (common-lisp:list
       (common-lisp:cons "AuthenticationMethodType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          authentication-method-item))
   common-lisp:nil))
(common-lisp:deftype authentication-method-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype authentication-methods ()
   '(trivial-types:proper-list authentication-method-item))
 (common-lisp:defun make-authentication-methods
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            authentication-method-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass authorization-code-grant common-lisp:nil
                       ((redirect-uris :initarg :redirect-uris :initform
                         common-lisp:nil :type
                         (common-lisp:or redirect-uris common-lisp:null)
                         :accessor
                         struct-shape-authorization-code-grant-redirect-uris
                         :shape "RedirectUris" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-authorization-code-grant
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'authorization-code-grant
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'authorization-code-grant 'make-authorization-code-grant))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          authorization-code-grant))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          authorization-code-grant))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'redirect-uris))
      (common-lisp:list
       (common-lisp:cons "RedirectUris"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          authorization-code-grant))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass authorized-token-issuer common-lisp:nil
                       ((authorized-audiences :initarg :authorized-audiences
                         :initform common-lisp:nil :type
                         (common-lisp:or token-issuer-audiences
                                         common-lisp:null)
                         :accessor
                         struct-shape-authorized-token-issuer-authorized-audiences
                         :shape "TokenIssuerAudiences" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (trusted-token-issuer-arn :initarg
                         :trusted-token-issuer-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or trusted-token-issuer-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-authorized-token-issuer-trusted-token-issuer-arn
                         :shape "TrustedTokenIssuerArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-authorized-token-issuer
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'authorized-token-issuer
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'authorized-token-issuer 'make-authorized-token-issuer))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          authorized-token-issuer))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          authorized-token-issuer))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorized-audiences))
      (common-lisp:list
       (common-lisp:cons "AuthorizedAudiences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'trusted-token-issuer-arn))
      (common-lisp:list
       (common-lisp:cons "TrustedTokenIssuerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          authorized-token-issuer))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype authorized-token-issuers ()
   '(trivial-types:proper-list authorized-token-issuer))
 (common-lisp:defun make-authorized-token-issuers
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list authorized-token-issuer))
   aws-sdk/generator/shape::members))
(common-lisp:deftype claim-attribute-path () 'common-lisp:string)
(common-lisp:deftype client-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (sso-admin-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message)))
(common-lisp:deftype conflict-exception-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass create-account-assignment-request common-lisp:nil
                       ((instance-arn :initarg :instance-arn :initform
                         (common-lisp:error ":instance-arn is required") :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-create-account-assignment-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (permission-set-arn :initarg :permission-set-arn
                         :initform
                         (common-lisp:error ":permission-set-arn is required")
                         :type
                         (common-lisp:or permission-set-arn common-lisp:null)
                         :accessor
                         struct-shape-create-account-assignment-request-permission-set-arn
                         :shape "PermissionSetArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (principal-id :initarg :principal-id :initform
                         (common-lisp:error ":principal-id is required") :type
                         (common-lisp:or principal-id common-lisp:null)
                         :accessor
                         struct-shape-create-account-assignment-request-principal-id
                         :shape "PrincipalId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (principal-type :initarg :principal-type :initform
                         (common-lisp:error ":principal-type is required")
                         :type (common-lisp:or principal-type common-lisp:null)
                         :accessor
                         struct-shape-create-account-assignment-request-principal-type
                         :shape "PrincipalType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (target-id :initarg :target-id :initform
                         (common-lisp:error ":target-id is required") :type
                         (common-lisp:or target-id common-lisp:null) :accessor
                         struct-shape-create-account-assignment-request-target-id
                         :shape "TargetId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (target-type :initarg :target-type :initform
                         (common-lisp:error ":target-type is required") :type
                         (common-lisp:or target-type common-lisp:null)
                         :accessor
                         struct-shape-create-account-assignment-request-target-type
                         :shape "TargetType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-account-assignment-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-account-assignment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-account-assignment-request
                    'make-create-account-assignment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-account-assignment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-account-assignment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-id))
      (common-lisp:list
       (common-lisp:cons "PrincipalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-type))
      (common-lisp:list
       (common-lisp:cons "PrincipalType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-id))
      (common-lisp:list
       (common-lisp:cons "TargetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-type))
      (common-lisp:list
       (common-lisp:cons "TargetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-account-assignment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-account-assignment-response common-lisp:nil
                       ((account-assignment-creation-status :initarg
                         :account-assignment-creation-status :initform
                         common-lisp:nil :type
                         (common-lisp:or account-assignment-operation-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-account-assignment-response-account-assignment-creation-status
                         :shape "AccountAssignmentOperationStatus" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-account-assignment-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-account-assignment-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-account-assignment-response
                    'make-create-account-assignment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-account-assignment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-account-assignment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'account-assignment-creation-status))
      (common-lisp:list
       (common-lisp:cons "AccountAssignmentCreationStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-account-assignment-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-application-assignment-request common-lisp:nil
                       ((application-arn :initarg :application-arn :initform
                         (common-lisp:error ":application-arn is required")
                         :type
                         (common-lisp:or application-arn common-lisp:null)
                         :accessor
                         struct-shape-create-application-assignment-request-application-arn
                         :shape "ApplicationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (principal-id :initarg :principal-id :initform
                         (common-lisp:error ":principal-id is required") :type
                         (common-lisp:or principal-id common-lisp:null)
                         :accessor
                         struct-shape-create-application-assignment-request-principal-id
                         :shape "PrincipalId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (principal-type :initarg :principal-type :initform
                         (common-lisp:error ":principal-type is required")
                         :type (common-lisp:or principal-type common-lisp:null)
                         :accessor
                         struct-shape-create-application-assignment-request-principal-type
                         :shape "PrincipalType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-application-assignment-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-application-assignment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-application-assignment-request
                    'make-create-application-assignment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-application-assignment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-application-assignment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-id))
      (common-lisp:list
       (common-lisp:cons "PrincipalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-type))
      (common-lisp:list
       (common-lisp:cons "PrincipalType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-application-assignment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-application-assignment-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-application-assignment-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-application-assignment-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-application-assignment-response
                    'make-create-application-assignment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-application-assignment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-application-assignment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-application-assignment-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-application-request common-lisp:nil
                       ((application-provider-arn :initarg
                         :application-provider-arn :initform
                         (common-lisp:error
                          ":application-provider-arn is required")
                         :type
                         (common-lisp:or application-provider-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-application-request-application-provider-arn
                         :shape "ApplicationProviderArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor
                         struct-shape-create-application-request-client-token
                         :shape "ClientToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or description common-lisp:null)
                         :accessor
                         struct-shape-create-application-request-description
                         :shape "Description" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (instance-arn :initarg :instance-arn :initform
                         (common-lisp:error ":instance-arn is required") :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-create-application-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name-type common-lisp:null) :accessor
                         struct-shape-create-application-request-name :shape
                         "NameType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (portal-options :initarg :portal-options :initform
                         common-lisp:nil :type
                         (common-lisp:or portal-options common-lisp:null)
                         :accessor
                         struct-shape-create-application-request-portal-options
                         :shape "PortalOptions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or application-status common-lisp:null)
                         :accessor
                         struct-shape-create-application-request-status :shape
                         "ApplicationStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-create-application-request-tags :shape
                         "TagList" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-application-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-application-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-application-request
                    'make-create-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-application-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-provider-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationProviderArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'portal-options))
      (common-lisp:list
       (common-lisp:cons "PortalOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-application-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-application-response common-lisp:nil
                       ((application-arn :initarg :application-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or application-arn common-lisp:null)
                         :accessor
                         struct-shape-create-application-response-application-arn
                         :shape "ApplicationArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-application-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-application-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-application-response
                    'make-create-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-application-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-application-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  create-instance-access-control-attribute-configuration-request
  common-lisp:nil
  ((instance-access-control-attribute-configuration :initarg
    :instance-access-control-attribute-configuration :initform
    (common-lisp:error
     ":instance-access-control-attribute-configuration is required")
    :type
    (common-lisp:or instance-access-control-attribute-configuration
                    common-lisp:null)
    :accessor
    struct-shape-create-instance-access-control-attribute-configuration-request-instance-access-control-attribute-configuration
    :shape "InstanceAccessControlAttributeConfiguration" :location
    common-lisp:nil :location-name common-lisp:nil)
   (instance-arn :initarg :instance-arn :initform
    (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null) :accessor
    struct-shape-create-instance-access-control-attribute-configuration-request-instance-arn
    :shape "InstanceArn" :location common-lisp:nil :location-name
    common-lisp:nil))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-instance-access-control-attribute-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-instance-access-control-attribute-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list
   'create-instance-access-control-attribute-configuration-request
   'make-create-instance-access-control-attribute-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-instance-access-control-attribute-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-instance-access-control-attribute-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'instance-access-control-attribute-configuration))
      (common-lisp:list
       (common-lisp:cons "InstanceAccessControlAttributeConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-instance-access-control-attribute-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  create-instance-access-control-attribute-configuration-response
  common-lisp:nil common-lisp:nil
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-instance-access-control-attribute-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-instance-access-control-attribute-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list
   'create-instance-access-control-attribute-configuration-response
   'make-create-instance-access-control-attribute-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-instance-access-control-attribute-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-instance-access-control-attribute-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-instance-access-control-attribute-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-instance-request common-lisp:nil
                       ((client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor
                         struct-shape-create-instance-request-client-token
                         :shape "ClientToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or name-type common-lisp:null) :accessor
                         struct-shape-create-instance-request-name :shape
                         "NameType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-create-instance-request-tags :shape
                         "TagList" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-instance-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-instance-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-instance-request 'make-create-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-instance-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-instance-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-instance-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-instance-response common-lisp:nil
                       ((instance-arn :initarg :instance-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-create-instance-response-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-instance-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-instance-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-instance-response 'make-create-instance-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-instance-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-instance-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-instance-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-permission-set-request common-lisp:nil
                       ((description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or permission-set-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-permission-set-request-description
                         :shape "PermissionSetDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (instance-arn :initarg :instance-arn :initform
                         (common-lisp:error ":instance-arn is required") :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-create-permission-set-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or permission-set-name common-lisp:null)
                         :accessor
                         struct-shape-create-permission-set-request-name :shape
                         "PermissionSetName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (relay-state :initarg :relay-state :initform
                         common-lisp:nil :type
                         (common-lisp:or relay-state common-lisp:null)
                         :accessor
                         struct-shape-create-permission-set-request-relay-state
                         :shape "RelayState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (session-duration :initarg :session-duration :initform
                         common-lisp:nil :type
                         (common-lisp:or duration common-lisp:null) :accessor
                         struct-shape-create-permission-set-request-session-duration
                         :shape "Duration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-create-permission-set-request-tags :shape
                         "TagList" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-permission-set-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-permission-set-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-permission-set-request
                    'make-create-permission-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-permission-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-permission-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'relay-state))
      (common-lisp:list
       (common-lisp:cons "RelayState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'session-duration))
      (common-lisp:list
       (common-lisp:cons "SessionDuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-permission-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-permission-set-response common-lisp:nil
                       ((permission-set :initarg :permission-set :initform
                         common-lisp:nil :type
                         (common-lisp:or permission-set common-lisp:null)
                         :accessor
                         struct-shape-create-permission-set-response-permission-set
                         :shape "PermissionSet" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-permission-set-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-permission-set-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-permission-set-response
                    'make-create-permission-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-permission-set-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set))
      (common-lisp:list
       (common-lisp:cons "PermissionSet"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-permission-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-trusted-token-issuer-request common-lisp:nil
                       ((client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor
                         struct-shape-create-trusted-token-issuer-request-client-token
                         :shape "ClientToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (instance-arn :initarg :instance-arn :initform
                         (common-lisp:error ":instance-arn is required") :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-create-trusted-token-issuer-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or trusted-token-issuer-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-trusted-token-issuer-request-name
                         :shape "TrustedTokenIssuerName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-create-trusted-token-issuer-request-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (trusted-token-issuer-configuration :initarg
                         :trusted-token-issuer-configuration :initform
                         (common-lisp:error
                          ":trusted-token-issuer-configuration is required")
                         :type
                         (common-lisp:or trusted-token-issuer-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-trusted-token-issuer-request-trusted-token-issuer-configuration
                         :shape "TrustedTokenIssuerConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (trusted-token-issuer-type :initarg
                         :trusted-token-issuer-type :initform
                         (common-lisp:error
                          ":trusted-token-issuer-type is required")
                         :type
                         (common-lisp:or trusted-token-issuer-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-trusted-token-issuer-request-trusted-token-issuer-type
                         :shape "TrustedTokenIssuerType" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-trusted-token-issuer-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-trusted-token-issuer-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-trusted-token-issuer-request
                    'make-create-trusted-token-issuer-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-trusted-token-issuer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-trusted-token-issuer-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'trusted-token-issuer-configuration))
      (common-lisp:list
       (common-lisp:cons "TrustedTokenIssuerConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'trusted-token-issuer-type))
      (common-lisp:list
       (common-lisp:cons "TrustedTokenIssuerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-trusted-token-issuer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-trusted-token-issuer-response common-lisp:nil
                       ((trusted-token-issuer-arn :initarg
                         :trusted-token-issuer-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or trusted-token-issuer-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-trusted-token-issuer-response-trusted-token-issuer-arn
                         :shape "TrustedTokenIssuerArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-trusted-token-issuer-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-trusted-token-issuer-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-trusted-token-issuer-response
                    'make-create-trusted-token-issuer-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-trusted-token-issuer-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-trusted-token-issuer-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'trusted-token-issuer-arn))
      (common-lisp:list
       (common-lisp:cons "TrustedTokenIssuerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-trusted-token-issuer-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass customer-managed-policy-reference common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or managed-policy-name common-lisp:null)
                         :accessor
                         struct-shape-customer-managed-policy-reference-name
                         :shape "ManagedPolicyName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (path :initarg :path :initform common-lisp:nil :type
                         (common-lisp:or managed-policy-path common-lisp:null)
                         :accessor
                         struct-shape-customer-managed-policy-reference-path
                         :shape "ManagedPolicyPath" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-customer-managed-policy-reference
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'customer-managed-policy-reference
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'customer-managed-policy-reference
                    'make-customer-managed-policy-reference))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          customer-managed-policy-reference))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          customer-managed-policy-reference))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path))
      (common-lisp:list
       (common-lisp:cons "Path"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          customer-managed-policy-reference))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype customer-managed-policy-reference-list ()
   '(trivial-types:proper-list customer-managed-policy-reference))
 (common-lisp:defun make-customer-managed-policy-reference-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            customer-managed-policy-reference))
   aws-sdk/generator/shape::members))
(common-lisp:deftype date () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass delete-account-assignment-request common-lisp:nil
                       ((instance-arn :initarg :instance-arn :initform
                         (common-lisp:error ":instance-arn is required") :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-account-assignment-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (permission-set-arn :initarg :permission-set-arn
                         :initform
                         (common-lisp:error ":permission-set-arn is required")
                         :type
                         (common-lisp:or permission-set-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-account-assignment-request-permission-set-arn
                         :shape "PermissionSetArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (principal-id :initarg :principal-id :initform
                         (common-lisp:error ":principal-id is required") :type
                         (common-lisp:or principal-id common-lisp:null)
                         :accessor
                         struct-shape-delete-account-assignment-request-principal-id
                         :shape "PrincipalId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (principal-type :initarg :principal-type :initform
                         (common-lisp:error ":principal-type is required")
                         :type (common-lisp:or principal-type common-lisp:null)
                         :accessor
                         struct-shape-delete-account-assignment-request-principal-type
                         :shape "PrincipalType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (target-id :initarg :target-id :initform
                         (common-lisp:error ":target-id is required") :type
                         (common-lisp:or target-id common-lisp:null) :accessor
                         struct-shape-delete-account-assignment-request-target-id
                         :shape "TargetId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (target-type :initarg :target-type :initform
                         (common-lisp:error ":target-type is required") :type
                         (common-lisp:or target-type common-lisp:null)
                         :accessor
                         struct-shape-delete-account-assignment-request-target-type
                         :shape "TargetType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-account-assignment-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-account-assignment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-account-assignment-request
                    'make-delete-account-assignment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-account-assignment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-account-assignment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-id))
      (common-lisp:list
       (common-lisp:cons "PrincipalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-type))
      (common-lisp:list
       (common-lisp:cons "PrincipalType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-id))
      (common-lisp:list
       (common-lisp:cons "TargetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-type))
      (common-lisp:list
       (common-lisp:cons "TargetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-account-assignment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-account-assignment-response common-lisp:nil
                       ((account-assignment-deletion-status :initarg
                         :account-assignment-deletion-status :initform
                         common-lisp:nil :type
                         (common-lisp:or account-assignment-operation-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-account-assignment-response-account-assignment-deletion-status
                         :shape "AccountAssignmentOperationStatus" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-account-assignment-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-account-assignment-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-account-assignment-response
                    'make-delete-account-assignment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-account-assignment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-account-assignment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'account-assignment-deletion-status))
      (common-lisp:list
       (common-lisp:cons "AccountAssignmentDeletionStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-account-assignment-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-application-access-scope-request common-lisp:nil
                       ((application-arn :initarg :application-arn :initform
                         (common-lisp:error ":application-arn is required")
                         :type
                         (common-lisp:or application-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-application-access-scope-request-application-arn
                         :shape "ApplicationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (scope :initarg :scope :initform
                         (common-lisp:error ":scope is required") :type
                         (common-lisp:or scope common-lisp:null) :accessor
                         struct-shape-delete-application-access-scope-request-scope
                         :shape "Scope" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-application-access-scope-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-application-access-scope-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-application-access-scope-request
                    'make-delete-application-access-scope-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-access-scope-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-access-scope-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scope))
      (common-lisp:list
       (common-lisp:cons "Scope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-access-scope-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-application-assignment-request common-lisp:nil
                       ((application-arn :initarg :application-arn :initform
                         (common-lisp:error ":application-arn is required")
                         :type
                         (common-lisp:or application-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-application-assignment-request-application-arn
                         :shape "ApplicationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (principal-id :initarg :principal-id :initform
                         (common-lisp:error ":principal-id is required") :type
                         (common-lisp:or principal-id common-lisp:null)
                         :accessor
                         struct-shape-delete-application-assignment-request-principal-id
                         :shape "PrincipalId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (principal-type :initarg :principal-type :initform
                         (common-lisp:error ":principal-type is required")
                         :type (common-lisp:or principal-type common-lisp:null)
                         :accessor
                         struct-shape-delete-application-assignment-request-principal-type
                         :shape "PrincipalType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-application-assignment-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-application-assignment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-application-assignment-request
                    'make-delete-application-assignment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-assignment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-assignment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-id))
      (common-lisp:list
       (common-lisp:cons "PrincipalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-type))
      (common-lisp:list
       (common-lisp:cons "PrincipalType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-assignment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-application-assignment-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-application-assignment-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-application-assignment-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-application-assignment-response
                    'make-delete-application-assignment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-assignment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-assignment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-assignment-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-application-authentication-method-request
                       common-lisp:nil
                       ((application-arn :initarg :application-arn :initform
                         (common-lisp:error ":application-arn is required")
                         :type
                         (common-lisp:or application-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-application-authentication-method-request-application-arn
                         :shape "ApplicationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (authentication-method-type :initarg
                         :authentication-method-type :initform
                         (common-lisp:error
                          ":authentication-method-type is required")
                         :type
                         (common-lisp:or authentication-method-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-application-authentication-method-request-authentication-method-type
                         :shape "AuthenticationMethodType" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-application-authentication-method-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-application-authentication-method-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-application-authentication-method-request
                    'make-delete-application-authentication-method-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-authentication-method-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-authentication-method-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-method-type))
      (common-lisp:list
       (common-lisp:cons "AuthenticationMethodType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-authentication-method-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-application-grant-request common-lisp:nil
                       ((application-arn :initarg :application-arn :initform
                         (common-lisp:error ":application-arn is required")
                         :type
                         (common-lisp:or application-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-application-grant-request-application-arn
                         :shape "ApplicationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (grant-type :initarg :grant-type :initform
                         (common-lisp:error ":grant-type is required") :type
                         (common-lisp:or grant-type common-lisp:null) :accessor
                         struct-shape-delete-application-grant-request-grant-type
                         :shape "GrantType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-application-grant-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-application-grant-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-application-grant-request
                    'make-delete-application-grant-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-grant-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-grant-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'grant-type))
      (common-lisp:list
       (common-lisp:cons "GrantType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-grant-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-application-request common-lisp:nil
                       ((application-arn :initarg :application-arn :initform
                         (common-lisp:error ":application-arn is required")
                         :type
                         (common-lisp:or application-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-application-request-application-arn
                         :shape "ApplicationArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-application-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-application-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-application-request
                    'make-delete-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-application-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-application-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-application-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-application-response
                    'make-delete-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-inline-policy-from-permission-set-request
                       common-lisp:nil
                       ((instance-arn :initarg :instance-arn :initform
                         (common-lisp:error ":instance-arn is required") :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-inline-policy-from-permission-set-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (permission-set-arn :initarg :permission-set-arn
                         :initform
                         (common-lisp:error ":permission-set-arn is required")
                         :type
                         (common-lisp:or permission-set-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-inline-policy-from-permission-set-request-permission-set-arn
                         :shape "PermissionSetArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-inline-policy-from-permission-set-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-inline-policy-from-permission-set-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-inline-policy-from-permission-set-request
                    'make-delete-inline-policy-from-permission-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-inline-policy-from-permission-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-inline-policy-from-permission-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-inline-policy-from-permission-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-inline-policy-from-permission-set-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-inline-policy-from-permission-set-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-inline-policy-from-permission-set-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-inline-policy-from-permission-set-response
                    'make-delete-inline-policy-from-permission-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-inline-policy-from-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-inline-policy-from-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-inline-policy-from-permission-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  delete-instance-access-control-attribute-configuration-request
  common-lisp:nil
  ((instance-arn :initarg :instance-arn :initform
    (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null) :accessor
    struct-shape-delete-instance-access-control-attribute-configuration-request-instance-arn
    :shape "InstanceArn" :location common-lisp:nil :location-name
    common-lisp:nil))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-instance-access-control-attribute-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-instance-access-control-attribute-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list
   'delete-instance-access-control-attribute-configuration-request
   'make-delete-instance-access-control-attribute-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-access-control-attribute-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-access-control-attribute-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-access-control-attribute-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  delete-instance-access-control-attribute-configuration-response
  common-lisp:nil common-lisp:nil
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-instance-access-control-attribute-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-instance-access-control-attribute-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list
   'delete-instance-access-control-attribute-configuration-response
   'make-delete-instance-access-control-attribute-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-access-control-attribute-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-access-control-attribute-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-access-control-attribute-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-instance-request common-lisp:nil
                       ((instance-arn :initarg :instance-arn :initform
                         (common-lisp:error ":instance-arn is required") :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-instance-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-instance-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-instance-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-instance-request 'make-delete-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-instance-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-instance-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-instance-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-instance-response 'make-delete-instance-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-permission-set-request common-lisp:nil
                       ((instance-arn :initarg :instance-arn :initform
                         (common-lisp:error ":instance-arn is required") :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-permission-set-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (permission-set-arn :initarg :permission-set-arn
                         :initform
                         (common-lisp:error ":permission-set-arn is required")
                         :type
                         (common-lisp:or permission-set-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-permission-set-request-permission-set-arn
                         :shape "PermissionSetArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-permission-set-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-permission-set-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-permission-set-request
                    'make-delete-permission-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-permission-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-permission-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-permission-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-permission-set-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-permission-set-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-permission-set-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-permission-set-response
                    'make-delete-permission-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-permission-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-permissions-boundary-from-permission-set-request
                       common-lisp:nil
                       ((instance-arn :initarg :instance-arn :initform
                         (common-lisp:error ":instance-arn is required") :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-permissions-boundary-from-permission-set-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (permission-set-arn :initarg :permission-set-arn
                         :initform
                         (common-lisp:error ":permission-set-arn is required")
                         :type
                         (common-lisp:or permission-set-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-permissions-boundary-from-permission-set-request-permission-set-arn
                         :shape "PermissionSetArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-permissions-boundary-from-permission-set-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-permissions-boundary-from-permission-set-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-permissions-boundary-from-permission-set-request
                    'make-delete-permissions-boundary-from-permission-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-permissions-boundary-from-permission-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-permissions-boundary-from-permission-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-permissions-boundary-from-permission-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-permissions-boundary-from-permission-set-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-permissions-boundary-from-permission-set-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-permissions-boundary-from-permission-set-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-permissions-boundary-from-permission-set-response
                    'make-delete-permissions-boundary-from-permission-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-permissions-boundary-from-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-permissions-boundary-from-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-permissions-boundary-from-permission-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-trusted-token-issuer-request common-lisp:nil
                       ((trusted-token-issuer-arn :initarg
                         :trusted-token-issuer-arn :initform
                         (common-lisp:error
                          ":trusted-token-issuer-arn is required")
                         :type
                         (common-lisp:or trusted-token-issuer-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-trusted-token-issuer-request-trusted-token-issuer-arn
                         :shape "TrustedTokenIssuerArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-trusted-token-issuer-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-trusted-token-issuer-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-trusted-token-issuer-request
                    'make-delete-trusted-token-issuer-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-trusted-token-issuer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-trusted-token-issuer-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'trusted-token-issuer-arn))
      (common-lisp:list
       (common-lisp:cons "TrustedTokenIssuerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-trusted-token-issuer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-trusted-token-issuer-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-trusted-token-issuer-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-trusted-token-issuer-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-trusted-token-issuer-response
                    'make-delete-trusted-token-issuer-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-trusted-token-issuer-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-trusted-token-issuer-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-trusted-token-issuer-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-account-assignment-creation-status-request
                       common-lisp:nil
                       ((account-assignment-creation-request-id :initarg
                         :account-assignment-creation-request-id :initform
                         (common-lisp:error
                          ":account-assignment-creation-request-id is required")
                         :type (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-describe-account-assignment-creation-status-request-account-assignment-creation-request-id
                         :shape "UUId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (instance-arn :initarg :instance-arn :initform
                         (common-lisp:error ":instance-arn is required") :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-account-assignment-creation-status-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-account-assignment-creation-status-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-account-assignment-creation-status-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-account-assignment-creation-status-request
                    'make-describe-account-assignment-creation-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-account-assignment-creation-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-account-assignment-creation-status-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'account-assignment-creation-request-id))
      (common-lisp:list
       (common-lisp:cons "AccountAssignmentCreationRequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-account-assignment-creation-status-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-account-assignment-creation-status-response
                       common-lisp:nil
                       ((account-assignment-creation-status :initarg
                         :account-assignment-creation-status :initform
                         common-lisp:nil :type
                         (common-lisp:or account-assignment-operation-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-account-assignment-creation-status-response-account-assignment-creation-status
                         :shape "AccountAssignmentOperationStatus" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-account-assignment-creation-status-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-account-assignment-creation-status-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-account-assignment-creation-status-response
                    'make-describe-account-assignment-creation-status-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-account-assignment-creation-status-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-account-assignment-creation-status-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'account-assignment-creation-status))
      (common-lisp:list
       (common-lisp:cons "AccountAssignmentCreationStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-account-assignment-creation-status-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-account-assignment-deletion-status-request
                       common-lisp:nil
                       ((account-assignment-deletion-request-id :initarg
                         :account-assignment-deletion-request-id :initform
                         (common-lisp:error
                          ":account-assignment-deletion-request-id is required")
                         :type (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-describe-account-assignment-deletion-status-request-account-assignment-deletion-request-id
                         :shape "UUId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (instance-arn :initarg :instance-arn :initform
                         (common-lisp:error ":instance-arn is required") :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-account-assignment-deletion-status-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-account-assignment-deletion-status-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-account-assignment-deletion-status-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-account-assignment-deletion-status-request
                    'make-describe-account-assignment-deletion-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-account-assignment-deletion-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-account-assignment-deletion-status-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'account-assignment-deletion-request-id))
      (common-lisp:list
       (common-lisp:cons "AccountAssignmentDeletionRequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-account-assignment-deletion-status-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-account-assignment-deletion-status-response
                       common-lisp:nil
                       ((account-assignment-deletion-status :initarg
                         :account-assignment-deletion-status :initform
                         common-lisp:nil :type
                         (common-lisp:or account-assignment-operation-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-account-assignment-deletion-status-response-account-assignment-deletion-status
                         :shape "AccountAssignmentOperationStatus" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-account-assignment-deletion-status-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-account-assignment-deletion-status-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-account-assignment-deletion-status-response
                    'make-describe-account-assignment-deletion-status-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-account-assignment-deletion-status-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-account-assignment-deletion-status-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'account-assignment-deletion-status))
      (common-lisp:list
       (common-lisp:cons "AccountAssignmentDeletionStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-account-assignment-deletion-status-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-application-assignment-request common-lisp:nil
                       ((application-arn :initarg :application-arn :initform
                         (common-lisp:error ":application-arn is required")
                         :type
                         (common-lisp:or application-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-application-assignment-request-application-arn
                         :shape "ApplicationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (principal-id :initarg :principal-id :initform
                         (common-lisp:error ":principal-id is required") :type
                         (common-lisp:or principal-id common-lisp:null)
                         :accessor
                         struct-shape-describe-application-assignment-request-principal-id
                         :shape "PrincipalId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (principal-type :initarg :principal-type :initform
                         (common-lisp:error ":principal-type is required")
                         :type (common-lisp:or principal-type common-lisp:null)
                         :accessor
                         struct-shape-describe-application-assignment-request-principal-type
                         :shape "PrincipalType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-application-assignment-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-application-assignment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-application-assignment-request
                    'make-describe-application-assignment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-application-assignment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-application-assignment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-id))
      (common-lisp:list
       (common-lisp:cons "PrincipalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-type))
      (common-lisp:list
       (common-lisp:cons "PrincipalType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-application-assignment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-application-assignment-response common-lisp:nil
                       ((application-arn :initarg :application-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or application-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-application-assignment-response-application-arn
                         :shape "ApplicationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (principal-id :initarg :principal-id :initform
                         common-lisp:nil :type
                         (common-lisp:or principal-id common-lisp:null)
                         :accessor
                         struct-shape-describe-application-assignment-response-principal-id
                         :shape "PrincipalId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (principal-type :initarg :principal-type :initform
                         common-lisp:nil :type
                         (common-lisp:or principal-type common-lisp:null)
                         :accessor
                         struct-shape-describe-application-assignment-response-principal-type
                         :shape "PrincipalType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-application-assignment-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-application-assignment-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-application-assignment-response
                    'make-describe-application-assignment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-application-assignment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-application-assignment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-id))
      (common-lisp:list
       (common-lisp:cons "PrincipalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-type))
      (common-lisp:list
       (common-lisp:cons "PrincipalType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-application-assignment-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-application-provider-request common-lisp:nil
                       ((application-provider-arn :initarg
                         :application-provider-arn :initform
                         (common-lisp:error
                          ":application-provider-arn is required")
                         :type
                         (common-lisp:or application-provider-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-application-provider-request-application-provider-arn
                         :shape "ApplicationProviderArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-application-provider-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-application-provider-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-application-provider-request
                    'make-describe-application-provider-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-application-provider-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-application-provider-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-provider-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationProviderArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-application-provider-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-application-provider-response common-lisp:nil
                       ((application-provider-arn :initarg
                         :application-provider-arn :initform
                         (common-lisp:error
                          ":application-provider-arn is required")
                         :type
                         (common-lisp:or application-provider-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-application-provider-response-application-provider-arn
                         :shape "ApplicationProviderArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (display-data :initarg :display-data :initform
                         common-lisp:nil :type
                         (common-lisp:or display-data common-lisp:null)
                         :accessor
                         struct-shape-describe-application-provider-response-display-data
                         :shape "DisplayData" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (federation-protocol :initarg :federation-protocol
                         :initform common-lisp:nil :type
                         (common-lisp:or federation-protocol common-lisp:null)
                         :accessor
                         struct-shape-describe-application-provider-response-federation-protocol
                         :shape "FederationProtocol" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-server-config :initarg
                         :resource-server-config :initform common-lisp:nil
                         :type
                         (common-lisp:or resource-server-config
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-application-provider-response-resource-server-config
                         :shape "ResourceServerConfig" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-application-provider-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-application-provider-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-application-provider-response
                    'make-describe-application-provider-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-application-provider-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-application-provider-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-provider-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationProviderArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'display-data))
      (common-lisp:list
       (common-lisp:cons "DisplayData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'federation-protocol))
      (common-lisp:list
       (common-lisp:cons "FederationProtocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-server-config))
      (common-lisp:list
       (common-lisp:cons "ResourceServerConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-application-provider-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-application-request common-lisp:nil
                       ((application-arn :initarg :application-arn :initform
                         (common-lisp:error ":application-arn is required")
                         :type
                         (common-lisp:or application-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-application-request-application-arn
                         :shape "ApplicationArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-application-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-application-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-application-request
                    'make-describe-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-application-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-application-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-application-response common-lisp:nil
                       ((application-account :initarg :application-account
                         :initform common-lisp:nil :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-describe-application-response-application-account
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (application-arn :initarg :application-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or application-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-application-response-application-arn
                         :shape "ApplicationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (application-provider-arn :initarg
                         :application-provider-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or application-provider-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-application-response-application-provider-arn
                         :shape "ApplicationProviderArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (created-date :initarg :created-date :initform
                         common-lisp:nil :type
                         (common-lisp:or date common-lisp:null) :accessor
                         struct-shape-describe-application-response-created-date
                         :shape "Date" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or description common-lisp:null)
                         :accessor
                         struct-shape-describe-application-response-description
                         :shape "Description" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (instance-arn :initarg :instance-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-application-response-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or name-type common-lisp:null) :accessor
                         struct-shape-describe-application-response-name :shape
                         "NameType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (portal-options :initarg :portal-options :initform
                         common-lisp:nil :type
                         (common-lisp:or portal-options common-lisp:null)
                         :accessor
                         struct-shape-describe-application-response-portal-options
                         :shape "PortalOptions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or application-status common-lisp:null)
                         :accessor
                         struct-shape-describe-application-response-status
                         :shape "ApplicationStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-application-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-application-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-application-response
                    'make-describe-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-application-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-account))
      (common-lisp:list
       (common-lisp:cons "ApplicationAccount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-provider-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationProviderArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'portal-options))
      (common-lisp:list
       (common-lisp:cons "PortalOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-application-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  describe-instance-access-control-attribute-configuration-request
  common-lisp:nil
  ((instance-arn :initarg :instance-arn :initform
    (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null) :accessor
    struct-shape-describe-instance-access-control-attribute-configuration-request-instance-arn
    :shape "InstanceArn" :location common-lisp:nil :location-name
    common-lisp:nil))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-instance-access-control-attribute-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-instance-access-control-attribute-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list
   'describe-instance-access-control-attribute-configuration-request
   'make-describe-instance-access-control-attribute-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-instance-access-control-attribute-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-instance-access-control-attribute-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-instance-access-control-attribute-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  describe-instance-access-control-attribute-configuration-response
  common-lisp:nil
  ((instance-access-control-attribute-configuration :initarg
    :instance-access-control-attribute-configuration :initform common-lisp:nil
    :type
    (common-lisp:or instance-access-control-attribute-configuration
                    common-lisp:null)
    :accessor
    struct-shape-describe-instance-access-control-attribute-configuration-response-instance-access-control-attribute-configuration
    :shape "InstanceAccessControlAttributeConfiguration" :location
    common-lisp:nil :location-name common-lisp:nil)
   (status :initarg :status :initform common-lisp:nil :type
    (common-lisp:or instance-access-control-attribute-configuration-status
                    common-lisp:null)
    :accessor
    struct-shape-describe-instance-access-control-attribute-configuration-response-status
    :shape "InstanceAccessControlAttributeConfigurationStatus" :location
    common-lisp:nil :location-name common-lisp:nil)
   (status-reason :initarg :status-reason :initform common-lisp:nil :type
    (common-lisp:or
     instance-access-control-attribute-configuration-status-reason
     common-lisp:null)
    :accessor
    struct-shape-describe-instance-access-control-attribute-configuration-response-status-reason
    :shape "InstanceAccessControlAttributeConfigurationStatusReason" :location
    common-lisp:nil :location-name common-lisp:nil))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-instance-access-control-attribute-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-instance-access-control-attribute-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list
   'describe-instance-access-control-attribute-configuration-response
   'make-describe-instance-access-control-attribute-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-instance-access-control-attribute-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-instance-access-control-attribute-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'instance-access-control-attribute-configuration))
      (common-lisp:list
       (common-lisp:cons "InstanceAccessControlAttributeConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-reason))
      (common-lisp:list
       (common-lisp:cons "StatusReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-instance-access-control-attribute-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-instance-request common-lisp:nil
                       ((instance-arn :initarg :instance-arn :initform
                         (common-lisp:error ":instance-arn is required") :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-instance-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-instance-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-instance-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-instance-request
                    'make-describe-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-instance-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-instance-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-instance-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-instance-response common-lisp:nil
                       ((created-date :initarg :created-date :initform
                         common-lisp:nil :type
                         (common-lisp:or date common-lisp:null) :accessor
                         struct-shape-describe-instance-response-created-date
                         :shape "Date" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (identity-store-id :initarg :identity-store-id
                         :initform common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-describe-instance-response-identity-store-id
                         :shape "Id" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (instance-arn :initarg :instance-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-instance-response-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or name-type common-lisp:null) :accessor
                         struct-shape-describe-instance-response-name :shape
                         "NameType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (owner-account-id :initarg :owner-account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-describe-instance-response-owner-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or instance-status common-lisp:null)
                         :accessor
                         struct-shape-describe-instance-response-status :shape
                         "InstanceStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-instance-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-instance-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-instance-response
                    'make-describe-instance-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-instance-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-instance-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-store-id))
      (common-lisp:list
       (common-lisp:cons "IdentityStoreId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owner-account-id))
      (common-lisp:list
       (common-lisp:cons "OwnerAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-instance-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-permission-set-provisioning-status-request
                       common-lisp:nil
                       ((instance-arn :initarg :instance-arn :initform
                         (common-lisp:error ":instance-arn is required") :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-permission-set-provisioning-status-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (provision-permission-set-request-id :initarg
                         :provision-permission-set-request-id :initform
                         (common-lisp:error
                          ":provision-permission-set-request-id is required")
                         :type (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-describe-permission-set-provisioning-status-request-provision-permission-set-request-id
                         :shape "UUId" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-permission-set-provisioning-status-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-permission-set-provisioning-status-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-permission-set-provisioning-status-request
                    'make-describe-permission-set-provisioning-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-permission-set-provisioning-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-permission-set-provisioning-status-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'provision-permission-set-request-id))
      (common-lisp:list
       (common-lisp:cons "ProvisionPermissionSetRequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-permission-set-provisioning-status-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-permission-set-provisioning-status-response
                       common-lisp:nil
                       ((permission-set-provisioning-status :initarg
                         :permission-set-provisioning-status :initform
                         common-lisp:nil :type
                         (common-lisp:or permission-set-provisioning-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-permission-set-provisioning-status-response-permission-set-provisioning-status
                         :shape "PermissionSetProvisioningStatus" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-permission-set-provisioning-status-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-permission-set-provisioning-status-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-permission-set-provisioning-status-response
                    'make-describe-permission-set-provisioning-status-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-permission-set-provisioning-status-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-permission-set-provisioning-status-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'permission-set-provisioning-status))
      (common-lisp:list
       (common-lisp:cons "PermissionSetProvisioningStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-permission-set-provisioning-status-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-permission-set-request common-lisp:nil
                       ((instance-arn :initarg :instance-arn :initform
                         (common-lisp:error ":instance-arn is required") :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-permission-set-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (permission-set-arn :initarg :permission-set-arn
                         :initform
                         (common-lisp:error ":permission-set-arn is required")
                         :type
                         (common-lisp:or permission-set-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-permission-set-request-permission-set-arn
                         :shape "PermissionSetArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-permission-set-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-permission-set-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-permission-set-request
                    'make-describe-permission-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-permission-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-permission-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-permission-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-permission-set-response common-lisp:nil
                       ((permission-set :initarg :permission-set :initform
                         common-lisp:nil :type
                         (common-lisp:or permission-set common-lisp:null)
                         :accessor
                         struct-shape-describe-permission-set-response-permission-set
                         :shape "PermissionSet" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-permission-set-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-permission-set-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-permission-set-response
                    'make-describe-permission-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-permission-set-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set))
      (common-lisp:list
       (common-lisp:cons "PermissionSet"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-permission-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-trusted-token-issuer-request common-lisp:nil
                       ((trusted-token-issuer-arn :initarg
                         :trusted-token-issuer-arn :initform
                         (common-lisp:error
                          ":trusted-token-issuer-arn is required")
                         :type
                         (common-lisp:or trusted-token-issuer-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-trusted-token-issuer-request-trusted-token-issuer-arn
                         :shape "TrustedTokenIssuerArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-trusted-token-issuer-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-trusted-token-issuer-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-trusted-token-issuer-request
                    'make-describe-trusted-token-issuer-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-trusted-token-issuer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-trusted-token-issuer-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'trusted-token-issuer-arn))
      (common-lisp:list
       (common-lisp:cons "TrustedTokenIssuerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-trusted-token-issuer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-trusted-token-issuer-response common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or trusted-token-issuer-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-trusted-token-issuer-response-name
                         :shape "TrustedTokenIssuerName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (trusted-token-issuer-arn :initarg
                         :trusted-token-issuer-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or trusted-token-issuer-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-trusted-token-issuer-response-trusted-token-issuer-arn
                         :shape "TrustedTokenIssuerArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (trusted-token-issuer-configuration :initarg
                         :trusted-token-issuer-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or trusted-token-issuer-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-trusted-token-issuer-response-trusted-token-issuer-configuration
                         :shape "TrustedTokenIssuerConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (trusted-token-issuer-type :initarg
                         :trusted-token-issuer-type :initform common-lisp:nil
                         :type
                         (common-lisp:or trusted-token-issuer-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-trusted-token-issuer-response-trusted-token-issuer-type
                         :shape "TrustedTokenIssuerType" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-trusted-token-issuer-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-trusted-token-issuer-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-trusted-token-issuer-response
                    'make-describe-trusted-token-issuer-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-trusted-token-issuer-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-trusted-token-issuer-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'trusted-token-issuer-arn))
      (common-lisp:list
       (common-lisp:cons "TrustedTokenIssuerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'trusted-token-issuer-configuration))
      (common-lisp:list
       (common-lisp:cons "TrustedTokenIssuerConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'trusted-token-issuer-type))
      (common-lisp:list
       (common-lisp:cons "TrustedTokenIssuerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-trusted-token-issuer-response))
   common-lisp:nil))
(common-lisp:deftype description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass
  detach-customer-managed-policy-reference-from-permission-set-request
  common-lisp:nil
  ((customer-managed-policy-reference :initarg
    :customer-managed-policy-reference :initform
    (common-lisp:error ":customer-managed-policy-reference is required") :type
    (common-lisp:or customer-managed-policy-reference common-lisp:null)
    :accessor
    struct-shape-detach-customer-managed-policy-reference-from-permission-set-request-customer-managed-policy-reference
    :shape "CustomerManagedPolicyReference" :location common-lisp:nil
    :location-name common-lisp:nil)
   (instance-arn :initarg :instance-arn :initform
    (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null) :accessor
    struct-shape-detach-customer-managed-policy-reference-from-permission-set-request-instance-arn
    :shape "InstanceArn" :location common-lisp:nil :location-name
    common-lisp:nil)
   (permission-set-arn :initarg :permission-set-arn :initform
    (common-lisp:error ":permission-set-arn is required") :type
    (common-lisp:or permission-set-arn common-lisp:null) :accessor
    struct-shape-detach-customer-managed-policy-reference-from-permission-set-request-permission-set-arn
    :shape "PermissionSetArn" :location common-lisp:nil :location-name
    common-lisp:nil))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-detach-customer-managed-policy-reference-from-permission-set-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'detach-customer-managed-policy-reference-from-permission-set-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list
   'detach-customer-managed-policy-reference-from-permission-set-request
   'make-detach-customer-managed-policy-reference-from-permission-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detach-customer-managed-policy-reference-from-permission-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detach-customer-managed-policy-reference-from-permission-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'customer-managed-policy-reference))
      (common-lisp:list
       (common-lisp:cons "CustomerManagedPolicyReference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detach-customer-managed-policy-reference-from-permission-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  detach-customer-managed-policy-reference-from-permission-set-response
  common-lisp:nil common-lisp:nil
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-detach-customer-managed-policy-reference-from-permission-set-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'detach-customer-managed-policy-reference-from-permission-set-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list
   'detach-customer-managed-policy-reference-from-permission-set-response
   'make-detach-customer-managed-policy-reference-from-permission-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detach-customer-managed-policy-reference-from-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detach-customer-managed-policy-reference-from-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detach-customer-managed-policy-reference-from-permission-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass detach-managed-policy-from-permission-set-request
                       common-lisp:nil
                       ((instance-arn :initarg :instance-arn :initform
                         (common-lisp:error ":instance-arn is required") :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-detach-managed-policy-from-permission-set-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (managed-policy-arn :initarg :managed-policy-arn
                         :initform
                         (common-lisp:error ":managed-policy-arn is required")
                         :type
                         (common-lisp:or managed-policy-arn common-lisp:null)
                         :accessor
                         struct-shape-detach-managed-policy-from-permission-set-request-managed-policy-arn
                         :shape "ManagedPolicyArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (permission-set-arn :initarg :permission-set-arn
                         :initform
                         (common-lisp:error ":permission-set-arn is required")
                         :type
                         (common-lisp:or permission-set-arn common-lisp:null)
                         :accessor
                         struct-shape-detach-managed-policy-from-permission-set-request-permission-set-arn
                         :shape "PermissionSetArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-detach-managed-policy-from-permission-set-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'detach-managed-policy-from-permission-set-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'detach-managed-policy-from-permission-set-request
                    'make-detach-managed-policy-from-permission-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detach-managed-policy-from-permission-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detach-managed-policy-from-permission-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'managed-policy-arn))
      (common-lisp:list
       (common-lisp:cons "ManagedPolicyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detach-managed-policy-from-permission-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass detach-managed-policy-from-permission-set-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-detach-managed-policy-from-permission-set-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'detach-managed-policy-from-permission-set-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'detach-managed-policy-from-permission-set-response
                    'make-detach-managed-policy-from-permission-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detach-managed-policy-from-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detach-managed-policy-from-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detach-managed-policy-from-permission-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass display-data common-lisp:nil
                       ((description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or description common-lisp:null)
                         :accessor struct-shape-display-data-description :shape
                         "Description" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (display-name :initarg :display-name :initform
                         common-lisp:nil :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-display-data-display-name :shape "Name"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (icon-url :initarg :icon-url :initform common-lisp:nil
                         :type (common-lisp:or icon-url common-lisp:null)
                         :accessor struct-shape-display-data-icon-url :shape
                         "IconUrl" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-display-data
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'display-data
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'display-data 'make-display-data))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input display-data))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input display-data))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'display-name))
      (common-lisp:list
       (common-lisp:cons "DisplayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'icon-url))
      (common-lisp:list
       (common-lisp:cons "IconUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input display-data))
   common-lisp:nil))
(common-lisp:deftype duration () 'common-lisp:string)
(common-lisp:deftype federation-protocol () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass get-application-access-scope-request common-lisp:nil
                       ((application-arn :initarg :application-arn :initform
                         (common-lisp:error ":application-arn is required")
                         :type
                         (common-lisp:or application-arn common-lisp:null)
                         :accessor
                         struct-shape-get-application-access-scope-request-application-arn
                         :shape "ApplicationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (scope :initarg :scope :initform
                         (common-lisp:error ":scope is required") :type
                         (common-lisp:or scope common-lisp:null) :accessor
                         struct-shape-get-application-access-scope-request-scope
                         :shape "Scope" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-application-access-scope-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-application-access-scope-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-application-access-scope-request
                    'make-get-application-access-scope-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-application-access-scope-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-application-access-scope-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scope))
      (common-lisp:list
       (common-lisp:cons "Scope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-application-access-scope-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-application-access-scope-response common-lisp:nil
                       ((authorized-targets :initarg :authorized-targets
                         :initform common-lisp:nil :type
                         (common-lisp:or scope-targets common-lisp:null)
                         :accessor
                         struct-shape-get-application-access-scope-response-authorized-targets
                         :shape "ScopeTargets" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (scope :initarg :scope :initform
                         (common-lisp:error ":scope is required") :type
                         (common-lisp:or scope common-lisp:null) :accessor
                         struct-shape-get-application-access-scope-response-scope
                         :shape "Scope" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-application-access-scope-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-application-access-scope-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-application-access-scope-response
                    'make-get-application-access-scope-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-application-access-scope-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-application-access-scope-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorized-targets))
      (common-lisp:list
       (common-lisp:cons "AuthorizedTargets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scope))
      (common-lisp:list
       (common-lisp:cons "Scope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-application-access-scope-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-application-assignment-configuration-request
                       common-lisp:nil
                       ((application-arn :initarg :application-arn :initform
                         (common-lisp:error ":application-arn is required")
                         :type
                         (common-lisp:or application-arn common-lisp:null)
                         :accessor
                         struct-shape-get-application-assignment-configuration-request-application-arn
                         :shape "ApplicationArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-application-assignment-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-application-assignment-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-application-assignment-configuration-request
                    'make-get-application-assignment-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-application-assignment-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-application-assignment-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-application-assignment-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-application-assignment-configuration-response
                       common-lisp:nil
                       ((assignment-required :initarg :assignment-required
                         :initform
                         (common-lisp:error ":assignment-required is required")
                         :type
                         (common-lisp:or assignment-required common-lisp:null)
                         :accessor
                         struct-shape-get-application-assignment-configuration-response-assignment-required
                         :shape "AssignmentRequired" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-application-assignment-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-application-assignment-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-application-assignment-configuration-response
                    'make-get-application-assignment-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-application-assignment-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-application-assignment-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'assignment-required))
      (common-lisp:list
       (common-lisp:cons "AssignmentRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-application-assignment-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-application-authentication-method-request
                       common-lisp:nil
                       ((application-arn :initarg :application-arn :initform
                         (common-lisp:error ":application-arn is required")
                         :type
                         (common-lisp:or application-arn common-lisp:null)
                         :accessor
                         struct-shape-get-application-authentication-method-request-application-arn
                         :shape "ApplicationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (authentication-method-type :initarg
                         :authentication-method-type :initform
                         (common-lisp:error
                          ":authentication-method-type is required")
                         :type
                         (common-lisp:or authentication-method-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-application-authentication-method-request-authentication-method-type
                         :shape "AuthenticationMethodType" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-application-authentication-method-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-application-authentication-method-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-application-authentication-method-request
                    'make-get-application-authentication-method-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-application-authentication-method-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-application-authentication-method-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-method-type))
      (common-lisp:list
       (common-lisp:cons "AuthenticationMethodType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-application-authentication-method-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-application-authentication-method-response
                       common-lisp:nil
                       ((authentication-method :initarg :authentication-method
                         :initform common-lisp:nil :type
                         (common-lisp:or authentication-method
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-application-authentication-method-response-authentication-method
                         :shape "AuthenticationMethod" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-application-authentication-method-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-application-authentication-method-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-application-authentication-method-response
                    'make-get-application-authentication-method-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-application-authentication-method-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-application-authentication-method-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-method))
      (common-lisp:list
       (common-lisp:cons "AuthenticationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-application-authentication-method-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-application-grant-request common-lisp:nil
                       ((application-arn :initarg :application-arn :initform
                         (common-lisp:error ":application-arn is required")
                         :type
                         (common-lisp:or application-arn common-lisp:null)
                         :accessor
                         struct-shape-get-application-grant-request-application-arn
                         :shape "ApplicationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (grant-type :initarg :grant-type :initform
                         (common-lisp:error ":grant-type is required") :type
                         (common-lisp:or grant-type common-lisp:null) :accessor
                         struct-shape-get-application-grant-request-grant-type
                         :shape "GrantType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-application-grant-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-application-grant-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-application-grant-request
                    'make-get-application-grant-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-application-grant-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-application-grant-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'grant-type))
      (common-lisp:list
       (common-lisp:cons "GrantType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-application-grant-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-application-grant-response common-lisp:nil
                       ((grant :initarg :grant :initform
                         (common-lisp:error ":grant is required") :type
                         (common-lisp:or grant common-lisp:null) :accessor
                         struct-shape-get-application-grant-response-grant
                         :shape "Grant" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-application-grant-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-application-grant-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-application-grant-response
                    'make-get-application-grant-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-application-grant-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-application-grant-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'grant))
      (common-lisp:list
       (common-lisp:cons "Grant"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-application-grant-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-inline-policy-for-permission-set-request
                       common-lisp:nil
                       ((instance-arn :initarg :instance-arn :initform
                         (common-lisp:error ":instance-arn is required") :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-get-inline-policy-for-permission-set-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (permission-set-arn :initarg :permission-set-arn
                         :initform
                         (common-lisp:error ":permission-set-arn is required")
                         :type
                         (common-lisp:or permission-set-arn common-lisp:null)
                         :accessor
                         struct-shape-get-inline-policy-for-permission-set-request-permission-set-arn
                         :shape "PermissionSetArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-inline-policy-for-permission-set-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-inline-policy-for-permission-set-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-inline-policy-for-permission-set-request
                    'make-get-inline-policy-for-permission-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-inline-policy-for-permission-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-inline-policy-for-permission-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-inline-policy-for-permission-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-inline-policy-for-permission-set-response
                       common-lisp:nil
                       ((inline-policy :initarg :inline-policy :initform
                         common-lisp:nil :type
                         (common-lisp:or permission-set-policy-document
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-inline-policy-for-permission-set-response-inline-policy
                         :shape "PermissionSetPolicyDocument" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-inline-policy-for-permission-set-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-inline-policy-for-permission-set-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-inline-policy-for-permission-set-response
                    'make-get-inline-policy-for-permission-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-inline-policy-for-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-inline-policy-for-permission-set-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inline-policy))
      (common-lisp:list
       (common-lisp:cons "InlinePolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-inline-policy-for-permission-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-permissions-boundary-for-permission-set-request
                       common-lisp:nil
                       ((instance-arn :initarg :instance-arn :initform
                         (common-lisp:error ":instance-arn is required") :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-get-permissions-boundary-for-permission-set-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (permission-set-arn :initarg :permission-set-arn
                         :initform
                         (common-lisp:error ":permission-set-arn is required")
                         :type
                         (common-lisp:or permission-set-arn common-lisp:null)
                         :accessor
                         struct-shape-get-permissions-boundary-for-permission-set-request-permission-set-arn
                         :shape "PermissionSetArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-permissions-boundary-for-permission-set-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-permissions-boundary-for-permission-set-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-permissions-boundary-for-permission-set-request
                    'make-get-permissions-boundary-for-permission-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-permissions-boundary-for-permission-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-permissions-boundary-for-permission-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-permissions-boundary-for-permission-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-permissions-boundary-for-permission-set-response
                       common-lisp:nil
                       ((permissions-boundary :initarg :permissions-boundary
                         :initform common-lisp:nil :type
                         (common-lisp:or permissions-boundary common-lisp:null)
                         :accessor
                         struct-shape-get-permissions-boundary-for-permission-set-response-permissions-boundary
                         :shape "PermissionsBoundary" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-permissions-boundary-for-permission-set-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-permissions-boundary-for-permission-set-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-permissions-boundary-for-permission-set-response
                    'make-get-permissions-boundary-for-permission-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-permissions-boundary-for-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-permissions-boundary-for-permission-set-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'permissions-boundary))
      (common-lisp:list
       (common-lisp:cons "PermissionsBoundary"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-permissions-boundary-for-permission-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass grant common-lisp:nil
                       ((authorization-code :initarg :authorization-code
                         :initform common-lisp:nil :type
                         (common-lisp:or authorization-code-grant
                                         common-lisp:null)
                         :accessor struct-shape-grant-authorization-code :shape
                         "AuthorizationCodeGrant" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (jwt-bearer :initarg :jwt-bearer :initform
                         common-lisp:nil :type
                         (common-lisp:or jwt-bearer-grant common-lisp:null)
                         :accessor struct-shape-grant-jwt-bearer :shape
                         "JwtBearerGrant" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (refresh-token :initarg :refresh-token :initform
                         common-lisp:nil :type
                         (common-lisp:or refresh-token-grant common-lisp:null)
                         :accessor struct-shape-grant-refresh-token :shape
                         "RefreshTokenGrant" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (token-exchange :initarg :token-exchange :initform
                         common-lisp:nil :type
                         (common-lisp:or token-exchange-grant common-lisp:null)
                         :accessor struct-shape-grant-token-exchange :shape
                         "TokenExchangeGrant" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-grant
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'grant
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'grant 'make-grant))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input grant))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input grant))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization-code))
      (common-lisp:list
       (common-lisp:cons "AuthorizationCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'jwt-bearer))
      (common-lisp:list
       (common-lisp:cons "JwtBearer"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'refresh-token))
      (common-lisp:list
       (common-lisp:cons "RefreshToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'token-exchange))
      (common-lisp:list
       (common-lisp:cons "TokenExchange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input grant))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass grant-item common-lisp:nil
                       ((grant :initarg :grant :initform
                         (common-lisp:error ":grant is required") :type
                         (common-lisp:or grant common-lisp:null) :accessor
                         struct-shape-grant-item-grant :shape "Grant" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (grant-type :initarg :grant-type :initform
                         (common-lisp:error ":grant-type is required") :type
                         (common-lisp:or grant-type common-lisp:null) :accessor
                         struct-shape-grant-item-grant-type :shape "GrantType"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-grant-item
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'grant-item
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'grant-item 'make-grant-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input grant-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input grant-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'grant))
      (common-lisp:list
       (common-lisp:cons "Grant"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'grant-type))
      (common-lisp:list
       (common-lisp:cons "GrantType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input grant-item))
   common-lisp:nil))
(common-lisp:deftype grant-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype grants () '(trivial-types:proper-list grant-item))
 (common-lisp:defun make-grants
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list grant-item))
   aws-sdk/generator/shape::members))
(common-lisp:deftype icon-url () 'common-lisp:string)
(common-lisp:deftype id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass instance-access-control-attribute-configuration
                       common-lisp:nil
                       ((access-control-attributes :initarg
                         :access-control-attributes :initform
                         (common-lisp:error
                          ":access-control-attributes is required")
                         :type
                         (common-lisp:or access-control-attribute-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-instance-access-control-attribute-configuration-access-control-attributes
                         :shape "AccessControlAttributeList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-instance-access-control-attribute-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'instance-access-control-attribute-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'instance-access-control-attribute-configuration
                    'make-instance-access-control-attribute-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          instance-access-control-attribute-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          instance-access-control-attribute-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'access-control-attributes))
      (common-lisp:list
       (common-lisp:cons "AccessControlAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          instance-access-control-attribute-configuration))
   common-lisp:nil))
(common-lisp:deftype instance-access-control-attribute-configuration-status ()
  'common-lisp:string)
(common-lisp:deftype instance-access-control-attribute-configuration-status-reason
                     ()
  'common-lisp:string)
(common-lisp:deftype instance-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype instance-list ()
   '(trivial-types:proper-list instance-metadata))
 (common-lisp:defun make-instance-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass instance-metadata common-lisp:nil
                       ((created-date :initarg :created-date :initform
                         common-lisp:nil :type
                         (common-lisp:or date common-lisp:null) :accessor
                         struct-shape-instance-metadata-created-date :shape
                         "Date" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (identity-store-id :initarg :identity-store-id
                         :initform common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-instance-metadata-identity-store-id
                         :shape "Id" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (instance-arn :initarg :instance-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor struct-shape-instance-metadata-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or name-type common-lisp:null) :accessor
                         struct-shape-instance-metadata-name :shape "NameType"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (owner-account-id :initarg :owner-account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-instance-metadata-owner-account-id :shape
                         "AccountId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or instance-status common-lisp:null)
                         :accessor struct-shape-instance-metadata-status :shape
                         "InstanceStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-instance-metadata
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'instance-metadata
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'instance-metadata 'make-instance-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input instance-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input instance-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-store-id))
      (common-lisp:list
       (common-lisp:cons "IdentityStoreId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owner-account-id))
      (common-lisp:list
       (common-lisp:cons "OwnerAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input instance-metadata))
   common-lisp:nil))
(common-lisp:deftype instance-status () 'common-lisp:string)
(common-lisp:deftype internal-failure-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (sso-admin-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message)))
(common-lisp:deftype jmespath () 'common-lisp:string)
(common-lisp:deftype jwks-retrieval-option () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass jwt-bearer-grant common-lisp:nil
                       ((authorized-token-issuers :initarg
                         :authorized-token-issuers :initform common-lisp:nil
                         :type
                         (common-lisp:or authorized-token-issuers
                                         common-lisp:null)
                         :accessor
                         struct-shape-jwt-bearer-grant-authorized-token-issuers
                         :shape "AuthorizedTokenIssuers" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-jwt-bearer-grant
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'jwt-bearer-grant
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'jwt-bearer-grant 'make-jwt-bearer-grant))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input jwt-bearer-grant))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input jwt-bearer-grant))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorized-token-issuers))
      (common-lisp:list
       (common-lisp:cons "AuthorizedTokenIssuers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input jwt-bearer-grant))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-account-assignment-creation-status-request
                       common-lisp:nil
                       ((filter :initarg :filter :initform common-lisp:nil
                         :type
                         (common-lisp:or operation-status-filter
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-account-assignment-creation-status-request-filter
                         :shape "OperationStatusFilter" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (instance-arn :initarg :instance-arn :initform
                         (common-lisp:error ":instance-arn is required") :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-list-account-assignment-creation-status-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-account-assignment-creation-status-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-account-assignment-creation-status-request-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-account-assignment-creation-status-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-account-assignment-creation-status-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-account-assignment-creation-status-request
                    'make-list-account-assignment-creation-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignment-creation-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignment-creation-status-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignment-creation-status-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-account-assignment-creation-status-response
                       common-lisp:nil
                       ((account-assignments-creation-status :initarg
                         :account-assignments-creation-status :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          account-assignment-operation-status-list
                          common-lisp:null)
                         :accessor
                         struct-shape-list-account-assignment-creation-status-response-account-assignments-creation-status
                         :shape "AccountAssignmentOperationStatusList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-account-assignment-creation-status-response-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-account-assignment-creation-status-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-account-assignment-creation-status-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-account-assignment-creation-status-response
                    'make-list-account-assignment-creation-status-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignment-creation-status-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignment-creation-status-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'account-assignments-creation-status))
      (common-lisp:list
       (common-lisp:cons "AccountAssignmentsCreationStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignment-creation-status-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-account-assignment-deletion-status-request
                       common-lisp:nil
                       ((filter :initarg :filter :initform common-lisp:nil
                         :type
                         (common-lisp:or operation-status-filter
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-account-assignment-deletion-status-request-filter
                         :shape "OperationStatusFilter" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (instance-arn :initarg :instance-arn :initform
                         (common-lisp:error ":instance-arn is required") :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-list-account-assignment-deletion-status-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-account-assignment-deletion-status-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-account-assignment-deletion-status-request-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-account-assignment-deletion-status-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-account-assignment-deletion-status-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-account-assignment-deletion-status-request
                    'make-list-account-assignment-deletion-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignment-deletion-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignment-deletion-status-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignment-deletion-status-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-account-assignment-deletion-status-response
                       common-lisp:nil
                       ((account-assignments-deletion-status :initarg
                         :account-assignments-deletion-status :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          account-assignment-operation-status-list
                          common-lisp:null)
                         :accessor
                         struct-shape-list-account-assignment-deletion-status-response-account-assignments-deletion-status
                         :shape "AccountAssignmentOperationStatusList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-account-assignment-deletion-status-response-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-account-assignment-deletion-status-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-account-assignment-deletion-status-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-account-assignment-deletion-status-response
                    'make-list-account-assignment-deletion-status-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignment-deletion-status-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignment-deletion-status-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'account-assignments-deletion-status))
      (common-lisp:list
       (common-lisp:cons "AccountAssignmentsDeletionStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignment-deletion-status-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-account-assignments-filter common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-list-account-assignments-filter-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-account-assignments-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-account-assignments-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-account-assignments-filter
                    'make-list-account-assignments-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignments-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignments-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignments-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-account-assignments-for-principal-request
                       common-lisp:nil
                       ((filter :initarg :filter :initform common-lisp:nil
                         :type
                         (common-lisp:or list-account-assignments-filter
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-account-assignments-for-principal-request-filter
                         :shape "ListAccountAssignmentsFilter" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (instance-arn :initarg :instance-arn :initform
                         (common-lisp:error ":instance-arn is required") :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-list-account-assignments-for-principal-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-account-assignments-for-principal-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-account-assignments-for-principal-request-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (principal-id :initarg :principal-id :initform
                         (common-lisp:error ":principal-id is required") :type
                         (common-lisp:or principal-id common-lisp:null)
                         :accessor
                         struct-shape-list-account-assignments-for-principal-request-principal-id
                         :shape "PrincipalId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (principal-type :initarg :principal-type :initform
                         (common-lisp:error ":principal-type is required")
                         :type (common-lisp:or principal-type common-lisp:null)
                         :accessor
                         struct-shape-list-account-assignments-for-principal-request-principal-type
                         :shape "PrincipalType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-account-assignments-for-principal-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-account-assignments-for-principal-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-account-assignments-for-principal-request
                    'make-list-account-assignments-for-principal-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignments-for-principal-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignments-for-principal-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-id))
      (common-lisp:list
       (common-lisp:cons "PrincipalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-type))
      (common-lisp:list
       (common-lisp:cons "PrincipalType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignments-for-principal-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-account-assignments-for-principal-response
                       common-lisp:nil
                       ((account-assignments :initarg :account-assignments
                         :initform common-lisp:nil :type
                         (common-lisp:or account-assignment-list-for-principal
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-account-assignments-for-principal-response-account-assignments
                         :shape "AccountAssignmentListForPrincipal" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-account-assignments-for-principal-response-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-account-assignments-for-principal-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-account-assignments-for-principal-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-account-assignments-for-principal-response
                    'make-list-account-assignments-for-principal-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignments-for-principal-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignments-for-principal-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-assignments))
      (common-lisp:list
       (common-lisp:cons "AccountAssignments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignments-for-principal-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-account-assignments-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or target-id common-lisp:null) :accessor
                         struct-shape-list-account-assignments-request-account-id
                         :shape "TargetId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (instance-arn :initarg :instance-arn :initform
                         (common-lisp:error ":instance-arn is required") :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-list-account-assignments-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-account-assignments-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-account-assignments-request-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (permission-set-arn :initarg :permission-set-arn
                         :initform
                         (common-lisp:error ":permission-set-arn is required")
                         :type
                         (common-lisp:or permission-set-arn common-lisp:null)
                         :accessor
                         struct-shape-list-account-assignments-request-permission-set-arn
                         :shape "PermissionSetArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-account-assignments-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-account-assignments-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-account-assignments-request
                    'make-list-account-assignments-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignments-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignments-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-account-assignments-response common-lisp:nil
                       ((account-assignments :initarg :account-assignments
                         :initform common-lisp:nil :type
                         (common-lisp:or account-assignment-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-account-assignments-response-account-assignments
                         :shape "AccountAssignmentList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-account-assignments-response-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-account-assignments-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-account-assignments-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-account-assignments-response
                    'make-list-account-assignments-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignments-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignments-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-assignments))
      (common-lisp:list
       (common-lisp:cons "AccountAssignments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignments-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-accounts-for-provisioned-permission-set-request
                       common-lisp:nil
                       ((instance-arn :initarg :instance-arn :initform
                         (common-lisp:error ":instance-arn is required") :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-list-accounts-for-provisioned-permission-set-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-accounts-for-provisioned-permission-set-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-accounts-for-provisioned-permission-set-request-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (permission-set-arn :initarg :permission-set-arn
                         :initform
                         (common-lisp:error ":permission-set-arn is required")
                         :type
                         (common-lisp:or permission-set-arn common-lisp:null)
                         :accessor
                         struct-shape-list-accounts-for-provisioned-permission-set-request-permission-set-arn
                         :shape "PermissionSetArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (provisioning-status :initarg :provisioning-status
                         :initform common-lisp:nil :type
                         (common-lisp:or provisioning-status common-lisp:null)
                         :accessor
                         struct-shape-list-accounts-for-provisioned-permission-set-request-provisioning-status
                         :shape "ProvisioningStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-accounts-for-provisioned-permission-set-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-accounts-for-provisioned-permission-set-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-accounts-for-provisioned-permission-set-request
                    'make-list-accounts-for-provisioned-permission-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-accounts-for-provisioned-permission-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-accounts-for-provisioned-permission-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'provisioning-status))
      (common-lisp:list
       (common-lisp:cons "ProvisioningStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-accounts-for-provisioned-permission-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-accounts-for-provisioned-permission-set-response
                       common-lisp:nil
                       ((account-ids :initarg :account-ids :initform
                         common-lisp:nil :type
                         (common-lisp:or account-list common-lisp:null)
                         :accessor
                         struct-shape-list-accounts-for-provisioned-permission-set-response-account-ids
                         :shape "AccountList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-accounts-for-provisioned-permission-set-response-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-accounts-for-provisioned-permission-set-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-accounts-for-provisioned-permission-set-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-accounts-for-provisioned-permission-set-response
                    'make-list-accounts-for-provisioned-permission-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-accounts-for-provisioned-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-accounts-for-provisioned-permission-set-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "AccountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-accounts-for-provisioned-permission-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-application-access-scopes-request common-lisp:nil
                       ((application-arn :initarg :application-arn :initform
                         (common-lisp:error ":application-arn is required")
                         :type
                         (common-lisp:or application-arn common-lisp:null)
                         :accessor
                         struct-shape-list-application-access-scopes-request-application-arn
                         :shape "ApplicationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          list-application-access-scopes-request-max-results-integer
                          common-lisp:null)
                         :accessor
                         struct-shape-list-application-access-scopes-request-max-results
                         :shape
                         "ListApplicationAccessScopesRequestMaxResultsInteger"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-application-access-scopes-request-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-application-access-scopes-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-application-access-scopes-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-application-access-scopes-request
                    'make-list-application-access-scopes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-application-access-scopes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-application-access-scopes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-application-access-scopes-request))
   common-lisp:nil))
(common-lisp:deftype list-application-access-scopes-request-max-results-integer
                     ()
  'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass list-application-access-scopes-response common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-application-access-scopes-response-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (scopes :initarg :scopes :initform
                         (common-lisp:error ":scopes is required") :type
                         (common-lisp:or scopes common-lisp:null) :accessor
                         struct-shape-list-application-access-scopes-response-scopes
                         :shape "Scopes" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-application-access-scopes-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-application-access-scopes-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-application-access-scopes-response
                    'make-list-application-access-scopes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-application-access-scopes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-application-access-scopes-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scopes))
      (common-lisp:list
       (common-lisp:cons "Scopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-application-access-scopes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-application-assignments-filter common-lisp:nil
                       ((application-arn :initarg :application-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or application-arn common-lisp:null)
                         :accessor
                         struct-shape-list-application-assignments-filter-application-arn
                         :shape "ApplicationArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-application-assignments-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-application-assignments-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-application-assignments-filter
                    'make-list-application-assignments-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-application-assignments-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-application-assignments-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-application-assignments-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-application-assignments-for-principal-request
                       common-lisp:nil
                       ((filter :initarg :filter :initform common-lisp:nil
                         :type
                         (common-lisp:or list-application-assignments-filter
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-application-assignments-for-principal-request-filter
                         :shape "ListApplicationAssignmentsFilter" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (instance-arn :initarg :instance-arn :initform
                         (common-lisp:error ":instance-arn is required") :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-list-application-assignments-for-principal-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-application-assignments-for-principal-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-application-assignments-for-principal-request-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (principal-id :initarg :principal-id :initform
                         (common-lisp:error ":principal-id is required") :type
                         (common-lisp:or principal-id common-lisp:null)
                         :accessor
                         struct-shape-list-application-assignments-for-principal-request-principal-id
                         :shape "PrincipalId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (principal-type :initarg :principal-type :initform
                         (common-lisp:error ":principal-type is required")
                         :type (common-lisp:or principal-type common-lisp:null)
                         :accessor
                         struct-shape-list-application-assignments-for-principal-request-principal-type
                         :shape "PrincipalType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-application-assignments-for-principal-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-application-assignments-for-principal-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-application-assignments-for-principal-request
                    'make-list-application-assignments-for-principal-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-application-assignments-for-principal-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-application-assignments-for-principal-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-id))
      (common-lisp:list
       (common-lisp:cons "PrincipalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-type))
      (common-lisp:list
       (common-lisp:cons "PrincipalType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-application-assignments-for-principal-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-application-assignments-for-principal-response
                       common-lisp:nil
                       ((application-assignments :initarg
                         :application-assignments :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          application-assignment-list-for-principal
                          common-lisp:null)
                         :accessor
                         struct-shape-list-application-assignments-for-principal-response-application-assignments
                         :shape "ApplicationAssignmentListForPrincipal"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-application-assignments-for-principal-response-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-application-assignments-for-principal-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-application-assignments-for-principal-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-application-assignments-for-principal-response
                    'make-list-application-assignments-for-principal-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-application-assignments-for-principal-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-application-assignments-for-principal-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-assignments))
      (common-lisp:list
       (common-lisp:cons "ApplicationAssignments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-application-assignments-for-principal-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-application-assignments-request common-lisp:nil
                       ((application-arn :initarg :application-arn :initform
                         (common-lisp:error ":application-arn is required")
                         :type
                         (common-lisp:or application-arn common-lisp:null)
                         :accessor
                         struct-shape-list-application-assignments-request-application-arn
                         :shape "ApplicationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-application-assignments-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-application-assignments-request-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-application-assignments-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-application-assignments-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-application-assignments-request
                    'make-list-application-assignments-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-application-assignments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-application-assignments-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-application-assignments-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-application-assignments-response common-lisp:nil
                       ((application-assignments :initarg
                         :application-assignments :initform common-lisp:nil
                         :type
                         (common-lisp:or application-assignments-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-application-assignments-response-application-assignments
                         :shape "ApplicationAssignmentsList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-application-assignments-response-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-application-assignments-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-application-assignments-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-application-assignments-response
                    'make-list-application-assignments-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-application-assignments-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-application-assignments-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-assignments))
      (common-lisp:list
       (common-lisp:cons "ApplicationAssignments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-application-assignments-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-application-authentication-methods-request
                       common-lisp:nil
                       ((application-arn :initarg :application-arn :initform
                         (common-lisp:error ":application-arn is required")
                         :type
                         (common-lisp:or application-arn common-lisp:null)
                         :accessor
                         struct-shape-list-application-authentication-methods-request-application-arn
                         :shape "ApplicationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-application-authentication-methods-request-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-application-authentication-methods-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-application-authentication-methods-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-application-authentication-methods-request
                    'make-list-application-authentication-methods-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-application-authentication-methods-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-application-authentication-methods-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-application-authentication-methods-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-application-authentication-methods-response
                       common-lisp:nil
                       ((authentication-methods :initarg
                         :authentication-methods :initform common-lisp:nil
                         :type
                         (common-lisp:or authentication-methods
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-application-authentication-methods-response-authentication-methods
                         :shape "AuthenticationMethods" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-application-authentication-methods-response-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-application-authentication-methods-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-application-authentication-methods-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-application-authentication-methods-response
                    'make-list-application-authentication-methods-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-application-authentication-methods-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-application-authentication-methods-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-methods))
      (common-lisp:list
       (common-lisp:cons "AuthenticationMethods"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-application-authentication-methods-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-application-grants-request common-lisp:nil
                       ((application-arn :initarg :application-arn :initform
                         (common-lisp:error ":application-arn is required")
                         :type
                         (common-lisp:or application-arn common-lisp:null)
                         :accessor
                         struct-shape-list-application-grants-request-application-arn
                         :shape "ApplicationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-application-grants-request-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-application-grants-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-application-grants-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-application-grants-request
                    'make-list-application-grants-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-application-grants-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-application-grants-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-application-grants-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-application-grants-response common-lisp:nil
                       ((grants :initarg :grants :initform
                         (common-lisp:error ":grants is required") :type
                         (common-lisp:or grants common-lisp:null) :accessor
                         struct-shape-list-application-grants-response-grants
                         :shape "Grants" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-application-grants-response-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-application-grants-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-application-grants-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-application-grants-response
                    'make-list-application-grants-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-application-grants-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-application-grants-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'grants))
      (common-lisp:list
       (common-lisp:cons "Grants"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-application-grants-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-application-providers-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-application-providers-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-application-providers-request-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-application-providers-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-application-providers-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-application-providers-request
                    'make-list-application-providers-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-application-providers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-application-providers-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-application-providers-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-application-providers-response common-lisp:nil
                       ((application-providers :initarg :application-providers
                         :initform common-lisp:nil :type
                         (common-lisp:or application-provider-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-application-providers-response-application-providers
                         :shape "ApplicationProviderList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-application-providers-response-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-application-providers-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-application-providers-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-application-providers-response
                    'make-list-application-providers-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-application-providers-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-application-providers-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-providers))
      (common-lisp:list
       (common-lisp:cons "ApplicationProviders"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-application-providers-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-applications-filter common-lisp:nil
                       ((application-account :initarg :application-account
                         :initform common-lisp:nil :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-list-applications-filter-application-account
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (application-provider :initarg :application-provider
                         :initform common-lisp:nil :type
                         (common-lisp:or application-provider-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-applications-filter-application-provider
                         :shape "ApplicationProviderArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-applications-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-applications-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-applications-filter 'make-list-applications-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-applications-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-applications-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-account))
      (common-lisp:list
       (common-lisp:cons "ApplicationAccount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-provider))
      (common-lisp:list
       (common-lisp:cons "ApplicationProvider"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-applications-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-applications-request common-lisp:nil
                       ((filter :initarg :filter :initform common-lisp:nil
                         :type
                         (common-lisp:or list-applications-filter
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-applications-request-filter :shape
                         "ListApplicationsFilter" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (instance-arn :initarg :instance-arn :initform
                         (common-lisp:error ":instance-arn is required") :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-list-applications-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-applications-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-applications-request-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-applications-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-applications-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-applications-request
                    'make-list-applications-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-applications-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-applications-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-applications-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-applications-response common-lisp:nil
                       ((applications :initarg :applications :initform
                         common-lisp:nil :type
                         (common-lisp:or application-list common-lisp:null)
                         :accessor
                         struct-shape-list-applications-response-applications
                         :shape "ApplicationList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-applications-response-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-applications-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-applications-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-applications-response
                    'make-list-applications-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-applications-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-applications-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'applications))
      (common-lisp:list
       (common-lisp:cons "Applications"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-applications-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  list-customer-managed-policy-references-in-permission-set-request
  common-lisp:nil
  ((instance-arn :initarg :instance-arn :initform
    (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null) :accessor
    struct-shape-list-customer-managed-policy-references-in-permission-set-request-instance-arn
    :shape "InstanceArn" :location common-lisp:nil :location-name
    common-lisp:nil)
   (max-results :initarg :max-results :initform common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null) :accessor
    struct-shape-list-customer-managed-policy-references-in-permission-set-request-max-results
    :shape "MaxResults" :location common-lisp:nil :location-name
    common-lisp:nil)
   (next-token :initarg :next-token :initform common-lisp:nil :type
    (common-lisp:or token common-lisp:null) :accessor
    struct-shape-list-customer-managed-policy-references-in-permission-set-request-next-token
    :shape "Token" :location common-lisp:nil :location-name common-lisp:nil)
   (permission-set-arn :initarg :permission-set-arn :initform
    (common-lisp:error ":permission-set-arn is required") :type
    (common-lisp:or permission-set-arn common-lisp:null) :accessor
    struct-shape-list-customer-managed-policy-references-in-permission-set-request-permission-set-arn
    :shape "PermissionSetArn" :location common-lisp:nil :location-name
    common-lisp:nil))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-customer-managed-policy-references-in-permission-set-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-customer-managed-policy-references-in-permission-set-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list
   'list-customer-managed-policy-references-in-permission-set-request
   'make-list-customer-managed-policy-references-in-permission-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-customer-managed-policy-references-in-permission-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-customer-managed-policy-references-in-permission-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-customer-managed-policy-references-in-permission-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  list-customer-managed-policy-references-in-permission-set-response
  common-lisp:nil
  ((customer-managed-policy-references :initarg
    :customer-managed-policy-references :initform common-lisp:nil :type
    (common-lisp:or customer-managed-policy-reference-list common-lisp:null)
    :accessor
    struct-shape-list-customer-managed-policy-references-in-permission-set-response-customer-managed-policy-references
    :shape "CustomerManagedPolicyReferenceList" :location common-lisp:nil
    :location-name common-lisp:nil)
   (next-token :initarg :next-token :initform common-lisp:nil :type
    (common-lisp:or token common-lisp:null) :accessor
    struct-shape-list-customer-managed-policy-references-in-permission-set-response-next-token
    :shape "Token" :location common-lisp:nil :location-name common-lisp:nil))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-customer-managed-policy-references-in-permission-set-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-customer-managed-policy-references-in-permission-set-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list
   'list-customer-managed-policy-references-in-permission-set-response
   'make-list-customer-managed-policy-references-in-permission-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-customer-managed-policy-references-in-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-customer-managed-policy-references-in-permission-set-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'customer-managed-policy-references))
      (common-lisp:list
       (common-lisp:cons "CustomerManagedPolicyReferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-customer-managed-policy-references-in-permission-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-instances-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-instances-request-max-results :shape
                         "MaxResults" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-instances-request-next-token :shape
                         "Token" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-instances-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-instances-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-instances-request 'make-list-instances-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-instances-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-instances-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-instances-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-instances-response common-lisp:nil
                       ((instances :initarg :instances :initform
                         common-lisp:nil :type
                         (common-lisp:or instance-list common-lisp:null)
                         :accessor
                         struct-shape-list-instances-response-instances :shape
                         "InstanceList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-instances-response-next-token :shape
                         "Token" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-instances-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-instances-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-instances-response 'make-list-instances-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-instances-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-instances-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instances))
      (common-lisp:list
       (common-lisp:cons "Instances"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-instances-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-managed-policies-in-permission-set-request
                       common-lisp:nil
                       ((instance-arn :initarg :instance-arn :initform
                         (common-lisp:error ":instance-arn is required") :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-list-managed-policies-in-permission-set-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-managed-policies-in-permission-set-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-managed-policies-in-permission-set-request-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (permission-set-arn :initarg :permission-set-arn
                         :initform
                         (common-lisp:error ":permission-set-arn is required")
                         :type
                         (common-lisp:or permission-set-arn common-lisp:null)
                         :accessor
                         struct-shape-list-managed-policies-in-permission-set-request-permission-set-arn
                         :shape "PermissionSetArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-managed-policies-in-permission-set-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-managed-policies-in-permission-set-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-managed-policies-in-permission-set-request
                    'make-list-managed-policies-in-permission-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-managed-policies-in-permission-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-managed-policies-in-permission-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-managed-policies-in-permission-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-managed-policies-in-permission-set-response
                       common-lisp:nil
                       ((attached-managed-policies :initarg
                         :attached-managed-policies :initform common-lisp:nil
                         :type
                         (common-lisp:or attached-managed-policy-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-managed-policies-in-permission-set-response-attached-managed-policies
                         :shape "AttachedManagedPolicyList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-managed-policies-in-permission-set-response-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-managed-policies-in-permission-set-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-managed-policies-in-permission-set-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-managed-policies-in-permission-set-response
                    'make-list-managed-policies-in-permission-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-managed-policies-in-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-managed-policies-in-permission-set-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'attached-managed-policies))
      (common-lisp:list
       (common-lisp:cons "AttachedManagedPolicies"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-managed-policies-in-permission-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-permission-set-provisioning-status-request
                       common-lisp:nil
                       ((filter :initarg :filter :initform common-lisp:nil
                         :type
                         (common-lisp:or operation-status-filter
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-permission-set-provisioning-status-request-filter
                         :shape "OperationStatusFilter" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (instance-arn :initarg :instance-arn :initform
                         (common-lisp:error ":instance-arn is required") :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-list-permission-set-provisioning-status-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-permission-set-provisioning-status-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-permission-set-provisioning-status-request-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-permission-set-provisioning-status-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-permission-set-provisioning-status-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-permission-set-provisioning-status-request
                    'make-list-permission-set-provisioning-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-set-provisioning-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-set-provisioning-status-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-set-provisioning-status-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-permission-set-provisioning-status-response
                       common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-permission-set-provisioning-status-response-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (permission-sets-provisioning-status :initarg
                         :permission-sets-provisioning-status :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          permission-set-provisioning-status-list
                          common-lisp:null)
                         :accessor
                         struct-shape-list-permission-set-provisioning-status-response-permission-sets-provisioning-status
                         :shape "PermissionSetProvisioningStatusList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-permission-set-provisioning-status-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-permission-set-provisioning-status-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-permission-set-provisioning-status-response
                    'make-list-permission-set-provisioning-status-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-set-provisioning-status-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-set-provisioning-status-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'permission-sets-provisioning-status))
      (common-lisp:list
       (common-lisp:cons "PermissionSetsProvisioningStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-set-provisioning-status-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-permission-sets-provisioned-to-account-request
                       common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-list-permission-sets-provisioned-to-account-request-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (instance-arn :initarg :instance-arn :initform
                         (common-lisp:error ":instance-arn is required") :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-list-permission-sets-provisioned-to-account-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-permission-sets-provisioned-to-account-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-permission-sets-provisioned-to-account-request-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (provisioning-status :initarg :provisioning-status
                         :initform common-lisp:nil :type
                         (common-lisp:or provisioning-status common-lisp:null)
                         :accessor
                         struct-shape-list-permission-sets-provisioned-to-account-request-provisioning-status
                         :shape "ProvisioningStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-permission-sets-provisioned-to-account-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-permission-sets-provisioned-to-account-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-permission-sets-provisioned-to-account-request
                    'make-list-permission-sets-provisioned-to-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-sets-provisioned-to-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-sets-provisioned-to-account-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'provisioning-status))
      (common-lisp:list
       (common-lisp:cons "ProvisioningStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-sets-provisioned-to-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-permission-sets-provisioned-to-account-response
                       common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-permission-sets-provisioned-to-account-response-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (permission-sets :initarg :permission-sets :initform
                         common-lisp:nil :type
                         (common-lisp:or permission-set-list common-lisp:null)
                         :accessor
                         struct-shape-list-permission-sets-provisioned-to-account-response-permission-sets
                         :shape "PermissionSetList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-permission-sets-provisioned-to-account-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-permission-sets-provisioned-to-account-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-permission-sets-provisioned-to-account-response
                    'make-list-permission-sets-provisioned-to-account-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-sets-provisioned-to-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-sets-provisioned-to-account-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-sets))
      (common-lisp:list
       (common-lisp:cons "PermissionSets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-sets-provisioned-to-account-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-permission-sets-request common-lisp:nil
                       ((instance-arn :initarg :instance-arn :initform
                         (common-lisp:error ":instance-arn is required") :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-list-permission-sets-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-permission-sets-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-permission-sets-request-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-permission-sets-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-permission-sets-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-permission-sets-request
                    'make-list-permission-sets-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-sets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-sets-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-sets-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-permission-sets-response common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-permission-sets-response-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (permission-sets :initarg :permission-sets :initform
                         common-lisp:nil :type
                         (common-lisp:or permission-set-list common-lisp:null)
                         :accessor
                         struct-shape-list-permission-sets-response-permission-sets
                         :shape "PermissionSetList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-permission-sets-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-permission-sets-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-permission-sets-response
                    'make-list-permission-sets-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-sets-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-sets-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-sets))
      (common-lisp:list
       (common-lisp:cons "PermissionSets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-sets-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((instance-arn :initarg :instance-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-list-tags-for-resource-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-request-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or taggable-resource-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-tags-for-resource-request-resource-arn
                         :shape "TaggableResourceArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-response-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-response-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-trusted-token-issuers-request common-lisp:nil
                       ((instance-arn :initarg :instance-arn :initform
                         (common-lisp:error ":instance-arn is required") :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-list-trusted-token-issuers-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-trusted-token-issuers-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-trusted-token-issuers-request-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-trusted-token-issuers-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-trusted-token-issuers-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-trusted-token-issuers-request
                    'make-list-trusted-token-issuers-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-trusted-token-issuers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-trusted-token-issuers-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-trusted-token-issuers-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-trusted-token-issuers-response common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-trusted-token-issuers-response-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (trusted-token-issuers :initarg :trusted-token-issuers
                         :initform common-lisp:nil :type
                         (common-lisp:or trusted-token-issuer-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-trusted-token-issuers-response-trusted-token-issuers
                         :shape "TrustedTokenIssuerList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-trusted-token-issuers-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-trusted-token-issuers-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-trusted-token-issuers-response
                    'make-list-trusted-token-issuers-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-trusted-token-issuers-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-trusted-token-issuers-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'trusted-token-issuers))
      (common-lisp:list
       (common-lisp:cons "TrustedTokenIssuers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-trusted-token-issuers-response))
   common-lisp:nil))
(common-lisp:deftype managed-policy-arn () 'common-lisp:string)
(common-lisp:deftype managed-policy-name () 'common-lisp:string)
(common-lisp:deftype managed-policy-path () 'common-lisp:string)
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype name () 'common-lisp:string)
(common-lisp:deftype name-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass oidc-jwt-configuration common-lisp:nil
                       ((claim-attribute-path :initarg :claim-attribute-path
                         :initform
                         (common-lisp:error
                          ":claim-attribute-path is required")
                         :type
                         (common-lisp:or claim-attribute-path common-lisp:null)
                         :accessor
                         struct-shape-oidc-jwt-configuration-claim-attribute-path
                         :shape "ClaimAttributePath" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (identity-store-attribute-path :initarg
                         :identity-store-attribute-path :initform
                         (common-lisp:error
                          ":identity-store-attribute-path is required")
                         :type (common-lisp:or jmespath common-lisp:null)
                         :accessor
                         struct-shape-oidc-jwt-configuration-identity-store-attribute-path
                         :shape "JMESPath" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (issuer-url :initarg :issuer-url :initform
                         (common-lisp:error ":issuer-url is required") :type
                         (common-lisp:or trusted-token-issuer-url
                                         common-lisp:null)
                         :accessor
                         struct-shape-oidc-jwt-configuration-issuer-url :shape
                         "TrustedTokenIssuerUrl" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (jwks-retrieval-option :initarg :jwks-retrieval-option
                         :initform
                         (common-lisp:error
                          ":jwks-retrieval-option is required")
                         :type
                         (common-lisp:or jwks-retrieval-option
                                         common-lisp:null)
                         :accessor
                         struct-shape-oidc-jwt-configuration-jwks-retrieval-option
                         :shape "JwksRetrievalOption" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-oidc-jwt-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'oidc-jwt-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'oidc-jwt-configuration 'make-oidc-jwt-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          oidc-jwt-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          oidc-jwt-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'claim-attribute-path))
      (common-lisp:list
       (common-lisp:cons "ClaimAttributePath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'identity-store-attribute-path))
      (common-lisp:list
       (common-lisp:cons "IdentityStoreAttributePath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'issuer-url))
      (common-lisp:list
       (common-lisp:cons "IssuerUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'jwks-retrieval-option))
      (common-lisp:list
       (common-lisp:cons "JwksRetrievalOption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          oidc-jwt-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass oidc-jwt-update-configuration common-lisp:nil
                       ((claim-attribute-path :initarg :claim-attribute-path
                         :initform common-lisp:nil :type
                         (common-lisp:or claim-attribute-path common-lisp:null)
                         :accessor
                         struct-shape-oidc-jwt-update-configuration-claim-attribute-path
                         :shape "ClaimAttributePath" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (identity-store-attribute-path :initarg
                         :identity-store-attribute-path :initform
                         common-lisp:nil :type
                         (common-lisp:or jmespath common-lisp:null) :accessor
                         struct-shape-oidc-jwt-update-configuration-identity-store-attribute-path
                         :shape "JMESPath" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (jwks-retrieval-option :initarg :jwks-retrieval-option
                         :initform common-lisp:nil :type
                         (common-lisp:or jwks-retrieval-option
                                         common-lisp:null)
                         :accessor
                         struct-shape-oidc-jwt-update-configuration-jwks-retrieval-option
                         :shape "JwksRetrievalOption" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-oidc-jwt-update-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'oidc-jwt-update-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'oidc-jwt-update-configuration
                    'make-oidc-jwt-update-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          oidc-jwt-update-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          oidc-jwt-update-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'claim-attribute-path))
      (common-lisp:list
       (common-lisp:cons "ClaimAttributePath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'identity-store-attribute-path))
      (common-lisp:list
       (common-lisp:cons "IdentityStoreAttributePath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'jwks-retrieval-option))
      (common-lisp:list
       (common-lisp:cons "JwksRetrievalOption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          oidc-jwt-update-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass operation-status-filter common-lisp:nil
                       ((status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or status-values common-lisp:null)
                         :accessor struct-shape-operation-status-filter-status
                         :shape "StatusValues" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-operation-status-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'operation-status-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'operation-status-filter 'make-operation-status-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          operation-status-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          operation-status-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          operation-status-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass permission-set common-lisp:nil
                       ((created-date :initarg :created-date :initform
                         common-lisp:nil :type
                         (common-lisp:or date common-lisp:null) :accessor
                         struct-shape-permission-set-created-date :shape "Date"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or permission-set-description
                                         common-lisp:null)
                         :accessor struct-shape-permission-set-description
                         :shape "PermissionSetDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or permission-set-name common-lisp:null)
                         :accessor struct-shape-permission-set-name :shape
                         "PermissionSetName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (permission-set-arn :initarg :permission-set-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or permission-set-arn common-lisp:null)
                         :accessor
                         struct-shape-permission-set-permission-set-arn :shape
                         "PermissionSetArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (relay-state :initarg :relay-state :initform
                         common-lisp:nil :type
                         (common-lisp:or relay-state common-lisp:null)
                         :accessor struct-shape-permission-set-relay-state
                         :shape "RelayState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (session-duration :initarg :session-duration :initform
                         common-lisp:nil :type
                         (common-lisp:or duration common-lisp:null) :accessor
                         struct-shape-permission-set-session-duration :shape
                         "Duration" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-permission-set
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'permission-set
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'permission-set 'make-permission-set))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input permission-set))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input permission-set))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'relay-state))
      (common-lisp:list
       (common-lisp:cons "RelayState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'session-duration))
      (common-lisp:list
       (common-lisp:cons "SessionDuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input permission-set))
   common-lisp:nil))
(common-lisp:deftype permission-set-arn () 'common-lisp:string)
(common-lisp:deftype permission-set-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype permission-set-list ()
   '(trivial-types:proper-list permission-set-arn))
 (common-lisp:defun make-permission-set-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list permission-set-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype permission-set-name () 'common-lisp:string)
(common-lisp:deftype permission-set-policy-document () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass permission-set-provisioning-status common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-permission-set-provisioning-status-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-date :initarg :created-date :initform
                         common-lisp:nil :type
                         (common-lisp:or date common-lisp:null) :accessor
                         struct-shape-permission-set-provisioning-status-created-date
                         :shape "Date" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (failure-reason :initarg :failure-reason :initform
                         common-lisp:nil :type
                         (common-lisp:or reason common-lisp:null) :accessor
                         struct-shape-permission-set-provisioning-status-failure-reason
                         :shape "Reason" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (permission-set-arn :initarg :permission-set-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or permission-set-arn common-lisp:null)
                         :accessor
                         struct-shape-permission-set-provisioning-status-permission-set-arn
                         :shape "PermissionSetArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (request-id :initarg :request-id :initform
                         common-lisp:nil :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-permission-set-provisioning-status-request-id
                         :shape "UUId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or status-values common-lisp:null)
                         :accessor
                         struct-shape-permission-set-provisioning-status-status
                         :shape "StatusValues" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-permission-set-provisioning-status
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'permission-set-provisioning-status
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'permission-set-provisioning-status
                    'make-permission-set-provisioning-status))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          permission-set-provisioning-status))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          permission-set-provisioning-status))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failure-reason))
      (common-lisp:list
       (common-lisp:cons "FailureReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-id))
      (common-lisp:list
       (common-lisp:cons "RequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          permission-set-provisioning-status))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype permission-set-provisioning-status-list ()
   '(trivial-types:proper-list permission-set-provisioning-status-metadata))
 (common-lisp:defun make-permission-set-provisioning-status-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            permission-set-provisioning-status-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass permission-set-provisioning-status-metadata
                       common-lisp:nil
                       ((created-date :initarg :created-date :initform
                         common-lisp:nil :type
                         (common-lisp:or date common-lisp:null) :accessor
                         struct-shape-permission-set-provisioning-status-metadata-created-date
                         :shape "Date" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (request-id :initarg :request-id :initform
                         common-lisp:nil :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-permission-set-provisioning-status-metadata-request-id
                         :shape "UUId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or status-values common-lisp:null)
                         :accessor
                         struct-shape-permission-set-provisioning-status-metadata-status
                         :shape "StatusValues" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-permission-set-provisioning-status-metadata
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'permission-set-provisioning-status-metadata
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'permission-set-provisioning-status-metadata
                    'make-permission-set-provisioning-status-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          permission-set-provisioning-status-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          permission-set-provisioning-status-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-id))
      (common-lisp:list
       (common-lisp:cons "RequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          permission-set-provisioning-status-metadata))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass permissions-boundary common-lisp:nil
                       ((customer-managed-policy-reference :initarg
                         :customer-managed-policy-reference :initform
                         common-lisp:nil :type
                         (common-lisp:or customer-managed-policy-reference
                                         common-lisp:null)
                         :accessor
                         struct-shape-permissions-boundary-customer-managed-policy-reference
                         :shape "CustomerManagedPolicyReference" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (managed-policy-arn :initarg :managed-policy-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or managed-policy-arn common-lisp:null)
                         :accessor
                         struct-shape-permissions-boundary-managed-policy-arn
                         :shape "ManagedPolicyArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-permissions-boundary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'permissions-boundary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'permissions-boundary 'make-permissions-boundary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input permissions-boundary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input permissions-boundary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'customer-managed-policy-reference))
      (common-lisp:list
       (common-lisp:cons "CustomerManagedPolicyReference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'managed-policy-arn))
      (common-lisp:list
       (common-lisp:cons "ManagedPolicyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input permissions-boundary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass portal-options common-lisp:nil
                       ((sign-in-options :initarg :sign-in-options :initform
                         common-lisp:nil :type
                         (common-lisp:or sign-in-options common-lisp:null)
                         :accessor struct-shape-portal-options-sign-in-options
                         :shape "SignInOptions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (visibility :initarg :visibility :initform
                         common-lisp:nil :type
                         (common-lisp:or application-visibility
                                         common-lisp:null)
                         :accessor struct-shape-portal-options-visibility
                         :shape "ApplicationVisibility" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-portal-options
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'portal-options
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'portal-options 'make-portal-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input portal-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input portal-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sign-in-options))
      (common-lisp:list
       (common-lisp:cons "SignInOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'visibility))
      (common-lisp:list
       (common-lisp:cons "Visibility"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input portal-options))
   common-lisp:nil))
(common-lisp:deftype principal-id () 'common-lisp:string)
(common-lisp:deftype principal-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass provision-permission-set-request common-lisp:nil
                       ((instance-arn :initarg :instance-arn :initform
                         (common-lisp:error ":instance-arn is required") :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-provision-permission-set-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (permission-set-arn :initarg :permission-set-arn
                         :initform
                         (common-lisp:error ":permission-set-arn is required")
                         :type
                         (common-lisp:or permission-set-arn common-lisp:null)
                         :accessor
                         struct-shape-provision-permission-set-request-permission-set-arn
                         :shape "PermissionSetArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (target-id :initarg :target-id :initform
                         common-lisp:nil :type
                         (common-lisp:or target-id common-lisp:null) :accessor
                         struct-shape-provision-permission-set-request-target-id
                         :shape "TargetId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (target-type :initarg :target-type :initform
                         (common-lisp:error ":target-type is required") :type
                         (common-lisp:or provision-target-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-provision-permission-set-request-target-type
                         :shape "ProvisionTargetType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-provision-permission-set-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'provision-permission-set-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'provision-permission-set-request
                    'make-provision-permission-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          provision-permission-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          provision-permission-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-id))
      (common-lisp:list
       (common-lisp:cons "TargetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-type))
      (common-lisp:list
       (common-lisp:cons "TargetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          provision-permission-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass provision-permission-set-response common-lisp:nil
                       ((permission-set-provisioning-status :initarg
                         :permission-set-provisioning-status :initform
                         common-lisp:nil :type
                         (common-lisp:or permission-set-provisioning-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-provision-permission-set-response-permission-set-provisioning-status
                         :shape "PermissionSetProvisioningStatus" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-provision-permission-set-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'provision-permission-set-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'provision-permission-set-response
                    'make-provision-permission-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          provision-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          provision-permission-set-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'permission-set-provisioning-status))
      (common-lisp:list
       (common-lisp:cons "PermissionSetProvisioningStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          provision-permission-set-response))
   common-lisp:nil))
(common-lisp:deftype provision-target-type () 'common-lisp:string)
(common-lisp:deftype provisioning-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass put-application-access-scope-request common-lisp:nil
                       ((application-arn :initarg :application-arn :initform
                         (common-lisp:error ":application-arn is required")
                         :type
                         (common-lisp:or application-arn common-lisp:null)
                         :accessor
                         struct-shape-put-application-access-scope-request-application-arn
                         :shape "ApplicationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (authorized-targets :initarg :authorized-targets
                         :initform common-lisp:nil :type
                         (common-lisp:or scope-targets common-lisp:null)
                         :accessor
                         struct-shape-put-application-access-scope-request-authorized-targets
                         :shape "ScopeTargets" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (scope :initarg :scope :initform
                         (common-lisp:error ":scope is required") :type
                         (common-lisp:or scope common-lisp:null) :accessor
                         struct-shape-put-application-access-scope-request-scope
                         :shape "Scope" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-application-access-scope-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-application-access-scope-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-application-access-scope-request
                    'make-put-application-access-scope-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-application-access-scope-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-application-access-scope-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorized-targets))
      (common-lisp:list
       (common-lisp:cons "AuthorizedTargets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scope))
      (common-lisp:list
       (common-lisp:cons "Scope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-application-access-scope-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-application-assignment-configuration-request
                       common-lisp:nil
                       ((application-arn :initarg :application-arn :initform
                         (common-lisp:error ":application-arn is required")
                         :type
                         (common-lisp:or application-arn common-lisp:null)
                         :accessor
                         struct-shape-put-application-assignment-configuration-request-application-arn
                         :shape "ApplicationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (assignment-required :initarg :assignment-required
                         :initform
                         (common-lisp:error ":assignment-required is required")
                         :type
                         (common-lisp:or assignment-required common-lisp:null)
                         :accessor
                         struct-shape-put-application-assignment-configuration-request-assignment-required
                         :shape "AssignmentRequired" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-application-assignment-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-application-assignment-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-application-assignment-configuration-request
                    'make-put-application-assignment-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-application-assignment-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-application-assignment-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'assignment-required))
      (common-lisp:list
       (common-lisp:cons "AssignmentRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-application-assignment-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-application-assignment-configuration-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-application-assignment-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-application-assignment-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-application-assignment-configuration-response
                    'make-put-application-assignment-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-application-assignment-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-application-assignment-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-application-assignment-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-application-authentication-method-request
                       common-lisp:nil
                       ((application-arn :initarg :application-arn :initform
                         (common-lisp:error ":application-arn is required")
                         :type
                         (common-lisp:or application-arn common-lisp:null)
                         :accessor
                         struct-shape-put-application-authentication-method-request-application-arn
                         :shape "ApplicationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (authentication-method :initarg :authentication-method
                         :initform
                         (common-lisp:error
                          ":authentication-method is required")
                         :type
                         (common-lisp:or authentication-method
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-application-authentication-method-request-authentication-method
                         :shape "AuthenticationMethod" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (authentication-method-type :initarg
                         :authentication-method-type :initform
                         (common-lisp:error
                          ":authentication-method-type is required")
                         :type
                         (common-lisp:or authentication-method-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-application-authentication-method-request-authentication-method-type
                         :shape "AuthenticationMethodType" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-application-authentication-method-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-application-authentication-method-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-application-authentication-method-request
                    'make-put-application-authentication-method-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-application-authentication-method-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-application-authentication-method-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-method))
      (common-lisp:list
       (common-lisp:cons "AuthenticationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-method-type))
      (common-lisp:list
       (common-lisp:cons "AuthenticationMethodType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-application-authentication-method-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-application-grant-request common-lisp:nil
                       ((application-arn :initarg :application-arn :initform
                         (common-lisp:error ":application-arn is required")
                         :type
                         (common-lisp:or application-arn common-lisp:null)
                         :accessor
                         struct-shape-put-application-grant-request-application-arn
                         :shape "ApplicationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (grant :initarg :grant :initform
                         (common-lisp:error ":grant is required") :type
                         (common-lisp:or grant common-lisp:null) :accessor
                         struct-shape-put-application-grant-request-grant
                         :shape "Grant" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (grant-type :initarg :grant-type :initform
                         (common-lisp:error ":grant-type is required") :type
                         (common-lisp:or grant-type common-lisp:null) :accessor
                         struct-shape-put-application-grant-request-grant-type
                         :shape "GrantType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-application-grant-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-application-grant-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-application-grant-request
                    'make-put-application-grant-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-application-grant-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-application-grant-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'grant))
      (common-lisp:list
       (common-lisp:cons "Grant"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'grant-type))
      (common-lisp:list
       (common-lisp:cons "GrantType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-application-grant-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-inline-policy-to-permission-set-request
                       common-lisp:nil
                       ((inline-policy :initarg :inline-policy :initform
                         (common-lisp:error ":inline-policy is required") :type
                         (common-lisp:or permission-set-policy-document
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-inline-policy-to-permission-set-request-inline-policy
                         :shape "PermissionSetPolicyDocument" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (instance-arn :initarg :instance-arn :initform
                         (common-lisp:error ":instance-arn is required") :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-put-inline-policy-to-permission-set-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (permission-set-arn :initarg :permission-set-arn
                         :initform
                         (common-lisp:error ":permission-set-arn is required")
                         :type
                         (common-lisp:or permission-set-arn common-lisp:null)
                         :accessor
                         struct-shape-put-inline-policy-to-permission-set-request-permission-set-arn
                         :shape "PermissionSetArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-inline-policy-to-permission-set-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-inline-policy-to-permission-set-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-inline-policy-to-permission-set-request
                    'make-put-inline-policy-to-permission-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-inline-policy-to-permission-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-inline-policy-to-permission-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inline-policy))
      (common-lisp:list
       (common-lisp:cons "InlinePolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-inline-policy-to-permission-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-inline-policy-to-permission-set-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-inline-policy-to-permission-set-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-inline-policy-to-permission-set-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-inline-policy-to-permission-set-response
                    'make-put-inline-policy-to-permission-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-inline-policy-to-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-inline-policy-to-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-inline-policy-to-permission-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-permissions-boundary-to-permission-set-request
                       common-lisp:nil
                       ((instance-arn :initarg :instance-arn :initform
                         (common-lisp:error ":instance-arn is required") :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-put-permissions-boundary-to-permission-set-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (permission-set-arn :initarg :permission-set-arn
                         :initform
                         (common-lisp:error ":permission-set-arn is required")
                         :type
                         (common-lisp:or permission-set-arn common-lisp:null)
                         :accessor
                         struct-shape-put-permissions-boundary-to-permission-set-request-permission-set-arn
                         :shape "PermissionSetArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (permissions-boundary :initarg :permissions-boundary
                         :initform
                         (common-lisp:error
                          ":permissions-boundary is required")
                         :type
                         (common-lisp:or permissions-boundary common-lisp:null)
                         :accessor
                         struct-shape-put-permissions-boundary-to-permission-set-request-permissions-boundary
                         :shape "PermissionsBoundary" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-permissions-boundary-to-permission-set-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-permissions-boundary-to-permission-set-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-permissions-boundary-to-permission-set-request
                    'make-put-permissions-boundary-to-permission-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-permissions-boundary-to-permission-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-permissions-boundary-to-permission-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'permissions-boundary))
      (common-lisp:list
       (common-lisp:cons "PermissionsBoundary"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-permissions-boundary-to-permission-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-permissions-boundary-to-permission-set-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-permissions-boundary-to-permission-set-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-permissions-boundary-to-permission-set-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-permissions-boundary-to-permission-set-response
                    'make-put-permissions-boundary-to-permission-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-permissions-boundary-to-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-permissions-boundary-to-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-permissions-boundary-to-permission-set-response))
   common-lisp:nil))
(common-lisp:deftype reason () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype redirect-uris () '(trivial-types:proper-list uri))
 (common-lisp:defun make-redirect-uris
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list uri))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass refresh-token-grant common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-refresh-token-grant
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'refresh-token-grant
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'refresh-token-grant 'make-refresh-token-grant))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input refresh-token-grant))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input refresh-token-grant))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input refresh-token-grant))
   common-lisp:nil))
(common-lisp:deftype relay-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (sso-admin-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:deftype resource-not-found-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass resource-server-config common-lisp:nil
                       ((scopes :initarg :scopes :initform common-lisp:nil
                         :type
                         (common-lisp:or resource-server-scopes
                                         common-lisp:null)
                         :accessor struct-shape-resource-server-config-scopes
                         :shape "ResourceServerScopes" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-resource-server-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'resource-server-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'resource-server-config 'make-resource-server-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          resource-server-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          resource-server-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scopes))
      (common-lisp:list
       (common-lisp:cons "Scopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          resource-server-config))
   common-lisp:nil))
(common-lisp:deftype resource-server-scope () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass resource-server-scope-details common-lisp:nil
                       ((detailed-title :initarg :detailed-title :initform
                         common-lisp:nil :type
                         (common-lisp:or description common-lisp:null)
                         :accessor
                         struct-shape-resource-server-scope-details-detailed-title
                         :shape "Description" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (long-description :initarg :long-description :initform
                         common-lisp:nil :type
                         (common-lisp:or description common-lisp:null)
                         :accessor
                         struct-shape-resource-server-scope-details-long-description
                         :shape "Description" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-resource-server-scope-details
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'resource-server-scope-details
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'resource-server-scope-details
                    'make-resource-server-scope-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          resource-server-scope-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          resource-server-scope-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'detailed-title))
      (common-lisp:list
       (common-lisp:cons "DetailedTitle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'long-description))
      (common-lisp:list
       (common-lisp:cons "LongDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          resource-server-scope-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype resource-server-scopes () 'common-lisp:hash-table)
 (common-lisp:defun make-resource-server-scopes
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype scope () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass scope-details common-lisp:nil
                       ((authorized-targets :initarg :authorized-targets
                         :initform common-lisp:nil :type
                         (common-lisp:or scope-targets common-lisp:null)
                         :accessor
                         struct-shape-scope-details-authorized-targets :shape
                         "ScopeTargets" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (scope :initarg :scope :initform
                         (common-lisp:error ":scope is required") :type
                         (common-lisp:or scope common-lisp:null) :accessor
                         struct-shape-scope-details-scope :shape "Scope"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-scope-details
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'scope-details
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'scope-details 'make-scope-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input scope-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input scope-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorized-targets))
      (common-lisp:list
       (common-lisp:cons "AuthorizedTargets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scope))
      (common-lisp:list
       (common-lisp:cons "Scope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input scope-details))
   common-lisp:nil))
(common-lisp:deftype scope-target () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype scope-targets ()
   '(trivial-types:proper-list scope-target))
 (common-lisp:defun make-scope-targets
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list scope-target))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype scopes () '(trivial-types:proper-list scope-details))
 (common-lisp:defun make-scopes
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list scope-details))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition service-quota-exceeded-exception
     (sso-admin-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-quota-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-quota-exceeded-exception
                    'service-quota-exceeded-exception-message)))
(common-lisp:deftype service-quota-exceeded-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass sign-in-options common-lisp:nil
                       ((application-url :initarg :application-url :initform
                         common-lisp:nil :type
                         (common-lisp:or application-url common-lisp:null)
                         :accessor struct-shape-sign-in-options-application-url
                         :shape "ApplicationUrl" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (origin :initarg :origin :initform
                         (common-lisp:error ":origin is required") :type
                         (common-lisp:or sign-in-origin common-lisp:null)
                         :accessor struct-shape-sign-in-options-origin :shape
                         "SignInOrigin" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-sign-in-options
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'sign-in-options
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'sign-in-options 'make-sign-in-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sign-in-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sign-in-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-url))
      (common-lisp:list
       (common-lisp:cons "ApplicationUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origin))
      (common-lisp:list
       (common-lisp:cons "Origin"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sign-in-options))
   common-lisp:nil))
(common-lisp:deftype sign-in-origin () 'common-lisp:string)
(common-lisp:deftype status-values () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass tag common-lisp:nil
                       ((key :initarg :key :initform
                         (common-lisp:error ":key is required") :type
                         (common-lisp:or tag-key common-lisp:null) :accessor
                         struct-shape-tag-key :shape "TagKey" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (value :initarg :value :initform
                         (common-lisp:error ":value is required") :type
                         (common-lisp:or tag-value common-lisp:null) :accessor
                         struct-shape-tag-value :shape "TagValue" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun make-tag-key-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun make-tag-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((instance-arn :initarg :instance-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-tag-resource-request-instance-arn :shape
                         "InstanceArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or taggable-resource-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-tag-resource-request-resource-arn :shape
                         "TaggableResourceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-tag-resource-request-tags :shape
                         "TagList" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:deftype taggable-resource-arn () 'common-lisp:string)
(common-lisp:deftype target-id () 'common-lisp:string)
(common-lisp:deftype target-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (sso-admin-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message)))
(common-lisp:deftype throttling-exception-message () 'common-lisp:string)
(common-lisp:deftype token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass token-exchange-grant common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-token-exchange-grant
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'token-exchange-grant
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'token-exchange-grant 'make-token-exchange-grant))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input token-exchange-grant))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input token-exchange-grant))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input token-exchange-grant))
   common-lisp:nil))
(common-lisp:deftype token-issuer-audience () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype token-issuer-audiences ()
   '(trivial-types:proper-list token-issuer-audience))
 (common-lisp:defun make-token-issuer-audiences
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list token-issuer-audience))
   aws-sdk/generator/shape::members))
(common-lisp:deftype trusted-token-issuer-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass trusted-token-issuer-configuration common-lisp:nil
                       ((oidc-jwt-configuration :initarg
                         :oidc-jwt-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or oidc-jwt-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-trusted-token-issuer-configuration-oidc-jwt-configuration
                         :shape "OidcJwtConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-trusted-token-issuer-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'trusted-token-issuer-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'trusted-token-issuer-configuration
                    'make-trusted-token-issuer-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          trusted-token-issuer-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          trusted-token-issuer-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'oidc-jwt-configuration))
      (common-lisp:list
       (common-lisp:cons "OidcJwtConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          trusted-token-issuer-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype trusted-token-issuer-list ()
   '(trivial-types:proper-list trusted-token-issuer-metadata))
 (common-lisp:defun make-trusted-token-issuer-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            trusted-token-issuer-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass trusted-token-issuer-metadata common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or trusted-token-issuer-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-trusted-token-issuer-metadata-name :shape
                         "TrustedTokenIssuerName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (trusted-token-issuer-arn :initarg
                         :trusted-token-issuer-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or trusted-token-issuer-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-trusted-token-issuer-metadata-trusted-token-issuer-arn
                         :shape "TrustedTokenIssuerArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (trusted-token-issuer-type :initarg
                         :trusted-token-issuer-type :initform common-lisp:nil
                         :type
                         (common-lisp:or trusted-token-issuer-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-trusted-token-issuer-metadata-trusted-token-issuer-type
                         :shape "TrustedTokenIssuerType" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-trusted-token-issuer-metadata
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'trusted-token-issuer-metadata
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'trusted-token-issuer-metadata
                    'make-trusted-token-issuer-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          trusted-token-issuer-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          trusted-token-issuer-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'trusted-token-issuer-arn))
      (common-lisp:list
       (common-lisp:cons "TrustedTokenIssuerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'trusted-token-issuer-type))
      (common-lisp:list
       (common-lisp:cons "TrustedTokenIssuerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          trusted-token-issuer-metadata))
   common-lisp:nil))
(common-lisp:deftype trusted-token-issuer-name () 'common-lisp:string)
(common-lisp:deftype trusted-token-issuer-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass trusted-token-issuer-update-configuration
                       common-lisp:nil
                       ((oidc-jwt-configuration :initarg
                         :oidc-jwt-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or oidc-jwt-update-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-trusted-token-issuer-update-configuration-oidc-jwt-configuration
                         :shape "OidcJwtUpdateConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-trusted-token-issuer-update-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'trusted-token-issuer-update-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'trusted-token-issuer-update-configuration
                    'make-trusted-token-issuer-update-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          trusted-token-issuer-update-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          trusted-token-issuer-update-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'oidc-jwt-configuration))
      (common-lisp:list
       (common-lisp:cons "OidcJwtConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          trusted-token-issuer-update-configuration))
   common-lisp:nil))
(common-lisp:deftype trusted-token-issuer-url () 'common-lisp:string)
(common-lisp:deftype uri () 'common-lisp:string)
(common-lisp:deftype uuid () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((instance-arn :initarg :instance-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-untag-resource-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or taggable-resource-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-untag-resource-request-resource-arn
                         :shape "TaggableResourceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tag-keys :initarg :tag-keys :initform
                         (common-lisp:error ":tag-keys is required") :type
                         (common-lisp:or tag-key-list common-lisp:null)
                         :accessor struct-shape-untag-resource-request-tag-keys
                         :shape "TagKeyList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "TagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-application-portal-options common-lisp:nil
                       ((sign-in-options :initarg :sign-in-options :initform
                         common-lisp:nil :type
                         (common-lisp:or sign-in-options common-lisp:null)
                         :accessor
                         struct-shape-update-application-portal-options-sign-in-options
                         :shape "SignInOptions" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-application-portal-options
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-application-portal-options
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-application-portal-options
                    'make-update-application-portal-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-application-portal-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-application-portal-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sign-in-options))
      (common-lisp:list
       (common-lisp:cons "SignInOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-application-portal-options))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-application-request common-lisp:nil
                       ((application-arn :initarg :application-arn :initform
                         (common-lisp:error ":application-arn is required")
                         :type
                         (common-lisp:or application-arn common-lisp:null)
                         :accessor
                         struct-shape-update-application-request-application-arn
                         :shape "ApplicationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or description common-lisp:null)
                         :accessor
                         struct-shape-update-application-request-description
                         :shape "Description" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or name-type common-lisp:null) :accessor
                         struct-shape-update-application-request-name :shape
                         "NameType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (portal-options :initarg :portal-options :initform
                         common-lisp:nil :type
                         (common-lisp:or update-application-portal-options
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-application-request-portal-options
                         :shape "UpdateApplicationPortalOptions" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or application-status common-lisp:null)
                         :accessor
                         struct-shape-update-application-request-status :shape
                         "ApplicationStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-application-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-application-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-application-request
                    'make-update-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-application-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'portal-options))
      (common-lisp:list
       (common-lisp:cons "PortalOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-application-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-application-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-application-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-application-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-application-response
                    'make-update-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-application-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  update-instance-access-control-attribute-configuration-request
  common-lisp:nil
  ((instance-access-control-attribute-configuration :initarg
    :instance-access-control-attribute-configuration :initform
    (common-lisp:error
     ":instance-access-control-attribute-configuration is required")
    :type
    (common-lisp:or instance-access-control-attribute-configuration
                    common-lisp:null)
    :accessor
    struct-shape-update-instance-access-control-attribute-configuration-request-instance-access-control-attribute-configuration
    :shape "InstanceAccessControlAttributeConfiguration" :location
    common-lisp:nil :location-name common-lisp:nil)
   (instance-arn :initarg :instance-arn :initform
    (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null) :accessor
    struct-shape-update-instance-access-control-attribute-configuration-request-instance-arn
    :shape "InstanceArn" :location common-lisp:nil :location-name
    common-lisp:nil))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-instance-access-control-attribute-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-instance-access-control-attribute-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list
   'update-instance-access-control-attribute-configuration-request
   'make-update-instance-access-control-attribute-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-instance-access-control-attribute-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-instance-access-control-attribute-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'instance-access-control-attribute-configuration))
      (common-lisp:list
       (common-lisp:cons "InstanceAccessControlAttributeConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-instance-access-control-attribute-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  update-instance-access-control-attribute-configuration-response
  common-lisp:nil common-lisp:nil
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-instance-access-control-attribute-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-instance-access-control-attribute-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list
   'update-instance-access-control-attribute-configuration-response
   'make-update-instance-access-control-attribute-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-instance-access-control-attribute-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-instance-access-control-attribute-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-instance-access-control-attribute-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-instance-request common-lisp:nil
                       ((instance-arn :initarg :instance-arn :initform
                         (common-lisp:error ":instance-arn is required") :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-update-instance-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name-type common-lisp:null) :accessor
                         struct-shape-update-instance-request-name :shape
                         "NameType" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-instance-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-instance-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-instance-request 'make-update-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-instance-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-instance-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-instance-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-instance-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-instance-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-instance-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-instance-response 'make-update-instance-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-instance-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-instance-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-instance-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-permission-set-request common-lisp:nil
                       ((description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or permission-set-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-permission-set-request-description
                         :shape "PermissionSetDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (instance-arn :initarg :instance-arn :initform
                         (common-lisp:error ":instance-arn is required") :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-update-permission-set-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (permission-set-arn :initarg :permission-set-arn
                         :initform
                         (common-lisp:error ":permission-set-arn is required")
                         :type
                         (common-lisp:or permission-set-arn common-lisp:null)
                         :accessor
                         struct-shape-update-permission-set-request-permission-set-arn
                         :shape "PermissionSetArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (relay-state :initarg :relay-state :initform
                         common-lisp:nil :type
                         (common-lisp:or relay-state common-lisp:null)
                         :accessor
                         struct-shape-update-permission-set-request-relay-state
                         :shape "RelayState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (session-duration :initarg :session-duration :initform
                         common-lisp:nil :type
                         (common-lisp:or duration common-lisp:null) :accessor
                         struct-shape-update-permission-set-request-session-duration
                         :shape "Duration" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-permission-set-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-permission-set-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-permission-set-request
                    'make-update-permission-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-permission-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-permission-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'relay-state))
      (common-lisp:list
       (common-lisp:cons "RelayState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'session-duration))
      (common-lisp:list
       (common-lisp:cons "SessionDuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-permission-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-permission-set-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-permission-set-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-permission-set-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-permission-set-response
                    'make-update-permission-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-permission-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-trusted-token-issuer-request common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or trusted-token-issuer-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-trusted-token-issuer-request-name
                         :shape "TrustedTokenIssuerName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (trusted-token-issuer-arn :initarg
                         :trusted-token-issuer-arn :initform
                         (common-lisp:error
                          ":trusted-token-issuer-arn is required")
                         :type
                         (common-lisp:or trusted-token-issuer-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-trusted-token-issuer-request-trusted-token-issuer-arn
                         :shape "TrustedTokenIssuerArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (trusted-token-issuer-configuration :initarg
                         :trusted-token-issuer-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          trusted-token-issuer-update-configuration
                          common-lisp:null)
                         :accessor
                         struct-shape-update-trusted-token-issuer-request-trusted-token-issuer-configuration
                         :shape "TrustedTokenIssuerUpdateConfiguration"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-trusted-token-issuer-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-trusted-token-issuer-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-trusted-token-issuer-request
                    'make-update-trusted-token-issuer-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-trusted-token-issuer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-trusted-token-issuer-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'trusted-token-issuer-arn))
      (common-lisp:list
       (common-lisp:cons "TrustedTokenIssuerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'trusted-token-issuer-configuration))
      (common-lisp:list
       (common-lisp:cons "TrustedTokenIssuerConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-trusted-token-issuer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-trusted-token-issuer-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-trusted-token-issuer-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-trusted-token-issuer-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-trusted-token-issuer-response
                    'make-update-trusted-token-issuer-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-trusted-token-issuer-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-trusted-token-issuer-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-trusted-token-issuer-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (sso-admin-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message)))
(common-lisp:deftype validation-exception-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun attach-customer-managed-policy-reference-to-permission-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key customer-managed-policy-reference
                     instance-arn permission-set-arn)
   (common-lisp:declare
    (common-lisp:ignorable customer-managed-policy-reference instance-arn
     permission-set-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-attach-customer-managed-policy-reference-to-permission-set-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AttachCustomerManagedPolicyReferenceToPermissionSet"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export
  'attach-customer-managed-policy-reference-to-permission-set))
(common-lisp:progn
 (common-lisp:defun attach-managed-policy-to-permission-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn managed-policy-arn
                     permission-set-arn)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn managed-policy-arn permission-set-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-attach-managed-policy-to-permission-set-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AttachManagedPolicyToPermissionSet"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'attach-managed-policy-to-permission-set))
(common-lisp:progn
 (common-lisp:defun create-account-assignment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn permission-set-arn
                     principal-id principal-type target-id target-type)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn permission-set-arn principal-id
     principal-type target-id target-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-account-assignment-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateAccountAssignment"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-account-assignment))
(common-lisp:progn
 (common-lisp:defun create-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-provider-arn client-token
                     description instance-arn name portal-options status tags)
   (common-lisp:declare
    (common-lisp:ignorable application-provider-arn client-token description
     instance-arn name portal-options status tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-application-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateApplication"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-application))
(common-lisp:progn
 (common-lisp:defun create-application-assignment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn principal-id
                     principal-type)
   (common-lisp:declare
    (common-lisp:ignorable application-arn principal-id principal-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-application-assignment-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateApplicationAssignment"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-application-assignment))
(common-lisp:progn
 (common-lisp:defun create-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token name tags)
   (common-lisp:declare (common-lisp:ignorable client-token name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateInstance"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-instance))
(common-lisp:progn
 (common-lisp:defun create-instance-access-control-attribute-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key
                     instance-access-control-attribute-configuration
                     instance-arn)
   (common-lisp:declare
    (common-lisp:ignorable instance-access-control-attribute-configuration
     instance-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-instance-access-control-attribute-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateInstanceAccessControlAttributeConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-instance-access-control-attribute-configuration))
(common-lisp:progn
 (common-lisp:defun create-permission-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key description instance-arn name relay-state
                     session-duration tags)
   (common-lisp:declare
    (common-lisp:ignorable description instance-arn name relay-state
     session-duration tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-permission-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreatePermissionSet"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-permission-set))
(common-lisp:progn
 (common-lisp:defun create-trusted-token-issuer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token instance-arn name tags
                     trusted-token-issuer-configuration
                     trusted-token-issuer-type)
   (common-lisp:declare
    (common-lisp:ignorable client-token instance-arn name tags
     trusted-token-issuer-configuration trusted-token-issuer-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-trusted-token-issuer-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateTrustedTokenIssuer"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-trusted-token-issuer))
(common-lisp:progn
 (common-lisp:defun delete-account-assignment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn permission-set-arn
                     principal-id principal-type target-id target-type)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn permission-set-arn principal-id
     principal-type target-id target-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-account-assignment-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteAccountAssignment"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-account-assignment))
(common-lisp:progn
 (common-lisp:defun delete-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn)
   (common-lisp:declare (common-lisp:ignorable application-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-application-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteApplication"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-application))
(common-lisp:progn
 (common-lisp:defun delete-application-access-scope
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn scope)
   (common-lisp:declare (common-lisp:ignorable application-arn scope))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-application-access-scope-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteApplicationAccessScope"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-application-access-scope))
(common-lisp:progn
 (common-lisp:defun delete-application-assignment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn principal-id
                     principal-type)
   (common-lisp:declare
    (common-lisp:ignorable application-arn principal-id principal-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-application-assignment-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteApplicationAssignment"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-application-assignment))
(common-lisp:progn
 (common-lisp:defun delete-application-authentication-method
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn
                     authentication-method-type)
   (common-lisp:declare
    (common-lisp:ignorable application-arn authentication-method-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-application-authentication-method-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteApplicationAuthenticationMethod"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-application-authentication-method))
(common-lisp:progn
 (common-lisp:defun delete-application-grant
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn grant-type)
   (common-lisp:declare (common-lisp:ignorable application-arn grant-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-application-grant-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteApplicationGrant"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-application-grant))
(common-lisp:progn
 (common-lisp:defun delete-inline-policy-from-permission-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn permission-set-arn)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn permission-set-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-inline-policy-from-permission-set-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteInlinePolicyFromPermissionSet"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-inline-policy-from-permission-set))
(common-lisp:progn
 (common-lisp:defun delete-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn)
   (common-lisp:declare (common-lisp:ignorable instance-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteInstance"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-instance))
(common-lisp:progn
 (common-lisp:defun delete-instance-access-control-attribute-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn)
   (common-lisp:declare (common-lisp:ignorable instance-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-instance-access-control-attribute-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteInstanceAccessControlAttributeConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-instance-access-control-attribute-configuration))
(common-lisp:progn
 (common-lisp:defun delete-permission-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn permission-set-arn)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn permission-set-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-permission-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeletePermissionSet"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-permission-set))
(common-lisp:progn
 (common-lisp:defun delete-permissions-boundary-from-permission-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn permission-set-arn)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn permission-set-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-permissions-boundary-from-permission-set-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeletePermissionsBoundaryFromPermissionSet"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-permissions-boundary-from-permission-set))
(common-lisp:progn
 (common-lisp:defun delete-trusted-token-issuer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key trusted-token-issuer-arn)
   (common-lisp:declare (common-lisp:ignorable trusted-token-issuer-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-trusted-token-issuer-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteTrustedTokenIssuer"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-trusted-token-issuer))
(common-lisp:progn
 (common-lisp:defun describe-account-assignment-creation-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-assignment-creation-request-id
                     instance-arn)
   (common-lisp:declare
    (common-lisp:ignorable account-assignment-creation-request-id
     instance-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-account-assignment-creation-status-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeAccountAssignmentCreationStatus"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-account-assignment-creation-status))
(common-lisp:progn
 (common-lisp:defun describe-account-assignment-deletion-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-assignment-deletion-request-id
                     instance-arn)
   (common-lisp:declare
    (common-lisp:ignorable account-assignment-deletion-request-id
     instance-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-account-assignment-deletion-status-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeAccountAssignmentDeletionStatus"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-account-assignment-deletion-status))
(common-lisp:progn
 (common-lisp:defun describe-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn)
   (common-lisp:declare (common-lisp:ignorable application-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-application-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeApplication"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-application))
(common-lisp:progn
 (common-lisp:defun describe-application-assignment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn principal-id
                     principal-type)
   (common-lisp:declare
    (common-lisp:ignorable application-arn principal-id principal-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-application-assignment-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeApplicationAssignment"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-application-assignment))
(common-lisp:progn
 (common-lisp:defun describe-application-provider
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-provider-arn)
   (common-lisp:declare (common-lisp:ignorable application-provider-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-application-provider-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeApplicationProvider"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-application-provider))
(common-lisp:progn
 (common-lisp:defun describe-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn)
   (common-lisp:declare (common-lisp:ignorable instance-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeInstance"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-instance))
(common-lisp:progn
 (common-lisp:defun describe-instance-access-control-attribute-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn)
   (common-lisp:declare (common-lisp:ignorable instance-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-instance-access-control-attribute-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeInstanceAccessControlAttributeConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-instance-access-control-attribute-configuration))
(common-lisp:progn
 (common-lisp:defun describe-permission-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn permission-set-arn)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn permission-set-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-permission-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribePermissionSet"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-permission-set))
(common-lisp:progn
 (common-lisp:defun describe-permission-set-provisioning-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn
                     provision-permission-set-request-id)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn provision-permission-set-request-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-permission-set-provisioning-status-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribePermissionSetProvisioningStatus"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-permission-set-provisioning-status))
(common-lisp:progn
 (common-lisp:defun describe-trusted-token-issuer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key trusted-token-issuer-arn)
   (common-lisp:declare (common-lisp:ignorable trusted-token-issuer-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-trusted-token-issuer-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeTrustedTokenIssuer"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-trusted-token-issuer))
(common-lisp:progn
 (common-lisp:defun detach-customer-managed-policy-reference-from-permission-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key customer-managed-policy-reference
                     instance-arn permission-set-arn)
   (common-lisp:declare
    (common-lisp:ignorable customer-managed-policy-reference instance-arn
     permission-set-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-detach-customer-managed-policy-reference-from-permission-set-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DetachCustomerManagedPolicyReferenceFromPermissionSet"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export
  'detach-customer-managed-policy-reference-from-permission-set))
(common-lisp:progn
 (common-lisp:defun detach-managed-policy-from-permission-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn managed-policy-arn
                     permission-set-arn)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn managed-policy-arn permission-set-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-detach-managed-policy-from-permission-set-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DetachManagedPolicyFromPermissionSet"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'detach-managed-policy-from-permission-set))
(common-lisp:progn
 (common-lisp:defun get-application-access-scope
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn scope)
   (common-lisp:declare (common-lisp:ignorable application-arn scope))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-application-access-scope-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetApplicationAccessScope"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-application-access-scope))
(common-lisp:progn
 (common-lisp:defun get-application-assignment-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn)
   (common-lisp:declare (common-lisp:ignorable application-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-application-assignment-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetApplicationAssignmentConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-application-assignment-configuration))
(common-lisp:progn
 (common-lisp:defun get-application-authentication-method
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn
                     authentication-method-type)
   (common-lisp:declare
    (common-lisp:ignorable application-arn authentication-method-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-application-authentication-method-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetApplicationAuthenticationMethod"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-application-authentication-method))
(common-lisp:progn
 (common-lisp:defun get-application-grant
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn grant-type)
   (common-lisp:declare (common-lisp:ignorable application-arn grant-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-application-grant-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetApplicationGrant"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-application-grant))
(common-lisp:progn
 (common-lisp:defun get-inline-policy-for-permission-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn permission-set-arn)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn permission-set-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-inline-policy-for-permission-set-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetInlinePolicyForPermissionSet"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-inline-policy-for-permission-set))
(common-lisp:progn
 (common-lisp:defun get-permissions-boundary-for-permission-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn permission-set-arn)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn permission-set-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-permissions-boundary-for-permission-set-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetPermissionsBoundaryForPermissionSet"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-permissions-boundary-for-permission-set))
(common-lisp:progn
 (common-lisp:defun list-account-assignment-creation-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter instance-arn max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable filter instance-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-account-assignment-creation-status-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListAccountAssignmentCreationStatus"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-account-assignment-creation-status))
(common-lisp:progn
 (common-lisp:defun list-account-assignment-deletion-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter instance-arn max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable filter instance-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-account-assignment-deletion-status-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListAccountAssignmentDeletionStatus"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-account-assignment-deletion-status))
(common-lisp:progn
 (common-lisp:defun list-account-assignments
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id instance-arn max-results
                     next-token permission-set-arn)
   (common-lisp:declare
    (common-lisp:ignorable account-id instance-arn max-results next-token
     permission-set-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-account-assignments-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListAccountAssignments"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-account-assignments))
(common-lisp:progn
 (common-lisp:defun list-account-assignments-for-principal
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter instance-arn max-results
                     next-token principal-id principal-type)
   (common-lisp:declare
    (common-lisp:ignorable filter instance-arn max-results next-token
     principal-id principal-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-account-assignments-for-principal-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListAccountAssignmentsForPrincipal"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-account-assignments-for-principal))
(common-lisp:progn
 (common-lisp:defun list-accounts-for-provisioned-permission-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn max-results next-token
                     permission-set-arn provisioning-status)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn max-results next-token
     permission-set-arn provisioning-status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-accounts-for-provisioned-permission-set-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListAccountsForProvisionedPermissionSet"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-accounts-for-provisioned-permission-set))
(common-lisp:progn
 (common-lisp:defun list-application-access-scopes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable application-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-application-access-scopes-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListApplicationAccessScopes"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-application-access-scopes))
(common-lisp:progn
 (common-lisp:defun list-application-assignments
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable application-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-application-assignments-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListApplicationAssignments"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-application-assignments))
(common-lisp:progn
 (common-lisp:defun list-application-assignments-for-principal
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter instance-arn max-results
                     next-token principal-id principal-type)
   (common-lisp:declare
    (common-lisp:ignorable filter instance-arn max-results next-token
     principal-id principal-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-application-assignments-for-principal-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListApplicationAssignmentsForPrincipal"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-application-assignments-for-principal))
(common-lisp:progn
 (common-lisp:defun list-application-authentication-methods
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn next-token)
   (common-lisp:declare (common-lisp:ignorable application-arn next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-application-authentication-methods-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListApplicationAuthenticationMethods"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-application-authentication-methods))
(common-lisp:progn
 (common-lisp:defun list-application-grants
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn next-token)
   (common-lisp:declare (common-lisp:ignorable application-arn next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-application-grants-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListApplicationGrants"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-application-grants))
(common-lisp:progn
 (common-lisp:defun list-application-providers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-application-providers-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListApplicationProviders"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-application-providers))
(common-lisp:progn
 (common-lisp:defun list-applications
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter instance-arn max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable filter instance-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-applications-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListApplications"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-applications))
(common-lisp:progn
 (common-lisp:defun list-customer-managed-policy-references-in-permission-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn max-results next-token
                     permission-set-arn)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn max-results next-token
     permission-set-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-customer-managed-policy-references-in-permission-set-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListCustomerManagedPolicyReferencesInPermissionSet"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export
  'list-customer-managed-policy-references-in-permission-set))
(common-lisp:progn
 (common-lisp:defun list-instances
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-instances-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListInstances"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-instances))
(common-lisp:progn
 (common-lisp:defun list-managed-policies-in-permission-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn max-results next-token
                     permission-set-arn)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn max-results next-token
     permission-set-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-managed-policies-in-permission-set-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListManagedPoliciesInPermissionSet"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-managed-policies-in-permission-set))
(common-lisp:progn
 (common-lisp:defun list-permission-set-provisioning-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter instance-arn max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable filter instance-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-permission-set-provisioning-status-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListPermissionSetProvisioningStatus"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-permission-set-provisioning-status))
(common-lisp:progn
 (common-lisp:defun list-permission-sets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-permission-sets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListPermissionSets"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-permission-sets))
(common-lisp:progn
 (common-lisp:defun list-permission-sets-provisioned-to-account
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id instance-arn max-results
                     next-token provisioning-status)
   (common-lisp:declare
    (common-lisp:ignorable account-id instance-arn max-results next-token
     provisioning-status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-permission-sets-provisioned-to-account-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListPermissionSetsProvisionedToAccount"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-permission-sets-provisioned-to-account))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn next-token resource-arn)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn next-token resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun list-trusted-token-issuers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-trusted-token-issuers-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListTrustedTokenIssuers"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-trusted-token-issuers))
(common-lisp:progn
 (common-lisp:defun provision-permission-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn permission-set-arn target-id
                     target-type)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn permission-set-arn target-id
     target-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-provision-permission-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ProvisionPermissionSet"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'provision-permission-set))
(common-lisp:progn
 (common-lisp:defun put-application-access-scope
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn authorized-targets scope)
   (common-lisp:declare
    (common-lisp:ignorable application-arn authorized-targets scope))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-application-access-scope-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "PutApplicationAccessScope"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-application-access-scope))
(common-lisp:progn
 (common-lisp:defun put-application-assignment-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn assignment-required)
   (common-lisp:declare
    (common-lisp:ignorable application-arn assignment-required))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-application-assignment-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "PutApplicationAssignmentConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-application-assignment-configuration))
(common-lisp:progn
 (common-lisp:defun put-application-authentication-method
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn authentication-method
                     authentication-method-type)
   (common-lisp:declare
    (common-lisp:ignorable application-arn authentication-method
     authentication-method-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-application-authentication-method-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "PutApplicationAuthenticationMethod"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-application-authentication-method))
(common-lisp:progn
 (common-lisp:defun put-application-grant
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn grant grant-type)
   (common-lisp:declare
    (common-lisp:ignorable application-arn grant grant-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-application-grant-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "PutApplicationGrant"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-application-grant))
(common-lisp:progn
 (common-lisp:defun put-inline-policy-to-permission-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key inline-policy instance-arn
                     permission-set-arn)
   (common-lisp:declare
    (common-lisp:ignorable inline-policy instance-arn permission-set-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-inline-policy-to-permission-set-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "PutInlinePolicyToPermissionSet"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-inline-policy-to-permission-set))
(common-lisp:progn
 (common-lisp:defun put-permissions-boundary-to-permission-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn permission-set-arn
                     permissions-boundary)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn permission-set-arn
     permissions-boundary))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-permissions-boundary-to-permission-set-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "PutPermissionsBoundaryToPermissionSet"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-permissions-boundary-to-permission-set))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable instance-arn resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "TagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn resource-arn tag-keys)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn description name
                     portal-options status)
   (common-lisp:declare
    (common-lisp:ignorable application-arn description name portal-options
     status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-application-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateApplication"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-application))
(common-lisp:progn
 (common-lisp:defun update-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn name)
   (common-lisp:declare (common-lisp:ignorable instance-arn name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateInstance"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-instance))
(common-lisp:progn
 (common-lisp:defun update-instance-access-control-attribute-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key
                     instance-access-control-attribute-configuration
                     instance-arn)
   (common-lisp:declare
    (common-lisp:ignorable instance-access-control-attribute-configuration
     instance-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-instance-access-control-attribute-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateInstanceAccessControlAttributeConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-instance-access-control-attribute-configuration))
(common-lisp:progn
 (common-lisp:defun update-permission-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key description instance-arn
                     permission-set-arn relay-state session-duration)
   (common-lisp:declare
    (common-lisp:ignorable description instance-arn permission-set-arn
     relay-state session-duration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-permission-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdatePermissionSet"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-permission-set))
(common-lisp:progn
 (common-lisp:defun update-trusted-token-issuer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name trusted-token-issuer-arn
                     trusted-token-issuer-configuration)
   (common-lisp:declare
    (common-lisp:ignorable name trusted-token-issuer-arn
     trusted-token-issuer-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-trusted-token-issuer-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateTrustedTokenIssuer"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-trusted-token-issuer))
