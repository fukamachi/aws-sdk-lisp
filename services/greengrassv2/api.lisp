;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/greengrassv2/api
  (:use)
  (:nicknames #:aws/greengrassv2)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/json-request)
  (:import-from #:aws-sdk/rest-json-request)
  (:import-from #:aws-sdk/rest-xml-request)
  (:import-from #:aws-sdk/query-request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/greengrassv2/api)
(common-lisp:progn
 (common-lisp:define-condition greengrassv2-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'greengrassv2-error))
(common-lisp:progn
 (common-lisp:defclass greengrassv2-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "greengrassv2" :api-version
                        "2020-11-30" :host-prefix "greengrass" :signing-name
                        common-lisp:nil :global-host common-lisp:nil))
 (common-lisp:export 'greengrassv2-request))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("RequestAlreadyInProgressException"
     . request-already-in-progress-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceQuotaExceededException" . service-quota-exceeded-exception)
    ("ThrottlingException" . throttling-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (greengrassv2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:progn
 (common-lisp:defclass associate-client-device-with-core-device-entry
                       common-lisp:nil
                       ((thing-name :initarg :thing-name :initform
                         (common-lisp:error ":thingname is required") :type
                         (common-lisp:or io-tthing-name common-lisp:null)
                         :accessor
                         struct-shape-associate-client-device-with-core-device-entry-thing-name
                         :shape "IoTThingName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-associate-client-device-with-core-device-entry
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'associate-client-device-with-core-device-entry
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'associate-client-device-with-core-device-entry
                    'make-associate-client-device-with-core-device-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-client-device-with-core-device-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-client-device-with-core-device-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'thing-name))
      (common-lisp:list
       (common-lisp:cons "thingName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-client-device-with-core-device-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype associate-client-device-with-core-device-entry-list ()
   '(trivial-types:proper-list associate-client-device-with-core-device-entry))
 (common-lisp:defun make-associate-client-device-with-core-device-entry-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            associate-client-device-with-core-device-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass associate-client-device-with-core-device-error-entry
                       common-lisp:nil
                       ((thing-name :initarg :thing-name :initform
                         common-lisp:nil :type
                         (common-lisp:or io-tthing-name common-lisp:null)
                         :accessor
                         struct-shape-associate-client-device-with-core-device-error-entry-thing-name
                         :shape "IoTThingName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (code :initarg :code :initform common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-associate-client-device-with-core-device-error-entry-code
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message :initarg :message :initform common-lisp:nil
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-associate-client-device-with-core-device-error-entry-message
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-associate-client-device-with-core-device-error-entry
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'associate-client-device-with-core-device-error-entry
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'associate-client-device-with-core-device-error-entry
                    'make-associate-client-device-with-core-device-error-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-client-device-with-core-device-error-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-client-device-with-core-device-error-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'thing-name))
      (common-lisp:list
       (common-lisp:cons "thingName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'code))
      (common-lisp:list
       (common-lisp:cons "code"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-client-device-with-core-device-error-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype associate-client-device-with-core-device-error-list ()
   '(trivial-types:proper-list
     associate-client-device-with-core-device-error-entry))
 (common-lisp:defun make-associate-client-device-with-core-device-error-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            associate-client-device-with-core-device-error-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass associate-service-role-to-account-request
                       common-lisp:nil
                       ((role-arn :initarg :role-arn :initform
                         (common-lisp:error ":rolearn is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-associate-service-role-to-account-request-role-arn
                         :shape "String" :location common-lisp:nil
                         :location-name "RoleArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-associate-service-role-to-account-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'associate-service-role-to-account-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'associate-service-role-to-account-request
                    'make-associate-service-role-to-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-service-role-to-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-service-role-to-account-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "roleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-service-role-to-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass associate-service-role-to-account-response
                       common-lisp:nil
                       ((associated-at :initarg :associated-at :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-associate-service-role-to-account-response-associated-at
                         :shape "String" :location common-lisp:nil
                         :location-name "AssociatedAt"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-associate-service-role-to-account-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'associate-service-role-to-account-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'associate-service-role-to-account-response
                    'make-associate-service-role-to-account-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-service-role-to-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-service-role-to-account-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'associated-at))
      (common-lisp:list
       (common-lisp:cons "associatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-service-role-to-account-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass associated-client-device common-lisp:nil
                       ((thing-name :initarg :thing-name :initform
                         common-lisp:nil :type
                         (common-lisp:or io-tthing-name common-lisp:null)
                         :accessor
                         struct-shape-associated-client-device-thing-name
                         :shape "IoTThingName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (association-timestamp :initarg :association-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-associated-client-device-association-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-associated-client-device
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'associated-client-device
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'associated-client-device 'make-associated-client-device))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associated-client-device))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associated-client-device))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'thing-name))
      (common-lisp:list
       (common-lisp:cons "thingName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'association-timestamp))
      (common-lisp:list
       (common-lisp:cons "associationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associated-client-device))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype associated-client-device-list ()
   '(trivial-types:proper-list associated-client-device))
 (common-lisp:defun make-associated-client-device-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            associated-client-device))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass batch-associate-client-device-with-core-device-request
                       common-lisp:nil
                       ((entries :initarg :entries :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          associate-client-device-with-core-device-entry-list
                          common-lisp:null)
                         :accessor
                         struct-shape-batch-associate-client-device-with-core-device-request-entries
                         :shape "AssociateClientDeviceWithCoreDeviceEntryList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (core-device-thing-name :initarg
                         :core-device-thing-name :initform
                         (common-lisp:error ":coredevicethingname is required")
                         :type (common-lisp:or io-tthing-name common-lisp:null)
                         :accessor
                         struct-shape-batch-associate-client-device-with-core-device-request-core-device-thing-name
                         :shape "IoTThingName" :location "uri" :location-name
                         "coreDeviceThingName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-associate-client-device-with-core-device-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-associate-client-device-with-core-device-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-associate-client-device-with-core-device-request
                    'make-batch-associate-client-device-with-core-device-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-associate-client-device-with-core-device-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-associate-client-device-with-core-device-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entries))
      (common-lisp:list
       (common-lisp:cons "entries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-associate-client-device-with-core-device-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-associate-client-device-with-core-device-response
                       common-lisp:nil
                       ((error-entries :initarg :error-entries :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          associate-client-device-with-core-device-error-list
                          common-lisp:null)
                         :accessor
                         struct-shape-batch-associate-client-device-with-core-device-response-error-entries
                         :shape "AssociateClientDeviceWithCoreDeviceErrorList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-associate-client-device-with-core-device-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-associate-client-device-with-core-device-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-associate-client-device-with-core-device-response
                    'make-batch-associate-client-device-with-core-device-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-associate-client-device-with-core-device-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-associate-client-device-with-core-device-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-entries))
      (common-lisp:list
       (common-lisp:cons "errorEntries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-associate-client-device-with-core-device-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  batch-disassociate-client-device-from-core-device-request common-lisp:nil
  ((entries :initarg :entries :initform common-lisp:nil :type
    (common-lisp:or disassociate-client-device-from-core-device-entry-list
                    common-lisp:null)
    :accessor
    struct-shape-batch-disassociate-client-device-from-core-device-request-entries
    :shape "DisassociateClientDeviceFromCoreDeviceEntryList" :location
    common-lisp:nil :location-name common-lisp:nil)
   (core-device-thing-name :initarg :core-device-thing-name :initform
    (common-lisp:error ":coredevicethingname is required") :type
    (common-lisp:or io-tthing-name common-lisp:null) :accessor
    struct-shape-batch-disassociate-client-device-from-core-device-request-core-device-thing-name
    :shape "IoTThingName" :location "uri" :location-name
    "coreDeviceThingName"))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-disassociate-client-device-from-core-device-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-disassociate-client-device-from-core-device-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-disassociate-client-device-from-core-device-request
                    'make-batch-disassociate-client-device-from-core-device-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-disassociate-client-device-from-core-device-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-disassociate-client-device-from-core-device-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entries))
      (common-lisp:list
       (common-lisp:cons "entries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-disassociate-client-device-from-core-device-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  batch-disassociate-client-device-from-core-device-response common-lisp:nil
  ((error-entries :initarg :error-entries :initform common-lisp:nil :type
    (common-lisp:or disassociate-client-device-from-core-device-error-list
                    common-lisp:null)
    :accessor
    struct-shape-batch-disassociate-client-device-from-core-device-response-error-entries
    :shape "DisassociateClientDeviceFromCoreDeviceErrorList" :location
    common-lisp:nil :location-name common-lisp:nil))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-disassociate-client-device-from-core-device-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-disassociate-client-device-from-core-device-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-disassociate-client-device-from-core-device-response
                    'make-batch-disassociate-client-device-from-core-device-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-disassociate-client-device-from-core-device-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-disassociate-client-device-from-core-device-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-entries))
      (common-lisp:list
       (common-lisp:cons "errorEntries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-disassociate-client-device-from-core-device-response))
   common-lisp:nil))
(common-lisp:deftype cpu () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defclass cancel-deployment-request common-lisp:nil
                       ((deployment-id :initarg :deployment-id :initform
                         (common-lisp:error ":deploymentid is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-cancel-deployment-request-deployment-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "deploymentId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-cancel-deployment-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'cancel-deployment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'cancel-deployment-request
                    'make-cancel-deployment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cancel-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cancel-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cancel-deployment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass cancel-deployment-response common-lisp:nil
                       ((message :initarg :message :initform common-lisp:nil
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-cancel-deployment-response-message :shape
                         "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-cancel-deployment-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'cancel-deployment-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'cancel-deployment-response
                    'make-cancel-deployment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cancel-deployment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cancel-deployment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cancel-deployment-response))
   common-lisp:nil))
(common-lisp:deftype client-token-string () 'common-lisp:string)
(common-lisp:deftype cloud-component-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass cloud-component-status common-lisp:nil
                       ((component-state :initarg :component-state :initform
                         common-lisp:nil :type
                         (common-lisp:or cloud-component-state
                                         common-lisp:null)
                         :accessor
                         struct-shape-cloud-component-status-component-state
                         :shape "CloudComponentState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message :initarg :message :initform common-lisp:nil
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-cloud-component-status-message
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (errors :initarg :errors :initform common-lisp:nil
                         :type (common-lisp:or string-map common-lisp:null)
                         :accessor struct-shape-cloud-component-status-errors
                         :shape "StringMap" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vendor-guidance :initarg :vendor-guidance :initform
                         common-lisp:nil :type
                         (common-lisp:or vendor-guidance common-lisp:null)
                         :accessor
                         struct-shape-cloud-component-status-vendor-guidance
                         :shape "VendorGuidance" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vendor-guidance-message :initarg
                         :vendor-guidance-message :initform common-lisp:nil
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-cloud-component-status-vendor-guidance-message
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-cloud-component-status
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'cloud-component-status
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'cloud-component-status 'make-cloud-component-status))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cloud-component-status))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cloud-component-status))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'component-state))
      (common-lisp:list
       (common-lisp:cons "componentState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'errors))
      (common-lisp:list
       (common-lisp:cons "errors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vendor-guidance))
      (common-lisp:list
       (common-lisp:cons "vendorGuidance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vendor-guidance-message))
      (common-lisp:list
       (common-lisp:cons "vendorGuidanceMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cloud-component-status))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass component common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or component-arn common-lisp:null)
                         :accessor struct-shape-component-arn :shape
                         "ComponentARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (component-name :initarg :component-name :initform
                         common-lisp:nil :type
                         (common-lisp:or component-name-string
                                         common-lisp:null)
                         :accessor struct-shape-component-component-name :shape
                         "ComponentNameString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (latest-version :initarg :latest-version :initform
                         common-lisp:nil :type
                         (common-lisp:or component-latest-version
                                         common-lisp:null)
                         :accessor struct-shape-component-latest-version :shape
                         "ComponentLatestVersion" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-component
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'component
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'component 'make-component))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input component))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input component))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'component-name))
      (common-lisp:list
       (common-lisp:cons "componentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version))
      (common-lisp:list
       (common-lisp:cons "latestVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input component))
   common-lisp:nil))
(common-lisp:deftype component-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass component-candidate common-lisp:nil
                       ((component-name :initarg :component-name :initform
                         common-lisp:nil :type
                         (common-lisp:or component-name-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-component-candidate-component-name :shape
                         "ComponentNameString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (component-version :initarg :component-version
                         :initform common-lisp:nil :type
                         (common-lisp:or component-version-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-component-candidate-component-version
                         :shape "ComponentVersionString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (version-requirements :initarg :version-requirements
                         :initform common-lisp:nil :type
                         (common-lisp:or component-version-requirement-map
                                         common-lisp:null)
                         :accessor
                         struct-shape-component-candidate-version-requirements
                         :shape "ComponentVersionRequirementMap" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-component-candidate
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'component-candidate
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'component-candidate 'make-component-candidate))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input component-candidate))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input component-candidate))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'component-name))
      (common-lisp:list
       (common-lisp:cons "componentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'component-version))
      (common-lisp:list
       (common-lisp:cons "componentVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'version-requirements))
      (common-lisp:list
       (common-lisp:cons "versionRequirements"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input component-candidate))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype component-candidate-list ()
   '(trivial-types:proper-list component-candidate))
 (common-lisp:defun make-component-candidate-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list component-candidate))
   aws-sdk/generator/shape::members))
(common-lisp:deftype component-configuration-path () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype component-configuration-path-list ()
   '(trivial-types:proper-list component-configuration-path))
 (common-lisp:defun make-component-configuration-path-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            component-configuration-path))
   aws-sdk/generator/shape::members))
(common-lisp:deftype component-configuration-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass component-configuration-update common-lisp:nil
                       ((merge :initarg :merge :initform common-lisp:nil :type
                         (common-lisp:or component-configuration-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-component-configuration-update-merge
                         :shape "ComponentConfigurationString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (reset :initarg :reset :initform common-lisp:nil :type
                         (common-lisp:or component-configuration-path-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-component-configuration-update-reset
                         :shape "ComponentConfigurationPathList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-component-configuration-update
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'component-configuration-update
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'component-configuration-update
                    'make-component-configuration-update))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          component-configuration-update))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          component-configuration-update))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'merge))
      (common-lisp:list
       (common-lisp:cons "merge"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reset))
      (common-lisp:list
       (common-lisp:cons "reset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          component-configuration-update))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype component-dependency-map () 'common-lisp:hash-table)
 (common-lisp:defun make-component-dependency-map
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass component-dependency-requirement common-lisp:nil
                       ((version-requirement :initarg :version-requirement
                         :initform common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-component-dependency-requirement-version-requirement
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (dependency-type :initarg :dependency-type :initform
                         common-lisp:nil :type
                         (common-lisp:or component-dependency-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-component-dependency-requirement-dependency-type
                         :shape "ComponentDependencyType" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-component-dependency-requirement
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'component-dependency-requirement
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'component-dependency-requirement
                    'make-component-dependency-requirement))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          component-dependency-requirement))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          component-dependency-requirement))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version-requirement))
      (common-lisp:list
       (common-lisp:cons "versionRequirement"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dependency-type))
      (common-lisp:list
       (common-lisp:cons "dependencyType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          component-dependency-requirement))
   common-lisp:nil))
(common-lisp:deftype component-dependency-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass component-deployment-specification common-lisp:nil
                       ((component-version :initarg :component-version
                         :initform common-lisp:nil :type
                         (common-lisp:or component-version-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-component-deployment-specification-component-version
                         :shape "ComponentVersionString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (configuration-update :initarg :configuration-update
                         :initform common-lisp:nil :type
                         (common-lisp:or component-configuration-update
                                         common-lisp:null)
                         :accessor
                         struct-shape-component-deployment-specification-configuration-update
                         :shape "ComponentConfigurationUpdate" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (run-with :initarg :run-with :initform common-lisp:nil
                         :type
                         (common-lisp:or component-run-with common-lisp:null)
                         :accessor
                         struct-shape-component-deployment-specification-run-with
                         :shape "ComponentRunWith" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-component-deployment-specification
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'component-deployment-specification
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'component-deployment-specification
                    'make-component-deployment-specification))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          component-deployment-specification))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          component-deployment-specification))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'component-version))
      (common-lisp:list
       (common-lisp:cons "componentVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configuration-update))
      (common-lisp:list
       (common-lisp:cons "configurationUpdate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'run-with))
      (common-lisp:list
       (common-lisp:cons "runWith"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          component-deployment-specification))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype component-deployment-specifications ()
   'common-lisp:hash-table)
 (common-lisp:defun make-component-deployment-specifications
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass component-latest-version common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or component-version-arn
                                         common-lisp:null)
                         :accessor struct-shape-component-latest-version-arn
                         :shape "ComponentVersionARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (component-version :initarg :component-version
                         :initform common-lisp:nil :type
                         (common-lisp:or component-version-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-component-latest-version-component-version
                         :shape "ComponentVersionString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-component-latest-version-creation-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-component-latest-version-description
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (publisher :initarg :publisher :initform
                         common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-component-latest-version-publisher :shape
                         "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (platforms :initarg :platforms :initform
                         common-lisp:nil :type
                         (common-lisp:or component-platform-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-component-latest-version-platforms :shape
                         "ComponentPlatformList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-component-latest-version
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'component-latest-version
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'component-latest-version 'make-component-latest-version))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          component-latest-version))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          component-latest-version))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'component-version))
      (common-lisp:list
       (common-lisp:cons "componentVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "creationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'publisher))
      (common-lisp:list
       (common-lisp:cons "publisher"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platforms))
      (common-lisp:list
       (common-lisp:cons "platforms"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          component-latest-version))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype component-list () '(trivial-types:proper-list component))
 (common-lisp:defun make-component-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list component))
   aws-sdk/generator/shape::members))
(common-lisp:deftype component-name-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass component-platform common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-component-platform-name :shape
                         "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (attributes :initarg :attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or platform-attributes-map
                                         common-lisp:null)
                         :accessor struct-shape-component-platform-attributes
                         :shape "PlatformAttributesMap" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-component-platform
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'component-platform
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'component-platform 'make-component-platform))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input component-platform))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input component-platform))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input component-platform))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype component-platform-list ()
   '(trivial-types:proper-list component-platform))
 (common-lisp:defun make-component-platform-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list component-platform))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass component-run-with common-lisp:nil
                       ((posix-user :initarg :posix-user :initform
                         common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-component-run-with-posix-user
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (system-resource-limits :initarg
                         :system-resource-limits :initform common-lisp:nil
                         :type
                         (common-lisp:or system-resource-limits
                                         common-lisp:null)
                         :accessor
                         struct-shape-component-run-with-system-resource-limits
                         :shape "SystemResourceLimits" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (windows-user :initarg :windows-user :initform
                         common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-component-run-with-windows-user
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-component-run-with
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'component-run-with
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'component-run-with 'make-component-run-with))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input component-run-with))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input component-run-with))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'posix-user))
      (common-lisp:list
       (common-lisp:cons "posixUser"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'system-resource-limits))
      (common-lisp:list
       (common-lisp:cons "systemResourceLimits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'windows-user))
      (common-lisp:list
       (common-lisp:cons "windowsUser"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input component-run-with))
   common-lisp:nil))
(common-lisp:deftype component-version-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype component-version-list ()
   '(trivial-types:proper-list component-version-list-item))
 (common-lisp:defun make-component-version-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            component-version-list-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass component-version-list-item common-lisp:nil
                       ((component-name :initarg :component-name :initform
                         common-lisp:nil :type
                         (common-lisp:or component-name-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-component-version-list-item-component-name
                         :shape "ComponentNameString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (component-version :initarg :component-version
                         :initform common-lisp:nil :type
                         (common-lisp:or component-version-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-component-version-list-item-component-version
                         :shape "ComponentVersionString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-component-version-list-item-arn
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-component-version-list-item
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'component-version-list-item
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'component-version-list-item
                    'make-component-version-list-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          component-version-list-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          component-version-list-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'component-name))
      (common-lisp:list
       (common-lisp:cons "componentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'component-version))
      (common-lisp:list
       (common-lisp:cons "componentVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          component-version-list-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype component-version-requirement-map ()
   'common-lisp:hash-table)
 (common-lisp:defun make-component-version-requirement-map
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype component-version-string () 'common-lisp:string)
(common-lisp:deftype component-visibility-scope () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (greengrassv2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)
      (resource-id :initarg :resource-id :initform common-lisp:nil :reader
       conflict-exception-resource-id)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       conflict-exception-resource-type)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message
                    'conflict-exception-resource-id
                    'conflict-exception-resource-type)))
(common-lisp:progn
 (common-lisp:defclass connectivity-info common-lisp:nil
                       ((id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-connectivity-info-id :shape "String"
                         :location common-lisp:nil :location-name "Id")
                        (host-address :initarg :host-address :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-connectivity-info-host-address :shape
                         "String" :location common-lisp:nil :location-name
                         "HostAddress")
                        (port-number :initarg :port-number :initform
                         common-lisp:nil :type
                         (common-lisp:or port-number-int common-lisp:null)
                         :accessor struct-shape-connectivity-info-port-number
                         :shape "PortNumberInt" :location common-lisp:nil
                         :location-name "PortNumber")
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-connectivity-info-metadata
                         :shape "String" :location common-lisp:nil
                         :location-name "Metadata"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-connectivity-info
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'connectivity-info
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'connectivity-info 'make-connectivity-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input connectivity-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input connectivity-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host-address))
      (common-lisp:list
       (common-lisp:cons "hostAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'port-number))
      (common-lisp:list
       (common-lisp:cons "portNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input connectivity-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass core-device common-lisp:nil
                       ((core-device-thing-name :initarg
                         :core-device-thing-name :initform common-lisp:nil
                         :type
                         (common-lisp:or core-device-thing-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-core-device-core-device-thing-name :shape
                         "CoreDeviceThingName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or core-device-status common-lisp:null)
                         :accessor struct-shape-core-device-status :shape
                         "CoreDeviceStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-status-update-timestamp :initarg
                         :last-status-update-timestamp :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-core-device-last-status-update-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-core-device
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'core-device
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'core-device 'make-core-device))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input core-device))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input core-device))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'core-device-thing-name))
      (common-lisp:list
       (common-lisp:cons "coreDeviceThingName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-status-update-timestamp))
      (common-lisp:list
       (common-lisp:cons "lastStatusUpdateTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input core-device))
   common-lisp:nil))
(common-lisp:deftype core-device-architecture-string () 'common-lisp:string)
(common-lisp:deftype core-device-platform-string () 'common-lisp:string)
(common-lisp:deftype core-device-status () 'common-lisp:string)
(common-lisp:deftype core-device-thing-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype core-devices-list ()
   '(trivial-types:proper-list core-device))
 (common-lisp:defun make-core-devices-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list core-device))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass create-component-version-request common-lisp:nil
                       ((inline-recipe :initarg :inline-recipe :initform
                         common-lisp:nil :type
                         (common-lisp:or recipe-blob common-lisp:null)
                         :accessor
                         struct-shape-create-component-version-request-inline-recipe
                         :shape "RecipeBlob" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (lambda-function :initarg :lambda-function :initform
                         common-lisp:nil :type
                         (common-lisp:or lambda-function-recipe-source
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-component-version-request-lambda-function
                         :shape "LambdaFunctionRecipeSource" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-create-component-version-request-tags
                         :shape "TagMap" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or client-token-string common-lisp:null)
                         :accessor
                         struct-shape-create-component-version-request-client-token
                         :shape "ClientTokenString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-component-version-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-component-version-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-component-version-request
                    'make-create-component-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-component-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-component-version-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inline-recipe))
      (common-lisp:list
       (common-lisp:cons "inlineRecipe"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lambda-function))
      (common-lisp:list
       (common-lisp:cons "lambdaFunction"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-component-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-component-version-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or component-version-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-component-version-response-arn
                         :shape "ComponentVersionARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (component-name :initarg :component-name :initform
                         (common-lisp:error ":componentname is required") :type
                         (common-lisp:or component-name-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-component-version-response-component-name
                         :shape "ComponentNameString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (component-version :initarg :component-version
                         :initform
                         (common-lisp:error ":componentversion is required")
                         :type
                         (common-lisp:or component-version-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-component-version-response-component-version
                         :shape "ComponentVersionString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp
                         :initform
                         (common-lisp:error ":creationtimestamp is required")
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-create-component-version-response-creation-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform
                         (common-lisp:error ":status is required") :type
                         (common-lisp:or cloud-component-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-component-version-response-status
                         :shape "CloudComponentStatus" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-component-version-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-component-version-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-component-version-response
                    'make-create-component-version-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-component-version-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-component-version-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'component-name))
      (common-lisp:list
       (common-lisp:cons "componentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'component-version))
      (common-lisp:list
       (common-lisp:cons "componentVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "creationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-component-version-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-deployment-request common-lisp:nil
                       ((target-arn :initarg :target-arn :initform
                         (common-lisp:error ":targetarn is required") :type
                         (common-lisp:or target-arn common-lisp:null) :accessor
                         struct-shape-create-deployment-request-target-arn
                         :shape "TargetARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (deployment-name :initarg :deployment-name :initform
                         common-lisp:nil :type
                         (common-lisp:or deployment-name-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-deployment-request-deployment-name
                         :shape "DeploymentNameString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (components :initarg :components :initform
                         common-lisp:nil :type
                         (common-lisp:or component-deployment-specifications
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-deployment-request-components
                         :shape "ComponentDeploymentSpecifications" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (iot-job-configuration :initarg :iot-job-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or deployment-io-tjob-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-deployment-request-iot-job-configuration
                         :shape "DeploymentIoTJobConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (deployment-policies :initarg :deployment-policies
                         :initform common-lisp:nil :type
                         (common-lisp:or deployment-policies common-lisp:null)
                         :accessor
                         struct-shape-create-deployment-request-deployment-policies
                         :shape "DeploymentPolicies" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (parent-target-arn :initarg :parent-target-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or thing-group-arn common-lisp:null)
                         :accessor
                         struct-shape-create-deployment-request-parent-target-arn
                         :shape "ThingGroupARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-create-deployment-request-tags :shape
                         "TagMap" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or client-token-string common-lisp:null)
                         :accessor
                         struct-shape-create-deployment-request-client-token
                         :shape "ClientTokenString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-deployment-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-deployment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-deployment-request
                    'make-create-deployment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arn))
      (common-lisp:list
       (common-lisp:cons "targetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-name))
      (common-lisp:list
       (common-lisp:cons "deploymentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'components))
      (common-lisp:list
       (common-lisp:cons "components"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'iot-job-configuration))
      (common-lisp:list
       (common-lisp:cons "iotJobConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-policies))
      (common-lisp:list
       (common-lisp:cons "deploymentPolicies"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'parent-target-arn))
      (common-lisp:list
       (common-lisp:cons "parentTargetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-deployment-response common-lisp:nil
                       ((deployment-id :initarg :deployment-id :initform
                         common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-create-deployment-response-deployment-id
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (iot-job-id :initarg :iot-job-id :initform
                         common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-create-deployment-response-iot-job-id
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (iot-job-arn :initarg :iot-job-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or io-tjob-arn common-lisp:null)
                         :accessor
                         struct-shape-create-deployment-response-iot-job-arn
                         :shape "IoTJobARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-deployment-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-deployment-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-deployment-response
                    'make-create-deployment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "deploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iot-job-id))
      (common-lisp:list
       (common-lisp:cons "iotJobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iot-job-arn))
      (common-lisp:list
       (common-lisp:cons "iotJobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-response))
   common-lisp:nil))
(common-lisp:deftype default-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass delete-component-request common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or component-version-arn
                                         common-lisp:null)
                         :accessor struct-shape-delete-component-request-arn
                         :shape "ComponentVersionARN" :location "uri"
                         :location-name "arn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-component-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-component-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-component-request 'make-delete-component-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-component-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-component-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-component-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-core-device-request common-lisp:nil
                       ((core-device-thing-name :initarg
                         :core-device-thing-name :initform
                         (common-lisp:error ":coredevicethingname is required")
                         :type
                         (common-lisp:or core-device-thing-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-core-device-request-core-device-thing-name
                         :shape "CoreDeviceThingName" :location "uri"
                         :location-name "coreDeviceThingName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-core-device-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-core-device-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-core-device-request
                    'make-delete-core-device-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-core-device-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-core-device-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-core-device-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-deployment-request common-lisp:nil
                       ((deployment-id :initarg :deployment-id :initform
                         (common-lisp:error ":deploymentid is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-delete-deployment-request-deployment-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "deploymentId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-deployment-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-deployment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-deployment-request
                    'make-delete-deployment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-deployment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass deployment common-lisp:nil
                       ((target-arn :initarg :target-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or target-arn common-lisp:null) :accessor
                         struct-shape-deployment-target-arn :shape "TargetARN"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (revision-id :initarg :revision-id :initform
                         common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-deployment-revision-id :shape
                         "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (deployment-id :initarg :deployment-id :initform
                         common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-deployment-deployment-id :shape
                         "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (deployment-name :initarg :deployment-name :initform
                         common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-deployment-deployment-name
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-deployment-creation-timestamp :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (deployment-status :initarg :deployment-status
                         :initform common-lisp:nil :type
                         (common-lisp:or deployment-status common-lisp:null)
                         :accessor struct-shape-deployment-deployment-status
                         :shape "DeploymentStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (is-latest-for-target :initarg :is-latest-for-target
                         :initform common-lisp:nil :type
                         (common-lisp:or is-latest-for-target common-lisp:null)
                         :accessor struct-shape-deployment-is-latest-for-target
                         :shape "IsLatestForTarget" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (parent-target-arn :initarg :parent-target-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or thing-group-arn common-lisp:null)
                         :accessor struct-shape-deployment-parent-target-arn
                         :shape "ThingGroupARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-deployment
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'deployment
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'deployment 'make-deployment))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input deployment))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input deployment))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arn))
      (common-lisp:list
       (common-lisp:cons "targetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revision-id))
      (common-lisp:list
       (common-lisp:cons "revisionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "deploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-name))
      (common-lisp:list
       (common-lisp:cons "deploymentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "creationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-status))
      (common-lisp:list
       (common-lisp:cons "deploymentStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'is-latest-for-target))
      (common-lisp:list
       (common-lisp:cons "isLatestForTarget"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'parent-target-arn))
      (common-lisp:list
       (common-lisp:cons "parentTargetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input deployment))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass deployment-component-update-policy common-lisp:nil
                       ((timeout-in-seconds :initarg :timeout-in-seconds
                         :initform common-lisp:nil :type
                         (common-lisp:or optional-integer common-lisp:null)
                         :accessor
                         struct-shape-deployment-component-update-policy-timeout-in-seconds
                         :shape "OptionalInteger" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (action :initarg :action :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          deployment-component-update-policy-action
                          common-lisp:null)
                         :accessor
                         struct-shape-deployment-component-update-policy-action
                         :shape "DeploymentComponentUpdatePolicyAction"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-deployment-component-update-policy
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'deployment-component-update-policy
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'deployment-component-update-policy
                    'make-deployment-component-update-policy))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          deployment-component-update-policy))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          deployment-component-update-policy))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeout-in-seconds))
      (common-lisp:list
       (common-lisp:cons "timeoutInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          deployment-component-update-policy))
   common-lisp:nil))
(common-lisp:deftype deployment-component-update-policy-action ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass deployment-configuration-validation-policy
                       common-lisp:nil
                       ((timeout-in-seconds :initarg :timeout-in-seconds
                         :initform common-lisp:nil :type
                         (common-lisp:or optional-integer common-lisp:null)
                         :accessor
                         struct-shape-deployment-configuration-validation-policy-timeout-in-seconds
                         :shape "OptionalInteger" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-deployment-configuration-validation-policy
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'deployment-configuration-validation-policy
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'deployment-configuration-validation-policy
                    'make-deployment-configuration-validation-policy))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          deployment-configuration-validation-policy))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          deployment-configuration-validation-policy))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeout-in-seconds))
      (common-lisp:list
       (common-lisp:cons "timeoutInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          deployment-configuration-validation-policy))
   common-lisp:nil))
(common-lisp:deftype deployment-failure-handling-policy () 'common-lisp:string)
(common-lisp:deftype deployment-history-filter () 'common-lisp:string)
(common-lisp:deftype deployment-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass deployment-io-tjob-configuration common-lisp:nil
                       ((job-executions-rollout-config :initarg
                         :job-executions-rollout-config :initform
                         common-lisp:nil :type
                         (common-lisp:or io-tjob-executions-rollout-config
                                         common-lisp:null)
                         :accessor
                         struct-shape-deployment-io-tjob-configuration-job-executions-rollout-config
                         :shape "IoTJobExecutionsRolloutConfig" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (abort-config :initarg :abort-config :initform
                         common-lisp:nil :type
                         (common-lisp:or io-tjob-abort-config common-lisp:null)
                         :accessor
                         struct-shape-deployment-io-tjob-configuration-abort-config
                         :shape "IoTJobAbortConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (timeout-config :initarg :timeout-config :initform
                         common-lisp:nil :type
                         (common-lisp:or io-tjob-timeout-config
                                         common-lisp:null)
                         :accessor
                         struct-shape-deployment-io-tjob-configuration-timeout-config
                         :shape "IoTJobTimeoutConfig" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-deployment-io-tjob-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'deployment-io-tjob-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'deployment-io-tjob-configuration
                    'make-deployment-io-tjob-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          deployment-io-tjob-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          deployment-io-tjob-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'job-executions-rollout-config))
      (common-lisp:list
       (common-lisp:cons "jobExecutionsRolloutConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'abort-config))
      (common-lisp:list
       (common-lisp:cons "abortConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeout-config))
      (common-lisp:list
       (common-lisp:cons "timeoutConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          deployment-io-tjob-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype deployment-list ()
   '(trivial-types:proper-list deployment))
 (common-lisp:defun make-deployment-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list deployment))
   aws-sdk/generator/shape::members))
(common-lisp:deftype deployment-name () 'common-lisp:string)
(common-lisp:deftype deployment-name-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass deployment-policies common-lisp:nil
                       ((failure-handling-policy :initarg
                         :failure-handling-policy :initform common-lisp:nil
                         :type
                         (common-lisp:or deployment-failure-handling-policy
                                         common-lisp:null)
                         :accessor
                         struct-shape-deployment-policies-failure-handling-policy
                         :shape "DeploymentFailureHandlingPolicy" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (component-update-policy :initarg
                         :component-update-policy :initform common-lisp:nil
                         :type
                         (common-lisp:or deployment-component-update-policy
                                         common-lisp:null)
                         :accessor
                         struct-shape-deployment-policies-component-update-policy
                         :shape "DeploymentComponentUpdatePolicy" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (configuration-validation-policy :initarg
                         :configuration-validation-policy :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          deployment-configuration-validation-policy
                          common-lisp:null)
                         :accessor
                         struct-shape-deployment-policies-configuration-validation-policy
                         :shape "DeploymentConfigurationValidationPolicy"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-deployment-policies
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'deployment-policies
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'deployment-policies 'make-deployment-policies))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input deployment-policies))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input deployment-policies))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'failure-handling-policy))
      (common-lisp:list
       (common-lisp:cons "failureHandlingPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'component-update-policy))
      (common-lisp:list
       (common-lisp:cons "componentUpdatePolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configuration-validation-policy))
      (common-lisp:list
       (common-lisp:cons "configurationValidationPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input deployment-policies))
   common-lisp:nil))
(common-lisp:deftype deployment-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass describe-component-request common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or component-version-arn
                                         common-lisp:null)
                         :accessor struct-shape-describe-component-request-arn
                         :shape "ComponentVersionARN" :location "uri"
                         :location-name "arn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-component-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-component-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-component-request
                    'make-describe-component-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-component-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-component-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-component-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-component-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or component-version-arn
                                         common-lisp:null)
                         :accessor struct-shape-describe-component-response-arn
                         :shape "ComponentVersionARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (component-name :initarg :component-name :initform
                         common-lisp:nil :type
                         (common-lisp:or component-name-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-component-response-component-name
                         :shape "ComponentNameString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (component-version :initarg :component-version
                         :initform common-lisp:nil :type
                         (common-lisp:or component-version-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-component-response-component-version
                         :shape "ComponentVersionString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-describe-component-response-creation-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (publisher :initarg :publisher :initform
                         common-lisp:nil :type
                         (common-lisp:or publisher-string common-lisp:null)
                         :accessor
                         struct-shape-describe-component-response-publisher
                         :shape "PublisherString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or description-string common-lisp:null)
                         :accessor
                         struct-shape-describe-component-response-description
                         :shape "DescriptionString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or cloud-component-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-component-response-status :shape
                         "CloudComponentStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (platforms :initarg :platforms :initform
                         common-lisp:nil :type
                         (common-lisp:or component-platform-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-component-response-platforms
                         :shape "ComponentPlatformList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-describe-component-response-tags :shape
                         "TagMap" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-component-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-component-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-component-response
                    'make-describe-component-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-component-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-component-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'component-name))
      (common-lisp:list
       (common-lisp:cons "componentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'component-version))
      (common-lisp:list
       (common-lisp:cons "componentVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "creationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'publisher))
      (common-lisp:list
       (common-lisp:cons "publisher"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platforms))
      (common-lisp:list
       (common-lisp:cons "platforms"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-component-response))
   common-lisp:nil))
(common-lisp:deftype description () 'common-lisp:string)
(common-lisp:deftype description-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass disassociate-client-device-from-core-device-entry
                       common-lisp:nil
                       ((thing-name :initarg :thing-name :initform
                         (common-lisp:error ":thingname is required") :type
                         (common-lisp:or io-tthing-name common-lisp:null)
                         :accessor
                         struct-shape-disassociate-client-device-from-core-device-entry-thing-name
                         :shape "IoTThingName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disassociate-client-device-from-core-device-entry
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-client-device-from-core-device-entry
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'disassociate-client-device-from-core-device-entry
                    'make-disassociate-client-device-from-core-device-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-client-device-from-core-device-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-client-device-from-core-device-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'thing-name))
      (common-lisp:list
       (common-lisp:cons "thingName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-client-device-from-core-device-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype disassociate-client-device-from-core-device-entry-list ()
   '(trivial-types:proper-list
     disassociate-client-device-from-core-device-entry))
 (common-lisp:defun make-disassociate-client-device-from-core-device-entry-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            disassociate-client-device-from-core-device-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass disassociate-client-device-from-core-device-error-entry
                       common-lisp:nil
                       ((thing-name :initarg :thing-name :initform
                         common-lisp:nil :type
                         (common-lisp:or io-tthing-name common-lisp:null)
                         :accessor
                         struct-shape-disassociate-client-device-from-core-device-error-entry-thing-name
                         :shape "IoTThingName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (code :initarg :code :initform common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-disassociate-client-device-from-core-device-error-entry-code
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message :initarg :message :initform common-lisp:nil
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-disassociate-client-device-from-core-device-error-entry-message
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disassociate-client-device-from-core-device-error-entry
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-client-device-from-core-device-error-entry
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'disassociate-client-device-from-core-device-error-entry
                    'make-disassociate-client-device-from-core-device-error-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-client-device-from-core-device-error-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-client-device-from-core-device-error-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'thing-name))
      (common-lisp:list
       (common-lisp:cons "thingName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'code))
      (common-lisp:list
       (common-lisp:cons "code"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-client-device-from-core-device-error-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype disassociate-client-device-from-core-device-error-list ()
   '(trivial-types:proper-list
     disassociate-client-device-from-core-device-error-entry))
 (common-lisp:defun make-disassociate-client-device-from-core-device-error-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            disassociate-client-device-from-core-device-error-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass disassociate-service-role-from-account-request
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disassociate-service-role-from-account-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-service-role-from-account-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'disassociate-service-role-from-account-request
                    'make-disassociate-service-role-from-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-service-role-from-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-service-role-from-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-service-role-from-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-service-role-from-account-response
                       common-lisp:nil
                       ((disassociated-at :initarg :disassociated-at :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-disassociate-service-role-from-account-response-disassociated-at
                         :shape "String" :location common-lisp:nil
                         :location-name "DisassociatedAt"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disassociate-service-role-from-account-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-service-role-from-account-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'disassociate-service-role-from-account-response
                    'make-disassociate-service-role-from-account-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-service-role-from-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-service-role-from-account-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disassociated-at))
      (common-lisp:list
       (common-lisp:cons "disassociatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-service-role-from-account-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass effective-deployment common-lisp:nil
                       ((deployment-id :initarg :deployment-id :initform
                         (common-lisp:error ":deploymentid is required") :type
                         (common-lisp:or deployment-id common-lisp:null)
                         :accessor
                         struct-shape-effective-deployment-deployment-id :shape
                         "DeploymentID" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (deployment-name :initarg :deployment-name :initform
                         (common-lisp:error ":deploymentname is required")
                         :type
                         (common-lisp:or deployment-name common-lisp:null)
                         :accessor
                         struct-shape-effective-deployment-deployment-name
                         :shape "DeploymentName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (iot-job-id :initarg :iot-job-id :initform
                         common-lisp:nil :type
                         (common-lisp:or io-tjob-id common-lisp:null) :accessor
                         struct-shape-effective-deployment-iot-job-id :shape
                         "IoTJobId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (iot-job-arn :initarg :iot-job-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or io-tjob-arn common-lisp:null)
                         :accessor
                         struct-shape-effective-deployment-iot-job-arn :shape
                         "IoTJobARN" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or description common-lisp:null)
                         :accessor
                         struct-shape-effective-deployment-description :shape
                         "Description" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (target-arn :initarg :target-arn :initform
                         (common-lisp:error ":targetarn is required") :type
                         (common-lisp:or target-arn common-lisp:null) :accessor
                         struct-shape-effective-deployment-target-arn :shape
                         "TargetARN" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (core-device-execution-status :initarg
                         :core-device-execution-status :initform
                         (common-lisp:error
                          ":coredeviceexecutionstatus is required")
                         :type
                         (common-lisp:or effective-deployment-execution-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-effective-deployment-core-device-execution-status
                         :shape "EffectiveDeploymentExecutionStatus" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (reason :initarg :reason :initform common-lisp:nil
                         :type (common-lisp:or reason common-lisp:null)
                         :accessor struct-shape-effective-deployment-reason
                         :shape "Reason" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp
                         :initform
                         (common-lisp:error ":creationtimestamp is required")
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-effective-deployment-creation-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (modified-timestamp :initarg :modified-timestamp
                         :initform
                         (common-lisp:error ":modifiedtimestamp is required")
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-effective-deployment-modified-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status-details :initarg :status-details :initform
                         common-lisp:nil :type
                         (common-lisp:or effective-deployment-status-details
                                         common-lisp:null)
                         :accessor
                         struct-shape-effective-deployment-status-details
                         :shape "EffectiveDeploymentStatusDetails" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-effective-deployment
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'effective-deployment
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'effective-deployment 'make-effective-deployment))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input effective-deployment))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input effective-deployment))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "deploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-name))
      (common-lisp:list
       (common-lisp:cons "deploymentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iot-job-id))
      (common-lisp:list
       (common-lisp:cons "iotJobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iot-job-arn))
      (common-lisp:list
       (common-lisp:cons "iotJobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arn))
      (common-lisp:list
       (common-lisp:cons "targetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'core-device-execution-status))
      (common-lisp:list
       (common-lisp:cons "coreDeviceExecutionStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reason))
      (common-lisp:list
       (common-lisp:cons "reason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "creationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'modified-timestamp))
      (common-lisp:list
       (common-lisp:cons "modifiedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-details))
      (common-lisp:list
       (common-lisp:cons "statusDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input effective-deployment))
   common-lisp:nil))
(common-lisp:deftype effective-deployment-error-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype effective-deployment-error-stack ()
   '(trivial-types:proper-list effective-deployment-error-code))
 (common-lisp:defun make-effective-deployment-error-stack
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            effective-deployment-error-code))
   aws-sdk/generator/shape::members))
(common-lisp:deftype effective-deployment-error-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype effective-deployment-error-type-list ()
   '(trivial-types:proper-list effective-deployment-error-type))
 (common-lisp:defun make-effective-deployment-error-type-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            effective-deployment-error-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype effective-deployment-execution-status ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass effective-deployment-status-details common-lisp:nil
                       ((error-stack :initarg :error-stack :initform
                         common-lisp:nil :type
                         (common-lisp:or effective-deployment-error-stack
                                         common-lisp:null)
                         :accessor
                         struct-shape-effective-deployment-status-details-error-stack
                         :shape "EffectiveDeploymentErrorStack" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (error-types :initarg :error-types :initform
                         common-lisp:nil :type
                         (common-lisp:or effective-deployment-error-type-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-effective-deployment-status-details-error-types
                         :shape "EffectiveDeploymentErrorTypeList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-effective-deployment-status-details
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'effective-deployment-status-details
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'effective-deployment-status-details
                    'make-effective-deployment-status-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          effective-deployment-status-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          effective-deployment-status-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-stack))
      (common-lisp:list
       (common-lisp:cons "errorStack"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-types))
      (common-lisp:list
       (common-lisp:cons "errorTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          effective-deployment-status-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype effective-deployments-list ()
   '(trivial-types:proper-list effective-deployment))
 (common-lisp:defun make-effective-deployments-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list effective-deployment))
   aws-sdk/generator/shape::members))
(common-lisp:deftype file-system-path () 'common-lisp:string)
(common-lisp:deftype ggcversion () 'common-lisp:string)
(common-lisp:deftype generic-v2arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass get-component-request common-lisp:nil
                       ((recipe-output-format :initarg :recipe-output-format
                         :initform common-lisp:nil :type
                         (common-lisp:or recipe-output-format common-lisp:null)
                         :accessor
                         struct-shape-get-component-request-recipe-output-format
                         :shape "RecipeOutputFormat" :location "querystring"
                         :location-name "recipeOutputFormat")
                        (arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or component-version-arn
                                         common-lisp:null)
                         :accessor struct-shape-get-component-request-arn
                         :shape "ComponentVersionARN" :location "uri"
                         :location-name "arn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-component-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-component-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-component-request 'make-get-component-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-component-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-component-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-component-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-component-response common-lisp:nil
                       ((recipe-output-format :initarg :recipe-output-format
                         :initform
                         (common-lisp:error ":recipeoutputformat is required")
                         :type
                         (common-lisp:or recipe-output-format common-lisp:null)
                         :accessor
                         struct-shape-get-component-response-recipe-output-format
                         :shape "RecipeOutputFormat" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recipe :initarg :recipe :initform
                         (common-lisp:error ":recipe is required") :type
                         (common-lisp:or recipe-blob common-lisp:null)
                         :accessor struct-shape-get-component-response-recipe
                         :shape "RecipeBlob" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-get-component-response-tags :shape
                         "TagMap" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-component-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-component-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-component-response 'make-get-component-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-component-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-component-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recipe-output-format))
      (common-lisp:list
       (common-lisp:cons "recipeOutputFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recipe))
      (common-lisp:list
       (common-lisp:cons "recipe"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-component-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-component-version-artifact-request common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or component-version-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-component-version-artifact-request-arn
                         :shape "ComponentVersionARN" :location "uri"
                         :location-name "arn")
                        (artifact-name :initarg :artifact-name :initform
                         (common-lisp:error ":artifactname is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-get-component-version-artifact-request-artifact-name
                         :shape "NonEmptyString" :location "uri" :location-name
                         "artifactName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-component-version-artifact-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-component-version-artifact-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-component-version-artifact-request
                    'make-get-component-version-artifact-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-component-version-artifact-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-component-version-artifact-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-component-version-artifact-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-component-version-artifact-response common-lisp:nil
                       ((pre-signed-url :initarg :pre-signed-url :initform
                         (common-lisp:error ":presignedurl is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-get-component-version-artifact-response-pre-signed-url
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-component-version-artifact-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-component-version-artifact-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-component-version-artifact-response
                    'make-get-component-version-artifact-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-component-version-artifact-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-component-version-artifact-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pre-signed-url))
      (common-lisp:list
       (common-lisp:cons "preSignedUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-component-version-artifact-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-connectivity-info-request common-lisp:nil
                       ((thing-name :initarg :thing-name :initform
                         (common-lisp:error ":thingname is required") :type
                         (common-lisp:or core-device-thing-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-connectivity-info-request-thing-name
                         :shape "CoreDeviceThingName" :location "uri"
                         :location-name "thingName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-connectivity-info-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-connectivity-info-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-connectivity-info-request
                    'make-get-connectivity-info-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-connectivity-info-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-connectivity-info-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-connectivity-info-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-connectivity-info-response common-lisp:nil
                       ((connectivity-info :initarg :connectivity-info
                         :initform common-lisp:nil :type
                         (common-lisp:or |connectivityInfoList|
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-connectivity-info-response-connectivity-info
                         :shape "connectivityInfoList" :location
                         common-lisp:nil :location-name "ConnectivityInfo")
                        (message :initarg :message :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-get-connectivity-info-response-message
                         :shape "String" :location common-lisp:nil
                         :location-name "Message"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-connectivity-info-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-connectivity-info-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-connectivity-info-response
                    'make-get-connectivity-info-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-connectivity-info-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-connectivity-info-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connectivity-info))
      (common-lisp:list
       (common-lisp:cons "connectivityInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-connectivity-info-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-core-device-request common-lisp:nil
                       ((core-device-thing-name :initarg
                         :core-device-thing-name :initform
                         (common-lisp:error ":coredevicethingname is required")
                         :type
                         (common-lisp:or core-device-thing-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-core-device-request-core-device-thing-name
                         :shape "CoreDeviceThingName" :location "uri"
                         :location-name "coreDeviceThingName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-core-device-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-core-device-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-core-device-request 'make-get-core-device-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-core-device-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-core-device-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-core-device-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-core-device-response common-lisp:nil
                       ((core-device-thing-name :initarg
                         :core-device-thing-name :initform common-lisp:nil
                         :type
                         (common-lisp:or core-device-thing-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-core-device-response-core-device-thing-name
                         :shape "CoreDeviceThingName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (core-version :initarg :core-version :initform
                         common-lisp:nil :type
                         (common-lisp:or ggcversion common-lisp:null) :accessor
                         struct-shape-get-core-device-response-core-version
                         :shape "GGCVersion" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (platform :initarg :platform :initform common-lisp:nil
                         :type
                         (common-lisp:or core-device-platform-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-core-device-response-platform :shape
                         "CoreDevicePlatformString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (architecture :initarg :architecture :initform
                         common-lisp:nil :type
                         (common-lisp:or core-device-architecture-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-core-device-response-architecture
                         :shape "CoreDeviceArchitectureString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or core-device-status common-lisp:null)
                         :accessor struct-shape-get-core-device-response-status
                         :shape "CoreDeviceStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-status-update-timestamp :initarg
                         :last-status-update-timestamp :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-get-core-device-response-last-status-update-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-get-core-device-response-tags :shape
                         "TagMap" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-core-device-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-core-device-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-core-device-response 'make-get-core-device-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-core-device-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-core-device-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'core-device-thing-name))
      (common-lisp:list
       (common-lisp:cons "coreDeviceThingName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'core-version))
      (common-lisp:list
       (common-lisp:cons "coreVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platform))
      (common-lisp:list
       (common-lisp:cons "platform"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'architecture))
      (common-lisp:list
       (common-lisp:cons "architecture"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-status-update-timestamp))
      (common-lisp:list
       (common-lisp:cons "lastStatusUpdateTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-core-device-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-deployment-request common-lisp:nil
                       ((deployment-id :initarg :deployment-id :initform
                         (common-lisp:error ":deploymentid is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-get-deployment-request-deployment-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "deploymentId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-deployment-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-deployment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-deployment-request 'make-get-deployment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-deployment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-deployment-response common-lisp:nil
                       ((target-arn :initarg :target-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or target-arn common-lisp:null) :accessor
                         struct-shape-get-deployment-response-target-arn :shape
                         "TargetARN" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (revision-id :initarg :revision-id :initform
                         common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-get-deployment-response-revision-id
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (deployment-id :initarg :deployment-id :initform
                         common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-get-deployment-response-deployment-id
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (deployment-name :initarg :deployment-name :initform
                         common-lisp:nil :type
                         (common-lisp:or nullable-string common-lisp:null)
                         :accessor
                         struct-shape-get-deployment-response-deployment-name
                         :shape "NullableString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (deployment-status :initarg :deployment-status
                         :initform common-lisp:nil :type
                         (common-lisp:or deployment-status common-lisp:null)
                         :accessor
                         struct-shape-get-deployment-response-deployment-status
                         :shape "DeploymentStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (iot-job-id :initarg :iot-job-id :initform
                         common-lisp:nil :type
                         (common-lisp:or nullable-string common-lisp:null)
                         :accessor
                         struct-shape-get-deployment-response-iot-job-id :shape
                         "NullableString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (iot-job-arn :initarg :iot-job-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or io-tjob-arn common-lisp:null)
                         :accessor
                         struct-shape-get-deployment-response-iot-job-arn
                         :shape "IoTJobARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (components :initarg :components :initform
                         common-lisp:nil :type
                         (common-lisp:or component-deployment-specifications
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-deployment-response-components :shape
                         "ComponentDeploymentSpecifications" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (deployment-policies :initarg :deployment-policies
                         :initform common-lisp:nil :type
                         (common-lisp:or deployment-policies common-lisp:null)
                         :accessor
                         struct-shape-get-deployment-response-deployment-policies
                         :shape "DeploymentPolicies" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (iot-job-configuration :initarg :iot-job-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or deployment-io-tjob-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-deployment-response-iot-job-configuration
                         :shape "DeploymentIoTJobConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-get-deployment-response-creation-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (is-latest-for-target :initarg :is-latest-for-target
                         :initform common-lisp:nil :type
                         (common-lisp:or is-latest-for-target common-lisp:null)
                         :accessor
                         struct-shape-get-deployment-response-is-latest-for-target
                         :shape "IsLatestForTarget" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (parent-target-arn :initarg :parent-target-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or thing-group-arn common-lisp:null)
                         :accessor
                         struct-shape-get-deployment-response-parent-target-arn
                         :shape "ThingGroupARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-get-deployment-response-tags :shape
                         "TagMap" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-deployment-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-deployment-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-deployment-response 'make-get-deployment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-deployment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-deployment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arn))
      (common-lisp:list
       (common-lisp:cons "targetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revision-id))
      (common-lisp:list
       (common-lisp:cons "revisionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "deploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-name))
      (common-lisp:list
       (common-lisp:cons "deploymentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-status))
      (common-lisp:list
       (common-lisp:cons "deploymentStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iot-job-id))
      (common-lisp:list
       (common-lisp:cons "iotJobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iot-job-arn))
      (common-lisp:list
       (common-lisp:cons "iotJobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'components))
      (common-lisp:list
       (common-lisp:cons "components"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-policies))
      (common-lisp:list
       (common-lisp:cons "deploymentPolicies"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'iot-job-configuration))
      (common-lisp:list
       (common-lisp:cons "iotJobConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "creationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'is-latest-for-target))
      (common-lisp:list
       (common-lisp:cons "isLatestForTarget"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'parent-target-arn))
      (common-lisp:list
       (common-lisp:cons "parentTargetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-deployment-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-service-role-for-account-request common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-service-role-for-account-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-service-role-for-account-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-service-role-for-account-request
                    'make-get-service-role-for-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-service-role-for-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-service-role-for-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-service-role-for-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-service-role-for-account-response common-lisp:nil
                       ((associated-at :initarg :associated-at :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-service-role-for-account-response-associated-at
                         :shape "String" :location common-lisp:nil
                         :location-name "AssociatedAt")
                        (role-arn :initarg :role-arn :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-get-service-role-for-account-response-role-arn
                         :shape "String" :location common-lisp:nil
                         :location-name "RoleArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-service-role-for-account-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-service-role-for-account-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-service-role-for-account-response
                    'make-get-service-role-for-account-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-service-role-for-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-service-role-for-account-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'associated-at))
      (common-lisp:list
       (common-lisp:cons "associatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "roleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-service-role-for-account-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass installed-component common-lisp:nil
                       ((component-name :initarg :component-name :initform
                         common-lisp:nil :type
                         (common-lisp:or component-name-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-installed-component-component-name :shape
                         "ComponentNameString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (component-version :initarg :component-version
                         :initform common-lisp:nil :type
                         (common-lisp:or component-version-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-installed-component-component-version
                         :shape "ComponentVersionString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (lifecycle-state :initarg :lifecycle-state :initform
                         common-lisp:nil :type
                         (common-lisp:or installed-component-lifecycle-state
                                         common-lisp:null)
                         :accessor
                         struct-shape-installed-component-lifecycle-state
                         :shape "InstalledComponentLifecycleState" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (lifecycle-state-details :initarg
                         :lifecycle-state-details :initform common-lisp:nil
                         :type
                         (common-lisp:or lifecycle-state-details
                                         common-lisp:null)
                         :accessor
                         struct-shape-installed-component-lifecycle-state-details
                         :shape "LifecycleStateDetails" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (is-root :initarg :is-root :initform common-lisp:nil
                         :type (common-lisp:or is-root common-lisp:null)
                         :accessor struct-shape-installed-component-is-root
                         :shape "IsRoot" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-status-change-timestamp :initarg
                         :last-status-change-timestamp :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-installed-component-last-status-change-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-reported-timestamp :initarg
                         :last-reported-timestamp :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-installed-component-last-reported-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-installation-source :initarg
                         :last-installation-source :initform common-lisp:nil
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-installed-component-last-installation-source
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (lifecycle-status-codes :initarg
                         :lifecycle-status-codes :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          installed-component-lifecycle-status-code-list
                          common-lisp:null)
                         :accessor
                         struct-shape-installed-component-lifecycle-status-codes
                         :shape "InstalledComponentLifecycleStatusCodeList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-installed-component
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'installed-component
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'installed-component 'make-installed-component))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input installed-component))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input installed-component))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'component-name))
      (common-lisp:list
       (common-lisp:cons "componentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'component-version))
      (common-lisp:list
       (common-lisp:cons "componentVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lifecycle-state))
      (common-lisp:list
       (common-lisp:cons "lifecycleState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'lifecycle-state-details))
      (common-lisp:list
       (common-lisp:cons "lifecycleStateDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-root))
      (common-lisp:list
       (common-lisp:cons "isRoot"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-status-change-timestamp))
      (common-lisp:list
       (common-lisp:cons "lastStatusChangeTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-reported-timestamp))
      (common-lisp:list
       (common-lisp:cons "lastReportedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-installation-source))
      (common-lisp:list
       (common-lisp:cons "lastInstallationSource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'lifecycle-status-codes))
      (common-lisp:list
       (common-lisp:cons "lifecycleStatusCodes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input installed-component))
   common-lisp:nil))
(common-lisp:deftype installed-component-lifecycle-state () 'common-lisp:string)
(common-lisp:deftype installed-component-lifecycle-status-code ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype installed-component-lifecycle-status-code-list ()
   '(trivial-types:proper-list installed-component-lifecycle-status-code))
 (common-lisp:defun make-installed-component-lifecycle-status-code-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            installed-component-lifecycle-status-code))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype installed-component-list ()
   '(trivial-types:proper-list installed-component))
 (common-lisp:defun make-installed-component-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list installed-component))
   aws-sdk/generator/shape::members))
(common-lisp:deftype installed-component-topology-filter () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (greengrassv2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)
      (retry-after-seconds :initarg :retry-after-seconds :initform
       common-lisp:nil :reader internal-server-exception-retry-after-seconds)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message
                    'internal-server-exception-retry-after-seconds)))
(common-lisp:deftype io-tjob-arn () 'common-lisp:string)
(common-lisp:deftype io-tjob-abort-action () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass io-tjob-abort-config common-lisp:nil
                       ((criteria-list :initarg :criteria-list :initform
                         (common-lisp:error ":criterialist is required") :type
                         (common-lisp:or io-tjob-abort-criteria-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-io-tjob-abort-config-criteria-list :shape
                         "IoTJobAbortCriteriaList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-io-tjob-abort-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'io-tjob-abort-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'io-tjob-abort-config 'make-io-tjob-abort-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input io-tjob-abort-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input io-tjob-abort-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'criteria-list))
      (common-lisp:list
       (common-lisp:cons "criteriaList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input io-tjob-abort-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass io-tjob-abort-criteria common-lisp:nil
                       ((failure-type :initarg :failure-type :initform
                         (common-lisp:error ":failuretype is required") :type
                         (common-lisp:or io-tjob-execution-failure-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-io-tjob-abort-criteria-failure-type
                         :shape "IoTJobExecutionFailureType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (action :initarg :action :initform
                         (common-lisp:error ":action is required") :type
                         (common-lisp:or io-tjob-abort-action common-lisp:null)
                         :accessor struct-shape-io-tjob-abort-criteria-action
                         :shape "IoTJobAbortAction" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (threshold-percentage :initarg :threshold-percentage
                         :initform
                         (common-lisp:error ":thresholdpercentage is required")
                         :type
                         (common-lisp:or io-tjob-abort-threshold-percentage
                                         common-lisp:null)
                         :accessor
                         struct-shape-io-tjob-abort-criteria-threshold-percentage
                         :shape "IoTJobAbortThresholdPercentage" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (min-number-of-executed-things :initarg
                         :min-number-of-executed-things :initform
                         (common-lisp:error
                          ":minnumberofexecutedthings is required")
                         :type
                         (common-lisp:or
                          io-tjob-minimum-number-of-executed-things
                          common-lisp:null)
                         :accessor
                         struct-shape-io-tjob-abort-criteria-min-number-of-executed-things
                         :shape "IoTJobMinimumNumberOfExecutedThings" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-io-tjob-abort-criteria
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'io-tjob-abort-criteria
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'io-tjob-abort-criteria 'make-io-tjob-abort-criteria))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          io-tjob-abort-criteria))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          io-tjob-abort-criteria))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failure-type))
      (common-lisp:list
       (common-lisp:cons "failureType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'threshold-percentage))
      (common-lisp:list
       (common-lisp:cons "thresholdPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'min-number-of-executed-things))
      (common-lisp:list
       (common-lisp:cons "minNumberOfExecutedThings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          io-tjob-abort-criteria))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype io-tjob-abort-criteria-list ()
   '(trivial-types:proper-list io-tjob-abort-criteria))
 (common-lisp:defun make-io-tjob-abort-criteria-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list io-tjob-abort-criteria))
   aws-sdk/generator/shape::members))
(common-lisp:deftype io-tjob-abort-threshold-percentage ()
  'common-lisp:double-float)
(common-lisp:deftype io-tjob-execution-failure-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass io-tjob-executions-rollout-config common-lisp:nil
                       ((exponential-rate :initarg :exponential-rate :initform
                         common-lisp:nil :type
                         (common-lisp:or io-tjob-exponential-rollout-rate
                                         common-lisp:null)
                         :accessor
                         struct-shape-io-tjob-executions-rollout-config-exponential-rate
                         :shape "IoTJobExponentialRolloutRate" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (maximum-per-minute :initarg :maximum-per-minute
                         :initform common-lisp:nil :type
                         (common-lisp:or io-tjob-max-executions-per-min
                                         common-lisp:null)
                         :accessor
                         struct-shape-io-tjob-executions-rollout-config-maximum-per-minute
                         :shape "IoTJobMaxExecutionsPerMin" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-io-tjob-executions-rollout-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'io-tjob-executions-rollout-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'io-tjob-executions-rollout-config
                    'make-io-tjob-executions-rollout-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          io-tjob-executions-rollout-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          io-tjob-executions-rollout-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'exponential-rate))
      (common-lisp:list
       (common-lisp:cons "exponentialRate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'maximum-per-minute))
      (common-lisp:list
       (common-lisp:cons "maximumPerMinute"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          io-tjob-executions-rollout-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass io-tjob-exponential-rollout-rate common-lisp:nil
                       ((base-rate-per-minute :initarg :base-rate-per-minute
                         :initform
                         (common-lisp:error ":baserateperminute is required")
                         :type
                         (common-lisp:or io-tjob-rollout-base-rate-per-minute
                                         common-lisp:null)
                         :accessor
                         struct-shape-io-tjob-exponential-rollout-rate-base-rate-per-minute
                         :shape "IoTJobRolloutBaseRatePerMinute" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (increment-factor :initarg :increment-factor :initform
                         (common-lisp:error ":incrementfactor is required")
                         :type
                         (common-lisp:or io-tjob-rollout-increment-factor
                                         common-lisp:null)
                         :accessor
                         struct-shape-io-tjob-exponential-rollout-rate-increment-factor
                         :shape "IoTJobRolloutIncrementFactor" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (rate-increase-criteria :initarg
                         :rate-increase-criteria :initform
                         (common-lisp:error
                          ":rateincreasecriteria is required")
                         :type
                         (common-lisp:or io-tjob-rate-increase-criteria
                                         common-lisp:null)
                         :accessor
                         struct-shape-io-tjob-exponential-rollout-rate-rate-increase-criteria
                         :shape "IoTJobRateIncreaseCriteria" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-io-tjob-exponential-rollout-rate
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'io-tjob-exponential-rollout-rate
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'io-tjob-exponential-rollout-rate
                    'make-io-tjob-exponential-rollout-rate))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          io-tjob-exponential-rollout-rate))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          io-tjob-exponential-rollout-rate))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'base-rate-per-minute))
      (common-lisp:list
       (common-lisp:cons "baseRatePerMinute"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'increment-factor))
      (common-lisp:list
       (common-lisp:cons "incrementFactor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'rate-increase-criteria))
      (common-lisp:list
       (common-lisp:cons "rateIncreaseCriteria"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          io-tjob-exponential-rollout-rate))
   common-lisp:nil))
(common-lisp:deftype io-tjob-id () 'common-lisp:string)
(common-lisp:deftype io-tjob-in-progress-timeout-in-minutes ()
  'common-lisp:integer)
(common-lisp:deftype io-tjob-max-executions-per-min () 'common-lisp:integer)
(common-lisp:deftype io-tjob-minimum-number-of-executed-things ()
  'common-lisp:integer)
(common-lisp:deftype io-tjob-number-of-things () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass io-tjob-rate-increase-criteria common-lisp:nil
                       ((number-of-notified-things :initarg
                         :number-of-notified-things :initform common-lisp:nil
                         :type
                         (common-lisp:or io-tjob-number-of-things
                                         common-lisp:null)
                         :accessor
                         struct-shape-io-tjob-rate-increase-criteria-number-of-notified-things
                         :shape "IoTJobNumberOfThings" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (number-of-succeeded-things :initarg
                         :number-of-succeeded-things :initform common-lisp:nil
                         :type
                         (common-lisp:or io-tjob-number-of-things
                                         common-lisp:null)
                         :accessor
                         struct-shape-io-tjob-rate-increase-criteria-number-of-succeeded-things
                         :shape "IoTJobNumberOfThings" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-io-tjob-rate-increase-criteria
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'io-tjob-rate-increase-criteria
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'io-tjob-rate-increase-criteria
                    'make-io-tjob-rate-increase-criteria))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          io-tjob-rate-increase-criteria))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          io-tjob-rate-increase-criteria))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-of-notified-things))
      (common-lisp:list
       (common-lisp:cons "numberOfNotifiedThings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-of-succeeded-things))
      (common-lisp:list
       (common-lisp:cons "numberOfSucceededThings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          io-tjob-rate-increase-criteria))
   common-lisp:nil))
(common-lisp:deftype io-tjob-rollout-base-rate-per-minute ()
  'common-lisp:integer)
(common-lisp:deftype io-tjob-rollout-increment-factor ()
  'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defclass io-tjob-timeout-config common-lisp:nil
                       ((in-progress-timeout-in-minutes :initarg
                         :in-progress-timeout-in-minutes :initform
                         common-lisp:nil :type
                         (common-lisp:or io-tjob-in-progress-timeout-in-minutes
                                         common-lisp:null)
                         :accessor
                         struct-shape-io-tjob-timeout-config-in-progress-timeout-in-minutes
                         :shape "IoTJobInProgressTimeoutInMinutes" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-io-tjob-timeout-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'io-tjob-timeout-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'io-tjob-timeout-config 'make-io-tjob-timeout-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          io-tjob-timeout-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          io-tjob-timeout-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'in-progress-timeout-in-minutes))
      (common-lisp:list
       (common-lisp:cons "inProgressTimeoutInMinutes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          io-tjob-timeout-config))
   common-lisp:nil))
(common-lisp:deftype io-tthing-name () 'common-lisp:string)
(common-lisp:deftype is-latest-for-target () 'common-lisp:boolean)
(common-lisp:deftype is-root () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defclass lambda-container-params common-lisp:nil
                       ((memory-size-in-kb :initarg :memory-size-in-kb
                         :initform common-lisp:nil :type
                         (common-lisp:or optional-integer common-lisp:null)
                         :accessor
                         struct-shape-lambda-container-params-memory-size-in-kb
                         :shape "OptionalInteger" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (mount-rosysfs :initarg :mount-rosysfs :initform
                         common-lisp:nil :type
                         (common-lisp:or optional-boolean common-lisp:null)
                         :accessor
                         struct-shape-lambda-container-params-mount-rosysfs
                         :shape "OptionalBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (volumes :initarg :volumes :initform common-lisp:nil
                         :type
                         (common-lisp:or lambda-volume-list common-lisp:null)
                         :accessor struct-shape-lambda-container-params-volumes
                         :shape "LambdaVolumeList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (devices :initarg :devices :initform common-lisp:nil
                         :type
                         (common-lisp:or lambda-device-list common-lisp:null)
                         :accessor struct-shape-lambda-container-params-devices
                         :shape "LambdaDeviceList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-lambda-container-params
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'lambda-container-params
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'lambda-container-params 'make-lambda-container-params))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lambda-container-params))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lambda-container-params))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'memory-size-in-kb))
      (common-lisp:list
       (common-lisp:cons "memorySizeInKB"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mount-rosysfs))
      (common-lisp:list
       (common-lisp:cons "mountROSysfs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volumes))
      (common-lisp:list
       (common-lisp:cons "volumes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'devices))
      (common-lisp:list
       (common-lisp:cons "devices"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lambda-container-params))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype lambda-device-list ()
   '(trivial-types:proper-list lambda-device-mount))
 (common-lisp:defun make-lambda-device-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list lambda-device-mount))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass lambda-device-mount common-lisp:nil
                       ((path :initarg :path :initform
                         (common-lisp:error ":path is required") :type
                         (common-lisp:or file-system-path common-lisp:null)
                         :accessor struct-shape-lambda-device-mount-path :shape
                         "FileSystemPath" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (permission :initarg :permission :initform
                         common-lisp:nil :type
                         (common-lisp:or lambda-filesystem-permission
                                         common-lisp:null)
                         :accessor struct-shape-lambda-device-mount-permission
                         :shape "LambdaFilesystemPermission" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (add-group-owner :initarg :add-group-owner :initform
                         common-lisp:nil :type
                         (common-lisp:or optional-boolean common-lisp:null)
                         :accessor
                         struct-shape-lambda-device-mount-add-group-owner
                         :shape "OptionalBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-lambda-device-mount
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'lambda-device-mount
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'lambda-device-mount 'make-lambda-device-mount))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input lambda-device-mount))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input lambda-device-mount))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path))
      (common-lisp:list
       (common-lisp:cons "path"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission))
      (common-lisp:list
       (common-lisp:cons "permission"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'add-group-owner))
      (common-lisp:list
       (common-lisp:cons "addGroupOwner"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input lambda-device-mount))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype lambda-environment-variables () 'common-lisp:hash-table)
 (common-lisp:defun make-lambda-environment-variables
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass lambda-event-source common-lisp:nil
                       ((topic :initarg :topic :initform
                         (common-lisp:error ":topic is required") :type
                         (common-lisp:or topic-string common-lisp:null)
                         :accessor struct-shape-lambda-event-source-topic
                         :shape "TopicString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (type :initarg :type :initform
                         (common-lisp:error ":type is required") :type
                         (common-lisp:or lambda-event-source-type
                                         common-lisp:null)
                         :accessor struct-shape-lambda-event-source-type :shape
                         "LambdaEventSourceType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-lambda-event-source
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'lambda-event-source
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'lambda-event-source 'make-lambda-event-source))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input lambda-event-source))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input lambda-event-source))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic))
      (common-lisp:list
       (common-lisp:cons "topic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input lambda-event-source))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype lambda-event-source-list ()
   '(trivial-types:proper-list lambda-event-source))
 (common-lisp:defun make-lambda-event-source-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list lambda-event-source))
   aws-sdk/generator/shape::members))
(common-lisp:deftype lambda-event-source-type () 'common-lisp:string)
(common-lisp:deftype lambda-exec-arg () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype lambda-exec-args-list ()
   '(trivial-types:proper-list lambda-exec-arg))
 (common-lisp:defun make-lambda-exec-args-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list lambda-exec-arg))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass lambda-execution-parameters common-lisp:nil
                       ((event-sources :initarg :event-sources :initform
                         common-lisp:nil :type
                         (common-lisp:or lambda-event-source-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-lambda-execution-parameters-event-sources
                         :shape "LambdaEventSourceList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (max-queue-size :initarg :max-queue-size :initform
                         common-lisp:nil :type
                         (common-lisp:or optional-integer common-lisp:null)
                         :accessor
                         struct-shape-lambda-execution-parameters-max-queue-size
                         :shape "OptionalInteger" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-instances-count :initarg :max-instances-count
                         :initform common-lisp:nil :type
                         (common-lisp:or optional-integer common-lisp:null)
                         :accessor
                         struct-shape-lambda-execution-parameters-max-instances-count
                         :shape "OptionalInteger" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-idle-time-in-seconds :initarg
                         :max-idle-time-in-seconds :initform common-lisp:nil
                         :type
                         (common-lisp:or optional-integer common-lisp:null)
                         :accessor
                         struct-shape-lambda-execution-parameters-max-idle-time-in-seconds
                         :shape "OptionalInteger" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (timeout-in-seconds :initarg :timeout-in-seconds
                         :initform common-lisp:nil :type
                         (common-lisp:or optional-integer common-lisp:null)
                         :accessor
                         struct-shape-lambda-execution-parameters-timeout-in-seconds
                         :shape "OptionalInteger" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status-timeout-in-seconds :initarg
                         :status-timeout-in-seconds :initform common-lisp:nil
                         :type
                         (common-lisp:or optional-integer common-lisp:null)
                         :accessor
                         struct-shape-lambda-execution-parameters-status-timeout-in-seconds
                         :shape "OptionalInteger" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (pinned :initarg :pinned :initform common-lisp:nil
                         :type
                         (common-lisp:or optional-boolean common-lisp:null)
                         :accessor
                         struct-shape-lambda-execution-parameters-pinned :shape
                         "OptionalBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (input-payload-encoding-type :initarg
                         :input-payload-encoding-type :initform common-lisp:nil
                         :type
                         (common-lisp:or lambda-input-payload-encoding-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-lambda-execution-parameters-input-payload-encoding-type
                         :shape "LambdaInputPayloadEncodingType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (exec-args :initarg :exec-args :initform
                         common-lisp:nil :type
                         (common-lisp:or lambda-exec-args-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-lambda-execution-parameters-exec-args
                         :shape "LambdaExecArgsList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (environment-variables :initarg :environment-variables
                         :initform common-lisp:nil :type
                         (common-lisp:or lambda-environment-variables
                                         common-lisp:null)
                         :accessor
                         struct-shape-lambda-execution-parameters-environment-variables
                         :shape "LambdaEnvironmentVariables" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (linux-process-params :initarg :linux-process-params
                         :initform common-lisp:nil :type
                         (common-lisp:or lambda-linux-process-params
                                         common-lisp:null)
                         :accessor
                         struct-shape-lambda-execution-parameters-linux-process-params
                         :shape "LambdaLinuxProcessParams" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-lambda-execution-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'lambda-execution-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'lambda-execution-parameters
                    'make-lambda-execution-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lambda-execution-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lambda-execution-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-sources))
      (common-lisp:list
       (common-lisp:cons "eventSources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-queue-size))
      (common-lisp:list
       (common-lisp:cons "maxQueueSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-instances-count))
      (common-lisp:list
       (common-lisp:cons "maxInstancesCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'max-idle-time-in-seconds))
      (common-lisp:list
       (common-lisp:cons "maxIdleTimeInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeout-in-seconds))
      (common-lisp:list
       (common-lisp:cons "timeoutInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'status-timeout-in-seconds))
      (common-lisp:list
       (common-lisp:cons "statusTimeoutInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pinned))
      (common-lisp:list
       (common-lisp:cons "pinned"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'input-payload-encoding-type))
      (common-lisp:list
       (common-lisp:cons "inputPayloadEncodingType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'exec-args))
      (common-lisp:list
       (common-lisp:cons "execArgs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'environment-variables))
      (common-lisp:list
       (common-lisp:cons "environmentVariables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'linux-process-params))
      (common-lisp:list
       (common-lisp:cons "linuxProcessParams"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lambda-execution-parameters))
   common-lisp:nil))
(common-lisp:deftype lambda-filesystem-permission () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass lambda-function-recipe-source common-lisp:nil
                       ((lambda-arn :initarg :lambda-arn :initform
                         (common-lisp:error ":lambdaarn is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-lambda-function-recipe-source-lambda-arn
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (component-name :initarg :component-name :initform
                         common-lisp:nil :type
                         (common-lisp:or component-name-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-lambda-function-recipe-source-component-name
                         :shape "ComponentNameString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (component-version :initarg :component-version
                         :initform common-lisp:nil :type
                         (common-lisp:or component-version-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-lambda-function-recipe-source-component-version
                         :shape "ComponentVersionString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (component-platforms :initarg :component-platforms
                         :initform common-lisp:nil :type
                         (common-lisp:or component-platform-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-lambda-function-recipe-source-component-platforms
                         :shape "ComponentPlatformList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (component-dependencies :initarg
                         :component-dependencies :initform common-lisp:nil
                         :type
                         (common-lisp:or component-dependency-map
                                         common-lisp:null)
                         :accessor
                         struct-shape-lambda-function-recipe-source-component-dependencies
                         :shape "ComponentDependencyMap" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (component-lambda-parameters :initarg
                         :component-lambda-parameters :initform common-lisp:nil
                         :type
                         (common-lisp:or lambda-execution-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-lambda-function-recipe-source-component-lambda-parameters
                         :shape "LambdaExecutionParameters" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-lambda-function-recipe-source
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'lambda-function-recipe-source
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'lambda-function-recipe-source
                    'make-lambda-function-recipe-source))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-recipe-source))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-recipe-source))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lambda-arn))
      (common-lisp:list
       (common-lisp:cons "lambdaArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'component-name))
      (common-lisp:list
       (common-lisp:cons "componentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'component-version))
      (common-lisp:list
       (common-lisp:cons "componentVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'component-platforms))
      (common-lisp:list
       (common-lisp:cons "componentPlatforms"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'component-dependencies))
      (common-lisp:list
       (common-lisp:cons "componentDependencies"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'component-lambda-parameters))
      (common-lisp:list
       (common-lisp:cons "componentLambdaParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-recipe-source))
   common-lisp:nil))
(common-lisp:deftype lambda-input-payload-encoding-type () 'common-lisp:string)
(common-lisp:deftype lambda-isolation-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass lambda-linux-process-params common-lisp:nil
                       ((isolation-mode :initarg :isolation-mode :initform
                         common-lisp:nil :type
                         (common-lisp:or lambda-isolation-mode
                                         common-lisp:null)
                         :accessor
                         struct-shape-lambda-linux-process-params-isolation-mode
                         :shape "LambdaIsolationMode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (container-params :initarg :container-params :initform
                         common-lisp:nil :type
                         (common-lisp:or lambda-container-params
                                         common-lisp:null)
                         :accessor
                         struct-shape-lambda-linux-process-params-container-params
                         :shape "LambdaContainerParams" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-lambda-linux-process-params
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'lambda-linux-process-params
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'lambda-linux-process-params
                    'make-lambda-linux-process-params))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lambda-linux-process-params))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lambda-linux-process-params))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'isolation-mode))
      (common-lisp:list
       (common-lisp:cons "isolationMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-params))
      (common-lisp:list
       (common-lisp:cons "containerParams"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lambda-linux-process-params))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype lambda-volume-list ()
   '(trivial-types:proper-list lambda-volume-mount))
 (common-lisp:defun make-lambda-volume-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list lambda-volume-mount))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass lambda-volume-mount common-lisp:nil
                       ((source-path :initarg :source-path :initform
                         (common-lisp:error ":sourcepath is required") :type
                         (common-lisp:or file-system-path common-lisp:null)
                         :accessor struct-shape-lambda-volume-mount-source-path
                         :shape "FileSystemPath" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (destination-path :initarg :destination-path :initform
                         (common-lisp:error ":destinationpath is required")
                         :type
                         (common-lisp:or file-system-path common-lisp:null)
                         :accessor
                         struct-shape-lambda-volume-mount-destination-path
                         :shape "FileSystemPath" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (permission :initarg :permission :initform
                         common-lisp:nil :type
                         (common-lisp:or lambda-filesystem-permission
                                         common-lisp:null)
                         :accessor struct-shape-lambda-volume-mount-permission
                         :shape "LambdaFilesystemPermission" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (add-group-owner :initarg :add-group-owner :initform
                         common-lisp:nil :type
                         (common-lisp:or optional-boolean common-lisp:null)
                         :accessor
                         struct-shape-lambda-volume-mount-add-group-owner
                         :shape "OptionalBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-lambda-volume-mount
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'lambda-volume-mount
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'lambda-volume-mount 'make-lambda-volume-mount))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input lambda-volume-mount))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input lambda-volume-mount))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-path))
      (common-lisp:list
       (common-lisp:cons "sourcePath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-path))
      (common-lisp:list
       (common-lisp:cons "destinationPath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission))
      (common-lisp:list
       (common-lisp:cons "permission"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'add-group-owner))
      (common-lisp:list
       (common-lisp:cons "addGroupOwner"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input lambda-volume-mount))
   common-lisp:nil))
(common-lisp:deftype lifecycle-state-details () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass list-client-devices-associated-with-core-device-request
                       common-lisp:nil
                       ((core-device-thing-name :initarg
                         :core-device-thing-name :initform
                         (common-lisp:error ":coredevicethingname is required")
                         :type (common-lisp:or io-tthing-name common-lisp:null)
                         :accessor
                         struct-shape-list-client-devices-associated-with-core-device-request-core-device-thing-name
                         :shape "IoTThingName" :location "uri" :location-name
                         "coreDeviceThingName")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or default-max-results common-lisp:null)
                         :accessor
                         struct-shape-list-client-devices-associated-with-core-device-request-max-results
                         :shape "DefaultMaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token-string common-lisp:null)
                         :accessor
                         struct-shape-list-client-devices-associated-with-core-device-request-next-token
                         :shape "NextTokenString" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-client-devices-associated-with-core-device-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-client-devices-associated-with-core-device-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-client-devices-associated-with-core-device-request
                    'make-list-client-devices-associated-with-core-device-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-client-devices-associated-with-core-device-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-client-devices-associated-with-core-device-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-client-devices-associated-with-core-device-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-client-devices-associated-with-core-device-response
                       common-lisp:nil
                       ((associated-client-devices :initarg
                         :associated-client-devices :initform common-lisp:nil
                         :type
                         (common-lisp:or associated-client-device-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-client-devices-associated-with-core-device-response-associated-client-devices
                         :shape "AssociatedClientDeviceList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token-string common-lisp:null)
                         :accessor
                         struct-shape-list-client-devices-associated-with-core-device-response-next-token
                         :shape "NextTokenString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-client-devices-associated-with-core-device-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-client-devices-associated-with-core-device-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-client-devices-associated-with-core-device-response
                    'make-list-client-devices-associated-with-core-device-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-client-devices-associated-with-core-device-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-client-devices-associated-with-core-device-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'associated-client-devices))
      (common-lisp:list
       (common-lisp:cons "associatedClientDevices"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-client-devices-associated-with-core-device-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-component-versions-request common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or component-arn common-lisp:null)
                         :accessor
                         struct-shape-list-component-versions-request-arn
                         :shape "ComponentARN" :location "uri" :location-name
                         "arn")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or default-max-results common-lisp:null)
                         :accessor
                         struct-shape-list-component-versions-request-max-results
                         :shape "DefaultMaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token-string common-lisp:null)
                         :accessor
                         struct-shape-list-component-versions-request-next-token
                         :shape "NextTokenString" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-component-versions-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-component-versions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-component-versions-request
                    'make-list-component-versions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-component-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-component-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-component-versions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-component-versions-response common-lisp:nil
                       ((component-versions :initarg :component-versions
                         :initform common-lisp:nil :type
                         (common-lisp:or component-version-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-component-versions-response-component-versions
                         :shape "ComponentVersionList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token-string common-lisp:null)
                         :accessor
                         struct-shape-list-component-versions-response-next-token
                         :shape "NextTokenString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-component-versions-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-component-versions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-component-versions-response
                    'make-list-component-versions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-component-versions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-component-versions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'component-versions))
      (common-lisp:list
       (common-lisp:cons "componentVersions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-component-versions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-components-request common-lisp:nil
                       ((scope :initarg :scope :initform common-lisp:nil :type
                         (common-lisp:or component-visibility-scope
                                         common-lisp:null)
                         :accessor struct-shape-list-components-request-scope
                         :shape "ComponentVisibilityScope" :location
                         "querystring" :location-name "scope")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or default-max-results common-lisp:null)
                         :accessor
                         struct-shape-list-components-request-max-results
                         :shape "DefaultMaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token-string common-lisp:null)
                         :accessor
                         struct-shape-list-components-request-next-token :shape
                         "NextTokenString" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-components-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-components-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-components-request 'make-list-components-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-components-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-components-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-components-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-components-response common-lisp:nil
                       ((components :initarg :components :initform
                         common-lisp:nil :type
                         (common-lisp:or component-list common-lisp:null)
                         :accessor
                         struct-shape-list-components-response-components
                         :shape "ComponentList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token-string common-lisp:null)
                         :accessor
                         struct-shape-list-components-response-next-token
                         :shape "NextTokenString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-components-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-components-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-components-response 'make-list-components-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-components-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-components-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'components))
      (common-lisp:list
       (common-lisp:cons "components"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-components-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-core-devices-request common-lisp:nil
                       ((thing-group-arn :initarg :thing-group-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or thing-group-arn common-lisp:null)
                         :accessor
                         struct-shape-list-core-devices-request-thing-group-arn
                         :shape "ThingGroupARN" :location "querystring"
                         :location-name "thingGroupArn")
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or core-device-status common-lisp:null)
                         :accessor
                         struct-shape-list-core-devices-request-status :shape
                         "CoreDeviceStatus" :location "querystring"
                         :location-name "status")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or default-max-results common-lisp:null)
                         :accessor
                         struct-shape-list-core-devices-request-max-results
                         :shape "DefaultMaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token-string common-lisp:null)
                         :accessor
                         struct-shape-list-core-devices-request-next-token
                         :shape "NextTokenString" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-core-devices-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-core-devices-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-core-devices-request
                    'make-list-core-devices-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-core-devices-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-core-devices-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-core-devices-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-core-devices-response common-lisp:nil
                       ((core-devices :initarg :core-devices :initform
                         common-lisp:nil :type
                         (common-lisp:or core-devices-list common-lisp:null)
                         :accessor
                         struct-shape-list-core-devices-response-core-devices
                         :shape "CoreDevicesList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token-string common-lisp:null)
                         :accessor
                         struct-shape-list-core-devices-response-next-token
                         :shape "NextTokenString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-core-devices-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-core-devices-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-core-devices-response
                    'make-list-core-devices-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-core-devices-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-core-devices-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'core-devices))
      (common-lisp:list
       (common-lisp:cons "coreDevices"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-core-devices-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-deployments-request common-lisp:nil
                       ((target-arn :initarg :target-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or target-arn common-lisp:null) :accessor
                         struct-shape-list-deployments-request-target-arn
                         :shape "TargetARN" :location "querystring"
                         :location-name "targetArn")
                        (history-filter :initarg :history-filter :initform
                         common-lisp:nil :type
                         (common-lisp:or deployment-history-filter
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-deployments-request-history-filter
                         :shape "DeploymentHistoryFilter" :location
                         "querystring" :location-name "historyFilter")
                        (parent-target-arn :initarg :parent-target-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or thing-group-arn common-lisp:null)
                         :accessor
                         struct-shape-list-deployments-request-parent-target-arn
                         :shape "ThingGroupARN" :location "querystring"
                         :location-name "parentTargetArn")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or default-max-results common-lisp:null)
                         :accessor
                         struct-shape-list-deployments-request-max-results
                         :shape "DefaultMaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token-string common-lisp:null)
                         :accessor
                         struct-shape-list-deployments-request-next-token
                         :shape "NextTokenString" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-deployments-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-deployments-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-deployments-request 'make-list-deployments-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-deployments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-deployments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-deployments-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-deployments-response common-lisp:nil
                       ((deployments :initarg :deployments :initform
                         common-lisp:nil :type
                         (common-lisp:or deployment-list common-lisp:null)
                         :accessor
                         struct-shape-list-deployments-response-deployments
                         :shape "DeploymentList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token-string common-lisp:null)
                         :accessor
                         struct-shape-list-deployments-response-next-token
                         :shape "NextTokenString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-deployments-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-deployments-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-deployments-response
                    'make-list-deployments-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-deployments-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-deployments-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployments))
      (common-lisp:list
       (common-lisp:cons "deployments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-deployments-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-effective-deployments-request common-lisp:nil
                       ((core-device-thing-name :initarg
                         :core-device-thing-name :initform
                         (common-lisp:error ":coredevicethingname is required")
                         :type
                         (common-lisp:or core-device-thing-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-effective-deployments-request-core-device-thing-name
                         :shape "CoreDeviceThingName" :location "uri"
                         :location-name "coreDeviceThingName")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or default-max-results common-lisp:null)
                         :accessor
                         struct-shape-list-effective-deployments-request-max-results
                         :shape "DefaultMaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token-string common-lisp:null)
                         :accessor
                         struct-shape-list-effective-deployments-request-next-token
                         :shape "NextTokenString" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-effective-deployments-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-effective-deployments-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-effective-deployments-request
                    'make-list-effective-deployments-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-effective-deployments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-effective-deployments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-effective-deployments-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-effective-deployments-response common-lisp:nil
                       ((effective-deployments :initarg :effective-deployments
                         :initform common-lisp:nil :type
                         (common-lisp:or effective-deployments-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-effective-deployments-response-effective-deployments
                         :shape "EffectiveDeploymentsList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token-string common-lisp:null)
                         :accessor
                         struct-shape-list-effective-deployments-response-next-token
                         :shape "NextTokenString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-effective-deployments-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-effective-deployments-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-effective-deployments-response
                    'make-list-effective-deployments-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-effective-deployments-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-effective-deployments-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'effective-deployments))
      (common-lisp:list
       (common-lisp:cons "effectiveDeployments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-effective-deployments-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-installed-components-request common-lisp:nil
                       ((core-device-thing-name :initarg
                         :core-device-thing-name :initform
                         (common-lisp:error ":coredevicethingname is required")
                         :type
                         (common-lisp:or core-device-thing-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-installed-components-request-core-device-thing-name
                         :shape "CoreDeviceThingName" :location "uri"
                         :location-name "coreDeviceThingName")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or default-max-results common-lisp:null)
                         :accessor
                         struct-shape-list-installed-components-request-max-results
                         :shape "DefaultMaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token-string common-lisp:null)
                         :accessor
                         struct-shape-list-installed-components-request-next-token
                         :shape "NextTokenString" :location "querystring"
                         :location-name "nextToken")
                        (topology-filter :initarg :topology-filter :initform
                         common-lisp:nil :type
                         (common-lisp:or installed-component-topology-filter
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-installed-components-request-topology-filter
                         :shape "InstalledComponentTopologyFilter" :location
                         "querystring" :location-name "topologyFilter"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-installed-components-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-installed-components-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-installed-components-request
                    'make-list-installed-components-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-installed-components-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-installed-components-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-installed-components-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-installed-components-response common-lisp:nil
                       ((installed-components :initarg :installed-components
                         :initform common-lisp:nil :type
                         (common-lisp:or installed-component-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-installed-components-response-installed-components
                         :shape "InstalledComponentList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token-string common-lisp:null)
                         :accessor
                         struct-shape-list-installed-components-response-next-token
                         :shape "NextTokenString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-installed-components-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-installed-components-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-installed-components-response
                    'make-list-installed-components-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-installed-components-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-installed-components-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'installed-components))
      (common-lisp:list
       (common-lisp:cons "installedComponents"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-installed-components-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or generic-v2arn common-lisp:null)
                         :accessor
                         struct-shape-list-tags-for-resource-request-resource-arn
                         :shape "GenericV2ARN" :location "uri" :location-name
                         "resourceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-response-tags
                         :shape "TagMap" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:deftype memory () 'common-lisp:integer)
(common-lisp:deftype next-token-string () 'common-lisp:string)
(common-lisp:deftype non-empty-string () 'common-lisp:string)
(common-lisp:deftype nullable-string () 'common-lisp:string)
(common-lisp:deftype optional-boolean () 'common-lisp:boolean)
(common-lisp:deftype optional-integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype platform-attributes-map () 'common-lisp:hash-table)
 (common-lisp:defun make-platform-attributes-map
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype port-number-int () 'common-lisp:integer)
(common-lisp:deftype publisher-string () 'common-lisp:string)
(common-lisp:deftype reason () 'common-lisp:string)
(common-lisp:deftype recipe-blob ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:deftype recipe-output-format () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition request-already-in-progress-exception
     (greengrassv2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       request-already-in-progress-exception-message)))
 (common-lisp:export
  (common-lisp:list 'request-already-in-progress-exception
                    'request-already-in-progress-exception-message)))
(common-lisp:progn
 (common-lisp:defclass resolve-component-candidates-request common-lisp:nil
                       ((platform :initarg :platform :initform common-lisp:nil
                         :type
                         (common-lisp:or component-platform common-lisp:null)
                         :accessor
                         struct-shape-resolve-component-candidates-request-platform
                         :shape "ComponentPlatform" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (component-candidates :initarg :component-candidates
                         :initform common-lisp:nil :type
                         (common-lisp:or component-candidate-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-resolve-component-candidates-request-component-candidates
                         :shape "ComponentCandidateList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-resolve-component-candidates-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'resolve-component-candidates-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'resolve-component-candidates-request
                    'make-resolve-component-candidates-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          resolve-component-candidates-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          resolve-component-candidates-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platform))
      (common-lisp:list
       (common-lisp:cons "platform"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'component-candidates))
      (common-lisp:list
       (common-lisp:cons "componentCandidates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          resolve-component-candidates-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass resolve-component-candidates-response common-lisp:nil
                       ((resolved-component-versions :initarg
                         :resolved-component-versions :initform common-lisp:nil
                         :type
                         (common-lisp:or resolved-component-versions-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-resolve-component-candidates-response-resolved-component-versions
                         :shape "ResolvedComponentVersionsList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-resolve-component-candidates-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'resolve-component-candidates-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'resolve-component-candidates-response
                    'make-resolve-component-candidates-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          resolve-component-candidates-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          resolve-component-candidates-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resolved-component-versions))
      (common-lisp:list
       (common-lisp:cons "resolvedComponentVersions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          resolve-component-candidates-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass resolved-component-version common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or component-version-arn
                                         common-lisp:null)
                         :accessor struct-shape-resolved-component-version-arn
                         :shape "ComponentVersionARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (component-name :initarg :component-name :initform
                         common-lisp:nil :type
                         (common-lisp:or component-name-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-resolved-component-version-component-name
                         :shape "ComponentNameString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (component-version :initarg :component-version
                         :initform common-lisp:nil :type
                         (common-lisp:or component-version-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-resolved-component-version-component-version
                         :shape "ComponentVersionString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (recipe :initarg :recipe :initform common-lisp:nil
                         :type (common-lisp:or recipe-blob common-lisp:null)
                         :accessor
                         struct-shape-resolved-component-version-recipe :shape
                         "RecipeBlob" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (vendor-guidance :initarg :vendor-guidance :initform
                         common-lisp:nil :type
                         (common-lisp:or vendor-guidance common-lisp:null)
                         :accessor
                         struct-shape-resolved-component-version-vendor-guidance
                         :shape "VendorGuidance" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message :initarg :message :initform common-lisp:nil
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-resolved-component-version-message :shape
                         "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-resolved-component-version
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'resolved-component-version
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'resolved-component-version
                    'make-resolved-component-version))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          resolved-component-version))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          resolved-component-version))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'component-name))
      (common-lisp:list
       (common-lisp:cons "componentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'component-version))
      (common-lisp:list
       (common-lisp:cons "componentVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recipe))
      (common-lisp:list
       (common-lisp:cons "recipe"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vendor-guidance))
      (common-lisp:list
       (common-lisp:cons "vendorGuidance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          resolved-component-version))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype resolved-component-versions-list ()
   '(trivial-types:proper-list resolved-component-version))
 (common-lisp:defun make-resolved-component-versions-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            resolved-component-version))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (greengrassv2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)
      (resource-id :initarg :resource-id :initform common-lisp:nil :reader
       resource-not-found-exception-resource-id)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       resource-not-found-exception-resource-type)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message
                    'resource-not-found-exception-resource-id
                    'resource-not-found-exception-resource-type)))
(common-lisp:deftype retry-after-seconds () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition service-quota-exceeded-exception
     (greengrassv2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-quota-exceeded-exception-message)
      (resource-id :initarg :resource-id :initform common-lisp:nil :reader
       service-quota-exceeded-exception-resource-id)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       service-quota-exceeded-exception-resource-type)
      (quota-code :initarg :quota-code :initform common-lisp:nil :reader
       service-quota-exceeded-exception-quota-code)
      (service-code :initarg :service-code :initform common-lisp:nil :reader
       service-quota-exceeded-exception-service-code)))
 (common-lisp:export
  (common-lisp:list 'service-quota-exceeded-exception
                    'service-quota-exceeded-exception-message
                    'service-quota-exceeded-exception-resource-id
                    'service-quota-exceeded-exception-resource-type
                    'service-quota-exceeded-exception-quota-code
                    'service-quota-exceeded-exception-service-code)))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype string-map () 'common-lisp:hash-table)
 (common-lisp:defun make-string-map (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass system-resource-limits common-lisp:nil
                       ((memory :initarg :memory :initform common-lisp:nil
                         :type (common-lisp:or memory common-lisp:null)
                         :accessor struct-shape-system-resource-limits-memory
                         :shape "Memory" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cpus :initarg :cpus :initform common-lisp:nil :type
                         (common-lisp:or cpu common-lisp:null) :accessor
                         struct-shape-system-resource-limits-cpus :shape "CPU"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-system-resource-limits
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'system-resource-limits
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'system-resource-limits 'make-system-resource-limits))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          system-resource-limits))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          system-resource-limits))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'memory))
      (common-lisp:list
       (common-lisp:cons "memory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cpus))
      (common-lisp:list
       (common-lisp:cons "cpus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          system-resource-limits))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun make-tag-key-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-map () 'common-lisp:hash-table)
 (common-lisp:defun make-tag-map (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or generic-v2arn common-lisp:null)
                         :accessor
                         struct-shape-tag-resource-request-resource-arn :shape
                         "GenericV2ARN" :location "uri" :location-name
                         "resourceArn")
                        (tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-tag-resource-request-tags :shape "TagMap"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:deftype target-arn () 'common-lisp:string)
(common-lisp:deftype thing-group-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (greengrassv2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)
      (quota-code :initarg :quota-code :initform common-lisp:nil :reader
       throttling-exception-quota-code)
      (service-code :initarg :service-code :initform common-lisp:nil :reader
       throttling-exception-service-code)
      (retry-after-seconds :initarg :retry-after-seconds :initform
       common-lisp:nil :reader throttling-exception-retry-after-seconds)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message
                    'throttling-exception-quota-code
                    'throttling-exception-service-code
                    'throttling-exception-retry-after-seconds)))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:deftype topic-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or generic-v2arn common-lisp:null)
                         :accessor
                         struct-shape-untag-resource-request-resource-arn
                         :shape "GenericV2ARN" :location "uri" :location-name
                         "resourceArn")
                        (tag-keys :initarg :tag-keys :initform
                         (common-lisp:error ":tagkeys is required") :type
                         (common-lisp:or tag-key-list common-lisp:null)
                         :accessor struct-shape-untag-resource-request-tag-keys
                         :shape "TagKeyList" :location "querystring"
                         :location-name "tagKeys"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-connectivity-info-request common-lisp:nil
                       ((thing-name :initarg :thing-name :initform
                         (common-lisp:error ":thingname is required") :type
                         (common-lisp:or core-device-thing-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-connectivity-info-request-thing-name
                         :shape "CoreDeviceThingName" :location "uri"
                         :location-name "thingName")
                        (connectivity-info :initarg :connectivity-info
                         :initform
                         (common-lisp:error ":connectivityinfo is required")
                         :type
                         (common-lisp:or |connectivityInfoList|
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-connectivity-info-request-connectivity-info
                         :shape "connectivityInfoList" :location
                         common-lisp:nil :location-name "ConnectivityInfo"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-connectivity-info-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-connectivity-info-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-connectivity-info-request
                    'make-update-connectivity-info-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-connectivity-info-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-connectivity-info-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connectivity-info))
      (common-lisp:list
       (common-lisp:cons "connectivityInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-connectivity-info-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-connectivity-info-response common-lisp:nil
                       ((version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-update-connectivity-info-response-version
                         :shape "String" :location common-lisp:nil
                         :location-name "Version")
                        (message :initarg :message :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-update-connectivity-info-response-message
                         :shape "String" :location common-lisp:nil
                         :location-name "Message"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-connectivity-info-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-connectivity-info-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-connectivity-info-response
                    'make-update-connectivity-info-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-connectivity-info-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-connectivity-info-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-connectivity-info-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (greengrassv2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)
      (reason :initarg :reason :initform common-lisp:nil :reader
       validation-exception-reason)
      (fields :initarg :fields :initform common-lisp:nil :reader
       validation-exception-fields)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message
                    'validation-exception-reason 'validation-exception-fields)))
(common-lisp:progn
 (common-lisp:defclass validation-exception-field common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-validation-exception-field-name :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (message :initarg :message :initform
                         (common-lisp:error ":message is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-validation-exception-field-message :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-validation-exception-field
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'validation-exception-field
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'validation-exception-field
                    'make-validation-exception-field))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          validation-exception-field))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          validation-exception-field))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          validation-exception-field))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype validation-exception-field-list ()
   '(trivial-types:proper-list validation-exception-field))
 (common-lisp:defun make-validation-exception-field-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            validation-exception-field))
   aws-sdk/generator/shape::members))
(common-lisp:deftype validation-exception-reason () 'common-lisp:string)
(common-lisp:deftype vendor-guidance () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype |connectivityInfoList| ()
   '(trivial-types:proper-list connectivity-info))
 (common-lisp:defun make-connectivityinfolist
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list connectivity-info))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defun associate-service-role-to-account
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key role-arn)
   (common-lisp:declare (common-lisp:ignorable role-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-associate-service-role-to-account-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrassv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        "/greengrass/servicerole"
                                                        "AssociateServiceRoleToAccount"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'associate-service-role-to-account))
(common-lisp:progn
 (common-lisp:defun batch-associate-client-device-with-core-device
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key entries core-device-thing-name)
   (common-lisp:declare (common-lisp:ignorable entries core-device-thing-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-batch-associate-client-device-with-core-device-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrassv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/v2/coreDevices/~A/associateClientDevices"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'core-device-thing-name))))
                                                        "BatchAssociateClientDeviceWithCoreDevice"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'batch-associate-client-device-with-core-device))
(common-lisp:progn
 (common-lisp:defun batch-disassociate-client-device-from-core-device
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key entries core-device-thing-name)
   (common-lisp:declare (common-lisp:ignorable entries core-device-thing-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-batch-disassociate-client-device-from-core-device-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrassv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/v2/coreDevices/~A/disassociateClientDevices"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'core-device-thing-name))))
                                                        "BatchDisassociateClientDeviceFromCoreDevice"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'batch-disassociate-client-device-from-core-device))
(common-lisp:progn
 (common-lisp:defun cancel-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key deployment-id)
   (common-lisp:declare (common-lisp:ignorable deployment-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-cancel-deployment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrassv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/v2/deployments/~A/cancel"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'deployment-id))))
                                                        "CancelDeployment"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'cancel-deployment))
(common-lisp:progn
 (common-lisp:defun create-component-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key inline-recipe lambda-function tags
                     client-token)
   (common-lisp:declare
    (common-lisp:ignorable inline-recipe lambda-function tags client-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-component-version-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrassv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/greengrass/v2/createComponentVersion"
                                                        "CreateComponentVersion"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-component-version))
(common-lisp:progn
 (common-lisp:defun create-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key target-arn deployment-name components
                     iot-job-configuration deployment-policies
                     parent-target-arn tags client-token)
   (common-lisp:declare
    (common-lisp:ignorable target-arn deployment-name components
     iot-job-configuration deployment-policies parent-target-arn tags
     client-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-deployment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrassv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/greengrass/v2/deployments"
                                                        "CreateDeployment"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-deployment))
(common-lisp:progn
 (common-lisp:defun delete-component
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-component-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrassv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/v2/components/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'arn))))
                                                        "DeleteComponent"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-component))
(common-lisp:progn
 (common-lisp:defun delete-core-device
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key core-device-thing-name)
   (common-lisp:declare (common-lisp:ignorable core-device-thing-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-core-device-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrassv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/v2/coreDevices/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'core-device-thing-name))))
                                                        "DeleteCoreDevice"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-core-device))
(common-lisp:progn
 (common-lisp:defun delete-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key deployment-id)
   (common-lisp:declare (common-lisp:ignorable deployment-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-deployment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrassv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/v2/deployments/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'deployment-id))))
                                                        "DeleteDeployment"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-deployment))
(common-lisp:progn
 (common-lisp:defun describe-component
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-component-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrassv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/v2/components/~A/metadata"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'arn))))
                                                        "DescribeComponent"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-component))
(common-lisp:progn
 (common-lisp:defun disassociate-service-role-from-account ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'greengrassv2-request :method "DELETE" :path
                                "/greengrass/servicerole" :operation
                                "DisassociateServiceRoleFromAccount"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'disassociate-service-role-from-account))
(common-lisp:progn
 (common-lisp:defun get-component
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key recipe-output-format arn)
   (common-lisp:declare (common-lisp:ignorable recipe-output-format arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-component-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrassv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/v2/components/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'arn))))
                                                        "GetComponent"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-component))
(common-lisp:progn
 (common-lisp:defun get-component-version-artifact
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn artifact-name)
   (common-lisp:declare (common-lisp:ignorable arn artifact-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-component-version-artifact-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrassv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/v2/components/~A/artifacts/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'arn))
                                                           (common-lisp:slot-value
                                                            aws-sdk/generator/operation::input
                                                            'artifact-name)))
                                                        "GetComponentVersionArtifact"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-component-version-artifact))
(common-lisp:progn
 (common-lisp:defun get-connectivity-info
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key thing-name)
   (common-lisp:declare (common-lisp:ignorable thing-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-connectivity-info-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrassv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/things/~A/connectivityInfo"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'thing-name))))
                                                        "GetConnectivityInfo"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-connectivity-info))
(common-lisp:progn
 (common-lisp:defun get-core-device
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key core-device-thing-name)
   (common-lisp:declare (common-lisp:ignorable core-device-thing-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-core-device-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrassv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/v2/coreDevices/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'core-device-thing-name))))
                                                        "GetCoreDevice"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-core-device))
(common-lisp:progn
 (common-lisp:defun get-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key deployment-id)
   (common-lisp:declare (common-lisp:ignorable deployment-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-deployment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrassv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/v2/deployments/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'deployment-id))))
                                                        "GetDeployment"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-deployment))
(common-lisp:progn
 (common-lisp:defun get-service-role-for-account ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'greengrassv2-request :method "GET" :path
                                "/greengrass/servicerole" :operation
                                "GetServiceRoleForAccount"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-service-role-for-account))
(common-lisp:progn
 (common-lisp:defun list-client-devices-associated-with-core-device
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key core-device-thing-name max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable core-device-thing-name max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-client-devices-associated-with-core-device-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrassv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/v2/coreDevices/~A/associatedClientDevices"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'core-device-thing-name))))
                                                        "ListClientDevicesAssociatedWithCoreDevice"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-client-devices-associated-with-core-device))
(common-lisp:progn
 (common-lisp:defun list-component-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn max-results next-token)
   (common-lisp:declare (common-lisp:ignorable arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-component-versions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrassv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/v2/components/~A/versions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'arn))))
                                                        "ListComponentVersions"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-component-versions))
(common-lisp:progn
 (common-lisp:defun list-components
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key scope max-results next-token)
   (common-lisp:declare (common-lisp:ignorable scope max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-components-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrassv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/greengrass/v2/components"
                                                        "ListComponents"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-components))
(common-lisp:progn
 (common-lisp:defun list-core-devices
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key thing-group-arn status max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable thing-group-arn status max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-core-devices-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrassv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/greengrass/v2/coreDevices"
                                                        "ListCoreDevices"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-core-devices))
(common-lisp:progn
 (common-lisp:defun list-deployments
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key target-arn history-filter
                     parent-target-arn max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable target-arn history-filter parent-target-arn
     max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-deployments-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrassv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/greengrass/v2/deployments"
                                                        "ListDeployments"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-deployments))
(common-lisp:progn
 (common-lisp:defun list-effective-deployments
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key core-device-thing-name max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable core-device-thing-name max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-effective-deployments-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrassv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/v2/coreDevices/~A/effectiveDeployments"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'core-device-thing-name))))
                                                        "ListEffectiveDeployments"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-effective-deployments))
(common-lisp:progn
 (common-lisp:defun list-installed-components
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key core-device-thing-name max-results
                     next-token topology-filter)
   (common-lisp:declare
    (common-lisp:ignorable core-device-thing-name max-results next-token
     topology-filter))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-installed-components-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrassv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/v2/coreDevices/~A/installedComponents"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'core-device-thing-name))))
                                                        "ListInstalledComponents"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-installed-components))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrassv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun resolve-component-candidates
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key platform component-candidates)
   (common-lisp:declare (common-lisp:ignorable platform component-candidates))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-resolve-component-candidates-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrassv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/greengrass/v2/resolveComponentCandidates"
                                                        "ResolveComponentCandidates"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'resolve-component-candidates))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrassv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "TagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrassv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-connectivity-info
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key thing-name connectivity-info)
   (common-lisp:declare (common-lisp:ignorable thing-name connectivity-info))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-connectivity-info-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'greengrassv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/greengrass/things/~A/connectivityInfo"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'thing-name))))
                                                        "UpdateConnectivityInfo"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-connectivity-info))
