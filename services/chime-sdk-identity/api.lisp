;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(uiop/package:define-package #:aws-sdk/services/chime-sdk-identity/api (:use)
                             (:nicknames #:aws/chime-sdk-identity)
                             (:import-from #:aws-sdk/generator/shape)
                             (:import-from #:aws-sdk/generator/operation)
                             (:import-from #:aws-sdk/api)
                             (:import-from #:aws-sdk/request)
                             (:import-from #:aws-sdk/json-request)
                             (:import-from #:aws-sdk/rest-json-request)
                             (:import-from #:aws-sdk/rest-xml-request)
                             (:import-from #:aws-sdk/query-request)
                             (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/chime-sdk-identity/api)
(common-lisp:progn
 (common-lisp:define-condition chime-sdk-identity-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'chime-sdk-identity-error))
(common-lisp:progn
 (common-lisp:defclass chime-sdk-identity-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "chime-sdk-identity"
                        :api-version "2021-04-20" :host-prefix "identity-chime"
                        :signing-name "chime" :global-host common-lisp:nil))
 (common-lisp:export 'chime-sdk-identity-request))
(common-lisp:defvar *error-map*
  '(("BadRequestException" . bad-request-exception)
    ("ConflictException" . conflict-exception)
    ("ForbiddenException" . forbidden-exception)
    ("NotFoundException" . not-found-exception)
    ("ResourceLimitExceededException" . resource-limit-exceeded-exception)
    ("ServiceFailureException" . service-failure-exception)
    ("ServiceUnavailableException" . service-unavailable-exception)
    ("ThrottledClientException" . throttled-client-exception)
    ("UnauthorizedClientException" . unauthorized-client-exception)))
(common-lisp:deftype allow-messages () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass app-instance common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-app-instance-app-instance-arn :shape
                         "ChimeArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or non-empty-resource-name
                                         common-lisp:null)
                         :accessor struct-shape-app-instance-name :shape
                         "NonEmptyResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-app-instance-created-timestamp :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :last-updated-timestamp :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-app-instance-last-updated-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or metadata common-lisp:null)
                         :accessor struct-shape-app-instance-metadata :shape
                         "Metadata" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-app-instance
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'app-instance
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'app-instance 'make-app-instance))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input app-instance))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input app-instance))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input app-instance))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass app-instance-admin common-lisp:nil
                       ((admin :initarg :admin :initform common-lisp:nil :type
                         (common-lisp:or identity common-lisp:null) :accessor
                         struct-shape-app-instance-admin-admin :shape
                         "Identity" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (app-instance-arn :initarg :app-instance-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-app-instance-admin-app-instance-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-app-instance-admin-created-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-app-instance-admin
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'app-instance-admin
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'app-instance-admin 'make-app-instance-admin))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input app-instance-admin))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input app-instance-admin))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'admin))
      (common-lisp:list
       (common-lisp:cons "Admin"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input app-instance-admin))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype app-instance-admin-list ()
   '(trivial-types:proper-list app-instance-admin-summary))
 (common-lisp:defun make-app-instance-admin-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            app-instance-admin-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass app-instance-admin-summary common-lisp:nil
                       ((admin :initarg :admin :initform common-lisp:nil :type
                         (common-lisp:or identity common-lisp:null) :accessor
                         struct-shape-app-instance-admin-summary-admin :shape
                         "Identity" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-app-instance-admin-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'app-instance-admin-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'app-instance-admin-summary
                    'make-app-instance-admin-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          app-instance-admin-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          app-instance-admin-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'admin))
      (common-lisp:list
       (common-lisp:cons "Admin"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          app-instance-admin-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass app-instance-bot common-lisp:nil
                       ((app-instance-bot-arn :initarg :app-instance-bot-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-app-instance-bot-app-instance-bot-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor struct-shape-app-instance-bot-name :shape
                         "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (configuration :initarg :configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or configuration common-lisp:null)
                         :accessor struct-shape-app-instance-bot-configuration
                         :shape "Configuration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-app-instance-bot-created-timestamp :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :last-updated-timestamp :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-app-instance-bot-last-updated-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or metadata common-lisp:null)
                         :accessor struct-shape-app-instance-bot-metadata
                         :shape "Metadata" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-app-instance-bot
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'app-instance-bot
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'app-instance-bot 'make-app-instance-bot))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input app-instance-bot))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input app-instance-bot))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-instance-bot-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceBotArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration))
      (common-lisp:list
       (common-lisp:cons "Configuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input app-instance-bot))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype app-instance-bot-list ()
   '(trivial-types:proper-list app-instance-bot-summary))
 (common-lisp:defun make-app-instance-bot-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            app-instance-bot-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass app-instance-bot-summary common-lisp:nil
                       ((app-instance-bot-arn :initarg :app-instance-bot-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-app-instance-bot-summary-app-instance-bot-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor struct-shape-app-instance-bot-summary-name
                         :shape "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or metadata common-lisp:null)
                         :accessor
                         struct-shape-app-instance-bot-summary-metadata :shape
                         "Metadata" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-app-instance-bot-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'app-instance-bot-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'app-instance-bot-summary 'make-app-instance-bot-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          app-instance-bot-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          app-instance-bot-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-instance-bot-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceBotArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          app-instance-bot-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype app-instance-list ()
   '(trivial-types:proper-list app-instance-summary))
 (common-lisp:defun make-app-instance-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list app-instance-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass app-instance-retention-settings common-lisp:nil
                       ((channel-retention-settings :initarg
                         :channel-retention-settings :initform common-lisp:nil
                         :type
                         (common-lisp:or channel-retention-settings
                                         common-lisp:null)
                         :accessor
                         struct-shape-app-instance-retention-settings-channel-retention-settings
                         :shape "ChannelRetentionSettings" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-app-instance-retention-settings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'app-instance-retention-settings
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'app-instance-retention-settings
                    'make-app-instance-retention-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          app-instance-retention-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          app-instance-retention-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'channel-retention-settings))
      (common-lisp:list
       (common-lisp:cons "ChannelRetentionSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          app-instance-retention-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass app-instance-summary common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-app-instance-summary-app-instance-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or non-empty-resource-name
                                         common-lisp:null)
                         :accessor struct-shape-app-instance-summary-name
                         :shape "NonEmptyResourceName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or metadata common-lisp:null)
                         :accessor struct-shape-app-instance-summary-metadata
                         :shape "Metadata" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-app-instance-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'app-instance-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'app-instance-summary 'make-app-instance-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input app-instance-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input app-instance-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input app-instance-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass app-instance-user common-lisp:nil
                       ((app-instance-user-arn :initarg :app-instance-user-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-app-instance-user-app-instance-user-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or user-name common-lisp:null) :accessor
                         struct-shape-app-instance-user-name :shape "UserName"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or metadata common-lisp:null)
                         :accessor struct-shape-app-instance-user-metadata
                         :shape "Metadata" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-app-instance-user-created-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :last-updated-timestamp :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-app-instance-user-last-updated-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (expiration-settings :initarg :expiration-settings
                         :initform common-lisp:nil :type
                         (common-lisp:or expiration-settings common-lisp:null)
                         :accessor
                         struct-shape-app-instance-user-expiration-settings
                         :shape "ExpirationSettings" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-app-instance-user
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'app-instance-user
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'app-instance-user 'make-app-instance-user))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input app-instance-user))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input app-instance-user))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-instance-user-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceUserArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiration-settings))
      (common-lisp:list
       (common-lisp:cons "ExpirationSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input app-instance-user))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass app-instance-user-endpoint common-lisp:nil
                       ((app-instance-user-arn :initarg :app-instance-user-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-app-instance-user-endpoint-app-instance-user-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (endpoint-id :initarg :endpoint-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string64 common-lisp:null) :accessor
                         struct-shape-app-instance-user-endpoint-endpoint-id
                         :shape "String64" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or sensitive-string1600 common-lisp:null)
                         :accessor struct-shape-app-instance-user-endpoint-name
                         :shape "SensitiveString1600" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or app-instance-user-endpoint-type
                                         common-lisp:null)
                         :accessor struct-shape-app-instance-user-endpoint-type
                         :shape "AppInstanceUserEndpointType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (resource-arn :initarg :resource-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-app-instance-user-endpoint-resource-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (endpoint-attributes :initarg :endpoint-attributes
                         :initform common-lisp:nil :type
                         (common-lisp:or endpoint-attributes common-lisp:null)
                         :accessor
                         struct-shape-app-instance-user-endpoint-endpoint-attributes
                         :shape "EndpointAttributes" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-app-instance-user-endpoint-created-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :last-updated-timestamp :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-app-instance-user-endpoint-last-updated-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (allow-messages :initarg :allow-messages :initform
                         common-lisp:nil :type
                         (common-lisp:or allow-messages common-lisp:null)
                         :accessor
                         struct-shape-app-instance-user-endpoint-allow-messages
                         :shape "AllowMessages" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (endpoint-state :initarg :endpoint-state :initform
                         common-lisp:nil :type
                         (common-lisp:or endpoint-state common-lisp:null)
                         :accessor
                         struct-shape-app-instance-user-endpoint-endpoint-state
                         :shape "EndpointState" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-app-instance-user-endpoint
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'app-instance-user-endpoint
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'app-instance-user-endpoint
                    'make-app-instance-user-endpoint))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          app-instance-user-endpoint))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          app-instance-user-endpoint))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-instance-user-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceUserArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-id))
      (common-lisp:list
       (common-lisp:cons "EndpointId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-attributes))
      (common-lisp:list
       (common-lisp:cons "EndpointAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allow-messages))
      (common-lisp:list
       (common-lisp:cons "AllowMessages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-state))
      (common-lisp:list
       (common-lisp:cons "EndpointState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          app-instance-user-endpoint))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass app-instance-user-endpoint-summary common-lisp:nil
                       ((app-instance-user-arn :initarg :app-instance-user-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-app-instance-user-endpoint-summary-app-instance-user-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (endpoint-id :initarg :endpoint-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string64 common-lisp:null) :accessor
                         struct-shape-app-instance-user-endpoint-summary-endpoint-id
                         :shape "String64" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or sensitive-string1600 common-lisp:null)
                         :accessor
                         struct-shape-app-instance-user-endpoint-summary-name
                         :shape "SensitiveString1600" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or app-instance-user-endpoint-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-app-instance-user-endpoint-summary-type
                         :shape "AppInstanceUserEndpointType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (allow-messages :initarg :allow-messages :initform
                         common-lisp:nil :type
                         (common-lisp:or allow-messages common-lisp:null)
                         :accessor
                         struct-shape-app-instance-user-endpoint-summary-allow-messages
                         :shape "AllowMessages" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (endpoint-state :initarg :endpoint-state :initform
                         common-lisp:nil :type
                         (common-lisp:or endpoint-state common-lisp:null)
                         :accessor
                         struct-shape-app-instance-user-endpoint-summary-endpoint-state
                         :shape "EndpointState" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-app-instance-user-endpoint-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'app-instance-user-endpoint-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'app-instance-user-endpoint-summary
                    'make-app-instance-user-endpoint-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          app-instance-user-endpoint-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          app-instance-user-endpoint-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-instance-user-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceUserArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-id))
      (common-lisp:list
       (common-lisp:cons "EndpointId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allow-messages))
      (common-lisp:list
       (common-lisp:cons "AllowMessages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-state))
      (common-lisp:list
       (common-lisp:cons "EndpointState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          app-instance-user-endpoint-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype app-instance-user-endpoint-summary-list ()
   '(trivial-types:proper-list app-instance-user-endpoint-summary))
 (common-lisp:defun make-app-instance-user-endpoint-summary-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            app-instance-user-endpoint-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype app-instance-user-endpoint-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype app-instance-user-list ()
   '(trivial-types:proper-list app-instance-user-summary))
 (common-lisp:defun make-app-instance-user-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            app-instance-user-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass app-instance-user-summary common-lisp:nil
                       ((app-instance-user-arn :initarg :app-instance-user-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-app-instance-user-summary-app-instance-user-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or user-name common-lisp:null) :accessor
                         struct-shape-app-instance-user-summary-name :shape
                         "UserName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or metadata common-lisp:null)
                         :accessor
                         struct-shape-app-instance-user-summary-metadata :shape
                         "Metadata" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-app-instance-user-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'app-instance-user-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'app-instance-user-summary
                    'make-app-instance-user-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          app-instance-user-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          app-instance-user-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-instance-user-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceUserArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          app-instance-user-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition bad-request-exception
     (chime-sdk-identity-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       bad-request-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       bad-request-exception-message)))
 (common-lisp:export
  (common-lisp:list 'bad-request-exception 'bad-request-exception-code
                    'bad-request-exception-message)))
(common-lisp:progn
 (common-lisp:defclass channel-retention-settings common-lisp:nil
                       ((retention-days :initarg :retention-days :initform
                         common-lisp:nil :type
                         (common-lisp:or retention-days common-lisp:null)
                         :accessor
                         struct-shape-channel-retention-settings-retention-days
                         :shape "RetentionDays" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-retention-settings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channel-retention-settings
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'channel-retention-settings
                    'make-channel-retention-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          channel-retention-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          channel-retention-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retention-days))
      (common-lisp:list
       (common-lisp:cons "RetentionDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          channel-retention-settings))
   common-lisp:nil))
(common-lisp:deftype chime-arn () 'common-lisp:string)
(common-lisp:deftype client-request-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass configuration common-lisp:nil
                       ((lex :initarg :lex :initform
                         (common-lisp:error ":lex is required") :type
                         (common-lisp:or lex-configuration common-lisp:null)
                         :accessor struct-shape-configuration-lex :shape
                         "LexConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'configuration 'make-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lex))
      (common-lisp:list
       (common-lisp:cons "Lex"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (chime-sdk-identity-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       conflict-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-code
                    'conflict-exception-message)))
(common-lisp:progn
 (common-lisp:defclass create-app-instance-admin-request common-lisp:nil
                       ((app-instance-admin-arn :initarg
                         :app-instance-admin-arn :initform
                         (common-lisp:error
                          ":app-instance-admin-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-create-app-instance-admin-request-app-instance-admin-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (app-instance-arn :initarg :app-instance-arn :initform
                         (common-lisp:error ":app-instance-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-create-app-instance-admin-request-app-instance-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-app-instance-admin-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-app-instance-admin-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-app-instance-admin-request
                    'make-create-app-instance-admin-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-admin-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-admin-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-instance-admin-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceAdminArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-admin-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-app-instance-admin-response common-lisp:nil
                       ((app-instance-admin :initarg :app-instance-admin
                         :initform common-lisp:nil :type
                         (common-lisp:or identity common-lisp:null) :accessor
                         struct-shape-create-app-instance-admin-response-app-instance-admin
                         :shape "Identity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (app-instance-arn :initarg :app-instance-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-create-app-instance-admin-response-app-instance-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-app-instance-admin-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-app-instance-admin-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-app-instance-admin-response
                    'make-create-app-instance-admin-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-admin-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-admin-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance-admin))
      (common-lisp:list
       (common-lisp:cons "AppInstanceAdmin"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-admin-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-app-instance-bot-request common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         (common-lisp:error ":app-instance-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-create-app-instance-bot-request-app-instance-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-create-app-instance-bot-request-name
                         :shape "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or metadata common-lisp:null)
                         :accessor
                         struct-shape-create-app-instance-bot-request-metadata
                         :shape "Metadata" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-request-token :initarg :client-request-token
                         :initform
                         (common-lisp:error
                          ":client-request-token is required")
                         :type
                         (common-lisp:or client-request-token common-lisp:null)
                         :accessor
                         struct-shape-create-app-instance-bot-request-client-request-token
                         :shape "ClientRequestToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-create-app-instance-bot-request-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (configuration :initarg :configuration :initform
                         (common-lisp:error ":configuration is required") :type
                         (common-lisp:or configuration common-lisp:null)
                         :accessor
                         struct-shape-create-app-instance-bot-request-configuration
                         :shape "Configuration" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-app-instance-bot-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-app-instance-bot-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-app-instance-bot-request
                    'make-create-app-instance-bot-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-bot-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-bot-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration))
      (common-lisp:list
       (common-lisp:cons "Configuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-bot-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-app-instance-bot-response common-lisp:nil
                       ((app-instance-bot-arn :initarg :app-instance-bot-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-create-app-instance-bot-response-app-instance-bot-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-app-instance-bot-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-app-instance-bot-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-app-instance-bot-response
                    'make-create-app-instance-bot-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-bot-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-bot-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-instance-bot-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceBotArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-bot-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-app-instance-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or non-empty-resource-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-app-instance-request-name :shape
                         "NonEmptyResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or metadata common-lisp:null)
                         :accessor
                         struct-shape-create-app-instance-request-metadata
                         :shape "Metadata" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-request-token :initarg :client-request-token
                         :initform
                         (common-lisp:error
                          ":client-request-token is required")
                         :type
                         (common-lisp:or client-request-token common-lisp:null)
                         :accessor
                         struct-shape-create-app-instance-request-client-request-token
                         :shape "ClientRequestToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-create-app-instance-request-tags :shape
                         "TagList" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-app-instance-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-app-instance-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-app-instance-request
                    'make-create-app-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-app-instance-response common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-create-app-instance-response-app-instance-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-app-instance-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-app-instance-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-app-instance-response
                    'make-create-app-instance-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-app-instance-user-request common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         (common-lisp:error ":app-instance-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-create-app-instance-user-request-app-instance-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (app-instance-user-id :initarg :app-instance-user-id
                         :initform
                         (common-lisp:error
                          ":app-instance-user-id is required")
                         :type (common-lisp:or user-id common-lisp:null)
                         :accessor
                         struct-shape-create-app-instance-user-request-app-instance-user-id
                         :shape "UserId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or user-name common-lisp:null) :accessor
                         struct-shape-create-app-instance-user-request-name
                         :shape "UserName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or metadata common-lisp:null)
                         :accessor
                         struct-shape-create-app-instance-user-request-metadata
                         :shape "Metadata" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-request-token :initarg :client-request-token
                         :initform
                         (common-lisp:error
                          ":client-request-token is required")
                         :type
                         (common-lisp:or client-request-token common-lisp:null)
                         :accessor
                         struct-shape-create-app-instance-user-request-client-request-token
                         :shape "ClientRequestToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-create-app-instance-user-request-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (expiration-settings :initarg :expiration-settings
                         :initform common-lisp:nil :type
                         (common-lisp:or expiration-settings common-lisp:null)
                         :accessor
                         struct-shape-create-app-instance-user-request-expiration-settings
                         :shape "ExpirationSettings" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-app-instance-user-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-app-instance-user-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-app-instance-user-request
                    'make-create-app-instance-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-user-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-instance-user-id))
      (common-lisp:list
       (common-lisp:cons "AppInstanceUserId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiration-settings))
      (common-lisp:list
       (common-lisp:cons "ExpirationSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-app-instance-user-response common-lisp:nil
                       ((app-instance-user-arn :initarg :app-instance-user-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-create-app-instance-user-response-app-instance-user-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-app-instance-user-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-app-instance-user-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-app-instance-user-response
                    'make-create-app-instance-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-user-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-instance-user-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceUserArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-user-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-app-instance-admin-request common-lisp:nil
                       ((app-instance-admin-arn :initarg
                         :app-instance-admin-arn :initform
                         (common-lisp:error
                          ":app-instance-admin-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-app-instance-admin-request-app-instance-admin-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceAdminArn")
                        (app-instance-arn :initarg :app-instance-arn :initform
                         (common-lisp:error ":app-instance-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-app-instance-admin-request-app-instance-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-app-instance-admin-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-app-instance-admin-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-app-instance-admin-request
                    'make-delete-app-instance-admin-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-app-instance-admin-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-app-instance-admin-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-app-instance-admin-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-app-instance-bot-request common-lisp:nil
                       ((app-instance-bot-arn :initarg :app-instance-bot-arn
                         :initform
                         (common-lisp:error
                          ":app-instance-bot-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-app-instance-bot-request-app-instance-bot-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceBotArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-app-instance-bot-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-app-instance-bot-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-app-instance-bot-request
                    'make-delete-app-instance-bot-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-app-instance-bot-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-app-instance-bot-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-app-instance-bot-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-app-instance-request common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         (common-lisp:error ":app-instance-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-app-instance-request-app-instance-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-app-instance-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-app-instance-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-app-instance-request
                    'make-delete-app-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-app-instance-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-app-instance-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-app-instance-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-app-instance-user-request common-lisp:nil
                       ((app-instance-user-arn :initarg :app-instance-user-arn
                         :initform
                         (common-lisp:error
                          ":app-instance-user-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-app-instance-user-request-app-instance-user-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceUserArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-app-instance-user-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-app-instance-user-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-app-instance-user-request
                    'make-delete-app-instance-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-app-instance-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-app-instance-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-app-instance-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass deregister-app-instance-user-endpoint-request
                       common-lisp:nil
                       ((app-instance-user-arn :initarg :app-instance-user-arn
                         :initform
                         (common-lisp:error
                          ":app-instance-user-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-deregister-app-instance-user-endpoint-request-app-instance-user-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceUserArn")
                        (endpoint-id :initarg :endpoint-id :initform
                         (common-lisp:error ":endpoint-id is required") :type
                         (common-lisp:or string64 common-lisp:null) :accessor
                         struct-shape-deregister-app-instance-user-endpoint-request-endpoint-id
                         :shape "String64" :location "uri" :location-name
                         "endpointId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-deregister-app-instance-user-endpoint-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'deregister-app-instance-user-endpoint-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'deregister-app-instance-user-endpoint-request
                    'make-deregister-app-instance-user-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          deregister-app-instance-user-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          deregister-app-instance-user-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          deregister-app-instance-user-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-app-instance-admin-request common-lisp:nil
                       ((app-instance-admin-arn :initarg
                         :app-instance-admin-arn :initform
                         (common-lisp:error
                          ":app-instance-admin-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-app-instance-admin-request-app-instance-admin-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceAdminArn")
                        (app-instance-arn :initarg :app-instance-arn :initform
                         (common-lisp:error ":app-instance-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-app-instance-admin-request-app-instance-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-app-instance-admin-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-app-instance-admin-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-app-instance-admin-request
                    'make-describe-app-instance-admin-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-admin-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-admin-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-admin-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-app-instance-admin-response common-lisp:nil
                       ((app-instance-admin :initarg :app-instance-admin
                         :initform common-lisp:nil :type
                         (common-lisp:or app-instance-admin common-lisp:null)
                         :accessor
                         struct-shape-describe-app-instance-admin-response-app-instance-admin
                         :shape "AppInstanceAdmin" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-app-instance-admin-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-app-instance-admin-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-app-instance-admin-response
                    'make-describe-app-instance-admin-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-admin-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-admin-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance-admin))
      (common-lisp:list
       (common-lisp:cons "AppInstanceAdmin"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-admin-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-app-instance-bot-request common-lisp:nil
                       ((app-instance-bot-arn :initarg :app-instance-bot-arn
                         :initform
                         (common-lisp:error
                          ":app-instance-bot-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-app-instance-bot-request-app-instance-bot-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceBotArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-app-instance-bot-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-app-instance-bot-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-app-instance-bot-request
                    'make-describe-app-instance-bot-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-bot-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-bot-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-bot-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-app-instance-bot-response common-lisp:nil
                       ((app-instance-bot :initarg :app-instance-bot :initform
                         common-lisp:nil :type
                         (common-lisp:or app-instance-bot common-lisp:null)
                         :accessor
                         struct-shape-describe-app-instance-bot-response-app-instance-bot
                         :shape "AppInstanceBot" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-app-instance-bot-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-app-instance-bot-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-app-instance-bot-response
                    'make-describe-app-instance-bot-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-bot-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-bot-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance-bot))
      (common-lisp:list
       (common-lisp:cons "AppInstanceBot"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-bot-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-app-instance-request common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         (common-lisp:error ":app-instance-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-app-instance-request-app-instance-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-app-instance-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-app-instance-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-app-instance-request
                    'make-describe-app-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-app-instance-response common-lisp:nil
                       ((app-instance :initarg :app-instance :initform
                         common-lisp:nil :type
                         (common-lisp:or app-instance common-lisp:null)
                         :accessor
                         struct-shape-describe-app-instance-response-app-instance
                         :shape "AppInstance" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-app-instance-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-app-instance-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-app-instance-response
                    'make-describe-app-instance-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance))
      (common-lisp:list
       (common-lisp:cons "AppInstance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-app-instance-user-endpoint-request
                       common-lisp:nil
                       ((app-instance-user-arn :initarg :app-instance-user-arn
                         :initform
                         (common-lisp:error
                          ":app-instance-user-arn is required")
                         :type (common-lisp:or string1600 common-lisp:null)
                         :accessor
                         struct-shape-describe-app-instance-user-endpoint-request-app-instance-user-arn
                         :shape "String1600" :location "uri" :location-name
                         "appInstanceUserArn")
                        (endpoint-id :initarg :endpoint-id :initform
                         (common-lisp:error ":endpoint-id is required") :type
                         (common-lisp:or string64 common-lisp:null) :accessor
                         struct-shape-describe-app-instance-user-endpoint-request-endpoint-id
                         :shape "String64" :location "uri" :location-name
                         "endpointId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-app-instance-user-endpoint-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-app-instance-user-endpoint-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-app-instance-user-endpoint-request
                    'make-describe-app-instance-user-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-user-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-user-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-user-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-app-instance-user-endpoint-response
                       common-lisp:nil
                       ((app-instance-user-endpoint :initarg
                         :app-instance-user-endpoint :initform common-lisp:nil
                         :type
                         (common-lisp:or app-instance-user-endpoint
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-app-instance-user-endpoint-response-app-instance-user-endpoint
                         :shape "AppInstanceUserEndpoint" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-app-instance-user-endpoint-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-app-instance-user-endpoint-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-app-instance-user-endpoint-response
                    'make-describe-app-instance-user-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-user-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-user-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-instance-user-endpoint))
      (common-lisp:list
       (common-lisp:cons "AppInstanceUserEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-user-endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-app-instance-user-request common-lisp:nil
                       ((app-instance-user-arn :initarg :app-instance-user-arn
                         :initform
                         (common-lisp:error
                          ":app-instance-user-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-app-instance-user-request-app-instance-user-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceUserArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-app-instance-user-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-app-instance-user-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-app-instance-user-request
                    'make-describe-app-instance-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-app-instance-user-response common-lisp:nil
                       ((app-instance-user :initarg :app-instance-user
                         :initform common-lisp:nil :type
                         (common-lisp:or app-instance-user common-lisp:null)
                         :accessor
                         struct-shape-describe-app-instance-user-response-app-instance-user
                         :shape "AppInstanceUser" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-app-instance-user-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-app-instance-user-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-app-instance-user-response
                    'make-describe-app-instance-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-user-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance-user))
      (common-lisp:list
       (common-lisp:cons "AppInstanceUser"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-user-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass endpoint-attributes common-lisp:nil
                       ((device-token :initarg :device-token :initform
                         (common-lisp:error ":device-token is required") :type
                         (common-lisp:or non-empty-sensitive-string1600
                                         common-lisp:null)
                         :accessor
                         struct-shape-endpoint-attributes-device-token :shape
                         "NonEmptySensitiveString1600" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (voip-device-token :initarg :voip-device-token
                         :initform common-lisp:nil :type
                         (common-lisp:or non-empty-sensitive-string1600
                                         common-lisp:null)
                         :accessor
                         struct-shape-endpoint-attributes-voip-device-token
                         :shape "NonEmptySensitiveString1600" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-endpoint-attributes
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'endpoint-attributes
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'endpoint-attributes 'make-endpoint-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input endpoint-attributes))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input endpoint-attributes))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-token))
      (common-lisp:list
       (common-lisp:cons "DeviceToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voip-device-token))
      (common-lisp:list
       (common-lisp:cons "VoipDeviceToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input endpoint-attributes))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass endpoint-state common-lisp:nil
                       ((status :initarg :status :initform
                         (common-lisp:error ":status is required") :type
                         (common-lisp:or endpoint-status common-lisp:null)
                         :accessor struct-shape-endpoint-state-status :shape
                         "EndpointStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status-reason :initarg :status-reason :initform
                         common-lisp:nil :type
                         (common-lisp:or endpoint-status-reason
                                         common-lisp:null)
                         :accessor struct-shape-endpoint-state-status-reason
                         :shape "EndpointStatusReason" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-endpoint-state
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'endpoint-state
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'endpoint-state 'make-endpoint-state))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input endpoint-state))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input endpoint-state))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-reason))
      (common-lisp:list
       (common-lisp:cons "StatusReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input endpoint-state))
   common-lisp:nil))
(common-lisp:deftype endpoint-status () 'common-lisp:string)
(common-lisp:deftype endpoint-status-reason () 'common-lisp:string)
(common-lisp:deftype error-code () 'common-lisp:string)
(common-lisp:deftype expiration-criterion () 'common-lisp:string)
(common-lisp:deftype expiration-days () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass expiration-settings common-lisp:nil
                       ((expiration-days :initarg :expiration-days :initform
                         (common-lisp:error ":expiration-days is required")
                         :type
                         (common-lisp:or expiration-days common-lisp:null)
                         :accessor
                         struct-shape-expiration-settings-expiration-days
                         :shape "ExpirationDays" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (expiration-criterion :initarg :expiration-criterion
                         :initform
                         (common-lisp:error
                          ":expiration-criterion is required")
                         :type
                         (common-lisp:or expiration-criterion common-lisp:null)
                         :accessor
                         struct-shape-expiration-settings-expiration-criterion
                         :shape "ExpirationCriterion" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-expiration-settings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'expiration-settings
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'expiration-settings 'make-expiration-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input expiration-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input expiration-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiration-days))
      (common-lisp:list
       (common-lisp:cons "ExpirationDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'expiration-criterion))
      (common-lisp:list
       (common-lisp:cons "ExpirationCriterion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input expiration-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition forbidden-exception
     (chime-sdk-identity-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       forbidden-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       forbidden-exception-message)))
 (common-lisp:export
  (common-lisp:list 'forbidden-exception 'forbidden-exception-code
                    'forbidden-exception-message)))
(common-lisp:progn
 (common-lisp:defclass get-app-instance-retention-settings-request
                       common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         (common-lisp:error ":app-instance-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-get-app-instance-retention-settings-request-app-instance-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-app-instance-retention-settings-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-app-instance-retention-settings-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-app-instance-retention-settings-request
                    'make-get-app-instance-retention-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-app-instance-retention-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-app-instance-retention-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-app-instance-retention-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-app-instance-retention-settings-response
                       common-lisp:nil
                       ((app-instance-retention-settings :initarg
                         :app-instance-retention-settings :initform
                         common-lisp:nil :type
                         (common-lisp:or app-instance-retention-settings
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-app-instance-retention-settings-response-app-instance-retention-settings
                         :shape "AppInstanceRetentionSettings" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (initiate-deletion-timestamp :initarg
                         :initiate-deletion-timestamp :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-get-app-instance-retention-settings-response-initiate-deletion-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-app-instance-retention-settings-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-app-instance-retention-settings-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-app-instance-retention-settings-response
                    'make-get-app-instance-retention-settings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-app-instance-retention-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-app-instance-retention-settings-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-instance-retention-settings))
      (common-lisp:list
       (common-lisp:cons "AppInstanceRetentionSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'initiate-deletion-timestamp))
      (common-lisp:list
       (common-lisp:cons "InitiateDeletionTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-app-instance-retention-settings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass identity common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-identity-arn :shape "ChimeArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor struct-shape-identity-name :shape
                         "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-identity
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'identity
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'identity 'make-identity))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input identity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input identity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input identity))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass invoked-by common-lisp:nil
                       ((standard-messages :initarg :standard-messages
                         :initform
                         (common-lisp:error ":standard-messages is required")
                         :type
                         (common-lisp:or standard-messages common-lisp:null)
                         :accessor struct-shape-invoked-by-standard-messages
                         :shape "StandardMessages" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (targeted-messages :initarg :targeted-messages
                         :initform
                         (common-lisp:error ":targeted-messages is required")
                         :type
                         (common-lisp:or targeted-messages common-lisp:null)
                         :accessor struct-shape-invoked-by-targeted-messages
                         :shape "TargetedMessages" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-invoked-by
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'invoked-by
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'invoked-by 'make-invoked-by))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input invoked-by))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input invoked-by))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'standard-messages))
      (common-lisp:list
       (common-lisp:cons "StandardMessages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'targeted-messages))
      (common-lisp:list
       (common-lisp:cons "TargetedMessages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input invoked-by))
   common-lisp:nil))
(common-lisp:deftype lex-bot-alias-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass lex-configuration common-lisp:nil
                       ((responds-to :initarg :responds-to :initform
                         common-lisp:nil :type
                         (common-lisp:or responds-to common-lisp:null)
                         :accessor struct-shape-lex-configuration-responds-to
                         :shape "RespondsTo" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (invoked-by :initarg :invoked-by :initform
                         common-lisp:nil :type
                         (common-lisp:or invoked-by common-lisp:null) :accessor
                         struct-shape-lex-configuration-invoked-by :shape
                         "InvokedBy" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (lex-bot-alias-arn :initarg :lex-bot-alias-arn
                         :initform
                         (common-lisp:error ":lex-bot-alias-arn is required")
                         :type
                         (common-lisp:or lex-bot-alias-arn common-lisp:null)
                         :accessor
                         struct-shape-lex-configuration-lex-bot-alias-arn
                         :shape "LexBotAliasArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (locale-id :initarg :locale-id :initform
                         (common-lisp:error ":locale-id is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-lex-configuration-locale-id :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (welcome-intent :initarg :welcome-intent :initform
                         common-lisp:nil :type
                         (common-lisp:or lex-intent-name common-lisp:null)
                         :accessor
                         struct-shape-lex-configuration-welcome-intent :shape
                         "LexIntentName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-lex-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'lex-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'lex-configuration 'make-lex-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input lex-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input lex-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'responds-to))
      (common-lisp:list
       (common-lisp:cons "RespondsTo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'invoked-by))
      (common-lisp:list
       (common-lisp:cons "InvokedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lex-bot-alias-arn))
      (common-lisp:list
       (common-lisp:cons "LexBotAliasArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'locale-id))
      (common-lisp:list
       (common-lisp:cons "LocaleId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'welcome-intent))
      (common-lisp:list
       (common-lisp:cons "WelcomeIntent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input lex-configuration))
   common-lisp:nil))
(common-lisp:deftype lex-intent-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass list-app-instance-admins-request common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         (common-lisp:error ":app-instance-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-list-app-instance-admins-request-app-instance-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceArn")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-app-instance-admins-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-app-instance-admins-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "next-token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-app-instance-admins-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-app-instance-admins-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-app-instance-admins-request
                    'make-list-app-instance-admins-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instance-admins-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instance-admins-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instance-admins-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-app-instance-admins-response common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-app-instance-admins-response-app-instance-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (app-instance-admins :initarg :app-instance-admins
                         :initform common-lisp:nil :type
                         (common-lisp:or app-instance-admin-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-app-instance-admins-response-app-instance-admins
                         :shape "AppInstanceAdminList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-app-instance-admins-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-app-instance-admins-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-app-instance-admins-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-app-instance-admins-response
                    'make-list-app-instance-admins-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instance-admins-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instance-admins-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance-admins))
      (common-lisp:list
       (common-lisp:cons "AppInstanceAdmins"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instance-admins-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-app-instance-bots-request common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         (common-lisp:error ":app-instance-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-list-app-instance-bots-request-app-instance-arn
                         :shape "ChimeArn" :location "querystring"
                         :location-name "app-instance-arn")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-app-instance-bots-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-app-instance-bots-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "next-token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-app-instance-bots-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-app-instance-bots-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-app-instance-bots-request
                    'make-list-app-instance-bots-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instance-bots-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instance-bots-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instance-bots-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-app-instance-bots-response common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-app-instance-bots-response-app-instance-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (app-instance-bots :initarg :app-instance-bots
                         :initform common-lisp:nil :type
                         (common-lisp:or app-instance-bot-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-app-instance-bots-response-app-instance-bots
                         :shape "AppInstanceBotList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-app-instance-bots-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-app-instance-bots-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-app-instance-bots-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-app-instance-bots-response
                    'make-list-app-instance-bots-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instance-bots-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instance-bots-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance-bots))
      (common-lisp:list
       (common-lisp:cons "AppInstanceBots"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instance-bots-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-app-instance-user-endpoints-request common-lisp:nil
                       ((app-instance-user-arn :initarg :app-instance-user-arn
                         :initform
                         (common-lisp:error
                          ":app-instance-user-arn is required")
                         :type
                         (common-lisp:or sensitive-chime-arn common-lisp:null)
                         :accessor
                         struct-shape-list-app-instance-user-endpoints-request-app-instance-user-arn
                         :shape "SensitiveChimeArn" :location "uri"
                         :location-name "appInstanceUserArn")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-app-instance-user-endpoints-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-app-instance-user-endpoints-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "next-token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-app-instance-user-endpoints-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-app-instance-user-endpoints-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-app-instance-user-endpoints-request
                    'make-list-app-instance-user-endpoints-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instance-user-endpoints-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instance-user-endpoints-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instance-user-endpoints-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-app-instance-user-endpoints-response
                       common-lisp:nil
                       ((app-instance-user-endpoints :initarg
                         :app-instance-user-endpoints :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          app-instance-user-endpoint-summary-list
                          common-lisp:null)
                         :accessor
                         struct-shape-list-app-instance-user-endpoints-response-app-instance-user-endpoints
                         :shape "AppInstanceUserEndpointSummaryList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-app-instance-user-endpoints-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-app-instance-user-endpoints-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-app-instance-user-endpoints-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-app-instance-user-endpoints-response
                    'make-list-app-instance-user-endpoints-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instance-user-endpoints-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instance-user-endpoints-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-instance-user-endpoints))
      (common-lisp:list
       (common-lisp:cons "AppInstanceUserEndpoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instance-user-endpoints-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-app-instance-users-request common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         (common-lisp:error ":app-instance-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-list-app-instance-users-request-app-instance-arn
                         :shape "ChimeArn" :location "querystring"
                         :location-name "app-instance-arn")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-app-instance-users-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-app-instance-users-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "next-token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-app-instance-users-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-app-instance-users-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-app-instance-users-request
                    'make-list-app-instance-users-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instance-users-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instance-users-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instance-users-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-app-instance-users-response common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-app-instance-users-response-app-instance-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (app-instance-users :initarg :app-instance-users
                         :initform common-lisp:nil :type
                         (common-lisp:or app-instance-user-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-app-instance-users-response-app-instance-users
                         :shape "AppInstanceUserList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-app-instance-users-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-app-instance-users-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-app-instance-users-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-app-instance-users-response
                    'make-list-app-instance-users-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instance-users-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instance-users-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance-users))
      (common-lisp:list
       (common-lisp:cons "AppInstanceUsers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instance-users-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-app-instances-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-app-instances-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-app-instances-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "next-token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-app-instances-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-app-instances-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-app-instances-request
                    'make-list-app-instances-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instances-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instances-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instances-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-app-instances-response common-lisp:nil
                       ((app-instances :initarg :app-instances :initform
                         common-lisp:nil :type
                         (common-lisp:or app-instance-list common-lisp:null)
                         :accessor
                         struct-shape-list-app-instances-response-app-instances
                         :shape "AppInstanceList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-app-instances-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-app-instances-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-app-instances-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-app-instances-response
                    'make-list-app-instances-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instances-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instances-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instances))
      (common-lisp:list
       (common-lisp:cons "AppInstances"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instances-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-request-resource-arn
                         :shape "ChimeArn" :location "querystring"
                         :location-name "arn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-response-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype metadata () 'common-lisp:string)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:deftype non-empty-resource-name () 'common-lisp:string)
(common-lisp:deftype non-empty-sensitive-string1600 () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition not-found-exception
     (chime-sdk-identity-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       not-found-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'not-found-exception 'not-found-exception-code
                    'not-found-exception-message)))
(common-lisp:progn
 (common-lisp:defclass put-app-instance-retention-settings-request
                       common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         (common-lisp:error ":app-instance-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-put-app-instance-retention-settings-request-app-instance-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceArn")
                        (app-instance-retention-settings :initarg
                         :app-instance-retention-settings :initform
                         (common-lisp:error
                          ":app-instance-retention-settings is required")
                         :type
                         (common-lisp:or app-instance-retention-settings
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-app-instance-retention-settings-request-app-instance-retention-settings
                         :shape "AppInstanceRetentionSettings" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-app-instance-retention-settings-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-app-instance-retention-settings-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-app-instance-retention-settings-request
                    'make-put-app-instance-retention-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-app-instance-retention-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-app-instance-retention-settings-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-instance-retention-settings))
      (common-lisp:list
       (common-lisp:cons "AppInstanceRetentionSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-app-instance-retention-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-app-instance-retention-settings-response
                       common-lisp:nil
                       ((app-instance-retention-settings :initarg
                         :app-instance-retention-settings :initform
                         common-lisp:nil :type
                         (common-lisp:or app-instance-retention-settings
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-app-instance-retention-settings-response-app-instance-retention-settings
                         :shape "AppInstanceRetentionSettings" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (initiate-deletion-timestamp :initarg
                         :initiate-deletion-timestamp :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-put-app-instance-retention-settings-response-initiate-deletion-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-app-instance-retention-settings-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-app-instance-retention-settings-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-app-instance-retention-settings-response
                    'make-put-app-instance-retention-settings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-app-instance-retention-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-app-instance-retention-settings-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-instance-retention-settings))
      (common-lisp:list
       (common-lisp:cons "AppInstanceRetentionSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'initiate-deletion-timestamp))
      (common-lisp:list
       (common-lisp:cons "InitiateDeletionTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-app-instance-retention-settings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-app-instance-user-expiration-settings-request
                       common-lisp:nil
                       ((app-instance-user-arn :initarg :app-instance-user-arn
                         :initform
                         (common-lisp:error
                          ":app-instance-user-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-put-app-instance-user-expiration-settings-request-app-instance-user-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceUserArn")
                        (expiration-settings :initarg :expiration-settings
                         :initform common-lisp:nil :type
                         (common-lisp:or expiration-settings common-lisp:null)
                         :accessor
                         struct-shape-put-app-instance-user-expiration-settings-request-expiration-settings
                         :shape "ExpirationSettings" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-app-instance-user-expiration-settings-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-app-instance-user-expiration-settings-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-app-instance-user-expiration-settings-request
                    'make-put-app-instance-user-expiration-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-app-instance-user-expiration-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-app-instance-user-expiration-settings-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiration-settings))
      (common-lisp:list
       (common-lisp:cons "ExpirationSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-app-instance-user-expiration-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-app-instance-user-expiration-settings-response
                       common-lisp:nil
                       ((app-instance-user-arn :initarg :app-instance-user-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-put-app-instance-user-expiration-settings-response-app-instance-user-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (expiration-settings :initarg :expiration-settings
                         :initform common-lisp:nil :type
                         (common-lisp:or expiration-settings common-lisp:null)
                         :accessor
                         struct-shape-put-app-instance-user-expiration-settings-response-expiration-settings
                         :shape "ExpirationSettings" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-app-instance-user-expiration-settings-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-app-instance-user-expiration-settings-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-app-instance-user-expiration-settings-response
                    'make-put-app-instance-user-expiration-settings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-app-instance-user-expiration-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-app-instance-user-expiration-settings-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-instance-user-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceUserArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiration-settings))
      (common-lisp:list
       (common-lisp:cons "ExpirationSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-app-instance-user-expiration-settings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass register-app-instance-user-endpoint-request
                       common-lisp:nil
                       ((app-instance-user-arn :initarg :app-instance-user-arn
                         :initform
                         (common-lisp:error
                          ":app-instance-user-arn is required")
                         :type
                         (common-lisp:or sensitive-chime-arn common-lisp:null)
                         :accessor
                         struct-shape-register-app-instance-user-endpoint-request-app-instance-user-arn
                         :shape "SensitiveChimeArn" :location "uri"
                         :location-name "appInstanceUserArn")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or sensitive-string1600 common-lisp:null)
                         :accessor
                         struct-shape-register-app-instance-user-endpoint-request-name
                         :shape "SensitiveString1600" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (type :initarg :type :initform
                         (common-lisp:error ":type is required") :type
                         (common-lisp:or app-instance-user-endpoint-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-register-app-instance-user-endpoint-request-type
                         :shape "AppInstanceUserEndpointType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-register-app-instance-user-endpoint-request-resource-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (endpoint-attributes :initarg :endpoint-attributes
                         :initform
                         (common-lisp:error ":endpoint-attributes is required")
                         :type
                         (common-lisp:or endpoint-attributes common-lisp:null)
                         :accessor
                         struct-shape-register-app-instance-user-endpoint-request-endpoint-attributes
                         :shape "EndpointAttributes" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-request-token :initarg :client-request-token
                         :initform
                         (common-lisp:error
                          ":client-request-token is required")
                         :type
                         (common-lisp:or client-request-token common-lisp:null)
                         :accessor
                         struct-shape-register-app-instance-user-endpoint-request-client-request-token
                         :shape "ClientRequestToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (allow-messages :initarg :allow-messages :initform
                         common-lisp:nil :type
                         (common-lisp:or allow-messages common-lisp:null)
                         :accessor
                         struct-shape-register-app-instance-user-endpoint-request-allow-messages
                         :shape "AllowMessages" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-register-app-instance-user-endpoint-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'register-app-instance-user-endpoint-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'register-app-instance-user-endpoint-request
                    'make-register-app-instance-user-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          register-app-instance-user-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          register-app-instance-user-endpoint-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-attributes))
      (common-lisp:list
       (common-lisp:cons "EndpointAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allow-messages))
      (common-lisp:list
       (common-lisp:cons "AllowMessages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          register-app-instance-user-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass register-app-instance-user-endpoint-response
                       common-lisp:nil
                       ((app-instance-user-arn :initarg :app-instance-user-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-register-app-instance-user-endpoint-response-app-instance-user-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (endpoint-id :initarg :endpoint-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string64 common-lisp:null) :accessor
                         struct-shape-register-app-instance-user-endpoint-response-endpoint-id
                         :shape "String64" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-register-app-instance-user-endpoint-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'register-app-instance-user-endpoint-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'register-app-instance-user-endpoint-response
                    'make-register-app-instance-user-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          register-app-instance-user-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          register-app-instance-user-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-instance-user-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceUserArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-id))
      (common-lisp:list
       (common-lisp:cons "EndpointId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          register-app-instance-user-endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition resource-limit-exceeded-exception
     (chime-sdk-identity-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       resource-limit-exceeded-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       resource-limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-limit-exceeded-exception
                    'resource-limit-exceeded-exception-code
                    'resource-limit-exceeded-exception-message)))
(common-lisp:deftype resource-name () 'common-lisp:string)
(common-lisp:deftype responds-to () 'common-lisp:string)
(common-lisp:deftype retention-days () 'common-lisp:integer)
(common-lisp:deftype sensitive-chime-arn () 'common-lisp:string)
(common-lisp:deftype sensitive-string1600 () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition service-failure-exception
     (chime-sdk-identity-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       service-failure-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       service-failure-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-failure-exception 'service-failure-exception-code
                    'service-failure-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition service-unavailable-exception
     (chime-sdk-identity-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       service-unavailable-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       service-unavailable-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-unavailable-exception
                    'service-unavailable-exception-code
                    'service-unavailable-exception-message)))
(common-lisp:deftype standard-messages () 'common-lisp:string)
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:deftype string1600 () 'common-lisp:string)
(common-lisp:deftype string64 () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass tag common-lisp:nil
                       ((key :initarg :key :initform
                         (common-lisp:error ":key is required") :type
                         (common-lisp:or tag-key common-lisp:null) :accessor
                         struct-shape-tag-key :shape "TagKey" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (value :initarg :value :initform
                         (common-lisp:error ":value is required") :type
                         (common-lisp:or tag-value common-lisp:null) :accessor
                         struct-shape-tag-value :shape "TagValue" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun make-tag-key-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun make-tag-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-tag-resource-request-resource-arn :shape
                         "ChimeArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-tag-resource-request-tags :shape
                         "TagList" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:deftype targeted-messages () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttled-client-exception
     (chime-sdk-identity-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       throttled-client-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       throttled-client-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttled-client-exception
                    'throttled-client-exception-code
                    'throttled-client-exception-message)))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition unauthorized-client-exception
     (chime-sdk-identity-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       unauthorized-client-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       unauthorized-client-exception-message)))
 (common-lisp:export
  (common-lisp:list 'unauthorized-client-exception
                    'unauthorized-client-exception-code
                    'unauthorized-client-exception-message)))
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-untag-resource-request-resource-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tag-keys :initarg :tag-keys :initform
                         (common-lisp:error ":tag-keys is required") :type
                         (common-lisp:or tag-key-list common-lisp:null)
                         :accessor struct-shape-untag-resource-request-tag-keys
                         :shape "TagKeyList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "TagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-app-instance-bot-request common-lisp:nil
                       ((app-instance-bot-arn :initarg :app-instance-bot-arn
                         :initform
                         (common-lisp:error
                          ":app-instance-bot-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-update-app-instance-bot-request-app-instance-bot-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceBotArn")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-update-app-instance-bot-request-name
                         :shape "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metadata :initarg :metadata :initform
                         (common-lisp:error ":metadata is required") :type
                         (common-lisp:or metadata common-lisp:null) :accessor
                         struct-shape-update-app-instance-bot-request-metadata
                         :shape "Metadata" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (configuration :initarg :configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or configuration common-lisp:null)
                         :accessor
                         struct-shape-update-app-instance-bot-request-configuration
                         :shape "Configuration" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-app-instance-bot-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-app-instance-bot-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-app-instance-bot-request
                    'make-update-app-instance-bot-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-app-instance-bot-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-app-instance-bot-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration))
      (common-lisp:list
       (common-lisp:cons "Configuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-app-instance-bot-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-app-instance-bot-response common-lisp:nil
                       ((app-instance-bot-arn :initarg :app-instance-bot-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-update-app-instance-bot-response-app-instance-bot-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-app-instance-bot-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-app-instance-bot-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-app-instance-bot-response
                    'make-update-app-instance-bot-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-app-instance-bot-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-app-instance-bot-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-instance-bot-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceBotArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-app-instance-bot-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-app-instance-request common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         (common-lisp:error ":app-instance-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-update-app-instance-request-app-instance-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceArn")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or non-empty-resource-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-app-instance-request-name :shape
                         "NonEmptyResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metadata :initarg :metadata :initform
                         (common-lisp:error ":metadata is required") :type
                         (common-lisp:or metadata common-lisp:null) :accessor
                         struct-shape-update-app-instance-request-metadata
                         :shape "Metadata" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-app-instance-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-app-instance-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-app-instance-request
                    'make-update-app-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-app-instance-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-app-instance-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-app-instance-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-app-instance-response common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-update-app-instance-response-app-instance-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-app-instance-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-app-instance-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-app-instance-response
                    'make-update-app-instance-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-app-instance-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-app-instance-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-app-instance-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-app-instance-user-endpoint-request
                       common-lisp:nil
                       ((app-instance-user-arn :initarg :app-instance-user-arn
                         :initform
                         (common-lisp:error
                          ":app-instance-user-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-update-app-instance-user-endpoint-request-app-instance-user-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceUserArn")
                        (endpoint-id :initarg :endpoint-id :initform
                         (common-lisp:error ":endpoint-id is required") :type
                         (common-lisp:or string64 common-lisp:null) :accessor
                         struct-shape-update-app-instance-user-endpoint-request-endpoint-id
                         :shape "String64" :location "uri" :location-name
                         "endpointId")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or sensitive-string1600 common-lisp:null)
                         :accessor
                         struct-shape-update-app-instance-user-endpoint-request-name
                         :shape "SensitiveString1600" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (allow-messages :initarg :allow-messages :initform
                         common-lisp:nil :type
                         (common-lisp:or allow-messages common-lisp:null)
                         :accessor
                         struct-shape-update-app-instance-user-endpoint-request-allow-messages
                         :shape "AllowMessages" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-app-instance-user-endpoint-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-app-instance-user-endpoint-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-app-instance-user-endpoint-request
                    'make-update-app-instance-user-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-app-instance-user-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-app-instance-user-endpoint-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allow-messages))
      (common-lisp:list
       (common-lisp:cons "AllowMessages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-app-instance-user-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-app-instance-user-endpoint-response
                       common-lisp:nil
                       ((app-instance-user-arn :initarg :app-instance-user-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-update-app-instance-user-endpoint-response-app-instance-user-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (endpoint-id :initarg :endpoint-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string64 common-lisp:null) :accessor
                         struct-shape-update-app-instance-user-endpoint-response-endpoint-id
                         :shape "String64" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-app-instance-user-endpoint-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-app-instance-user-endpoint-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-app-instance-user-endpoint-response
                    'make-update-app-instance-user-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-app-instance-user-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-app-instance-user-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-instance-user-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceUserArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-id))
      (common-lisp:list
       (common-lisp:cons "EndpointId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-app-instance-user-endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-app-instance-user-request common-lisp:nil
                       ((app-instance-user-arn :initarg :app-instance-user-arn
                         :initform
                         (common-lisp:error
                          ":app-instance-user-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-update-app-instance-user-request-app-instance-user-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceUserArn")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or user-name common-lisp:null) :accessor
                         struct-shape-update-app-instance-user-request-name
                         :shape "UserName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metadata :initarg :metadata :initform
                         (common-lisp:error ":metadata is required") :type
                         (common-lisp:or metadata common-lisp:null) :accessor
                         struct-shape-update-app-instance-user-request-metadata
                         :shape "Metadata" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-app-instance-user-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-app-instance-user-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-app-instance-user-request
                    'make-update-app-instance-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-app-instance-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-app-instance-user-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-app-instance-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-app-instance-user-response common-lisp:nil
                       ((app-instance-user-arn :initarg :app-instance-user-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-update-app-instance-user-response-app-instance-user-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-app-instance-user-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-app-instance-user-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-app-instance-user-response
                    'make-update-app-instance-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-app-instance-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-app-instance-user-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-instance-user-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceUserArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-app-instance-user-response))
   common-lisp:nil))
(common-lisp:deftype user-id () 'common-lisp:string)
(common-lisp:deftype user-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun create-app-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name metadata client-request-token tags)
   (common-lisp:declare
    (common-lisp:ignorable name metadata client-request-token tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-app-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-identity-request aws-sdk/generator/operation::input "POST"
        "/app-instances" "CreateAppInstance"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-app-instance))
(common-lisp:progn
 (common-lisp:defun create-app-instance-admin
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-admin-arn app-instance-arn)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-admin-arn app-instance-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-app-instance-admin-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-identity-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/app-instances/~A/admins"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'app-instance-arn))))
        "CreateAppInstanceAdmin"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-app-instance-admin))
(common-lisp:progn
 (common-lisp:defun create-app-instance-bot
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-arn name metadata
                     client-request-token tags configuration)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-arn name metadata client-request-token
     tags configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-app-instance-bot-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-identity-request aws-sdk/generator/operation::input "POST"
        "/app-instance-bots" "CreateAppInstanceBot"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-app-instance-bot))
(common-lisp:progn
 (common-lisp:defun create-app-instance-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-arn app-instance-user-id
                     name metadata client-request-token tags
                     expiration-settings)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-arn app-instance-user-id name metadata
     client-request-token tags expiration-settings))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-app-instance-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-identity-request aws-sdk/generator/operation::input "POST"
        "/app-instance-users" "CreateAppInstanceUser"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-app-instance-user))
(common-lisp:progn
 (common-lisp:defun delete-app-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-arn)
   (common-lisp:declare (common-lisp:ignorable app-instance-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-app-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-identity-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/app-instances/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'app-instance-arn))))
        "DeleteAppInstance"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-app-instance))
(common-lisp:progn
 (common-lisp:defun delete-app-instance-admin
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-admin-arn app-instance-arn)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-admin-arn app-instance-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-app-instance-admin-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-identity-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/app-instances/~A/admins/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'app-instance-arn))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'app-instance-admin-arn))))
        "DeleteAppInstanceAdmin"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-app-instance-admin))
(common-lisp:progn
 (common-lisp:defun delete-app-instance-bot
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-bot-arn)
   (common-lisp:declare (common-lisp:ignorable app-instance-bot-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-app-instance-bot-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-identity-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/app-instance-bots/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'app-instance-bot-arn))))
        "DeleteAppInstanceBot"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-app-instance-bot))
(common-lisp:progn
 (common-lisp:defun delete-app-instance-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-user-arn)
   (common-lisp:declare (common-lisp:ignorable app-instance-user-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-app-instance-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-identity-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/app-instance-users/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'app-instance-user-arn))))
        "DeleteAppInstanceUser"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-app-instance-user))
(common-lisp:progn
 (common-lisp:defun deregister-app-instance-user-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-user-arn endpoint-id)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-user-arn endpoint-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-deregister-app-instance-user-endpoint-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-identity-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/app-instance-users/~A/endpoints/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'app-instance-user-arn))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'endpoint-id))))
        "DeregisterAppInstanceUserEndpoint"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'deregister-app-instance-user-endpoint))
(common-lisp:progn
 (common-lisp:defun describe-app-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-arn)
   (common-lisp:declare (common-lisp:ignorable app-instance-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-app-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-identity-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/app-instances/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'app-instance-arn))))
        "DescribeAppInstance"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-app-instance))
(common-lisp:progn
 (common-lisp:defun describe-app-instance-admin
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-admin-arn app-instance-arn)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-admin-arn app-instance-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-app-instance-admin-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-identity-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/app-instances/~A/admins/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'app-instance-arn))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'app-instance-admin-arn))))
        "DescribeAppInstanceAdmin"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-app-instance-admin))
(common-lisp:progn
 (common-lisp:defun describe-app-instance-bot
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-bot-arn)
   (common-lisp:declare (common-lisp:ignorable app-instance-bot-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-app-instance-bot-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-identity-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/app-instance-bots/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'app-instance-bot-arn))))
        "DescribeAppInstanceBot"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-app-instance-bot))
(common-lisp:progn
 (common-lisp:defun describe-app-instance-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-user-arn)
   (common-lisp:declare (common-lisp:ignorable app-instance-user-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-app-instance-user-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-identity-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/app-instance-users/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'app-instance-user-arn))))
        "DescribeAppInstanceUser"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-app-instance-user))
(common-lisp:progn
 (common-lisp:defun describe-app-instance-user-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-user-arn endpoint-id)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-user-arn endpoint-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-app-instance-user-endpoint-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-identity-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/app-instance-users/~A/endpoints/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'app-instance-user-arn))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'endpoint-id))))
        "DescribeAppInstanceUserEndpoint"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-app-instance-user-endpoint))
(common-lisp:progn
 (common-lisp:defun get-app-instance-retention-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-arn)
   (common-lisp:declare (common-lisp:ignorable app-instance-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-app-instance-retention-settings-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-identity-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/app-instances/~A/retention-settings"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'app-instance-arn))))
        "GetAppInstanceRetentionSettings"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-app-instance-retention-settings))
(common-lisp:progn
 (common-lisp:defun list-app-instance-admins
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-arn max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-app-instance-admins-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-identity-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/app-instances/~A/admins"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'app-instance-arn))))
        "ListAppInstanceAdmins"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-app-instance-admins))
(common-lisp:progn
 (common-lisp:defun list-app-instance-bots
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-arn max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-app-instance-bots-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-identity-request aws-sdk/generator/operation::input "GET"
        "/app-instance-bots" "ListAppInstanceBots"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-app-instance-bots))
(common-lisp:progn
 (common-lisp:defun list-app-instance-user-endpoints
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-user-arn max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-user-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-app-instance-user-endpoints-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-identity-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/app-instance-users/~A/endpoints"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'app-instance-user-arn))))
        "ListAppInstanceUserEndpoints"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-app-instance-user-endpoints))
(common-lisp:progn
 (common-lisp:defun list-app-instance-users
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-arn max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-app-instance-users-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-identity-request aws-sdk/generator/operation::input "GET"
        "/app-instance-users" "ListAppInstanceUsers"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-app-instance-users))
(common-lisp:progn
 (common-lisp:defun list-app-instances
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-app-instances-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-identity-request aws-sdk/generator/operation::input "GET"
        "/app-instances" "ListAppInstances"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-app-instances))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-identity-request aws-sdk/generator/operation::input "GET"
        "/tags" "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun put-app-instance-retention-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-arn
                     app-instance-retention-settings)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-arn app-instance-retention-settings))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-app-instance-retention-settings-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-identity-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/app-instances/~A/retention-settings"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'app-instance-arn))))
        "PutAppInstanceRetentionSettings"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-app-instance-retention-settings))
(common-lisp:progn
 (common-lisp:defun put-app-instance-user-expiration-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-user-arn
                     expiration-settings)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-user-arn expiration-settings))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-app-instance-user-expiration-settings-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-identity-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/app-instance-users/~A/expiration-settings"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'app-instance-user-arn))))
        "PutAppInstanceUserExpirationSettings"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-app-instance-user-expiration-settings))
(common-lisp:progn
 (common-lisp:defun register-app-instance-user-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-user-arn name type
                     resource-arn endpoint-attributes client-request-token
                     allow-messages)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-user-arn name type resource-arn
     endpoint-attributes client-request-token allow-messages))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-register-app-instance-user-endpoint-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-identity-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/app-instance-users/~A/endpoints"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'app-instance-user-arn))))
        "RegisterAppInstanceUserEndpoint"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'register-app-instance-user-endpoint))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-identity-request aws-sdk/generator/operation::input "POST"
        "/tags?operation=tag-resource" "TagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-identity-request aws-sdk/generator/operation::input "POST"
        "/tags?operation=untag-resource" "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-app-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-arn name metadata)
   (common-lisp:declare (common-lisp:ignorable app-instance-arn name metadata))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-app-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-identity-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/app-instances/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'app-instance-arn))))
        "UpdateAppInstance"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-app-instance))
(common-lisp:progn
 (common-lisp:defun update-app-instance-bot
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-bot-arn name metadata
                     configuration)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-bot-arn name metadata configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-app-instance-bot-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-identity-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/app-instance-bots/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'app-instance-bot-arn))))
        "UpdateAppInstanceBot"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-app-instance-bot))
(common-lisp:progn
 (common-lisp:defun update-app-instance-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-user-arn name metadata)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-user-arn name metadata))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-app-instance-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-identity-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/app-instance-users/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'app-instance-user-arn))))
        "UpdateAppInstanceUser"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-app-instance-user))
(common-lisp:progn
 (common-lisp:defun update-app-instance-user-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-user-arn endpoint-id name
                     allow-messages)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-user-arn endpoint-id name
     allow-messages))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-app-instance-user-endpoint-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-identity-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/app-instance-users/~A/endpoints/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'app-instance-user-arn))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'endpoint-id))))
        "UpdateAppInstanceUserEndpoint"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-app-instance-user-endpoint))
