;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(uiop/package:define-package #:aws-sdk/services/mediapackage-vod/api (:use)
                             (:nicknames #:aws/mediapackage-vod)
                             (:import-from #:aws-sdk/generator/shape)
                             (:import-from #:aws-sdk/generator/operation)
                             (:import-from #:aws-sdk/api)
                             (:import-from #:aws-sdk/request)
                             (:import-from #:aws-sdk/json-request)
                             (:import-from #:aws-sdk/rest-json-request)
                             (:import-from #:aws-sdk/rest-xml-request)
                             (:import-from #:aws-sdk/query-request)
                             (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/mediapackage-vod/api)
(common-lisp:progn
 (common-lisp:define-condition mediapackage-vod-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'mediapackage-vod-error))
(common-lisp:progn
 (common-lisp:defclass mediapackage-vod-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "mediapackage-vod"
                        :api-version "2018-11-07" :host-prefix
                        "mediapackage-vod" :signing-name "mediapackage-vod"
                        :global-host common-lisp:nil))
 (common-lisp:export 'mediapackage-vod-request))
(common-lisp:defvar *error-map*
  '(("ForbiddenException" . forbidden-exception)
    ("InternalServerErrorException" . internal-server-error-exception)
    ("NotFoundException" . not-found-exception)
    ("ServiceUnavailableException" . service-unavailable-exception)
    ("TooManyRequestsException" . too-many-requests-exception)
    ("UnprocessableEntityException" . unprocessable-entity-exception)))
(common-lisp:deftype ad-markers () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass asset common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-asset-arn :shape "__string" :location
                         common-lisp:nil :location-name "arn")
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-asset-created-at :shape "__string"
                         :location common-lisp:nil :location-name "createdAt")
                        (egress-endpoints :initarg :egress-endpoints :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfEgressEndpoint|
                                         common-lisp:null)
                         :accessor struct-shape-asset-egress-endpoints :shape
                         "__listOfEgressEndpoint" :location common-lisp:nil
                         :location-name "egressEndpoints")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-asset-id :shape "__string" :location
                         common-lisp:nil :location-name "id")
                        (packaging-group-id :initarg :packaging-group-id
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-asset-packaging-group-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "packagingGroupId")
                        (resource-id :initarg :resource-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-asset-resource-id :shape "__string"
                         :location common-lisp:nil :location-name "resourceId")
                        (source-arn :initarg :source-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-asset-source-arn :shape "__string"
                         :location common-lisp:nil :location-name "sourceArn")
                        (source-role-arn :initarg :source-role-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-asset-source-role-arn :shape "__string"
                         :location common-lisp:nil :location-name
                         "sourceRoleArn")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-asset-tags :shape "Tags" :location
                         common-lisp:nil :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-asset
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'asset
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'asset 'make-asset))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input asset))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input asset))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'egress-endpoints))
      (common-lisp:list
       (common-lisp:cons "EgressEndpoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'packaging-group-id))
      (common-lisp:list
       (common-lisp:cons "PackagingGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id))
      (common-lisp:list
       (common-lisp:cons "ResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-arn))
      (common-lisp:list
       (common-lisp:cons "SourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-role-arn))
      (common-lisp:list
       (common-lisp:cons "SourceRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input asset))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass asset-create-parameters common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-asset-create-parameters-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "id")
                        (packaging-group-id :initarg :packaging-group-id
                         :initform
                         (common-lisp:error ":packaging-group-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-asset-create-parameters-packaging-group-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "packagingGroupId")
                        (resource-id :initarg :resource-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-asset-create-parameters-resource-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "resourceId")
                        (source-arn :initarg :source-arn :initform
                         (common-lisp:error ":source-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-asset-create-parameters-source-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         "sourceArn")
                        (source-role-arn :initarg :source-role-arn :initform
                         (common-lisp:error ":source-role-arn is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-asset-create-parameters-source-role-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name "sourceRoleArn")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-asset-create-parameters-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-asset-create-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'asset-create-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'asset-create-parameters 'make-asset-create-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          asset-create-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          asset-create-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'packaging-group-id))
      (common-lisp:list
       (common-lisp:cons "PackagingGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id))
      (common-lisp:list
       (common-lisp:cons "ResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-arn))
      (common-lisp:list
       (common-lisp:cons "SourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-role-arn))
      (common-lisp:list
       (common-lisp:cons "SourceRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          asset-create-parameters))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass asset-list common-lisp:nil
                       ((assets :initarg :assets :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOfAssetShallow|
                                         common-lisp:null)
                         :accessor struct-shape-asset-list-assets :shape
                         "__listOfAssetShallow" :location common-lisp:nil
                         :location-name "assets")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-asset-list-next-token :shape "__string"
                         :location common-lisp:nil :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-asset-list
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'asset-list
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'asset-list 'make-asset-list))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input asset-list))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input asset-list))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'assets))
      (common-lisp:list
       (common-lisp:cons "Assets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input asset-list))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass asset-shallow common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-asset-shallow-arn :shape "__string"
                         :location common-lisp:nil :location-name "arn")
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-asset-shallow-created-at :shape
                         "__string" :location common-lisp:nil :location-name
                         "createdAt")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-asset-shallow-id :shape "__string"
                         :location common-lisp:nil :location-name "id")
                        (packaging-group-id :initarg :packaging-group-id
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-asset-shallow-packaging-group-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "packagingGroupId")
                        (resource-id :initarg :resource-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-asset-shallow-resource-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "resourceId")
                        (source-arn :initarg :source-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-asset-shallow-source-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         "sourceArn")
                        (source-role-arn :initarg :source-role-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-asset-shallow-source-role-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         "sourceRoleArn")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-asset-shallow-tags :shape "Tags"
                         :location common-lisp:nil :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-asset-shallow
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'asset-shallow
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'asset-shallow 'make-asset-shallow))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input asset-shallow))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input asset-shallow))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'packaging-group-id))
      (common-lisp:list
       (common-lisp:cons "PackagingGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id))
      (common-lisp:list
       (common-lisp:cons "ResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-arn))
      (common-lisp:list
       (common-lisp:cons "SourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-role-arn))
      (common-lisp:list
       (common-lisp:cons "SourceRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input asset-shallow))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass authorization common-lisp:nil
                       ((cdn-identifier-secret :initarg :cdn-identifier-secret
                         :initform
                         (common-lisp:error
                          ":cdn-identifier-secret is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-authorization-cdn-identifier-secret
                         :shape "__string" :location common-lisp:nil
                         :location-name "cdnIdentifierSecret")
                        (secrets-role-arn :initarg :secrets-role-arn :initform
                         (common-lisp:error ":secrets-role-arn is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-authorization-secrets-role-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name "secretsRoleArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-authorization
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'authorization
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'authorization 'make-authorization))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input authorization))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input authorization))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cdn-identifier-secret))
      (common-lisp:list
       (common-lisp:cons "CdnIdentifierSecret"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'secrets-role-arn))
      (common-lisp:list
       (common-lisp:cons "SecretsRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input authorization))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass cmaf-encryption common-lisp:nil
                       ((constant-initialization-vector :initarg
                         :constant-initialization-vector :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-cmaf-encryption-constant-initialization-vector
                         :shape "__string" :location common-lisp:nil
                         :location-name "constantInitializationVector")
                        (speke-key-provider :initarg :speke-key-provider
                         :initform
                         (common-lisp:error ":speke-key-provider is required")
                         :type
                         (common-lisp:or speke-key-provider common-lisp:null)
                         :accessor
                         struct-shape-cmaf-encryption-speke-key-provider :shape
                         "SpekeKeyProvider" :location common-lisp:nil
                         :location-name "spekeKeyProvider"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-cmaf-encryption
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'cmaf-encryption
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'cmaf-encryption 'make-cmaf-encryption))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input cmaf-encryption))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input cmaf-encryption))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'constant-initialization-vector))
      (common-lisp:list
       (common-lisp:cons "ConstantInitializationVector"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'speke-key-provider))
      (common-lisp:list
       (common-lisp:cons "SpekeKeyProvider"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input cmaf-encryption))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass cmaf-package common-lisp:nil
                       ((encryption :initarg :encryption :initform
                         common-lisp:nil :type
                         (common-lisp:or cmaf-encryption common-lisp:null)
                         :accessor struct-shape-cmaf-package-encryption :shape
                         "CmafEncryption" :location common-lisp:nil
                         :location-name "encryption")
                        (hls-manifests :initarg :hls-manifests :initform
                         (common-lisp:error ":hls-manifests is required") :type
                         (common-lisp:or |__listOfHlsManifest|
                                         common-lisp:null)
                         :accessor struct-shape-cmaf-package-hls-manifests
                         :shape "__listOfHlsManifest" :location common-lisp:nil
                         :location-name "hlsManifests")
                        (include-encoder-configuration-in-segments :initarg
                         :include-encoder-configuration-in-segments :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-cmaf-package-include-encoder-configuration-in-segments
                         :shape "__boolean" :location common-lisp:nil
                         :location-name
                         "includeEncoderConfigurationInSegments")
                        (segment-duration-seconds :initarg
                         :segment-duration-seconds :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-cmaf-package-segment-duration-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "segmentDurationSeconds"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-cmaf-package
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'cmaf-package
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'cmaf-package 'make-cmaf-package))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input cmaf-package))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input cmaf-package))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption))
      (common-lisp:list
       (common-lisp:cons "Encryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-manifests))
      (common-lisp:list
       (common-lisp:cons "HlsManifests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-encoder-configuration-in-segments))
      (common-lisp:list
       (common-lisp:cons "IncludeEncoderConfigurationInSegments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segment-duration-seconds))
      (common-lisp:list
       (common-lisp:cons "SegmentDurationSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input cmaf-package))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass configure-logs-parameters common-lisp:nil
                       ((egress-access-logs :initarg :egress-access-logs
                         :initform common-lisp:nil :type
                         (common-lisp:or egress-access-logs common-lisp:null)
                         :accessor
                         struct-shape-configure-logs-parameters-egress-access-logs
                         :shape "EgressAccessLogs" :location common-lisp:nil
                         :location-name "egressAccessLogs"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-configure-logs-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'configure-logs-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'configure-logs-parameters
                    'make-configure-logs-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'egress-access-logs))
      (common-lisp:list
       (common-lisp:cons "EgressAccessLogs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-parameters))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass configure-logs-request common-lisp:nil
                       ((egress-access-logs :initarg :egress-access-logs
                         :initform common-lisp:nil :type
                         (common-lisp:or egress-access-logs common-lisp:null)
                         :accessor
                         struct-shape-configure-logs-request-egress-access-logs
                         :shape "EgressAccessLogs" :location common-lisp:nil
                         :location-name "egressAccessLogs")
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-configure-logs-request-id :shape
                         "__string" :location "uri" :location-name "id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-configure-logs-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'configure-logs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'configure-logs-request 'make-configure-logs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'egress-access-logs))
      (common-lisp:list
       (common-lisp:cons "EgressAccessLogs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass configure-logs-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-configure-logs-response-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         "arn")
                        (authorization :initarg :authorization :initform
                         common-lisp:nil :type
                         (common-lisp:or authorization common-lisp:null)
                         :accessor
                         struct-shape-configure-logs-response-authorization
                         :shape "Authorization" :location common-lisp:nil
                         :location-name "authorization")
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-configure-logs-response-created-at :shape
                         "__string" :location common-lisp:nil :location-name
                         "createdAt")
                        (domain-name :initarg :domain-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-configure-logs-response-domain-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "domainName")
                        (egress-access-logs :initarg :egress-access-logs
                         :initform common-lisp:nil :type
                         (common-lisp:or egress-access-logs common-lisp:null)
                         :accessor
                         struct-shape-configure-logs-response-egress-access-logs
                         :shape "EgressAccessLogs" :location common-lisp:nil
                         :location-name "egressAccessLogs")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-configure-logs-response-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "id")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-configure-logs-response-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-configure-logs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'configure-logs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'configure-logs-response 'make-configure-logs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization))
      (common-lisp:list
       (common-lisp:cons "Authorization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'egress-access-logs))
      (common-lisp:list
       (common-lisp:cons "EgressAccessLogs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-asset-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-asset-request-id :shape "__string"
                         :location common-lisp:nil :location-name "id")
                        (packaging-group-id :initarg :packaging-group-id
                         :initform
                         (common-lisp:error ":packaging-group-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-asset-request-packaging-group-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "packagingGroupId")
                        (resource-id :initarg :resource-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-asset-request-resource-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "resourceId")
                        (source-arn :initarg :source-arn :initform
                         (common-lisp:error ":source-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-asset-request-source-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         "sourceArn")
                        (source-role-arn :initarg :source-role-arn :initform
                         (common-lisp:error ":source-role-arn is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-asset-request-source-role-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name "sourceRoleArn")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-asset-request-tags :shape "Tags"
                         :location common-lisp:nil :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-asset-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-asset-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-asset-request 'make-create-asset-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-asset-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-asset-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'packaging-group-id))
      (common-lisp:list
       (common-lisp:cons "PackagingGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id))
      (common-lisp:list
       (common-lisp:cons "ResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-arn))
      (common-lisp:list
       (common-lisp:cons "SourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-role-arn))
      (common-lisp:list
       (common-lisp:cons "SourceRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-asset-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-asset-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-asset-response-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         "arn")
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-asset-response-created-at :shape
                         "__string" :location common-lisp:nil :location-name
                         "createdAt")
                        (egress-endpoints :initarg :egress-endpoints :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfEgressEndpoint|
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-asset-response-egress-endpoints
                         :shape "__listOfEgressEndpoint" :location
                         common-lisp:nil :location-name "egressEndpoints")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-asset-response-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "id")
                        (packaging-group-id :initarg :packaging-group-id
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-asset-response-packaging-group-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "packagingGroupId")
                        (resource-id :initarg :resource-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-asset-response-resource-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "resourceId")
                        (source-arn :initarg :source-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-asset-response-source-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         "sourceArn")
                        (source-role-arn :initarg :source-role-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-asset-response-source-role-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name "sourceRoleArn")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-asset-response-tags :shape "Tags"
                         :location common-lisp:nil :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-asset-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-asset-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-asset-response 'make-create-asset-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-asset-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-asset-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'egress-endpoints))
      (common-lisp:list
       (common-lisp:cons "EgressEndpoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'packaging-group-id))
      (common-lisp:list
       (common-lisp:cons "PackagingGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id))
      (common-lisp:list
       (common-lisp:cons "ResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-arn))
      (common-lisp:list
       (common-lisp:cons "SourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-role-arn))
      (common-lisp:list
       (common-lisp:cons "SourceRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-asset-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-packaging-configuration-request common-lisp:nil
                       ((cmaf-package :initarg :cmaf-package :initform
                         common-lisp:nil :type
                         (common-lisp:or cmaf-package common-lisp:null)
                         :accessor
                         struct-shape-create-packaging-configuration-request-cmaf-package
                         :shape "CmafPackage" :location common-lisp:nil
                         :location-name "cmafPackage")
                        (dash-package :initarg :dash-package :initform
                         common-lisp:nil :type
                         (common-lisp:or dash-package common-lisp:null)
                         :accessor
                         struct-shape-create-packaging-configuration-request-dash-package
                         :shape "DashPackage" :location common-lisp:nil
                         :location-name "dashPackage")
                        (hls-package :initarg :hls-package :initform
                         common-lisp:nil :type
                         (common-lisp:or hls-package common-lisp:null)
                         :accessor
                         struct-shape-create-packaging-configuration-request-hls-package
                         :shape "HlsPackage" :location common-lisp:nil
                         :location-name "hlsPackage")
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-packaging-configuration-request-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "id")
                        (mss-package :initarg :mss-package :initform
                         common-lisp:nil :type
                         (common-lisp:or mss-package common-lisp:null)
                         :accessor
                         struct-shape-create-packaging-configuration-request-mss-package
                         :shape "MssPackage" :location common-lisp:nil
                         :location-name "mssPackage")
                        (packaging-group-id :initarg :packaging-group-id
                         :initform
                         (common-lisp:error ":packaging-group-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-packaging-configuration-request-packaging-group-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "packagingGroupId")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-packaging-configuration-request-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-packaging-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-packaging-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-packaging-configuration-request
                    'make-create-packaging-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-packaging-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-packaging-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cmaf-package))
      (common-lisp:list
       (common-lisp:cons "CmafPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dash-package))
      (common-lisp:list
       (common-lisp:cons "DashPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-package))
      (common-lisp:list
       (common-lisp:cons "HlsPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mss-package))
      (common-lisp:list
       (common-lisp:cons "MssPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'packaging-group-id))
      (common-lisp:list
       (common-lisp:cons "PackagingGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-packaging-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-packaging-configuration-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-packaging-configuration-response-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name "arn")
                        (cmaf-package :initarg :cmaf-package :initform
                         common-lisp:nil :type
                         (common-lisp:or cmaf-package common-lisp:null)
                         :accessor
                         struct-shape-create-packaging-configuration-response-cmaf-package
                         :shape "CmafPackage" :location common-lisp:nil
                         :location-name "cmafPackage")
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-packaging-configuration-response-created-at
                         :shape "__string" :location common-lisp:nil
                         :location-name "createdAt")
                        (dash-package :initarg :dash-package :initform
                         common-lisp:nil :type
                         (common-lisp:or dash-package common-lisp:null)
                         :accessor
                         struct-shape-create-packaging-configuration-response-dash-package
                         :shape "DashPackage" :location common-lisp:nil
                         :location-name "dashPackage")
                        (hls-package :initarg :hls-package :initform
                         common-lisp:nil :type
                         (common-lisp:or hls-package common-lisp:null)
                         :accessor
                         struct-shape-create-packaging-configuration-response-hls-package
                         :shape "HlsPackage" :location common-lisp:nil
                         :location-name "hlsPackage")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-packaging-configuration-response-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "id")
                        (mss-package :initarg :mss-package :initform
                         common-lisp:nil :type
                         (common-lisp:or mss-package common-lisp:null)
                         :accessor
                         struct-shape-create-packaging-configuration-response-mss-package
                         :shape "MssPackage" :location common-lisp:nil
                         :location-name "mssPackage")
                        (packaging-group-id :initarg :packaging-group-id
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-packaging-configuration-response-packaging-group-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "packagingGroupId")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-packaging-configuration-response-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-packaging-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-packaging-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-packaging-configuration-response
                    'make-create-packaging-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-packaging-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-packaging-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cmaf-package))
      (common-lisp:list
       (common-lisp:cons "CmafPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dash-package))
      (common-lisp:list
       (common-lisp:cons "DashPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-package))
      (common-lisp:list
       (common-lisp:cons "HlsPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mss-package))
      (common-lisp:list
       (common-lisp:cons "MssPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'packaging-group-id))
      (common-lisp:list
       (common-lisp:cons "PackagingGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-packaging-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-packaging-group-request common-lisp:nil
                       ((authorization :initarg :authorization :initform
                         common-lisp:nil :type
                         (common-lisp:or authorization common-lisp:null)
                         :accessor
                         struct-shape-create-packaging-group-request-authorization
                         :shape "Authorization" :location common-lisp:nil
                         :location-name "authorization")
                        (egress-access-logs :initarg :egress-access-logs
                         :initform common-lisp:nil :type
                         (common-lisp:or egress-access-logs common-lisp:null)
                         :accessor
                         struct-shape-create-packaging-group-request-egress-access-logs
                         :shape "EgressAccessLogs" :location common-lisp:nil
                         :location-name "egressAccessLogs")
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-packaging-group-request-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "id")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-packaging-group-request-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-packaging-group-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-packaging-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-packaging-group-request
                    'make-create-packaging-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-packaging-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-packaging-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization))
      (common-lisp:list
       (common-lisp:cons "Authorization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'egress-access-logs))
      (common-lisp:list
       (common-lisp:cons "EgressAccessLogs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-packaging-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-packaging-group-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-packaging-group-response-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name "arn")
                        (authorization :initarg :authorization :initform
                         common-lisp:nil :type
                         (common-lisp:or authorization common-lisp:null)
                         :accessor
                         struct-shape-create-packaging-group-response-authorization
                         :shape "Authorization" :location common-lisp:nil
                         :location-name "authorization")
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-packaging-group-response-created-at
                         :shape "__string" :location common-lisp:nil
                         :location-name "createdAt")
                        (domain-name :initarg :domain-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-packaging-group-response-domain-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "domainName")
                        (egress-access-logs :initarg :egress-access-logs
                         :initform common-lisp:nil :type
                         (common-lisp:or egress-access-logs common-lisp:null)
                         :accessor
                         struct-shape-create-packaging-group-response-egress-access-logs
                         :shape "EgressAccessLogs" :location common-lisp:nil
                         :location-name "egressAccessLogs")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-packaging-group-response-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "id")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-packaging-group-response-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-packaging-group-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-packaging-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-packaging-group-response
                    'make-create-packaging-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-packaging-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-packaging-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization))
      (common-lisp:list
       (common-lisp:cons "Authorization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'egress-access-logs))
      (common-lisp:list
       (common-lisp:cons "EgressAccessLogs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-packaging-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass dash-encryption common-lisp:nil
                       ((speke-key-provider :initarg :speke-key-provider
                         :initform
                         (common-lisp:error ":speke-key-provider is required")
                         :type
                         (common-lisp:or speke-key-provider common-lisp:null)
                         :accessor
                         struct-shape-dash-encryption-speke-key-provider :shape
                         "SpekeKeyProvider" :location common-lisp:nil
                         :location-name "spekeKeyProvider"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-dash-encryption
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'dash-encryption
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'dash-encryption 'make-dash-encryption))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dash-encryption))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dash-encryption))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'speke-key-provider))
      (common-lisp:list
       (common-lisp:cons "SpekeKeyProvider"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dash-encryption))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass dash-manifest common-lisp:nil
                       ((manifest-layout :initarg :manifest-layout :initform
                         common-lisp:nil :type
                         (common-lisp:or manifest-layout common-lisp:null)
                         :accessor struct-shape-dash-manifest-manifest-layout
                         :shape "ManifestLayout" :location common-lisp:nil
                         :location-name "manifestLayout")
                        (manifest-name :initarg :manifest-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-dash-manifest-manifest-name :shape
                         "__string" :location common-lisp:nil :location-name
                         "manifestName")
                        (min-buffer-time-seconds :initarg
                         :min-buffer-time-seconds :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-dash-manifest-min-buffer-time-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "minBufferTimeSeconds")
                        (profile :initarg :profile :initform common-lisp:nil
                         :type (common-lisp:or profile common-lisp:null)
                         :accessor struct-shape-dash-manifest-profile :shape
                         "Profile" :location common-lisp:nil :location-name
                         "profile")
                        (scte-markers-source :initarg :scte-markers-source
                         :initform common-lisp:nil :type
                         (common-lisp:or scte-markers-source common-lisp:null)
                         :accessor
                         struct-shape-dash-manifest-scte-markers-source :shape
                         "ScteMarkersSource" :location common-lisp:nil
                         :location-name "scteMarkersSource")
                        (stream-selection :initarg :stream-selection :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-selection common-lisp:null)
                         :accessor struct-shape-dash-manifest-stream-selection
                         :shape "StreamSelection" :location common-lisp:nil
                         :location-name "streamSelection"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-dash-manifest
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'dash-manifest
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'dash-manifest 'make-dash-manifest))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dash-manifest))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dash-manifest))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'manifest-layout))
      (common-lisp:list
       (common-lisp:cons "ManifestLayout"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'manifest-name))
      (common-lisp:list
       (common-lisp:cons "ManifestName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'min-buffer-time-seconds))
      (common-lisp:list
       (common-lisp:cons "MinBufferTimeSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'profile))
      (common-lisp:list
       (common-lisp:cons "Profile"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scte-markers-source))
      (common-lisp:list
       (common-lisp:cons "ScteMarkersSource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-selection))
      (common-lisp:list
       (common-lisp:cons "StreamSelection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dash-manifest))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass dash-package common-lisp:nil
                       ((dash-manifests :initarg :dash-manifests :initform
                         (common-lisp:error ":dash-manifests is required")
                         :type
                         (common-lisp:or |__listOfDashManifest|
                                         common-lisp:null)
                         :accessor struct-shape-dash-package-dash-manifests
                         :shape "__listOfDashManifest" :location
                         common-lisp:nil :location-name "dashManifests")
                        (encryption :initarg :encryption :initform
                         common-lisp:nil :type
                         (common-lisp:or dash-encryption common-lisp:null)
                         :accessor struct-shape-dash-package-encryption :shape
                         "DashEncryption" :location common-lisp:nil
                         :location-name "encryption")
                        (include-encoder-configuration-in-segments :initarg
                         :include-encoder-configuration-in-segments :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-dash-package-include-encoder-configuration-in-segments
                         :shape "__boolean" :location common-lisp:nil
                         :location-name
                         "includeEncoderConfigurationInSegments")
                        (include-iframe-only-stream :initarg
                         :include-iframe-only-stream :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-dash-package-include-iframe-only-stream
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "includeIframeOnlyStream")
                        (period-triggers :initarg :period-triggers :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__PeriodTriggersElement|
                                         common-lisp:null)
                         :accessor struct-shape-dash-package-period-triggers
                         :shape "__listOf__PeriodTriggersElement" :location
                         common-lisp:nil :location-name "periodTriggers")
                        (segment-duration-seconds :initarg
                         :segment-duration-seconds :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-dash-package-segment-duration-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "segmentDurationSeconds")
                        (segment-template-format :initarg
                         :segment-template-format :initform common-lisp:nil
                         :type
                         (common-lisp:or segment-template-format
                                         common-lisp:null)
                         :accessor
                         struct-shape-dash-package-segment-template-format
                         :shape "SegmentTemplateFormat" :location
                         common-lisp:nil :location-name
                         "segmentTemplateFormat"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-dash-package
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'dash-package
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'dash-package 'make-dash-package))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dash-package))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dash-package))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dash-manifests))
      (common-lisp:list
       (common-lisp:cons "DashManifests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption))
      (common-lisp:list
       (common-lisp:cons "Encryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-encoder-configuration-in-segments))
      (common-lisp:list
       (common-lisp:cons "IncludeEncoderConfigurationInSegments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-iframe-only-stream))
      (common-lisp:list
       (common-lisp:cons "IncludeIframeOnlyStream"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'period-triggers))
      (common-lisp:list
       (common-lisp:cons "PeriodTriggers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segment-duration-seconds))
      (common-lisp:list
       (common-lisp:cons "SegmentDurationSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segment-template-format))
      (common-lisp:list
       (common-lisp:cons "SegmentTemplateFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dash-package))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-asset-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-asset-request-id :shape "__string"
                         :location "uri" :location-name "id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-asset-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-asset-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-asset-request 'make-delete-asset-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-asset-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-asset-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-asset-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-asset-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-asset-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-asset-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-asset-response 'make-delete-asset-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-asset-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-asset-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-asset-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-packaging-configuration-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-packaging-configuration-request-id
                         :shape "__string" :location "uri" :location-name
                         "id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-packaging-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-packaging-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-packaging-configuration-request
                    'make-delete-packaging-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-packaging-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-packaging-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-packaging-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-packaging-configuration-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-packaging-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-packaging-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-packaging-configuration-response
                    'make-delete-packaging-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-packaging-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-packaging-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-packaging-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-packaging-group-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-packaging-group-request-id :shape
                         "__string" :location "uri" :location-name "id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-packaging-group-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-packaging-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-packaging-group-request
                    'make-delete-packaging-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-packaging-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-packaging-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-packaging-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-packaging-group-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-packaging-group-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-packaging-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-packaging-group-response
                    'make-delete-packaging-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-packaging-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-packaging-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-packaging-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-asset-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-asset-request-id :shape
                         "__string" :location "uri" :location-name "id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-asset-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-asset-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-asset-request 'make-describe-asset-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-asset-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-asset-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-asset-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-asset-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-asset-response-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         "arn")
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-asset-response-created-at :shape
                         "__string" :location common-lisp:nil :location-name
                         "createdAt")
                        (egress-endpoints :initarg :egress-endpoints :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfEgressEndpoint|
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-asset-response-egress-endpoints
                         :shape "__listOfEgressEndpoint" :location
                         common-lisp:nil :location-name "egressEndpoints")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-asset-response-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "id")
                        (packaging-group-id :initarg :packaging-group-id
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-asset-response-packaging-group-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "packagingGroupId")
                        (resource-id :initarg :resource-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-asset-response-resource-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "resourceId")
                        (source-arn :initarg :source-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-asset-response-source-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         "sourceArn")
                        (source-role-arn :initarg :source-role-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-asset-response-source-role-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name "sourceRoleArn")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-describe-asset-response-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-asset-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-asset-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-asset-response 'make-describe-asset-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-asset-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-asset-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'egress-endpoints))
      (common-lisp:list
       (common-lisp:cons "EgressEndpoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'packaging-group-id))
      (common-lisp:list
       (common-lisp:cons "PackagingGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id))
      (common-lisp:list
       (common-lisp:cons "ResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-arn))
      (common-lisp:list
       (common-lisp:cons "SourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-role-arn))
      (common-lisp:list
       (common-lisp:cons "SourceRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-asset-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-packaging-configuration-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-packaging-configuration-request-id
                         :shape "__string" :location "uri" :location-name
                         "id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-packaging-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-packaging-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-packaging-configuration-request
                    'make-describe-packaging-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-packaging-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-packaging-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-packaging-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-packaging-configuration-response
                       common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-packaging-configuration-response-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name "arn")
                        (cmaf-package :initarg :cmaf-package :initform
                         common-lisp:nil :type
                         (common-lisp:or cmaf-package common-lisp:null)
                         :accessor
                         struct-shape-describe-packaging-configuration-response-cmaf-package
                         :shape "CmafPackage" :location common-lisp:nil
                         :location-name "cmafPackage")
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-packaging-configuration-response-created-at
                         :shape "__string" :location common-lisp:nil
                         :location-name "createdAt")
                        (dash-package :initarg :dash-package :initform
                         common-lisp:nil :type
                         (common-lisp:or dash-package common-lisp:null)
                         :accessor
                         struct-shape-describe-packaging-configuration-response-dash-package
                         :shape "DashPackage" :location common-lisp:nil
                         :location-name "dashPackage")
                        (hls-package :initarg :hls-package :initform
                         common-lisp:nil :type
                         (common-lisp:or hls-package common-lisp:null)
                         :accessor
                         struct-shape-describe-packaging-configuration-response-hls-package
                         :shape "HlsPackage" :location common-lisp:nil
                         :location-name "hlsPackage")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-packaging-configuration-response-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "id")
                        (mss-package :initarg :mss-package :initform
                         common-lisp:nil :type
                         (common-lisp:or mss-package common-lisp:null)
                         :accessor
                         struct-shape-describe-packaging-configuration-response-mss-package
                         :shape "MssPackage" :location common-lisp:nil
                         :location-name "mssPackage")
                        (packaging-group-id :initarg :packaging-group-id
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-packaging-configuration-response-packaging-group-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "packagingGroupId")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-describe-packaging-configuration-response-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-packaging-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-packaging-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-packaging-configuration-response
                    'make-describe-packaging-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-packaging-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-packaging-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cmaf-package))
      (common-lisp:list
       (common-lisp:cons "CmafPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dash-package))
      (common-lisp:list
       (common-lisp:cons "DashPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-package))
      (common-lisp:list
       (common-lisp:cons "HlsPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mss-package))
      (common-lisp:list
       (common-lisp:cons "MssPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'packaging-group-id))
      (common-lisp:list
       (common-lisp:cons "PackagingGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-packaging-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-packaging-group-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-packaging-group-request-id
                         :shape "__string" :location "uri" :location-name
                         "id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-packaging-group-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-packaging-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-packaging-group-request
                    'make-describe-packaging-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-packaging-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-packaging-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-packaging-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-packaging-group-response common-lisp:nil
                       ((approximate-asset-count :initarg
                         :approximate-asset-count :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-describe-packaging-group-response-approximate-asset-count
                         :shape "__integer" :location common-lisp:nil
                         :location-name "approximateAssetCount")
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-packaging-group-response-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name "arn")
                        (authorization :initarg :authorization :initform
                         common-lisp:nil :type
                         (common-lisp:or authorization common-lisp:null)
                         :accessor
                         struct-shape-describe-packaging-group-response-authorization
                         :shape "Authorization" :location common-lisp:nil
                         :location-name "authorization")
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-packaging-group-response-created-at
                         :shape "__string" :location common-lisp:nil
                         :location-name "createdAt")
                        (domain-name :initarg :domain-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-packaging-group-response-domain-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "domainName")
                        (egress-access-logs :initarg :egress-access-logs
                         :initform common-lisp:nil :type
                         (common-lisp:or egress-access-logs common-lisp:null)
                         :accessor
                         struct-shape-describe-packaging-group-response-egress-access-logs
                         :shape "EgressAccessLogs" :location common-lisp:nil
                         :location-name "egressAccessLogs")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-packaging-group-response-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "id")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-describe-packaging-group-response-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-packaging-group-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-packaging-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-packaging-group-response
                    'make-describe-packaging-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-packaging-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-packaging-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'approximate-asset-count))
      (common-lisp:list
       (common-lisp:cons "ApproximateAssetCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization))
      (common-lisp:list
       (common-lisp:cons "Authorization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'egress-access-logs))
      (common-lisp:list
       (common-lisp:cons "EgressAccessLogs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-packaging-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass egress-access-logs common-lisp:nil
                       ((log-group-name :initarg :log-group-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-egress-access-logs-log-group-name :shape
                         "__string" :location common-lisp:nil :location-name
                         "logGroupName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-egress-access-logs
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'egress-access-logs
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'egress-access-logs 'make-egress-access-logs))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input egress-access-logs))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input egress-access-logs))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-group-name))
      (common-lisp:list
       (common-lisp:cons "LogGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input egress-access-logs))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass egress-endpoint common-lisp:nil
                       ((packaging-configuration-id :initarg
                         :packaging-configuration-id :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-egress-endpoint-packaging-configuration-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "packagingConfigurationId")
                        (status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-egress-endpoint-status :shape
                         "__string" :location common-lisp:nil :location-name
                         "status")
                        (url :initarg :url :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-egress-endpoint-url :shape "__string"
                         :location common-lisp:nil :location-name "url"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-egress-endpoint
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'egress-endpoint
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'egress-endpoint 'make-egress-endpoint))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input egress-endpoint))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input egress-endpoint))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'packaging-configuration-id))
      (common-lisp:list
       (common-lisp:cons "PackagingConfigurationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input egress-endpoint))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass encryption-contract-configuration common-lisp:nil
                       ((preset-speke20audio :initarg :preset-speke20audio
                         :initform
                         (common-lisp:error ":preset-speke20audio is required")
                         :type
                         (common-lisp:or preset-speke20audio common-lisp:null)
                         :accessor
                         struct-shape-encryption-contract-configuration-preset-speke20audio
                         :shape "PresetSpeke20Audio" :location common-lisp:nil
                         :location-name "presetSpeke20Audio")
                        (preset-speke20video :initarg :preset-speke20video
                         :initform
                         (common-lisp:error ":preset-speke20video is required")
                         :type
                         (common-lisp:or preset-speke20video common-lisp:null)
                         :accessor
                         struct-shape-encryption-contract-configuration-preset-speke20video
                         :shape "PresetSpeke20Video" :location common-lisp:nil
                         :location-name "presetSpeke20Video"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-encryption-contract-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'encryption-contract-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'encryption-contract-configuration
                    'make-encryption-contract-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          encryption-contract-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          encryption-contract-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'preset-speke20audio))
      (common-lisp:list
       (common-lisp:cons "PresetSpeke20Audio"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'preset-speke20video))
      (common-lisp:list
       (common-lisp:cons "PresetSpeke20Video"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          encryption-contract-configuration))
   common-lisp:nil))
(common-lisp:deftype encryption-method () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition forbidden-exception
     (mediapackage-vod-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       forbidden-exception-message)))
 (common-lisp:export
  (common-lisp:list 'forbidden-exception 'forbidden-exception-message)))
(common-lisp:progn
 (common-lisp:defclass hls-encryption common-lisp:nil
                       ((constant-initialization-vector :initarg
                         :constant-initialization-vector :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-hls-encryption-constant-initialization-vector
                         :shape "__string" :location common-lisp:nil
                         :location-name "constantInitializationVector")
                        (encryption-method :initarg :encryption-method
                         :initform common-lisp:nil :type
                         (common-lisp:or encryption-method common-lisp:null)
                         :accessor
                         struct-shape-hls-encryption-encryption-method :shape
                         "EncryptionMethod" :location common-lisp:nil
                         :location-name "encryptionMethod")
                        (speke-key-provider :initarg :speke-key-provider
                         :initform
                         (common-lisp:error ":speke-key-provider is required")
                         :type
                         (common-lisp:or speke-key-provider common-lisp:null)
                         :accessor
                         struct-shape-hls-encryption-speke-key-provider :shape
                         "SpekeKeyProvider" :location common-lisp:nil
                         :location-name "spekeKeyProvider"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-hls-encryption
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'hls-encryption
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'hls-encryption 'make-hls-encryption))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input hls-encryption))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input hls-encryption))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'constant-initialization-vector))
      (common-lisp:list
       (common-lisp:cons "ConstantInitializationVector"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption-method))
      (common-lisp:list
       (common-lisp:cons "EncryptionMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'speke-key-provider))
      (common-lisp:list
       (common-lisp:cons "SpekeKeyProvider"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input hls-encryption))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass hls-manifest common-lisp:nil
                       ((ad-markers :initarg :ad-markers :initform
                         common-lisp:nil :type
                         (common-lisp:or ad-markers common-lisp:null) :accessor
                         struct-shape-hls-manifest-ad-markers :shape
                         "AdMarkers" :location common-lisp:nil :location-name
                         "adMarkers")
                        (include-iframe-only-stream :initarg
                         :include-iframe-only-stream :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-hls-manifest-include-iframe-only-stream
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "includeIframeOnlyStream")
                        (manifest-name :initarg :manifest-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-hls-manifest-manifest-name :shape
                         "__string" :location common-lisp:nil :location-name
                         "manifestName")
                        (program-date-time-interval-seconds :initarg
                         :program-date-time-interval-seconds :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-hls-manifest-program-date-time-interval-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "programDateTimeIntervalSeconds")
                        (repeat-ext-xkey :initarg :repeat-ext-xkey :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-hls-manifest-repeat-ext-xkey
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "repeatExtXKey")
                        (stream-selection :initarg :stream-selection :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-selection common-lisp:null)
                         :accessor struct-shape-hls-manifest-stream-selection
                         :shape "StreamSelection" :location common-lisp:nil
                         :location-name "streamSelection"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-hls-manifest
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'hls-manifest
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'hls-manifest 'make-hls-manifest))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input hls-manifest))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input hls-manifest))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ad-markers))
      (common-lisp:list
       (common-lisp:cons "AdMarkers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-iframe-only-stream))
      (common-lisp:list
       (common-lisp:cons "IncludeIframeOnlyStream"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'manifest-name))
      (common-lisp:list
       (common-lisp:cons "ManifestName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'program-date-time-interval-seconds))
      (common-lisp:list
       (common-lisp:cons "ProgramDateTimeIntervalSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'repeat-ext-xkey))
      (common-lisp:list
       (common-lisp:cons "RepeatExtXKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-selection))
      (common-lisp:list
       (common-lisp:cons "StreamSelection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input hls-manifest))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass hls-package common-lisp:nil
                       ((encryption :initarg :encryption :initform
                         common-lisp:nil :type
                         (common-lisp:or hls-encryption common-lisp:null)
                         :accessor struct-shape-hls-package-encryption :shape
                         "HlsEncryption" :location common-lisp:nil
                         :location-name "encryption")
                        (hls-manifests :initarg :hls-manifests :initform
                         (common-lisp:error ":hls-manifests is required") :type
                         (common-lisp:or |__listOfHlsManifest|
                                         common-lisp:null)
                         :accessor struct-shape-hls-package-hls-manifests
                         :shape "__listOfHlsManifest" :location common-lisp:nil
                         :location-name "hlsManifests")
                        (include-dvb-subtitles :initarg :include-dvb-subtitles
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-hls-package-include-dvb-subtitles :shape
                         "__boolean" :location common-lisp:nil :location-name
                         "includeDvbSubtitles")
                        (segment-duration-seconds :initarg
                         :segment-duration-seconds :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-hls-package-segment-duration-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "segmentDurationSeconds")
                        (use-audio-rendition-group :initarg
                         :use-audio-rendition-group :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-hls-package-use-audio-rendition-group
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "useAudioRenditionGroup"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-hls-package
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'hls-package
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'hls-package 'make-hls-package))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input hls-package))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input hls-package))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption))
      (common-lisp:list
       (common-lisp:cons "Encryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-manifests))
      (common-lisp:list
       (common-lisp:cons "HlsManifests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-dvb-subtitles))
      (common-lisp:list
       (common-lisp:cons "IncludeDvbSubtitles"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segment-duration-seconds))
      (common-lisp:list
       (common-lisp:cons "SegmentDurationSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'use-audio-rendition-group))
      (common-lisp:list
       (common-lisp:cons "UseAudioRenditionGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input hls-package))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition internal-server-error-exception
     (mediapackage-vod-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-error-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-error-exception
                    'internal-server-error-exception-message)))
(common-lisp:progn
 (common-lisp:defclass list-assets-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor struct-shape-list-assets-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-assets-request-next-token :shape
                         "__string" :location "querystring" :location-name
                         "nextToken")
                        (packaging-group-id :initarg :packaging-group-id
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-assets-request-packaging-group-id
                         :shape "__string" :location "querystring"
                         :location-name "packagingGroupId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-assets-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-assets-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-assets-request 'make-list-assets-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-assets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-assets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-assets-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-assets-response common-lisp:nil
                       ((assets :initarg :assets :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOfAssetShallow|
                                         common-lisp:null)
                         :accessor struct-shape-list-assets-response-assets
                         :shape "__listOfAssetShallow" :location
                         common-lisp:nil :location-name "assets")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-assets-response-next-token :shape
                         "__string" :location common-lisp:nil :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-assets-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-assets-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-assets-response 'make-list-assets-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-assets-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-assets-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'assets))
      (common-lisp:list
       (common-lisp:cons "Assets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-assets-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-packaging-configurations-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-packaging-configurations-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-packaging-configurations-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "nextToken")
                        (packaging-group-id :initarg :packaging-group-id
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-packaging-configurations-request-packaging-group-id
                         :shape "__string" :location "querystring"
                         :location-name "packagingGroupId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-packaging-configurations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-packaging-configurations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-packaging-configurations-request
                    'make-list-packaging-configurations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-packaging-configurations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-packaging-configurations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-packaging-configurations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-packaging-configurations-response common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-packaging-configurations-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken")
                        (packaging-configurations :initarg
                         :packaging-configurations :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOfPackagingConfiguration|
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-packaging-configurations-response-packaging-configurations
                         :shape "__listOfPackagingConfiguration" :location
                         common-lisp:nil :location-name
                         "packagingConfigurations"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-packaging-configurations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-packaging-configurations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-packaging-configurations-response
                    'make-list-packaging-configurations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-packaging-configurations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-packaging-configurations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'packaging-configurations))
      (common-lisp:list
       (common-lisp:cons "PackagingConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-packaging-configurations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-packaging-groups-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-packaging-groups-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-packaging-groups-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-packaging-groups-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-packaging-groups-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-packaging-groups-request
                    'make-list-packaging-groups-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-packaging-groups-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-packaging-groups-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-packaging-groups-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-packaging-groups-response common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-packaging-groups-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken")
                        (packaging-groups :initarg :packaging-groups :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfPackagingGroup|
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-packaging-groups-response-packaging-groups
                         :shape "__listOfPackagingGroup" :location
                         common-lisp:nil :location-name "packagingGroups"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-packaging-groups-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-packaging-groups-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-packaging-groups-response
                    'make-list-packaging-groups-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-packaging-groups-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-packaging-groups-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'packaging-groups))
      (common-lisp:list
       (common-lisp:cons "PackagingGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-packaging-groups-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-request-resource-arn
                         :shape "__string" :location "uri" :location-name
                         "resource-arn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor
                         struct-shape-list-tags-for-resource-response-tags
                         :shape "__mapOf__string" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:deftype manifest-layout () 'common-lisp:string)
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass mss-encryption common-lisp:nil
                       ((speke-key-provider :initarg :speke-key-provider
                         :initform
                         (common-lisp:error ":speke-key-provider is required")
                         :type
                         (common-lisp:or speke-key-provider common-lisp:null)
                         :accessor
                         struct-shape-mss-encryption-speke-key-provider :shape
                         "SpekeKeyProvider" :location common-lisp:nil
                         :location-name "spekeKeyProvider"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-mss-encryption
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'mss-encryption
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'mss-encryption 'make-mss-encryption))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input mss-encryption))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input mss-encryption))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'speke-key-provider))
      (common-lisp:list
       (common-lisp:cons "SpekeKeyProvider"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input mss-encryption))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass mss-manifest common-lisp:nil
                       ((manifest-name :initarg :manifest-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-mss-manifest-manifest-name :shape
                         "__string" :location common-lisp:nil :location-name
                         "manifestName")
                        (stream-selection :initarg :stream-selection :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-selection common-lisp:null)
                         :accessor struct-shape-mss-manifest-stream-selection
                         :shape "StreamSelection" :location common-lisp:nil
                         :location-name "streamSelection"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-mss-manifest
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'mss-manifest
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'mss-manifest 'make-mss-manifest))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input mss-manifest))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input mss-manifest))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'manifest-name))
      (common-lisp:list
       (common-lisp:cons "ManifestName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-selection))
      (common-lisp:list
       (common-lisp:cons "StreamSelection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input mss-manifest))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass mss-package common-lisp:nil
                       ((encryption :initarg :encryption :initform
                         common-lisp:nil :type
                         (common-lisp:or mss-encryption common-lisp:null)
                         :accessor struct-shape-mss-package-encryption :shape
                         "MssEncryption" :location common-lisp:nil
                         :location-name "encryption")
                        (mss-manifests :initarg :mss-manifests :initform
                         (common-lisp:error ":mss-manifests is required") :type
                         (common-lisp:or |__listOfMssManifest|
                                         common-lisp:null)
                         :accessor struct-shape-mss-package-mss-manifests
                         :shape "__listOfMssManifest" :location common-lisp:nil
                         :location-name "mssManifests")
                        (segment-duration-seconds :initarg
                         :segment-duration-seconds :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-mss-package-segment-duration-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "segmentDurationSeconds"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-mss-package
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'mss-package
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'mss-package 'make-mss-package))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input mss-package))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input mss-package))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption))
      (common-lisp:list
       (common-lisp:cons "Encryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mss-manifests))
      (common-lisp:list
       (common-lisp:cons "MssManifests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segment-duration-seconds))
      (common-lisp:list
       (common-lisp:cons "SegmentDurationSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input mss-package))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition not-found-exception
     (mediapackage-vod-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'not-found-exception 'not-found-exception-message)))
(common-lisp:progn
 (common-lisp:defclass packaging-configuration common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-packaging-configuration-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         "arn")
                        (cmaf-package :initarg :cmaf-package :initform
                         common-lisp:nil :type
                         (common-lisp:or cmaf-package common-lisp:null)
                         :accessor
                         struct-shape-packaging-configuration-cmaf-package
                         :shape "CmafPackage" :location common-lisp:nil
                         :location-name "cmafPackage")
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-packaging-configuration-created-at :shape
                         "__string" :location common-lisp:nil :location-name
                         "createdAt")
                        (dash-package :initarg :dash-package :initform
                         common-lisp:nil :type
                         (common-lisp:or dash-package common-lisp:null)
                         :accessor
                         struct-shape-packaging-configuration-dash-package
                         :shape "DashPackage" :location common-lisp:nil
                         :location-name "dashPackage")
                        (hls-package :initarg :hls-package :initform
                         common-lisp:nil :type
                         (common-lisp:or hls-package common-lisp:null)
                         :accessor
                         struct-shape-packaging-configuration-hls-package
                         :shape "HlsPackage" :location common-lisp:nil
                         :location-name "hlsPackage")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-packaging-configuration-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "id")
                        (mss-package :initarg :mss-package :initform
                         common-lisp:nil :type
                         (common-lisp:or mss-package common-lisp:null)
                         :accessor
                         struct-shape-packaging-configuration-mss-package
                         :shape "MssPackage" :location common-lisp:nil
                         :location-name "mssPackage")
                        (packaging-group-id :initarg :packaging-group-id
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-packaging-configuration-packaging-group-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "packagingGroupId")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-packaging-configuration-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-packaging-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'packaging-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'packaging-configuration 'make-packaging-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          packaging-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          packaging-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cmaf-package))
      (common-lisp:list
       (common-lisp:cons "CmafPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dash-package))
      (common-lisp:list
       (common-lisp:cons "DashPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-package))
      (common-lisp:list
       (common-lisp:cons "HlsPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mss-package))
      (common-lisp:list
       (common-lisp:cons "MssPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'packaging-group-id))
      (common-lisp:list
       (common-lisp:cons "PackagingGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          packaging-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass packaging-configuration-create-parameters
                       common-lisp:nil
                       ((cmaf-package :initarg :cmaf-package :initform
                         common-lisp:nil :type
                         (common-lisp:or cmaf-package common-lisp:null)
                         :accessor
                         struct-shape-packaging-configuration-create-parameters-cmaf-package
                         :shape "CmafPackage" :location common-lisp:nil
                         :location-name "cmafPackage")
                        (dash-package :initarg :dash-package :initform
                         common-lisp:nil :type
                         (common-lisp:or dash-package common-lisp:null)
                         :accessor
                         struct-shape-packaging-configuration-create-parameters-dash-package
                         :shape "DashPackage" :location common-lisp:nil
                         :location-name "dashPackage")
                        (hls-package :initarg :hls-package :initform
                         common-lisp:nil :type
                         (common-lisp:or hls-package common-lisp:null)
                         :accessor
                         struct-shape-packaging-configuration-create-parameters-hls-package
                         :shape "HlsPackage" :location common-lisp:nil
                         :location-name "hlsPackage")
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-packaging-configuration-create-parameters-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "id")
                        (mss-package :initarg :mss-package :initform
                         common-lisp:nil :type
                         (common-lisp:or mss-package common-lisp:null)
                         :accessor
                         struct-shape-packaging-configuration-create-parameters-mss-package
                         :shape "MssPackage" :location common-lisp:nil
                         :location-name "mssPackage")
                        (packaging-group-id :initarg :packaging-group-id
                         :initform
                         (common-lisp:error ":packaging-group-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-packaging-configuration-create-parameters-packaging-group-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "packagingGroupId")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-packaging-configuration-create-parameters-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-packaging-configuration-create-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'packaging-configuration-create-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'packaging-configuration-create-parameters
                    'make-packaging-configuration-create-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          packaging-configuration-create-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          packaging-configuration-create-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cmaf-package))
      (common-lisp:list
       (common-lisp:cons "CmafPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dash-package))
      (common-lisp:list
       (common-lisp:cons "DashPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-package))
      (common-lisp:list
       (common-lisp:cons "HlsPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mss-package))
      (common-lisp:list
       (common-lisp:cons "MssPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'packaging-group-id))
      (common-lisp:list
       (common-lisp:cons "PackagingGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          packaging-configuration-create-parameters))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass packaging-configuration-list common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-packaging-configuration-list-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken")
                        (packaging-configurations :initarg
                         :packaging-configurations :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOfPackagingConfiguration|
                                         common-lisp:null)
                         :accessor
                         struct-shape-packaging-configuration-list-packaging-configurations
                         :shape "__listOfPackagingConfiguration" :location
                         common-lisp:nil :location-name
                         "packagingConfigurations"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-packaging-configuration-list
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'packaging-configuration-list
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'packaging-configuration-list
                    'make-packaging-configuration-list))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          packaging-configuration-list))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          packaging-configuration-list))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'packaging-configurations))
      (common-lisp:list
       (common-lisp:cons "PackagingConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          packaging-configuration-list))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass packaging-group common-lisp:nil
                       ((approximate-asset-count :initarg
                         :approximate-asset-count :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-packaging-group-approximate-asset-count
                         :shape "__integer" :location common-lisp:nil
                         :location-name "approximateAssetCount")
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-packaging-group-arn :shape "__string"
                         :location common-lisp:nil :location-name "arn")
                        (authorization :initarg :authorization :initform
                         common-lisp:nil :type
                         (common-lisp:or authorization common-lisp:null)
                         :accessor struct-shape-packaging-group-authorization
                         :shape "Authorization" :location common-lisp:nil
                         :location-name "authorization")
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-packaging-group-created-at :shape
                         "__string" :location common-lisp:nil :location-name
                         "createdAt")
                        (domain-name :initarg :domain-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-packaging-group-domain-name :shape
                         "__string" :location common-lisp:nil :location-name
                         "domainName")
                        (egress-access-logs :initarg :egress-access-logs
                         :initform common-lisp:nil :type
                         (common-lisp:or egress-access-logs common-lisp:null)
                         :accessor
                         struct-shape-packaging-group-egress-access-logs :shape
                         "EgressAccessLogs" :location common-lisp:nil
                         :location-name "egressAccessLogs")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-packaging-group-id :shape "__string"
                         :location common-lisp:nil :location-name "id")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-packaging-group-tags :shape "Tags"
                         :location common-lisp:nil :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-packaging-group
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'packaging-group
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'packaging-group 'make-packaging-group))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input packaging-group))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input packaging-group))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'approximate-asset-count))
      (common-lisp:list
       (common-lisp:cons "ApproximateAssetCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization))
      (common-lisp:list
       (common-lisp:cons "Authorization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'egress-access-logs))
      (common-lisp:list
       (common-lisp:cons "EgressAccessLogs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input packaging-group))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass packaging-group-create-parameters common-lisp:nil
                       ((authorization :initarg :authorization :initform
                         common-lisp:nil :type
                         (common-lisp:or authorization common-lisp:null)
                         :accessor
                         struct-shape-packaging-group-create-parameters-authorization
                         :shape "Authorization" :location common-lisp:nil
                         :location-name "authorization")
                        (egress-access-logs :initarg :egress-access-logs
                         :initform common-lisp:nil :type
                         (common-lisp:or egress-access-logs common-lisp:null)
                         :accessor
                         struct-shape-packaging-group-create-parameters-egress-access-logs
                         :shape "EgressAccessLogs" :location common-lisp:nil
                         :location-name "egressAccessLogs")
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-packaging-group-create-parameters-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "id")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-packaging-group-create-parameters-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-packaging-group-create-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'packaging-group-create-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'packaging-group-create-parameters
                    'make-packaging-group-create-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          packaging-group-create-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          packaging-group-create-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization))
      (common-lisp:list
       (common-lisp:cons "Authorization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'egress-access-logs))
      (common-lisp:list
       (common-lisp:cons "EgressAccessLogs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          packaging-group-create-parameters))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass packaging-group-list common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-packaging-group-list-next-token :shape
                         "__string" :location common-lisp:nil :location-name
                         "nextToken")
                        (packaging-groups :initarg :packaging-groups :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfPackagingGroup|
                                         common-lisp:null)
                         :accessor
                         struct-shape-packaging-group-list-packaging-groups
                         :shape "__listOfPackagingGroup" :location
                         common-lisp:nil :location-name "packagingGroups"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-packaging-group-list
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'packaging-group-list
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'packaging-group-list 'make-packaging-group-list))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input packaging-group-list))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input packaging-group-list))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'packaging-groups))
      (common-lisp:list
       (common-lisp:cons "PackagingGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input packaging-group-list))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass packaging-group-update-parameters common-lisp:nil
                       ((authorization :initarg :authorization :initform
                         common-lisp:nil :type
                         (common-lisp:or authorization common-lisp:null)
                         :accessor
                         struct-shape-packaging-group-update-parameters-authorization
                         :shape "Authorization" :location common-lisp:nil
                         :location-name "authorization"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-packaging-group-update-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'packaging-group-update-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'packaging-group-update-parameters
                    'make-packaging-group-update-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          packaging-group-update-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          packaging-group-update-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization))
      (common-lisp:list
       (common-lisp:cons "Authorization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          packaging-group-update-parameters))
   common-lisp:nil))
(common-lisp:deftype preset-speke20audio () 'common-lisp:string)
(common-lisp:deftype preset-speke20video () 'common-lisp:string)
(common-lisp:deftype profile () 'common-lisp:string)
(common-lisp:deftype scte-markers-source () 'common-lisp:string)
(common-lisp:deftype segment-template-format () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition service-unavailable-exception
     (mediapackage-vod-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-unavailable-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-unavailable-exception
                    'service-unavailable-exception-message)))
(common-lisp:progn
 (common-lisp:defclass speke-key-provider common-lisp:nil
                       ((encryption-contract-configuration :initarg
                         :encryption-contract-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or encryption-contract-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-speke-key-provider-encryption-contract-configuration
                         :shape "EncryptionContractConfiguration" :location
                         common-lisp:nil :location-name
                         "encryptionContractConfiguration")
                        (role-arn :initarg :role-arn :initform
                         (common-lisp:error ":role-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-speke-key-provider-role-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         "roleArn")
                        (system-ids :initarg :system-ids :initform
                         (common-lisp:error ":system-ids is required") :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-speke-key-provider-system-ids
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "systemIds")
                        (url :initarg :url :initform
                         (common-lisp:error ":url is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-speke-key-provider-url :shape "__string"
                         :location common-lisp:nil :location-name "url"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-speke-key-provider
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'speke-key-provider
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'speke-key-provider 'make-speke-key-provider))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input speke-key-provider))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input speke-key-provider))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'encryption-contract-configuration))
      (common-lisp:list
       (common-lisp:cons "EncryptionContractConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'system-ids))
      (common-lisp:list
       (common-lisp:cons "SystemIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input speke-key-provider))
   common-lisp:nil))
(common-lisp:deftype stream-order () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass stream-selection common-lisp:nil
                       ((max-video-bits-per-second :initarg
                         :max-video-bits-per-second :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-stream-selection-max-video-bits-per-second
                         :shape "__integer" :location common-lisp:nil
                         :location-name "maxVideoBitsPerSecond")
                        (min-video-bits-per-second :initarg
                         :min-video-bits-per-second :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-stream-selection-min-video-bits-per-second
                         :shape "__integer" :location common-lisp:nil
                         :location-name "minVideoBitsPerSecond")
                        (stream-order :initarg :stream-order :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-order common-lisp:null)
                         :accessor struct-shape-stream-selection-stream-order
                         :shape "StreamOrder" :location common-lisp:nil
                         :location-name "streamOrder"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stream-selection
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'stream-selection
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stream-selection 'make-stream-selection))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stream-selection))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stream-selection))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'max-video-bits-per-second))
      (common-lisp:list
       (common-lisp:cons "MaxVideoBitsPerSecond"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'min-video-bits-per-second))
      (common-lisp:list
       (common-lisp:cons "MinVideoBitsPerSecond"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-order))
      (common-lisp:list
       (common-lisp:cons "StreamOrder"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stream-selection))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-tag-resource-request-resource-arn :shape
                         "__string" :location "uri" :location-name
                         "resource-arn")
                        (tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor struct-shape-tag-resource-request-tags
                         :shape "__mapOf__string" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype tags () 'common-lisp:hash-table)
 (common-lisp:defun make-tags (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass tags-model common-lisp:nil
                       ((tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor struct-shape-tags-model-tags :shape
                         "__mapOf__string" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tags-model
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tags-model
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'tags-model 'make-tags-model))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tags-model))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tags-model))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tags-model))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition too-many-requests-exception
     (mediapackage-vod-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       too-many-requests-exception-message)))
 (common-lisp:export
  (common-lisp:list 'too-many-requests-exception
                    'too-many-requests-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition unprocessable-entity-exception
     (mediapackage-vod-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       unprocessable-entity-exception-message)))
 (common-lisp:export
  (common-lisp:list 'unprocessable-entity-exception
                    'unprocessable-entity-exception-message)))
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-untag-resource-request-resource-arn
                         :shape "__string" :location "uri" :location-name
                         "resource-arn")
                        (tag-keys :initarg :tag-keys :initform
                         (common-lisp:error ":tag-keys is required") :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-untag-resource-request-tag-keys
                         :shape "__listOf__string" :location "querystring"
                         :location-name "tagKeys"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-packaging-group-request common-lisp:nil
                       ((authorization :initarg :authorization :initform
                         common-lisp:nil :type
                         (common-lisp:or authorization common-lisp:null)
                         :accessor
                         struct-shape-update-packaging-group-request-authorization
                         :shape "Authorization" :location common-lisp:nil
                         :location-name "authorization")
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-packaging-group-request-id :shape
                         "__string" :location "uri" :location-name "id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-packaging-group-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-packaging-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-packaging-group-request
                    'make-update-packaging-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-packaging-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-packaging-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization))
      (common-lisp:list
       (common-lisp:cons "Authorization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-packaging-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-packaging-group-response common-lisp:nil
                       ((approximate-asset-count :initarg
                         :approximate-asset-count :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-update-packaging-group-response-approximate-asset-count
                         :shape "__integer" :location common-lisp:nil
                         :location-name "approximateAssetCount")
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-packaging-group-response-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name "arn")
                        (authorization :initarg :authorization :initform
                         common-lisp:nil :type
                         (common-lisp:or authorization common-lisp:null)
                         :accessor
                         struct-shape-update-packaging-group-response-authorization
                         :shape "Authorization" :location common-lisp:nil
                         :location-name "authorization")
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-packaging-group-response-created-at
                         :shape "__string" :location common-lisp:nil
                         :location-name "createdAt")
                        (domain-name :initarg :domain-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-packaging-group-response-domain-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "domainName")
                        (egress-access-logs :initarg :egress-access-logs
                         :initform common-lisp:nil :type
                         (common-lisp:or egress-access-logs common-lisp:null)
                         :accessor
                         struct-shape-update-packaging-group-response-egress-access-logs
                         :shape "EgressAccessLogs" :location common-lisp:nil
                         :location-name "egressAccessLogs")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-packaging-group-response-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "id")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-update-packaging-group-response-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-packaging-group-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-packaging-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-packaging-group-response
                    'make-update-packaging-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-packaging-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-packaging-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'approximate-asset-count))
      (common-lisp:list
       (common-lisp:cons "ApproximateAssetCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization))
      (common-lisp:list
       (common-lisp:cons "Authorization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'egress-access-logs))
      (common-lisp:list
       (common-lisp:cons "EgressAccessLogs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-packaging-group-response))
   common-lisp:nil))
(common-lisp:deftype |__PeriodTriggersElement| () 'common-lisp:string)
(common-lisp:deftype |__boolean| () 'common-lisp:boolean)
(common-lisp:deftype |__double| () 'common-lisp:double-float)
(common-lisp:deftype |__integer| () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype |__listOfAssetShallow| ()
   '(trivial-types:proper-list asset-shallow))
 (common-lisp:defun make-__listofassetshallow
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list asset-shallow))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfDashManifest| ()
   '(trivial-types:proper-list dash-manifest))
 (common-lisp:defun make-__listofdashmanifest
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list dash-manifest))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfEgressEndpoint| ()
   '(trivial-types:proper-list egress-endpoint))
 (common-lisp:defun make-__listofegressendpoint
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list egress-endpoint))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfHlsManifest| ()
   '(trivial-types:proper-list hls-manifest))
 (common-lisp:defun make-__listofhlsmanifest
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list hls-manifest))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfMssManifest| ()
   '(trivial-types:proper-list mss-manifest))
 (common-lisp:defun make-__listofmssmanifest
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list mss-manifest))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfPackagingConfiguration| ()
   '(trivial-types:proper-list packaging-configuration))
 (common-lisp:defun make-__listofpackagingconfiguration
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list packaging-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfPackagingGroup| ()
   '(trivial-types:proper-list packaging-group))
 (common-lisp:defun make-__listofpackaginggroup
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list packaging-group))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOf__PeriodTriggersElement| ()
   '(trivial-types:proper-list |__PeriodTriggersElement|))
 (common-lisp:defun make-__listof__periodtriggerselement
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            |__PeriodTriggersElement|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOf__string| ()
   '(trivial-types:proper-list |__string|))
 (common-lisp:defun make-__listof__string
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__string|))
   aws-sdk/generator/shape::members))
(common-lisp:deftype |__long| () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype |__mapOf__string| () 'common-lisp:hash-table)
 (common-lisp:defun make-__mapof__string (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype |__string| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun configure-logs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key egress-access-logs id)
   (common-lisp:declare (common-lisp:ignorable egress-access-logs id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-configure-logs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'mediapackage-vod-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/packaging_groups/~A/configure_logs"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input 'id))))
        "ConfigureLogs"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'configure-logs))
(common-lisp:progn
 (common-lisp:defun create-asset
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id packaging-group-id resource-id
                     source-arn source-role-arn tags)
   (common-lisp:declare
    (common-lisp:ignorable id packaging-group-id resource-id source-arn
     source-role-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-asset-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'mediapackage-vod-request aws-sdk/generator/operation::input "POST"
        "/assets" "CreateAsset"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-asset))
(common-lisp:progn
 (common-lisp:defun create-packaging-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cmaf-package dash-package hls-package id
                     mss-package packaging-group-id tags)
   (common-lisp:declare
    (common-lisp:ignorable cmaf-package dash-package hls-package id mss-package
     packaging-group-id tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-packaging-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'mediapackage-vod-request aws-sdk/generator/operation::input "POST"
        "/packaging_configurations" "CreatePackagingConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-packaging-configuration))
(common-lisp:progn
 (common-lisp:defun create-packaging-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authorization egress-access-logs id tags)
   (common-lisp:declare
    (common-lisp:ignorable authorization egress-access-logs id tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-packaging-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'mediapackage-vod-request aws-sdk/generator/operation::input "POST"
        "/packaging_groups" "CreatePackagingGroup"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-packaging-group))
(common-lisp:progn
 (common-lisp:defun delete-asset
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-asset-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'mediapackage-vod-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/assets/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input 'id))))
        "DeleteAsset"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-asset))
(common-lisp:progn
 (common-lisp:defun delete-packaging-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-packaging-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'mediapackage-vod-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/packaging_configurations/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input 'id))))
        "DeletePackagingConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-packaging-configuration))
(common-lisp:progn
 (common-lisp:defun delete-packaging-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-packaging-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'mediapackage-vod-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/packaging_groups/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input 'id))))
        "DeletePackagingGroup"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-packaging-group))
(common-lisp:progn
 (common-lisp:defun describe-asset
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-asset-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'mediapackage-vod-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/assets/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input 'id))))
        "DescribeAsset"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-asset))
(common-lisp:progn
 (common-lisp:defun describe-packaging-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-packaging-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'mediapackage-vod-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/packaging_configurations/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input 'id))))
        "DescribePackagingConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-packaging-configuration))
(common-lisp:progn
 (common-lisp:defun describe-packaging-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-packaging-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'mediapackage-vod-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/packaging_groups/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input 'id))))
        "DescribePackagingGroup"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-packaging-group))
(common-lisp:progn
 (common-lisp:defun list-assets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token
                     packaging-group-id)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token packaging-group-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-assets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'mediapackage-vod-request aws-sdk/generator/operation::input "GET"
        "/assets" "ListAssets"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-assets))
(common-lisp:progn
 (common-lisp:defun list-packaging-configurations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token
                     packaging-group-id)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token packaging-group-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-packaging-configurations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'mediapackage-vod-request aws-sdk/generator/operation::input "GET"
        "/packaging_configurations" "ListPackagingConfigurations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-packaging-configurations))
(common-lisp:progn
 (common-lisp:defun list-packaging-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-packaging-groups-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'mediapackage-vod-request aws-sdk/generator/operation::input "GET"
        "/packaging_groups" "ListPackagingGroups"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-packaging-groups))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'mediapackage-vod-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'mediapackage-vod-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "TagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'mediapackage-vod-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-packaging-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authorization id)
   (common-lisp:declare (common-lisp:ignorable authorization id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-packaging-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'mediapackage-vod-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/packaging_groups/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input 'id))))
        "UpdatePackagingGroup"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-packaging-group))
