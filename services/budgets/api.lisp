;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(uiop/package:define-package #:aws-sdk/services/budgets/api (:use)
                             (:nicknames #:aws/budgets)
                             (:import-from #:aws-sdk/generator/shape)
                             (:import-from #:aws-sdk/generator/operation)
                             (:import-from #:aws-sdk/api)
                             (:import-from #:aws-sdk/request)
                             (:import-from #:aws-sdk/json-request)
                             (:import-from #:aws-sdk/rest-json-request)
                             (:import-from #:aws-sdk/rest-xml-request)
                             (:import-from #:aws-sdk/query-request)
                             (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/budgets/api)
(common-lisp:progn
 (common-lisp:define-condition budgets-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'budgets-error))
(common-lisp:progn
 (common-lisp:defclass budgets-request (aws-sdk/json-request:json-request)
                       common-lisp:nil
                       (:default-initargs :service "budgets" :api-version
                        "2016-10-20" :host-prefix "budgets" :signing-name
                        common-lisp:nil :global-host common-lisp:nil
                        :target-prefix "AWSBudgetServiceGateway" :json-version
                        "1.1"))
 (common-lisp:export 'budgets-request))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("CreationLimitExceededException" . creation-limit-exceeded-exception)
    ("DuplicateRecordException" . duplicate-record-exception)
    ("ExpiredNextTokenException" . expired-next-token-exception)
    ("InternalErrorException" . internal-error-exception)
    ("InvalidNextTokenException" . invalid-next-token-exception)
    ("InvalidParameterException" . invalid-parameter-exception)
    ("NotFoundException" . not-found-exception)
    ("ResourceLockedException" . resource-locked-exception)
    ("ThrottlingException" . throttling-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (budgets-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:deftype account-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass action common-lisp:nil
                       ((action-id :initarg :action-id :initform
                         (common-lisp:error ":action-id is required") :type
                         (common-lisp:or action-id common-lisp:null) :accessor
                         struct-shape-action-action-id :shape "ActionId"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (budget-name :initarg :budget-name :initform
                         (common-lisp:error ":budget-name is required") :type
                         (common-lisp:or budget-name common-lisp:null)
                         :accessor struct-shape-action-budget-name :shape
                         "BudgetName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (notification-type :initarg :notification-type
                         :initform
                         (common-lisp:error ":notification-type is required")
                         :type
                         (common-lisp:or notification-type common-lisp:null)
                         :accessor struct-shape-action-notification-type :shape
                         "NotificationType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (action-type :initarg :action-type :initform
                         (common-lisp:error ":action-type is required") :type
                         (common-lisp:or action-type common-lisp:null)
                         :accessor struct-shape-action-action-type :shape
                         "ActionType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (action-threshold :initarg :action-threshold :initform
                         (common-lisp:error ":action-threshold is required")
                         :type
                         (common-lisp:or action-threshold common-lisp:null)
                         :accessor struct-shape-action-action-threshold :shape
                         "ActionThreshold" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (definition :initarg :definition :initform
                         (common-lisp:error ":definition is required") :type
                         (common-lisp:or definition common-lisp:null) :accessor
                         struct-shape-action-definition :shape "Definition"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (execution-role-arn :initarg :execution-role-arn
                         :initform
                         (common-lisp:error ":execution-role-arn is required")
                         :type (common-lisp:or role-arn common-lisp:null)
                         :accessor struct-shape-action-execution-role-arn
                         :shape "RoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (approval-model :initarg :approval-model :initform
                         (common-lisp:error ":approval-model is required")
                         :type (common-lisp:or approval-model common-lisp:null)
                         :accessor struct-shape-action-approval-model :shape
                         "ApprovalModel" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform
                         (common-lisp:error ":status is required") :type
                         (common-lisp:or action-status common-lisp:null)
                         :accessor struct-shape-action-status :shape
                         "ActionStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (subscribers :initarg :subscribers :initform
                         (common-lisp:error ":subscribers is required") :type
                         (common-lisp:or subscribers common-lisp:null)
                         :accessor struct-shape-action-subscribers :shape
                         "Subscribers" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-action
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'action
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'action 'make-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action-id))
      (common-lisp:list
       (common-lisp:cons "ActionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'budget-name))
      (common-lisp:list
       (common-lisp:cons "BudgetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'notification-type))
      (common-lisp:list
       (common-lisp:cons "NotificationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action-type))
      (common-lisp:list
       (common-lisp:cons "ActionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action-threshold))
      (common-lisp:list
       (common-lisp:cons "ActionThreshold"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'definition))
      (common-lisp:list
       (common-lisp:cons "Definition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'execution-role-arn))
      (common-lisp:list
       (common-lisp:cons "ExecutionRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'approval-model))
      (common-lisp:list
       (common-lisp:cons "ApprovalModel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscribers))
      (common-lisp:list
       (common-lisp:cons "Subscribers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input action))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype action-histories ()
   '(trivial-types:proper-list action-history))
 (common-lisp:defun make-action-histories
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list action-history))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass action-history common-lisp:nil
                       ((timestamp :initarg :timestamp :initform
                         (common-lisp:error ":timestamp is required") :type
                         (common-lisp:or generic-timestamp common-lisp:null)
                         :accessor struct-shape-action-history-timestamp :shape
                         "GenericTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform
                         (common-lisp:error ":status is required") :type
                         (common-lisp:or action-status common-lisp:null)
                         :accessor struct-shape-action-history-status :shape
                         "ActionStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-type :initarg :event-type :initform
                         (common-lisp:error ":event-type is required") :type
                         (common-lisp:or event-type common-lisp:null) :accessor
                         struct-shape-action-history-event-type :shape
                         "EventType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (action-history-details :initarg
                         :action-history-details :initform
                         (common-lisp:error
                          ":action-history-details is required")
                         :type
                         (common-lisp:or action-history-details
                                         common-lisp:null)
                         :accessor
                         struct-shape-action-history-action-history-details
                         :shape "ActionHistoryDetails" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-action-history
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'action-history
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'action-history 'make-action-history))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input action-history))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input action-history))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamp))
      (common-lisp:list
       (common-lisp:cons "Timestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-type))
      (common-lisp:list
       (common-lisp:cons "EventType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'action-history-details))
      (common-lisp:list
       (common-lisp:cons "ActionHistoryDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input action-history))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass action-history-details common-lisp:nil
                       ((message :initarg :message :initform
                         (common-lisp:error ":message is required") :type
                         (common-lisp:or generic-string common-lisp:null)
                         :accessor struct-shape-action-history-details-message
                         :shape "GenericString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (action :initarg :action :initform
                         (common-lisp:error ":action is required") :type
                         (common-lisp:or action common-lisp:null) :accessor
                         struct-shape-action-history-details-action :shape
                         "Action" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-action-history-details
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'action-history-details
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'action-history-details 'make-action-history-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          action-history-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          action-history-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "Action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          action-history-details))
   common-lisp:nil))
(common-lisp:deftype action-id () 'common-lisp:string)
(common-lisp:deftype action-status () 'common-lisp:string)
(common-lisp:deftype action-sub-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass action-threshold common-lisp:nil
                       ((action-threshold-value :initarg
                         :action-threshold-value :initform
                         (common-lisp:error
                          ":action-threshold-value is required")
                         :type
                         (common-lisp:or notification-threshold
                                         common-lisp:null)
                         :accessor
                         struct-shape-action-threshold-action-threshold-value
                         :shape "NotificationThreshold" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (action-threshold-type :initarg :action-threshold-type
                         :initform
                         (common-lisp:error
                          ":action-threshold-type is required")
                         :type (common-lisp:or threshold-type common-lisp:null)
                         :accessor
                         struct-shape-action-threshold-action-threshold-type
                         :shape "ThresholdType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-action-threshold
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'action-threshold
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'action-threshold 'make-action-threshold))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input action-threshold))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input action-threshold))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'action-threshold-value))
      (common-lisp:list
       (common-lisp:cons "ActionThresholdValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'action-threshold-type))
      (common-lisp:list
       (common-lisp:cons "ActionThresholdType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input action-threshold))
   common-lisp:nil))
(common-lisp:deftype action-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype actions () '(trivial-types:proper-list action))
 (common-lisp:defun make-actions
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list action))
   aws-sdk/generator/shape::members))
(common-lisp:deftype adjustment-period () 'common-lisp:integer)
(common-lisp:deftype approval-model () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass auto-adjust-data common-lisp:nil
                       ((auto-adjust-type :initarg :auto-adjust-type :initform
                         (common-lisp:error ":auto-adjust-type is required")
                         :type
                         (common-lisp:or auto-adjust-type common-lisp:null)
                         :accessor
                         struct-shape-auto-adjust-data-auto-adjust-type :shape
                         "AutoAdjustType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (historical-options :initarg :historical-options
                         :initform common-lisp:nil :type
                         (common-lisp:or historical-options common-lisp:null)
                         :accessor
                         struct-shape-auto-adjust-data-historical-options
                         :shape "HistoricalOptions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-auto-adjust-time :initarg :last-auto-adjust-time
                         :initform common-lisp:nil :type
                         (common-lisp:or generic-timestamp common-lisp:null)
                         :accessor
                         struct-shape-auto-adjust-data-last-auto-adjust-time
                         :shape "GenericTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-auto-adjust-data
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'auto-adjust-data
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'auto-adjust-data 'make-auto-adjust-data))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input auto-adjust-data))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input auto-adjust-data))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-adjust-type))
      (common-lisp:list
       (common-lisp:cons "AutoAdjustType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'historical-options))
      (common-lisp:list
       (common-lisp:cons "HistoricalOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-auto-adjust-time))
      (common-lisp:list
       (common-lisp:cons "LastAutoAdjustTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input auto-adjust-data))
   common-lisp:nil))
(common-lisp:deftype auto-adjust-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass budget common-lisp:nil
                       ((budget-name :initarg :budget-name :initform
                         (common-lisp:error ":budget-name is required") :type
                         (common-lisp:or budget-name common-lisp:null)
                         :accessor struct-shape-budget-budget-name :shape
                         "BudgetName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (budget-limit :initarg :budget-limit :initform
                         common-lisp:nil :type
                         (common-lisp:or spend common-lisp:null) :accessor
                         struct-shape-budget-budget-limit :shape "Spend"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (planned-budget-limits :initarg :planned-budget-limits
                         :initform common-lisp:nil :type
                         (common-lisp:or planned-budget-limits
                                         common-lisp:null)
                         :accessor struct-shape-budget-planned-budget-limits
                         :shape "PlannedBudgetLimits" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cost-filters :initarg :cost-filters :initform
                         common-lisp:nil :type
                         (common-lisp:or cost-filters common-lisp:null)
                         :accessor struct-shape-budget-cost-filters :shape
                         "CostFilters" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (cost-types :initarg :cost-types :initform
                         common-lisp:nil :type
                         (common-lisp:or cost-types common-lisp:null) :accessor
                         struct-shape-budget-cost-types :shape "CostTypes"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (time-unit :initarg :time-unit :initform
                         (common-lisp:error ":time-unit is required") :type
                         (common-lisp:or time-unit common-lisp:null) :accessor
                         struct-shape-budget-time-unit :shape "TimeUnit"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (time-period :initarg :time-period :initform
                         common-lisp:nil :type
                         (common-lisp:or time-period common-lisp:null)
                         :accessor struct-shape-budget-time-period :shape
                         "TimePeriod" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (calculated-spend :initarg :calculated-spend :initform
                         common-lisp:nil :type
                         (common-lisp:or calculated-spend common-lisp:null)
                         :accessor struct-shape-budget-calculated-spend :shape
                         "CalculatedSpend" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (budget-type :initarg :budget-type :initform
                         (common-lisp:error ":budget-type is required") :type
                         (common-lisp:or budget-type common-lisp:null)
                         :accessor struct-shape-budget-budget-type :shape
                         "BudgetType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-updated-time :initarg :last-updated-time
                         :initform common-lisp:nil :type
                         (common-lisp:or generic-timestamp common-lisp:null)
                         :accessor struct-shape-budget-last-updated-time :shape
                         "GenericTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (auto-adjust-data :initarg :auto-adjust-data :initform
                         common-lisp:nil :type
                         (common-lisp:or auto-adjust-data common-lisp:null)
                         :accessor struct-shape-budget-auto-adjust-data :shape
                         "AutoAdjustData" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-budget
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'budget
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'budget 'make-budget))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input budget))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input budget))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'budget-name))
      (common-lisp:list
       (common-lisp:cons "BudgetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'budget-limit))
      (common-lisp:list
       (common-lisp:cons "BudgetLimit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'planned-budget-limits))
      (common-lisp:list
       (common-lisp:cons "PlannedBudgetLimits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cost-filters))
      (common-lisp:list
       (common-lisp:cons "CostFilters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cost-types))
      (common-lisp:list
       (common-lisp:cons "CostTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-unit))
      (common-lisp:list
       (common-lisp:cons "TimeUnit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-period))
      (common-lisp:list
       (common-lisp:cons "TimePeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'calculated-spend))
      (common-lisp:list
       (common-lisp:cons "CalculatedSpend"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'budget-type))
      (common-lisp:list
       (common-lisp:cons "BudgetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-time))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-adjust-data))
      (common-lisp:list
       (common-lisp:cons "AutoAdjustData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input budget))
   common-lisp:nil))
(common-lisp:deftype budget-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass budget-notifications-for-account common-lisp:nil
                       ((notifications :initarg :notifications :initform
                         common-lisp:nil :type
                         (common-lisp:or notifications common-lisp:null)
                         :accessor
                         struct-shape-budget-notifications-for-account-notifications
                         :shape "Notifications" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (budget-name :initarg :budget-name :initform
                         common-lisp:nil :type
                         (common-lisp:or budget-name common-lisp:null)
                         :accessor
                         struct-shape-budget-notifications-for-account-budget-name
                         :shape "BudgetName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-budget-notifications-for-account
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'budget-notifications-for-account
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'budget-notifications-for-account
                    'make-budget-notifications-for-account))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          budget-notifications-for-account))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          budget-notifications-for-account))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'notifications))
      (common-lisp:list
       (common-lisp:cons "Notifications"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'budget-name))
      (common-lisp:list
       (common-lisp:cons "BudgetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          budget-notifications-for-account))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype budget-notifications-for-account-list ()
   '(trivial-types:proper-list budget-notifications-for-account))
 (common-lisp:defun make-budget-notifications-for-account-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            budget-notifications-for-account))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass budget-performance-history common-lisp:nil
                       ((budget-name :initarg :budget-name :initform
                         common-lisp:nil :type
                         (common-lisp:or budget-name common-lisp:null)
                         :accessor
                         struct-shape-budget-performance-history-budget-name
                         :shape "BudgetName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (budget-type :initarg :budget-type :initform
                         common-lisp:nil :type
                         (common-lisp:or budget-type common-lisp:null)
                         :accessor
                         struct-shape-budget-performance-history-budget-type
                         :shape "BudgetType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cost-filters :initarg :cost-filters :initform
                         common-lisp:nil :type
                         (common-lisp:or cost-filters common-lisp:null)
                         :accessor
                         struct-shape-budget-performance-history-cost-filters
                         :shape "CostFilters" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cost-types :initarg :cost-types :initform
                         common-lisp:nil :type
                         (common-lisp:or cost-types common-lisp:null) :accessor
                         struct-shape-budget-performance-history-cost-types
                         :shape "CostTypes" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (time-unit :initarg :time-unit :initform
                         common-lisp:nil :type
                         (common-lisp:or time-unit common-lisp:null) :accessor
                         struct-shape-budget-performance-history-time-unit
                         :shape "TimeUnit" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (budgeted-and-actual-amounts-list :initarg
                         :budgeted-and-actual-amounts-list :initform
                         common-lisp:nil :type
                         (common-lisp:or budgeted-and-actual-amounts-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-budget-performance-history-budgeted-and-actual-amounts-list
                         :shape "BudgetedAndActualAmountsList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-budget-performance-history
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'budget-performance-history
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'budget-performance-history
                    'make-budget-performance-history))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          budget-performance-history))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          budget-performance-history))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'budget-name))
      (common-lisp:list
       (common-lisp:cons "BudgetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'budget-type))
      (common-lisp:list
       (common-lisp:cons "BudgetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cost-filters))
      (common-lisp:list
       (common-lisp:cons "CostFilters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cost-types))
      (common-lisp:list
       (common-lisp:cons "CostTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-unit))
      (common-lisp:list
       (common-lisp:cons "TimeUnit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'budgeted-and-actual-amounts-list))
      (common-lisp:list
       (common-lisp:cons "BudgetedAndActualAmountsList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          budget-performance-history))
   common-lisp:nil))
(common-lisp:deftype budget-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass budgeted-and-actual-amounts common-lisp:nil
                       ((budgeted-amount :initarg :budgeted-amount :initform
                         common-lisp:nil :type
                         (common-lisp:or spend common-lisp:null) :accessor
                         struct-shape-budgeted-and-actual-amounts-budgeted-amount
                         :shape "Spend" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (actual-amount :initarg :actual-amount :initform
                         common-lisp:nil :type
                         (common-lisp:or spend common-lisp:null) :accessor
                         struct-shape-budgeted-and-actual-amounts-actual-amount
                         :shape "Spend" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (time-period :initarg :time-period :initform
                         common-lisp:nil :type
                         (common-lisp:or time-period common-lisp:null)
                         :accessor
                         struct-shape-budgeted-and-actual-amounts-time-period
                         :shape "TimePeriod" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-budgeted-and-actual-amounts
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'budgeted-and-actual-amounts
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'budgeted-and-actual-amounts
                    'make-budgeted-and-actual-amounts))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          budgeted-and-actual-amounts))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          budgeted-and-actual-amounts))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'budgeted-amount))
      (common-lisp:list
       (common-lisp:cons "BudgetedAmount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'actual-amount))
      (common-lisp:list
       (common-lisp:cons "ActualAmount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-period))
      (common-lisp:list
       (common-lisp:cons "TimePeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          budgeted-and-actual-amounts))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype budgeted-and-actual-amounts-list ()
   '(trivial-types:proper-list budgeted-and-actual-amounts))
 (common-lisp:defun make-budgeted-and-actual-amounts-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            budgeted-and-actual-amounts))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype budgets () '(trivial-types:proper-list budget))
 (common-lisp:defun make-budgets
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list budget))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass calculated-spend common-lisp:nil
                       ((actual-spend :initarg :actual-spend :initform
                         (common-lisp:error ":actual-spend is required") :type
                         (common-lisp:or spend common-lisp:null) :accessor
                         struct-shape-calculated-spend-actual-spend :shape
                         "Spend" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (forecasted-spend :initarg :forecasted-spend :initform
                         common-lisp:nil :type
                         (common-lisp:or spend common-lisp:null) :accessor
                         struct-shape-calculated-spend-forecasted-spend :shape
                         "Spend" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-calculated-spend
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'calculated-spend
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'calculated-spend 'make-calculated-spend))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input calculated-spend))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input calculated-spend))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'actual-spend))
      (common-lisp:list
       (common-lisp:cons "ActualSpend"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'forecasted-spend))
      (common-lisp:list
       (common-lisp:cons "ForecastedSpend"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input calculated-spend))
   common-lisp:nil))
(common-lisp:deftype comparison-operator () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype cost-filters () 'common-lisp:hash-table)
 (common-lisp:defun make-cost-filters (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass cost-types common-lisp:nil
                       ((include-tax :initarg :include-tax :initform
                         common-lisp:nil :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor struct-shape-cost-types-include-tax :shape
                         "NullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (include-subscription :initarg :include-subscription
                         :initform common-lisp:nil :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor struct-shape-cost-types-include-subscription
                         :shape "NullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (use-blended :initarg :use-blended :initform
                         common-lisp:nil :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor struct-shape-cost-types-use-blended :shape
                         "NullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (include-refund :initarg :include-refund :initform
                         common-lisp:nil :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor struct-shape-cost-types-include-refund
                         :shape "NullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (include-credit :initarg :include-credit :initform
                         common-lisp:nil :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor struct-shape-cost-types-include-credit
                         :shape "NullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (include-upfront :initarg :include-upfront :initform
                         common-lisp:nil :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor struct-shape-cost-types-include-upfront
                         :shape "NullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (include-recurring :initarg :include-recurring
                         :initform common-lisp:nil :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor struct-shape-cost-types-include-recurring
                         :shape "NullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (include-other-subscription :initarg
                         :include-other-subscription :initform common-lisp:nil
                         :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor
                         struct-shape-cost-types-include-other-subscription
                         :shape "NullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (include-support :initarg :include-support :initform
                         common-lisp:nil :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor struct-shape-cost-types-include-support
                         :shape "NullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (include-discount :initarg :include-discount :initform
                         common-lisp:nil :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor struct-shape-cost-types-include-discount
                         :shape "NullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (use-amortized :initarg :use-amortized :initform
                         common-lisp:nil :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor struct-shape-cost-types-use-amortized :shape
                         "NullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-cost-types
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'cost-types
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'cost-types 'make-cost-types))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input cost-types))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input cost-types))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'include-tax))
      (common-lisp:list
       (common-lisp:cons "IncludeTax"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-subscription))
      (common-lisp:list
       (common-lisp:cons "IncludeSubscription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'use-blended))
      (common-lisp:list
       (common-lisp:cons "UseBlended"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'include-refund))
      (common-lisp:list
       (common-lisp:cons "IncludeRefund"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'include-credit))
      (common-lisp:list
       (common-lisp:cons "IncludeCredit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'include-upfront))
      (common-lisp:list
       (common-lisp:cons "IncludeUpfront"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'include-recurring))
      (common-lisp:list
       (common-lisp:cons "IncludeRecurring"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-other-subscription))
      (common-lisp:list
       (common-lisp:cons "IncludeOtherSubscription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'include-support))
      (common-lisp:list
       (common-lisp:cons "IncludeSupport"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'include-discount))
      (common-lisp:list
       (common-lisp:cons "IncludeDiscount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'use-amortized))
      (common-lisp:list
       (common-lisp:cons "UseAmortized"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input cost-types))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-budget-action-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-create-budget-action-request-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (budget-name :initarg :budget-name :initform
                         (common-lisp:error ":budget-name is required") :type
                         (common-lisp:or budget-name common-lisp:null)
                         :accessor
                         struct-shape-create-budget-action-request-budget-name
                         :shape "BudgetName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (notification-type :initarg :notification-type
                         :initform
                         (common-lisp:error ":notification-type is required")
                         :type
                         (common-lisp:or notification-type common-lisp:null)
                         :accessor
                         struct-shape-create-budget-action-request-notification-type
                         :shape "NotificationType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (action-type :initarg :action-type :initform
                         (common-lisp:error ":action-type is required") :type
                         (common-lisp:or action-type common-lisp:null)
                         :accessor
                         struct-shape-create-budget-action-request-action-type
                         :shape "ActionType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (action-threshold :initarg :action-threshold :initform
                         (common-lisp:error ":action-threshold is required")
                         :type
                         (common-lisp:or action-threshold common-lisp:null)
                         :accessor
                         struct-shape-create-budget-action-request-action-threshold
                         :shape "ActionThreshold" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (definition :initarg :definition :initform
                         (common-lisp:error ":definition is required") :type
                         (common-lisp:or definition common-lisp:null) :accessor
                         struct-shape-create-budget-action-request-definition
                         :shape "Definition" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (execution-role-arn :initarg :execution-role-arn
                         :initform
                         (common-lisp:error ":execution-role-arn is required")
                         :type (common-lisp:or role-arn common-lisp:null)
                         :accessor
                         struct-shape-create-budget-action-request-execution-role-arn
                         :shape "RoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (approval-model :initarg :approval-model :initform
                         (common-lisp:error ":approval-model is required")
                         :type (common-lisp:or approval-model common-lisp:null)
                         :accessor
                         struct-shape-create-budget-action-request-approval-model
                         :shape "ApprovalModel" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (subscribers :initarg :subscribers :initform
                         (common-lisp:error ":subscribers is required") :type
                         (common-lisp:or subscribers common-lisp:null)
                         :accessor
                         struct-shape-create-budget-action-request-subscribers
                         :shape "Subscribers" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-budget-action-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-budget-action-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-budget-action-request
                    'make-create-budget-action-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-budget-action-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-budget-action-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'budget-name))
      (common-lisp:list
       (common-lisp:cons "BudgetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'notification-type))
      (common-lisp:list
       (common-lisp:cons "NotificationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action-type))
      (common-lisp:list
       (common-lisp:cons "ActionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action-threshold))
      (common-lisp:list
       (common-lisp:cons "ActionThreshold"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'definition))
      (common-lisp:list
       (common-lisp:cons "Definition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'execution-role-arn))
      (common-lisp:list
       (common-lisp:cons "ExecutionRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'approval-model))
      (common-lisp:list
       (common-lisp:cons "ApprovalModel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscribers))
      (common-lisp:list
       (common-lisp:cons "Subscribers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-budget-action-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-budget-action-response common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-create-budget-action-response-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (budget-name :initarg :budget-name :initform
                         (common-lisp:error ":budget-name is required") :type
                         (common-lisp:or budget-name common-lisp:null)
                         :accessor
                         struct-shape-create-budget-action-response-budget-name
                         :shape "BudgetName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (action-id :initarg :action-id :initform
                         (common-lisp:error ":action-id is required") :type
                         (common-lisp:or action-id common-lisp:null) :accessor
                         struct-shape-create-budget-action-response-action-id
                         :shape "ActionId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-budget-action-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-budget-action-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-budget-action-response
                    'make-create-budget-action-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-budget-action-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-budget-action-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'budget-name))
      (common-lisp:list
       (common-lisp:cons "BudgetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action-id))
      (common-lisp:list
       (common-lisp:cons "ActionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-budget-action-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-budget-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-create-budget-request-account-id :shape
                         "AccountId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (budget :initarg :budget :initform
                         (common-lisp:error ":budget is required") :type
                         (common-lisp:or budget common-lisp:null) :accessor
                         struct-shape-create-budget-request-budget :shape
                         "Budget" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (notifications-with-subscribers :initarg
                         :notifications-with-subscribers :initform
                         common-lisp:nil :type
                         (common-lisp:or notification-with-subscribers-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-budget-request-notifications-with-subscribers
                         :shape "NotificationWithSubscribersList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-budget-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-budget-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-budget-request 'make-create-budget-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-budget-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-budget-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'budget))
      (common-lisp:list
       (common-lisp:cons "Budget"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'notifications-with-subscribers))
      (common-lisp:list
       (common-lisp:cons "NotificationsWithSubscribers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-budget-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-budget-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-budget-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-budget-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-budget-response 'make-create-budget-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-budget-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-budget-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-budget-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-notification-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-create-notification-request-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (budget-name :initarg :budget-name :initform
                         (common-lisp:error ":budget-name is required") :type
                         (common-lisp:or budget-name common-lisp:null)
                         :accessor
                         struct-shape-create-notification-request-budget-name
                         :shape "BudgetName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (notification :initarg :notification :initform
                         (common-lisp:error ":notification is required") :type
                         (common-lisp:or notification common-lisp:null)
                         :accessor
                         struct-shape-create-notification-request-notification
                         :shape "Notification" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (subscribers :initarg :subscribers :initform
                         (common-lisp:error ":subscribers is required") :type
                         (common-lisp:or subscribers common-lisp:null)
                         :accessor
                         struct-shape-create-notification-request-subscribers
                         :shape "Subscribers" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-notification-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-notification-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-notification-request
                    'make-create-notification-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-notification-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-notification-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'budget-name))
      (common-lisp:list
       (common-lisp:cons "BudgetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'notification))
      (common-lisp:list
       (common-lisp:cons "Notification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscribers))
      (common-lisp:list
       (common-lisp:cons "Subscribers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-notification-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-notification-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-notification-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-notification-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-notification-response
                    'make-create-notification-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-notification-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-notification-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-notification-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-subscriber-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-create-subscriber-request-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (budget-name :initarg :budget-name :initform
                         (common-lisp:error ":budget-name is required") :type
                         (common-lisp:or budget-name common-lisp:null)
                         :accessor
                         struct-shape-create-subscriber-request-budget-name
                         :shape "BudgetName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (notification :initarg :notification :initform
                         (common-lisp:error ":notification is required") :type
                         (common-lisp:or notification common-lisp:null)
                         :accessor
                         struct-shape-create-subscriber-request-notification
                         :shape "Notification" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (subscriber :initarg :subscriber :initform
                         (common-lisp:error ":subscriber is required") :type
                         (common-lisp:or subscriber common-lisp:null) :accessor
                         struct-shape-create-subscriber-request-subscriber
                         :shape "Subscriber" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-subscriber-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-subscriber-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-subscriber-request
                    'make-create-subscriber-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-subscriber-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-subscriber-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'budget-name))
      (common-lisp:list
       (common-lisp:cons "BudgetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'notification))
      (common-lisp:list
       (common-lisp:cons "Notification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscriber))
      (common-lisp:list
       (common-lisp:cons "Subscriber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-subscriber-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-subscriber-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-subscriber-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-subscriber-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-subscriber-response
                    'make-create-subscriber-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-subscriber-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-subscriber-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-subscriber-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition creation-limit-exceeded-exception
     (budgets-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       creation-limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'creation-limit-exceeded-exception
                    'creation-limit-exceeded-exception-message)))
(common-lisp:progn
 (common-lisp:defclass definition common-lisp:nil
                       ((iam-action-definition :initarg :iam-action-definition
                         :initform common-lisp:nil :type
                         (common-lisp:or iam-action-definition
                                         common-lisp:null)
                         :accessor
                         struct-shape-definition-iam-action-definition :shape
                         "IamActionDefinition" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (scp-action-definition :initarg :scp-action-definition
                         :initform common-lisp:nil :type
                         (common-lisp:or scp-action-definition
                                         common-lisp:null)
                         :accessor
                         struct-shape-definition-scp-action-definition :shape
                         "ScpActionDefinition" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (ssm-action-definition :initarg :ssm-action-definition
                         :initform common-lisp:nil :type
                         (common-lisp:or ssm-action-definition
                                         common-lisp:null)
                         :accessor
                         struct-shape-definition-ssm-action-definition :shape
                         "SsmActionDefinition" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-definition
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'definition
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'definition 'make-definition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input definition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input definition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'iam-action-definition))
      (common-lisp:list
       (common-lisp:cons "IamActionDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'scp-action-definition))
      (common-lisp:list
       (common-lisp:cons "ScpActionDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ssm-action-definition))
      (common-lisp:list
       (common-lisp:cons "SsmActionDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input definition))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-budget-action-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-delete-budget-action-request-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (budget-name :initarg :budget-name :initform
                         (common-lisp:error ":budget-name is required") :type
                         (common-lisp:or budget-name common-lisp:null)
                         :accessor
                         struct-shape-delete-budget-action-request-budget-name
                         :shape "BudgetName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (action-id :initarg :action-id :initform
                         (common-lisp:error ":action-id is required") :type
                         (common-lisp:or action-id common-lisp:null) :accessor
                         struct-shape-delete-budget-action-request-action-id
                         :shape "ActionId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-budget-action-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-budget-action-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-budget-action-request
                    'make-delete-budget-action-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-budget-action-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-budget-action-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'budget-name))
      (common-lisp:list
       (common-lisp:cons "BudgetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action-id))
      (common-lisp:list
       (common-lisp:cons "ActionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-budget-action-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-budget-action-response common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-delete-budget-action-response-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (budget-name :initarg :budget-name :initform
                         (common-lisp:error ":budget-name is required") :type
                         (common-lisp:or budget-name common-lisp:null)
                         :accessor
                         struct-shape-delete-budget-action-response-budget-name
                         :shape "BudgetName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (action :initarg :action :initform
                         (common-lisp:error ":action is required") :type
                         (common-lisp:or action common-lisp:null) :accessor
                         struct-shape-delete-budget-action-response-action
                         :shape "Action" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-budget-action-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-budget-action-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-budget-action-response
                    'make-delete-budget-action-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-budget-action-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-budget-action-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'budget-name))
      (common-lisp:list
       (common-lisp:cons "BudgetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "Action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-budget-action-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-budget-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-delete-budget-request-account-id :shape
                         "AccountId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (budget-name :initarg :budget-name :initform
                         (common-lisp:error ":budget-name is required") :type
                         (common-lisp:or budget-name common-lisp:null)
                         :accessor
                         struct-shape-delete-budget-request-budget-name :shape
                         "BudgetName" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-budget-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-budget-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-budget-request 'make-delete-budget-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-budget-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-budget-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'budget-name))
      (common-lisp:list
       (common-lisp:cons "BudgetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-budget-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-budget-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-budget-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-budget-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-budget-response 'make-delete-budget-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-budget-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-budget-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-budget-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-notification-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-delete-notification-request-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (budget-name :initarg :budget-name :initform
                         (common-lisp:error ":budget-name is required") :type
                         (common-lisp:or budget-name common-lisp:null)
                         :accessor
                         struct-shape-delete-notification-request-budget-name
                         :shape "BudgetName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (notification :initarg :notification :initform
                         (common-lisp:error ":notification is required") :type
                         (common-lisp:or notification common-lisp:null)
                         :accessor
                         struct-shape-delete-notification-request-notification
                         :shape "Notification" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-notification-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-notification-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-notification-request
                    'make-delete-notification-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-notification-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-notification-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'budget-name))
      (common-lisp:list
       (common-lisp:cons "BudgetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'notification))
      (common-lisp:list
       (common-lisp:cons "Notification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-notification-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-notification-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-notification-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-notification-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-notification-response
                    'make-delete-notification-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-notification-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-notification-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-notification-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-subscriber-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-delete-subscriber-request-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (budget-name :initarg :budget-name :initform
                         (common-lisp:error ":budget-name is required") :type
                         (common-lisp:or budget-name common-lisp:null)
                         :accessor
                         struct-shape-delete-subscriber-request-budget-name
                         :shape "BudgetName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (notification :initarg :notification :initform
                         (common-lisp:error ":notification is required") :type
                         (common-lisp:or notification common-lisp:null)
                         :accessor
                         struct-shape-delete-subscriber-request-notification
                         :shape "Notification" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (subscriber :initarg :subscriber :initform
                         (common-lisp:error ":subscriber is required") :type
                         (common-lisp:or subscriber common-lisp:null) :accessor
                         struct-shape-delete-subscriber-request-subscriber
                         :shape "Subscriber" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-subscriber-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-subscriber-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-subscriber-request
                    'make-delete-subscriber-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-subscriber-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-subscriber-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'budget-name))
      (common-lisp:list
       (common-lisp:cons "BudgetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'notification))
      (common-lisp:list
       (common-lisp:cons "Notification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscriber))
      (common-lisp:list
       (common-lisp:cons "Subscriber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-subscriber-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-subscriber-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-subscriber-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-subscriber-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-subscriber-response
                    'make-delete-subscriber-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-subscriber-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-subscriber-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-subscriber-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-budget-action-histories-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-describe-budget-action-histories-request-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (budget-name :initarg :budget-name :initform
                         (common-lisp:error ":budget-name is required") :type
                         (common-lisp:or budget-name common-lisp:null)
                         :accessor
                         struct-shape-describe-budget-action-histories-request-budget-name
                         :shape "BudgetName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (action-id :initarg :action-id :initform
                         (common-lisp:error ":action-id is required") :type
                         (common-lisp:or action-id common-lisp:null) :accessor
                         struct-shape-describe-budget-action-histories-request-action-id
                         :shape "ActionId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (time-period :initarg :time-period :initform
                         common-lisp:nil :type
                         (common-lisp:or time-period common-lisp:null)
                         :accessor
                         struct-shape-describe-budget-action-histories-request-time-period
                         :shape "TimePeriod" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-describe-budget-action-histories-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or generic-string common-lisp:null)
                         :accessor
                         struct-shape-describe-budget-action-histories-request-next-token
                         :shape "GenericString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-budget-action-histories-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-budget-action-histories-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-budget-action-histories-request
                    'make-describe-budget-action-histories-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-action-histories-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-action-histories-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'budget-name))
      (common-lisp:list
       (common-lisp:cons "BudgetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action-id))
      (common-lisp:list
       (common-lisp:cons "ActionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-period))
      (common-lisp:list
       (common-lisp:cons "TimePeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-action-histories-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-budget-action-histories-response
                       common-lisp:nil
                       ((action-histories :initarg :action-histories :initform
                         (common-lisp:error ":action-histories is required")
                         :type
                         (common-lisp:or action-histories common-lisp:null)
                         :accessor
                         struct-shape-describe-budget-action-histories-response-action-histories
                         :shape "ActionHistories" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or generic-string common-lisp:null)
                         :accessor
                         struct-shape-describe-budget-action-histories-response-next-token
                         :shape "GenericString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-budget-action-histories-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-budget-action-histories-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-budget-action-histories-response
                    'make-describe-budget-action-histories-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-action-histories-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-action-histories-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action-histories))
      (common-lisp:list
       (common-lisp:cons "ActionHistories"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-action-histories-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-budget-action-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-describe-budget-action-request-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (budget-name :initarg :budget-name :initform
                         (common-lisp:error ":budget-name is required") :type
                         (common-lisp:or budget-name common-lisp:null)
                         :accessor
                         struct-shape-describe-budget-action-request-budget-name
                         :shape "BudgetName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (action-id :initarg :action-id :initform
                         (common-lisp:error ":action-id is required") :type
                         (common-lisp:or action-id common-lisp:null) :accessor
                         struct-shape-describe-budget-action-request-action-id
                         :shape "ActionId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-budget-action-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-budget-action-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-budget-action-request
                    'make-describe-budget-action-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-action-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-action-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'budget-name))
      (common-lisp:list
       (common-lisp:cons "BudgetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action-id))
      (common-lisp:list
       (common-lisp:cons "ActionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-action-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-budget-action-response common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-describe-budget-action-response-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (budget-name :initarg :budget-name :initform
                         (common-lisp:error ":budget-name is required") :type
                         (common-lisp:or budget-name common-lisp:null)
                         :accessor
                         struct-shape-describe-budget-action-response-budget-name
                         :shape "BudgetName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (action :initarg :action :initform
                         (common-lisp:error ":action is required") :type
                         (common-lisp:or action common-lisp:null) :accessor
                         struct-shape-describe-budget-action-response-action
                         :shape "Action" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-budget-action-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-budget-action-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-budget-action-response
                    'make-describe-budget-action-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-action-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-action-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'budget-name))
      (common-lisp:list
       (common-lisp:cons "BudgetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "Action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-action-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-budget-actions-for-account-request
                       common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-describe-budget-actions-for-account-request-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-describe-budget-actions-for-account-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or generic-string common-lisp:null)
                         :accessor
                         struct-shape-describe-budget-actions-for-account-request-next-token
                         :shape "GenericString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-budget-actions-for-account-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-budget-actions-for-account-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-budget-actions-for-account-request
                    'make-describe-budget-actions-for-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-actions-for-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-actions-for-account-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-actions-for-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-budget-actions-for-account-response
                       common-lisp:nil
                       ((actions :initarg :actions :initform
                         (common-lisp:error ":actions is required") :type
                         (common-lisp:or actions common-lisp:null) :accessor
                         struct-shape-describe-budget-actions-for-account-response-actions
                         :shape "Actions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or generic-string common-lisp:null)
                         :accessor
                         struct-shape-describe-budget-actions-for-account-response-next-token
                         :shape "GenericString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-budget-actions-for-account-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-budget-actions-for-account-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-budget-actions-for-account-response
                    'make-describe-budget-actions-for-account-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-actions-for-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-actions-for-account-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'actions))
      (common-lisp:list
       (common-lisp:cons "Actions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-actions-for-account-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-budget-actions-for-budget-request
                       common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-describe-budget-actions-for-budget-request-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (budget-name :initarg :budget-name :initform
                         (common-lisp:error ":budget-name is required") :type
                         (common-lisp:or budget-name common-lisp:null)
                         :accessor
                         struct-shape-describe-budget-actions-for-budget-request-budget-name
                         :shape "BudgetName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-describe-budget-actions-for-budget-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or generic-string common-lisp:null)
                         :accessor
                         struct-shape-describe-budget-actions-for-budget-request-next-token
                         :shape "GenericString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-budget-actions-for-budget-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-budget-actions-for-budget-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-budget-actions-for-budget-request
                    'make-describe-budget-actions-for-budget-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-actions-for-budget-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-actions-for-budget-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'budget-name))
      (common-lisp:list
       (common-lisp:cons "BudgetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-actions-for-budget-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-budget-actions-for-budget-response
                       common-lisp:nil
                       ((actions :initarg :actions :initform
                         (common-lisp:error ":actions is required") :type
                         (common-lisp:or actions common-lisp:null) :accessor
                         struct-shape-describe-budget-actions-for-budget-response-actions
                         :shape "Actions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or generic-string common-lisp:null)
                         :accessor
                         struct-shape-describe-budget-actions-for-budget-response-next-token
                         :shape "GenericString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-budget-actions-for-budget-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-budget-actions-for-budget-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-budget-actions-for-budget-response
                    'make-describe-budget-actions-for-budget-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-actions-for-budget-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-actions-for-budget-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'actions))
      (common-lisp:list
       (common-lisp:cons "Actions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-actions-for-budget-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-budget-notifications-for-account-request
                       common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-describe-budget-notifications-for-account-request-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results-budget-notifications
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-budget-notifications-for-account-request-max-results
                         :shape "MaxResultsBudgetNotifications" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or generic-string common-lisp:null)
                         :accessor
                         struct-shape-describe-budget-notifications-for-account-request-next-token
                         :shape "GenericString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-budget-notifications-for-account-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-budget-notifications-for-account-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-budget-notifications-for-account-request
                    'make-describe-budget-notifications-for-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-notifications-for-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-notifications-for-account-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-notifications-for-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-budget-notifications-for-account-response
                       common-lisp:nil
                       ((budget-notifications-for-account :initarg
                         :budget-notifications-for-account :initform
                         common-lisp:nil :type
                         (common-lisp:or budget-notifications-for-account-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-budget-notifications-for-account-response-budget-notifications-for-account
                         :shape "BudgetNotificationsForAccountList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or generic-string common-lisp:null)
                         :accessor
                         struct-shape-describe-budget-notifications-for-account-response-next-token
                         :shape "GenericString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-budget-notifications-for-account-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-budget-notifications-for-account-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-budget-notifications-for-account-response
                    'make-describe-budget-notifications-for-account-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-notifications-for-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-notifications-for-account-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'budget-notifications-for-account))
      (common-lisp:list
       (common-lisp:cons "BudgetNotificationsForAccount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-notifications-for-account-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-budget-performance-history-request
                       common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-describe-budget-performance-history-request-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (budget-name :initarg :budget-name :initform
                         (common-lisp:error ":budget-name is required") :type
                         (common-lisp:or budget-name common-lisp:null)
                         :accessor
                         struct-shape-describe-budget-performance-history-request-budget-name
                         :shape "BudgetName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (time-period :initarg :time-period :initform
                         common-lisp:nil :type
                         (common-lisp:or time-period common-lisp:null)
                         :accessor
                         struct-shape-describe-budget-performance-history-request-time-period
                         :shape "TimePeriod" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-describe-budget-performance-history-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or generic-string common-lisp:null)
                         :accessor
                         struct-shape-describe-budget-performance-history-request-next-token
                         :shape "GenericString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-budget-performance-history-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-budget-performance-history-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-budget-performance-history-request
                    'make-describe-budget-performance-history-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-performance-history-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-performance-history-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'budget-name))
      (common-lisp:list
       (common-lisp:cons "BudgetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-period))
      (common-lisp:list
       (common-lisp:cons "TimePeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-performance-history-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-budget-performance-history-response
                       common-lisp:nil
                       ((budget-performance-history :initarg
                         :budget-performance-history :initform common-lisp:nil
                         :type
                         (common-lisp:or budget-performance-history
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-budget-performance-history-response-budget-performance-history
                         :shape "BudgetPerformanceHistory" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or generic-string common-lisp:null)
                         :accessor
                         struct-shape-describe-budget-performance-history-response-next-token
                         :shape "GenericString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-budget-performance-history-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-budget-performance-history-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-budget-performance-history-response
                    'make-describe-budget-performance-history-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-performance-history-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-performance-history-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'budget-performance-history))
      (common-lisp:list
       (common-lisp:cons "BudgetPerformanceHistory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-performance-history-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-budget-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-describe-budget-request-account-id :shape
                         "AccountId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (budget-name :initarg :budget-name :initform
                         (common-lisp:error ":budget-name is required") :type
                         (common-lisp:or budget-name common-lisp:null)
                         :accessor
                         struct-shape-describe-budget-request-budget-name
                         :shape "BudgetName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-budget-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-budget-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-budget-request 'make-describe-budget-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'budget-name))
      (common-lisp:list
       (common-lisp:cons "BudgetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-budget-response common-lisp:nil
                       ((budget :initarg :budget :initform common-lisp:nil
                         :type (common-lisp:or budget common-lisp:null)
                         :accessor struct-shape-describe-budget-response-budget
                         :shape "Budget" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-budget-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-budget-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-budget-response 'make-describe-budget-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'budget))
      (common-lisp:list
       (common-lisp:cons "Budget"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-budget-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-budgets-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-describe-budgets-request-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results-describe-budgets
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-budgets-request-max-results
                         :shape "MaxResultsDescribeBudgets" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or generic-string common-lisp:null)
                         :accessor
                         struct-shape-describe-budgets-request-next-token
                         :shape "GenericString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-budgets-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-budgets-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-budgets-request 'make-describe-budgets-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-budgets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-budgets-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-budgets-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-budgets-response common-lisp:nil
                       ((budgets :initarg :budgets :initform common-lisp:nil
                         :type (common-lisp:or budgets common-lisp:null)
                         :accessor
                         struct-shape-describe-budgets-response-budgets :shape
                         "Budgets" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or generic-string common-lisp:null)
                         :accessor
                         struct-shape-describe-budgets-response-next-token
                         :shape "GenericString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-budgets-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-budgets-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-budgets-response
                    'make-describe-budgets-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-budgets-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-budgets-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'budgets))
      (common-lisp:list
       (common-lisp:cons "Budgets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-budgets-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-notifications-for-budget-request
                       common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-describe-notifications-for-budget-request-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (budget-name :initarg :budget-name :initform
                         (common-lisp:error ":budget-name is required") :type
                         (common-lisp:or budget-name common-lisp:null)
                         :accessor
                         struct-shape-describe-notifications-for-budget-request-budget-name
                         :shape "BudgetName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-describe-notifications-for-budget-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or generic-string common-lisp:null)
                         :accessor
                         struct-shape-describe-notifications-for-budget-request-next-token
                         :shape "GenericString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-notifications-for-budget-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-notifications-for-budget-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-notifications-for-budget-request
                    'make-describe-notifications-for-budget-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-notifications-for-budget-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-notifications-for-budget-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'budget-name))
      (common-lisp:list
       (common-lisp:cons "BudgetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-notifications-for-budget-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-notifications-for-budget-response
                       common-lisp:nil
                       ((notifications :initarg :notifications :initform
                         common-lisp:nil :type
                         (common-lisp:or notifications common-lisp:null)
                         :accessor
                         struct-shape-describe-notifications-for-budget-response-notifications
                         :shape "Notifications" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or generic-string common-lisp:null)
                         :accessor
                         struct-shape-describe-notifications-for-budget-response-next-token
                         :shape "GenericString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-notifications-for-budget-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-notifications-for-budget-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-notifications-for-budget-response
                    'make-describe-notifications-for-budget-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-notifications-for-budget-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-notifications-for-budget-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'notifications))
      (common-lisp:list
       (common-lisp:cons "Notifications"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-notifications-for-budget-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-subscribers-for-notification-request
                       common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-describe-subscribers-for-notification-request-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (budget-name :initarg :budget-name :initform
                         (common-lisp:error ":budget-name is required") :type
                         (common-lisp:or budget-name common-lisp:null)
                         :accessor
                         struct-shape-describe-subscribers-for-notification-request-budget-name
                         :shape "BudgetName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (notification :initarg :notification :initform
                         (common-lisp:error ":notification is required") :type
                         (common-lisp:or notification common-lisp:null)
                         :accessor
                         struct-shape-describe-subscribers-for-notification-request-notification
                         :shape "Notification" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-describe-subscribers-for-notification-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or generic-string common-lisp:null)
                         :accessor
                         struct-shape-describe-subscribers-for-notification-request-next-token
                         :shape "GenericString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-subscribers-for-notification-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-subscribers-for-notification-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-subscribers-for-notification-request
                    'make-describe-subscribers-for-notification-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-subscribers-for-notification-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-subscribers-for-notification-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'budget-name))
      (common-lisp:list
       (common-lisp:cons "BudgetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'notification))
      (common-lisp:list
       (common-lisp:cons "Notification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-subscribers-for-notification-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-subscribers-for-notification-response
                       common-lisp:nil
                       ((subscribers :initarg :subscribers :initform
                         common-lisp:nil :type
                         (common-lisp:or subscribers common-lisp:null)
                         :accessor
                         struct-shape-describe-subscribers-for-notification-response-subscribers
                         :shape "Subscribers" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or generic-string common-lisp:null)
                         :accessor
                         struct-shape-describe-subscribers-for-notification-response-next-token
                         :shape "GenericString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-subscribers-for-notification-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-subscribers-for-notification-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-subscribers-for-notification-response
                    'make-describe-subscribers-for-notification-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-subscribers-for-notification-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-subscribers-for-notification-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscribers))
      (common-lisp:list
       (common-lisp:cons "Subscribers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-subscribers-for-notification-response))
   common-lisp:nil))
(common-lisp:deftype dimension-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype dimension-values ()
   '(trivial-types:proper-list dimension-value))
 (common-lisp:defun make-dimension-values
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list dimension-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition duplicate-record-exception
     (budgets-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       duplicate-record-exception-message)))
 (common-lisp:export
  (common-lisp:list 'duplicate-record-exception
                    'duplicate-record-exception-message)))
(common-lisp:deftype event-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass execute-budget-action-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-execute-budget-action-request-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (budget-name :initarg :budget-name :initform
                         (common-lisp:error ":budget-name is required") :type
                         (common-lisp:or budget-name common-lisp:null)
                         :accessor
                         struct-shape-execute-budget-action-request-budget-name
                         :shape "BudgetName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (action-id :initarg :action-id :initform
                         (common-lisp:error ":action-id is required") :type
                         (common-lisp:or action-id common-lisp:null) :accessor
                         struct-shape-execute-budget-action-request-action-id
                         :shape "ActionId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (execution-type :initarg :execution-type :initform
                         (common-lisp:error ":execution-type is required")
                         :type (common-lisp:or execution-type common-lisp:null)
                         :accessor
                         struct-shape-execute-budget-action-request-execution-type
                         :shape "ExecutionType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-execute-budget-action-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'execute-budget-action-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'execute-budget-action-request
                    'make-execute-budget-action-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          execute-budget-action-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          execute-budget-action-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'budget-name))
      (common-lisp:list
       (common-lisp:cons "BudgetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action-id))
      (common-lisp:list
       (common-lisp:cons "ActionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'execution-type))
      (common-lisp:list
       (common-lisp:cons "ExecutionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          execute-budget-action-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass execute-budget-action-response common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-execute-budget-action-response-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (budget-name :initarg :budget-name :initform
                         (common-lisp:error ":budget-name is required") :type
                         (common-lisp:or budget-name common-lisp:null)
                         :accessor
                         struct-shape-execute-budget-action-response-budget-name
                         :shape "BudgetName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (action-id :initarg :action-id :initform
                         (common-lisp:error ":action-id is required") :type
                         (common-lisp:or action-id common-lisp:null) :accessor
                         struct-shape-execute-budget-action-response-action-id
                         :shape "ActionId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (execution-type :initarg :execution-type :initform
                         (common-lisp:error ":execution-type is required")
                         :type (common-lisp:or execution-type common-lisp:null)
                         :accessor
                         struct-shape-execute-budget-action-response-execution-type
                         :shape "ExecutionType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-execute-budget-action-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'execute-budget-action-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'execute-budget-action-response
                    'make-execute-budget-action-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          execute-budget-action-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          execute-budget-action-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'budget-name))
      (common-lisp:list
       (common-lisp:cons "BudgetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action-id))
      (common-lisp:list
       (common-lisp:cons "ActionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'execution-type))
      (common-lisp:list
       (common-lisp:cons "ExecutionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          execute-budget-action-response))
   common-lisp:nil))
(common-lisp:deftype execution-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition expired-next-token-exception
     (budgets-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       expired-next-token-exception-message)))
 (common-lisp:export
  (common-lisp:list 'expired-next-token-exception
                    'expired-next-token-exception-message)))
(common-lisp:deftype generic-string () 'common-lisp:string)
(common-lisp:deftype generic-timestamp () 'common-lisp:string)
(common-lisp:deftype group () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype groups () '(trivial-types:proper-list group))
 (common-lisp:defun make-groups
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list group))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass historical-options common-lisp:nil
                       ((budget-adjustment-period :initarg
                         :budget-adjustment-period :initform
                         (common-lisp:error
                          ":budget-adjustment-period is required")
                         :type
                         (common-lisp:or adjustment-period common-lisp:null)
                         :accessor
                         struct-shape-historical-options-budget-adjustment-period
                         :shape "AdjustmentPeriod" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (look-back-available-periods :initarg
                         :look-back-available-periods :initform common-lisp:nil
                         :type
                         (common-lisp:or adjustment-period common-lisp:null)
                         :accessor
                         struct-shape-historical-options-look-back-available-periods
                         :shape "AdjustmentPeriod" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-historical-options
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'historical-options
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'historical-options 'make-historical-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input historical-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input historical-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'budget-adjustment-period))
      (common-lisp:list
       (common-lisp:cons "BudgetAdjustmentPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'look-back-available-periods))
      (common-lisp:list
       (common-lisp:cons "LookBackAvailablePeriods"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input historical-options))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass iam-action-definition common-lisp:nil
                       ((policy-arn :initarg :policy-arn :initform
                         (common-lisp:error ":policy-arn is required") :type
                         (common-lisp:or policy-arn common-lisp:null) :accessor
                         struct-shape-iam-action-definition-policy-arn :shape
                         "PolicyArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (roles :initarg :roles :initform common-lisp:nil :type
                         (common-lisp:or roles common-lisp:null) :accessor
                         struct-shape-iam-action-definition-roles :shape
                         "Roles" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (groups :initarg :groups :initform common-lisp:nil
                         :type (common-lisp:or groups common-lisp:null)
                         :accessor struct-shape-iam-action-definition-groups
                         :shape "Groups" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (users :initarg :users :initform common-lisp:nil :type
                         (common-lisp:or users common-lisp:null) :accessor
                         struct-shape-iam-action-definition-users :shape
                         "Users" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-iam-action-definition
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'iam-action-definition
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'iam-action-definition 'make-iam-action-definition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          iam-action-definition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          iam-action-definition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-arn))
      (common-lisp:list
       (common-lisp:cons "PolicyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'roles))
      (common-lisp:list
       (common-lisp:cons "Roles"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'groups))
      (common-lisp:list
       (common-lisp:cons "Groups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'users))
      (common-lisp:list
       (common-lisp:cons "Users"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          iam-action-definition))
   common-lisp:nil))
(common-lisp:deftype instance-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype instance-ids () '(trivial-types:proper-list instance-id))
 (common-lisp:defun make-instance-ids
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition internal-error-exception
     (budgets-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-error-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-error-exception
                    'internal-error-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-next-token-exception
     (budgets-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-next-token-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-next-token-exception
                    'invalid-next-token-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-parameter-exception
     (budgets-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-parameter-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-exception
                    'invalid-parameter-exception-message)))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype max-results-budget-notifications () 'common-lisp:integer)
(common-lisp:deftype max-results-describe-budgets () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition not-found-exception
     (budgets-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'not-found-exception 'not-found-exception-message)))
(common-lisp:progn
 (common-lisp:defclass notification common-lisp:nil
                       ((notification-type :initarg :notification-type
                         :initform
                         (common-lisp:error ":notification-type is required")
                         :type
                         (common-lisp:or notification-type common-lisp:null)
                         :accessor struct-shape-notification-notification-type
                         :shape "NotificationType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (comparison-operator :initarg :comparison-operator
                         :initform
                         (common-lisp:error ":comparison-operator is required")
                         :type
                         (common-lisp:or comparison-operator common-lisp:null)
                         :accessor
                         struct-shape-notification-comparison-operator :shape
                         "ComparisonOperator" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (threshold :initarg :threshold :initform
                         (common-lisp:error ":threshold is required") :type
                         (common-lisp:or notification-threshold
                                         common-lisp:null)
                         :accessor struct-shape-notification-threshold :shape
                         "NotificationThreshold" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (threshold-type :initarg :threshold-type :initform
                         common-lisp:nil :type
                         (common-lisp:or threshold-type common-lisp:null)
                         :accessor struct-shape-notification-threshold-type
                         :shape "ThresholdType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (notification-state :initarg :notification-state
                         :initform common-lisp:nil :type
                         (common-lisp:or notification-state common-lisp:null)
                         :accessor struct-shape-notification-notification-state
                         :shape "NotificationState" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-notification
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'notification
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'notification 'make-notification))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input notification))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input notification))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'notification-type))
      (common-lisp:list
       (common-lisp:cons "NotificationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'comparison-operator))
      (common-lisp:list
       (common-lisp:cons "ComparisonOperator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'threshold))
      (common-lisp:list
       (common-lisp:cons "Threshold"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'threshold-type))
      (common-lisp:list
       (common-lisp:cons "ThresholdType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'notification-state))
      (common-lisp:list
       (common-lisp:cons "NotificationState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input notification))
   common-lisp:nil))
(common-lisp:deftype notification-state () 'common-lisp:string)
(common-lisp:deftype notification-threshold () 'common-lisp:double-float)
(common-lisp:deftype notification-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass notification-with-subscribers common-lisp:nil
                       ((notification :initarg :notification :initform
                         (common-lisp:error ":notification is required") :type
                         (common-lisp:or notification common-lisp:null)
                         :accessor
                         struct-shape-notification-with-subscribers-notification
                         :shape "Notification" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (subscribers :initarg :subscribers :initform
                         (common-lisp:error ":subscribers is required") :type
                         (common-lisp:or subscribers common-lisp:null)
                         :accessor
                         struct-shape-notification-with-subscribers-subscribers
                         :shape "Subscribers" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-notification-with-subscribers
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'notification-with-subscribers
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'notification-with-subscribers
                    'make-notification-with-subscribers))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          notification-with-subscribers))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          notification-with-subscribers))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'notification))
      (common-lisp:list
       (common-lisp:cons "Notification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscribers))
      (common-lisp:list
       (common-lisp:cons "Subscribers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          notification-with-subscribers))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype notification-with-subscribers-list ()
   '(trivial-types:proper-list notification-with-subscribers))
 (common-lisp:defun make-notification-with-subscribers-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            notification-with-subscribers))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype notifications ()
   '(trivial-types:proper-list notification))
 (common-lisp:defun make-notifications
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list notification))
   aws-sdk/generator/shape::members))
(common-lisp:deftype nullable-boolean () 'common-lisp:boolean)
(common-lisp:deftype numeric-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype planned-budget-limits () 'common-lisp:hash-table)
 (common-lisp:defun make-planned-budget-limits
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype policy-arn () 'common-lisp:string)
(common-lisp:deftype policy-id () 'common-lisp:string)
(common-lisp:deftype region () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-locked-exception
     (budgets-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-locked-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-locked-exception
                    'resource-locked-exception-message)))
(common-lisp:deftype role () 'common-lisp:string)
(common-lisp:deftype role-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype roles () '(trivial-types:proper-list role))
 (common-lisp:defun make-roles
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list role))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass scp-action-definition common-lisp:nil
                       ((policy-id :initarg :policy-id :initform
                         (common-lisp:error ":policy-id is required") :type
                         (common-lisp:or policy-id common-lisp:null) :accessor
                         struct-shape-scp-action-definition-policy-id :shape
                         "PolicyId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (target-ids :initarg :target-ids :initform
                         (common-lisp:error ":target-ids is required") :type
                         (common-lisp:or target-ids common-lisp:null) :accessor
                         struct-shape-scp-action-definition-target-ids :shape
                         "TargetIds" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-scp-action-definition
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'scp-action-definition
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'scp-action-definition 'make-scp-action-definition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          scp-action-definition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          scp-action-definition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-id))
      (common-lisp:list
       (common-lisp:cons "PolicyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-ids))
      (common-lisp:list
       (common-lisp:cons "TargetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          scp-action-definition))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass spend common-lisp:nil
                       ((amount :initarg :amount :initform
                         (common-lisp:error ":amount is required") :type
                         (common-lisp:or numeric-value common-lisp:null)
                         :accessor struct-shape-spend-amount :shape
                         "NumericValue" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (unit :initarg :unit :initform
                         (common-lisp:error ":unit is required") :type
                         (common-lisp:or unit-value common-lisp:null) :accessor
                         struct-shape-spend-unit :shape "UnitValue" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-spend
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'spend
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'spend 'make-spend))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input spend))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input spend))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'amount))
      (common-lisp:list
       (common-lisp:cons "Amount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'unit))
      (common-lisp:list
       (common-lisp:cons "Unit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input spend))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass ssm-action-definition common-lisp:nil
                       ((action-sub-type :initarg :action-sub-type :initform
                         (common-lisp:error ":action-sub-type is required")
                         :type
                         (common-lisp:or action-sub-type common-lisp:null)
                         :accessor
                         struct-shape-ssm-action-definition-action-sub-type
                         :shape "ActionSubType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (region :initarg :region :initform
                         (common-lisp:error ":region is required") :type
                         (common-lisp:or region common-lisp:null) :accessor
                         struct-shape-ssm-action-definition-region :shape
                         "Region" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (instance-ids :initarg :instance-ids :initform
                         (common-lisp:error ":instance-ids is required") :type
                         (common-lisp:or instance-ids common-lisp:null)
                         :accessor
                         struct-shape-ssm-action-definition-instance-ids :shape
                         "InstanceIds" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ssm-action-definition
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'ssm-action-definition
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'ssm-action-definition 'make-ssm-action-definition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ssm-action-definition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ssm-action-definition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action-sub-type))
      (common-lisp:list
       (common-lisp:cons "ActionSubType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'region))
      (common-lisp:list
       (common-lisp:cons "Region"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-ids))
      (common-lisp:list
       (common-lisp:cons "InstanceIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ssm-action-definition))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass subscriber common-lisp:nil
                       ((subscription-type :initarg :subscription-type
                         :initform
                         (common-lisp:error ":subscription-type is required")
                         :type
                         (common-lisp:or subscription-type common-lisp:null)
                         :accessor struct-shape-subscriber-subscription-type
                         :shape "SubscriptionType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (address :initarg :address :initform
                         (common-lisp:error ":address is required") :type
                         (common-lisp:or subscriber-address common-lisp:null)
                         :accessor struct-shape-subscriber-address :shape
                         "SubscriberAddress" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-subscriber
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'subscriber
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'subscriber 'make-subscriber))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input subscriber))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input subscriber))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscription-type))
      (common-lisp:list
       (common-lisp:cons "SubscriptionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'address))
      (common-lisp:list
       (common-lisp:cons "Address"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input subscriber))
   common-lisp:nil))
(common-lisp:deftype subscriber-address () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype subscribers () '(trivial-types:proper-list subscriber))
 (common-lisp:defun make-subscribers
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list subscriber))
   aws-sdk/generator/shape::members))
(common-lisp:deftype subscription-type () 'common-lisp:string)
(common-lisp:deftype target-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype target-ids () '(trivial-types:proper-list target-id))
 (common-lisp:defun make-target-ids
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list target-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype threshold-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (budgets-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message)))
(common-lisp:progn
 (common-lisp:defclass time-period common-lisp:nil
                       ((start :initarg :start :initform common-lisp:nil :type
                         (common-lisp:or generic-timestamp common-lisp:null)
                         :accessor struct-shape-time-period-start :shape
                         "GenericTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (end :initarg :end :initform common-lisp:nil :type
                         (common-lisp:or generic-timestamp common-lisp:null)
                         :accessor struct-shape-time-period-end :shape
                         "GenericTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-time-period
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'time-period
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'time-period 'make-time-period))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input time-period))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input time-period))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start))
      (common-lisp:list
       (common-lisp:cons "Start"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end))
      (common-lisp:list
       (common-lisp:cons "End"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input time-period))
   common-lisp:nil))
(common-lisp:deftype time-unit () 'common-lisp:string)
(common-lisp:deftype unit-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass update-budget-action-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-update-budget-action-request-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (budget-name :initarg :budget-name :initform
                         (common-lisp:error ":budget-name is required") :type
                         (common-lisp:or budget-name common-lisp:null)
                         :accessor
                         struct-shape-update-budget-action-request-budget-name
                         :shape "BudgetName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (action-id :initarg :action-id :initform
                         (common-lisp:error ":action-id is required") :type
                         (common-lisp:or action-id common-lisp:null) :accessor
                         struct-shape-update-budget-action-request-action-id
                         :shape "ActionId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (notification-type :initarg :notification-type
                         :initform common-lisp:nil :type
                         (common-lisp:or notification-type common-lisp:null)
                         :accessor
                         struct-shape-update-budget-action-request-notification-type
                         :shape "NotificationType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (action-threshold :initarg :action-threshold :initform
                         common-lisp:nil :type
                         (common-lisp:or action-threshold common-lisp:null)
                         :accessor
                         struct-shape-update-budget-action-request-action-threshold
                         :shape "ActionThreshold" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (definition :initarg :definition :initform
                         common-lisp:nil :type
                         (common-lisp:or definition common-lisp:null) :accessor
                         struct-shape-update-budget-action-request-definition
                         :shape "Definition" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (execution-role-arn :initarg :execution-role-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or role-arn common-lisp:null) :accessor
                         struct-shape-update-budget-action-request-execution-role-arn
                         :shape "RoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (approval-model :initarg :approval-model :initform
                         common-lisp:nil :type
                         (common-lisp:or approval-model common-lisp:null)
                         :accessor
                         struct-shape-update-budget-action-request-approval-model
                         :shape "ApprovalModel" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (subscribers :initarg :subscribers :initform
                         common-lisp:nil :type
                         (common-lisp:or subscribers common-lisp:null)
                         :accessor
                         struct-shape-update-budget-action-request-subscribers
                         :shape "Subscribers" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-budget-action-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-budget-action-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-budget-action-request
                    'make-update-budget-action-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-budget-action-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-budget-action-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'budget-name))
      (common-lisp:list
       (common-lisp:cons "BudgetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action-id))
      (common-lisp:list
       (common-lisp:cons "ActionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'notification-type))
      (common-lisp:list
       (common-lisp:cons "NotificationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action-threshold))
      (common-lisp:list
       (common-lisp:cons "ActionThreshold"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'definition))
      (common-lisp:list
       (common-lisp:cons "Definition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'execution-role-arn))
      (common-lisp:list
       (common-lisp:cons "ExecutionRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'approval-model))
      (common-lisp:list
       (common-lisp:cons "ApprovalModel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscribers))
      (common-lisp:list
       (common-lisp:cons "Subscribers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-budget-action-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-budget-action-response common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-update-budget-action-response-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (budget-name :initarg :budget-name :initform
                         (common-lisp:error ":budget-name is required") :type
                         (common-lisp:or budget-name common-lisp:null)
                         :accessor
                         struct-shape-update-budget-action-response-budget-name
                         :shape "BudgetName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (old-action :initarg :old-action :initform
                         (common-lisp:error ":old-action is required") :type
                         (common-lisp:or action common-lisp:null) :accessor
                         struct-shape-update-budget-action-response-old-action
                         :shape "Action" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (new-action :initarg :new-action :initform
                         (common-lisp:error ":new-action is required") :type
                         (common-lisp:or action common-lisp:null) :accessor
                         struct-shape-update-budget-action-response-new-action
                         :shape "Action" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-budget-action-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-budget-action-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-budget-action-response
                    'make-update-budget-action-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-budget-action-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-budget-action-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'budget-name))
      (common-lisp:list
       (common-lisp:cons "BudgetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'old-action))
      (common-lisp:list
       (common-lisp:cons "OldAction"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'new-action))
      (common-lisp:list
       (common-lisp:cons "NewAction"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-budget-action-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-budget-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-update-budget-request-account-id :shape
                         "AccountId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (new-budget :initarg :new-budget :initform
                         (common-lisp:error ":new-budget is required") :type
                         (common-lisp:or budget common-lisp:null) :accessor
                         struct-shape-update-budget-request-new-budget :shape
                         "Budget" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-budget-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-budget-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-budget-request 'make-update-budget-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-budget-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-budget-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'new-budget))
      (common-lisp:list
       (common-lisp:cons "NewBudget"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-budget-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-budget-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-budget-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-budget-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-budget-response 'make-update-budget-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-budget-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-budget-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-budget-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-notification-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-update-notification-request-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (budget-name :initarg :budget-name :initform
                         (common-lisp:error ":budget-name is required") :type
                         (common-lisp:or budget-name common-lisp:null)
                         :accessor
                         struct-shape-update-notification-request-budget-name
                         :shape "BudgetName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (old-notification :initarg :old-notification :initform
                         (common-lisp:error ":old-notification is required")
                         :type (common-lisp:or notification common-lisp:null)
                         :accessor
                         struct-shape-update-notification-request-old-notification
                         :shape "Notification" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (new-notification :initarg :new-notification :initform
                         (common-lisp:error ":new-notification is required")
                         :type (common-lisp:or notification common-lisp:null)
                         :accessor
                         struct-shape-update-notification-request-new-notification
                         :shape "Notification" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-notification-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-notification-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-notification-request
                    'make-update-notification-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-notification-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-notification-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'budget-name))
      (common-lisp:list
       (common-lisp:cons "BudgetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'old-notification))
      (common-lisp:list
       (common-lisp:cons "OldNotification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'new-notification))
      (common-lisp:list
       (common-lisp:cons "NewNotification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-notification-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-notification-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-notification-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-notification-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-notification-response
                    'make-update-notification-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-notification-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-notification-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-notification-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-subscriber-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-update-subscriber-request-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (budget-name :initarg :budget-name :initform
                         (common-lisp:error ":budget-name is required") :type
                         (common-lisp:or budget-name common-lisp:null)
                         :accessor
                         struct-shape-update-subscriber-request-budget-name
                         :shape "BudgetName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (notification :initarg :notification :initform
                         (common-lisp:error ":notification is required") :type
                         (common-lisp:or notification common-lisp:null)
                         :accessor
                         struct-shape-update-subscriber-request-notification
                         :shape "Notification" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (old-subscriber :initarg :old-subscriber :initform
                         (common-lisp:error ":old-subscriber is required")
                         :type (common-lisp:or subscriber common-lisp:null)
                         :accessor
                         struct-shape-update-subscriber-request-old-subscriber
                         :shape "Subscriber" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (new-subscriber :initarg :new-subscriber :initform
                         (common-lisp:error ":new-subscriber is required")
                         :type (common-lisp:or subscriber common-lisp:null)
                         :accessor
                         struct-shape-update-subscriber-request-new-subscriber
                         :shape "Subscriber" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-subscriber-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-subscriber-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-subscriber-request
                    'make-update-subscriber-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-subscriber-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-subscriber-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'budget-name))
      (common-lisp:list
       (common-lisp:cons "BudgetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'notification))
      (common-lisp:list
       (common-lisp:cons "Notification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'old-subscriber))
      (common-lisp:list
       (common-lisp:cons "OldSubscriber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'new-subscriber))
      (common-lisp:list
       (common-lisp:cons "NewSubscriber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-subscriber-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-subscriber-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-subscriber-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-subscriber-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-subscriber-response
                    'make-update-subscriber-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-subscriber-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-subscriber-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-subscriber-response))
   common-lisp:nil))
(common-lisp:deftype user () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype users () '(trivial-types:proper-list user))
 (common-lisp:defun make-users
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list user))
   aws-sdk/generator/shape::members))
(common-lisp:deftype |errorMessage| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun create-budget
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id budget
                     notifications-with-subscribers)
   (common-lisp:declare
    (common-lisp:ignorable account-id budget notifications-with-subscribers))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-budget-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'budgets-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateBudget"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-budget))
(common-lisp:progn
 (common-lisp:defun create-budget-action
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id budget-name notification-type
                     action-type action-threshold definition execution-role-arn
                     approval-model subscribers)
   (common-lisp:declare
    (common-lisp:ignorable account-id budget-name notification-type action-type
     action-threshold definition execution-role-arn approval-model
     subscribers))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-budget-action-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'budgets-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateBudgetAction"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-budget-action))
(common-lisp:progn
 (common-lisp:defun create-notification
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id budget-name notification
                     subscribers)
   (common-lisp:declare
    (common-lisp:ignorable account-id budget-name notification subscribers))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-notification-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'budgets-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateNotification"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-notification))
(common-lisp:progn
 (common-lisp:defun create-subscriber
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id budget-name notification
                     subscriber)
   (common-lisp:declare
    (common-lisp:ignorable account-id budget-name notification subscriber))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-subscriber-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'budgets-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateSubscriber"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-subscriber))
(common-lisp:progn
 (common-lisp:defun delete-budget
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id budget-name)
   (common-lisp:declare (common-lisp:ignorable account-id budget-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-budget-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'budgets-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteBudget"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-budget))
(common-lisp:progn
 (common-lisp:defun delete-budget-action
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id budget-name action-id)
   (common-lisp:declare
    (common-lisp:ignorable account-id budget-name action-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-budget-action-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'budgets-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteBudgetAction"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-budget-action))
(common-lisp:progn
 (common-lisp:defun delete-notification
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id budget-name notification)
   (common-lisp:declare
    (common-lisp:ignorable account-id budget-name notification))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-notification-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'budgets-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteNotification"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-notification))
(common-lisp:progn
 (common-lisp:defun delete-subscriber
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id budget-name notification
                     subscriber)
   (common-lisp:declare
    (common-lisp:ignorable account-id budget-name notification subscriber))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-subscriber-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'budgets-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteSubscriber"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-subscriber))
(common-lisp:progn
 (common-lisp:defun describe-budget
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id budget-name)
   (common-lisp:declare (common-lisp:ignorable account-id budget-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-budget-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'budgets-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeBudget"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-budget))
(common-lisp:progn
 (common-lisp:defun describe-budget-action
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id budget-name action-id)
   (common-lisp:declare
    (common-lisp:ignorable account-id budget-name action-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-budget-action-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'budgets-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeBudgetAction"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-budget-action))
(common-lisp:progn
 (common-lisp:defun describe-budget-action-histories
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id budget-name action-id
                     time-period max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable account-id budget-name action-id time-period
     max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-budget-action-histories-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'budgets-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeBudgetActionHistories"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-budget-action-histories))
(common-lisp:progn
 (common-lisp:defun describe-budget-actions-for-account
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable account-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-budget-actions-for-account-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'budgets-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeBudgetActionsForAccount"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-budget-actions-for-account))
(common-lisp:progn
 (common-lisp:defun describe-budget-actions-for-budget
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id budget-name max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable account-id budget-name max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-budget-actions-for-budget-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'budgets-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeBudgetActionsForBudget"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-budget-actions-for-budget))
(common-lisp:progn
 (common-lisp:defun describe-budget-notifications-for-account
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable account-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-budget-notifications-for-account-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'budgets-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeBudgetNotificationsForAccount"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-budget-notifications-for-account))
(common-lisp:progn
 (common-lisp:defun describe-budget-performance-history
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id budget-name time-period
                     max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable account-id budget-name time-period max-results
     next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-budget-performance-history-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'budgets-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeBudgetPerformanceHistory"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-budget-performance-history))
(common-lisp:progn
 (common-lisp:defun describe-budgets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable account-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-budgets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'budgets-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeBudgets"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-budgets))
(common-lisp:progn
 (common-lisp:defun describe-notifications-for-budget
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id budget-name max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable account-id budget-name max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-notifications-for-budget-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'budgets-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeNotificationsForBudget"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-notifications-for-budget))
(common-lisp:progn
 (common-lisp:defun describe-subscribers-for-notification
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id budget-name notification
                     max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable account-id budget-name notification max-results
     next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-subscribers-for-notification-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'budgets-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeSubscribersForNotification"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-subscribers-for-notification))
(common-lisp:progn
 (common-lisp:defun execute-budget-action
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id budget-name action-id
                     execution-type)
   (common-lisp:declare
    (common-lisp:ignorable account-id budget-name action-id execution-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-execute-budget-action-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'budgets-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ExecuteBudgetAction"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'execute-budget-action))
(common-lisp:progn
 (common-lisp:defun update-budget
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id new-budget)
   (common-lisp:declare (common-lisp:ignorable account-id new-budget))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-budget-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'budgets-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateBudget"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-budget))
(common-lisp:progn
 (common-lisp:defun update-budget-action
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id budget-name action-id
                     notification-type action-threshold definition
                     execution-role-arn approval-model subscribers)
   (common-lisp:declare
    (common-lisp:ignorable account-id budget-name action-id notification-type
     action-threshold definition execution-role-arn approval-model
     subscribers))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-budget-action-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'budgets-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateBudgetAction"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-budget-action))
(common-lisp:progn
 (common-lisp:defun update-notification
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id budget-name old-notification
                     new-notification)
   (common-lisp:declare
    (common-lisp:ignorable account-id budget-name old-notification
     new-notification))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-notification-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'budgets-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateNotification"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-notification))
(common-lisp:progn
 (common-lisp:defun update-subscriber
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id budget-name notification
                     old-subscriber new-subscriber)
   (common-lisp:declare
    (common-lisp:ignorable account-id budget-name notification old-subscriber
     new-subscriber))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-subscriber-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'budgets-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateSubscriber"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-subscriber))
