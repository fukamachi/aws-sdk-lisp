;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/mediapackagev2/api
  (:use)
  (:nicknames #:aws/mediapackagev2)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/json-request)
  (:import-from #:aws-sdk/rest-json-request)
  (:import-from #:aws-sdk/rest-xml-request)
  (:import-from #:aws-sdk/query-request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/mediapackagev2/api)
(common-lisp:progn
 (common-lisp:define-condition mediapackagev2-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'mediapackagev2-error))
(common-lisp:progn
 (common-lisp:defclass mediapackagev2-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "mediapackagev2"
                        :api-version "2022-12-25" :host-prefix "mediapackagev2"
                        :signing-name "mediapackagev2" :global-host
                        common-lisp:nil))
 (common-lisp:export 'mediapackagev2-request))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceQuotaExceededException" . service-quota-exceeded-exception)
    ("ThrottlingException" . throttling-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (mediapackagev2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:deftype ad-marker-hls () 'common-lisp:string)
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defclass channel-group-list-configuration common-lisp:nil
                       ((channel-group-name :initarg :channel-group-name
                         :initform
                         (common-lisp:error ":channel-group-name is required")
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-channel-group-list-configuration-channel-group-name
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-channel-group-list-configuration-arn
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         (common-lisp:error ":created-at is required") :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-channel-group-list-configuration-created-at
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (modified-at :initarg :modified-at :initform
                         (common-lisp:error ":modified-at is required") :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-channel-group-list-configuration-modified-at
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-description common-lisp:null)
                         :accessor
                         struct-shape-channel-group-list-configuration-description
                         :shape "ResourceDescription" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-group-list-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'channel-group-list-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'channel-group-list-configuration
                    'make-channel-group-list-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          channel-group-list-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          channel-group-list-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-group-name))
      (common-lisp:list
       (common-lisp:cons "ChannelGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'modified-at))
      (common-lisp:list
       (common-lisp:cons "ModifiedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          channel-group-list-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype channel-groups-list ()
   '(trivial-types:proper-list channel-group-list-configuration))
 (common-lisp:defun make-channel-groups-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            channel-group-list-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype channel-list ()
   '(trivial-types:proper-list channel-list-configuration))
 (common-lisp:defun make-channel-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            channel-list-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass channel-list-configuration common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-channel-list-configuration-arn :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-channel-list-configuration-channel-name
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-group-name :initarg :channel-group-name
                         :initform
                         (common-lisp:error ":channel-group-name is required")
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-channel-list-configuration-channel-group-name
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         (common-lisp:error ":created-at is required") :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-channel-list-configuration-created-at
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (modified-at :initarg :modified-at :initform
                         (common-lisp:error ":modified-at is required") :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-channel-list-configuration-modified-at
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-description common-lisp:null)
                         :accessor
                         struct-shape-channel-list-configuration-description
                         :shape "ResourceDescription" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-list-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channel-list-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'channel-list-configuration
                    'make-channel-list-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          channel-list-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          channel-list-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-group-name))
      (common-lisp:list
       (common-lisp:cons "ChannelGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'modified-at))
      (common-lisp:list
       (common-lisp:cons "ModifiedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          channel-list-configuration))
   common-lisp:nil))
(common-lisp:deftype cmaf-encryption-method () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (mediapackagev2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)
      (conflict-exception-type :initarg :conflict-exception-type :initform
       common-lisp:nil :reader conflict-exception-conflict-exception-type)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message
                    'conflict-exception-conflict-exception-type)))
(common-lisp:deftype conflict-exception-type () 'common-lisp:string)
(common-lisp:deftype container-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass create-channel-group-request common-lisp:nil
                       ((channel-group-name :initarg :channel-group-name
                         :initform
                         (common-lisp:error ":channel-group-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-create-channel-group-request-channel-group-name
                         :shape "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or idempotency-token common-lisp:null)
                         :accessor
                         struct-shape-create-channel-group-request-client-token
                         :shape "IdempotencyToken" :location "header"
                         :location-name "x-amzn-client-token")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-description common-lisp:null)
                         :accessor
                         struct-shape-create-channel-group-request-description
                         :shape "ResourceDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-create-channel-group-request-tags :shape
                         "TagMap" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-channel-group-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-channel-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-channel-group-request
                    'make-create-channel-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:cons "x-amzn-client-token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-group-name))
      (common-lisp:list
       (common-lisp:cons "ChannelGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-channel-group-response common-lisp:nil
                       ((channel-group-name :initarg :channel-group-name
                         :initform
                         (common-lisp:error ":channel-group-name is required")
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-create-channel-group-response-channel-group-name
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-channel-group-response-arn :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (egress-domain :initarg :egress-domain :initform
                         (common-lisp:error ":egress-domain is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-channel-group-response-egress-domain
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         (common-lisp:error ":created-at is required") :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-create-channel-group-response-created-at
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (modified-at :initarg :modified-at :initform
                         (common-lisp:error ":modified-at is required") :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-create-channel-group-response-modified-at
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-description common-lisp:null)
                         :accessor
                         struct-shape-create-channel-group-response-description
                         :shape "ResourceDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-create-channel-group-response-tags :shape
                         "TagMap" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-channel-group-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-channel-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-channel-group-response
                    'make-create-channel-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-group-name))
      (common-lisp:list
       (common-lisp:cons "ChannelGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'egress-domain))
      (common-lisp:list
       (common-lisp:cons "EgressDomain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'modified-at))
      (common-lisp:list
       (common-lisp:cons "ModifiedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-channel-request common-lisp:nil
                       ((channel-group-name :initarg :channel-group-name
                         :initform
                         (common-lisp:error ":channel-group-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-create-channel-request-channel-group-name
                         :shape "ResourceName" :location "uri" :location-name
                         "ChannelGroupName")
                        (channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-create-channel-request-channel-name
                         :shape "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or idempotency-token common-lisp:null)
                         :accessor
                         struct-shape-create-channel-request-client-token
                         :shape "IdempotencyToken" :location "header"
                         :location-name "x-amzn-client-token")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-description common-lisp:null)
                         :accessor
                         struct-shape-create-channel-request-description :shape
                         "ResourceDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-create-channel-request-tags :shape
                         "TagMap" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-channel-request 'make-create-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:cons "x-amzn-client-token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-channel-response common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-channel-response-arn :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-channel-response-channel-name
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-group-name :initarg :channel-group-name
                         :initform
                         (common-lisp:error ":channel-group-name is required")
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-create-channel-response-channel-group-name
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         (common-lisp:error ":created-at is required") :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-create-channel-response-created-at :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (modified-at :initarg :modified-at :initform
                         (common-lisp:error ":modified-at is required") :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-create-channel-response-modified-at
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-description common-lisp:null)
                         :accessor
                         struct-shape-create-channel-response-description
                         :shape "ResourceDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (ingest-endpoints :initarg :ingest-endpoints :initform
                         common-lisp:nil :type
                         (common-lisp:or ingest-endpoint-list common-lisp:null)
                         :accessor
                         struct-shape-create-channel-response-ingest-endpoints
                         :shape "IngestEndpointList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-create-channel-response-tags :shape
                         "TagMap" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-channel-response 'make-create-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-group-name))
      (common-lisp:list
       (common-lisp:cons "ChannelGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'modified-at))
      (common-lisp:list
       (common-lisp:cons "ModifiedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ingest-endpoints))
      (common-lisp:list
       (common-lisp:cons "IngestEndpoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-hls-manifest-configuration common-lisp:nil
                       ((manifest-name :initarg :manifest-name :initform
                         (common-lisp:error ":manifest-name is required") :type
                         (common-lisp:or manifest-name common-lisp:null)
                         :accessor
                         struct-shape-create-hls-manifest-configuration-manifest-name
                         :shape "ManifestName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (child-manifest-name :initarg :child-manifest-name
                         :initform common-lisp:nil :type
                         (common-lisp:or manifest-name common-lisp:null)
                         :accessor
                         struct-shape-create-hls-manifest-configuration-child-manifest-name
                         :shape "ManifestName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (scte-hls :initarg :scte-hls :initform common-lisp:nil
                         :type (common-lisp:or scte-hls common-lisp:null)
                         :accessor
                         struct-shape-create-hls-manifest-configuration-scte-hls
                         :shape "ScteHls" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (manifest-window-seconds :initarg
                         :manifest-window-seconds :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          create-hls-manifest-configuration-manifest-window-seconds-integer
                          common-lisp:null)
                         :accessor
                         struct-shape-create-hls-manifest-configuration-manifest-window-seconds
                         :shape
                         "CreateHlsManifestConfigurationManifestWindowSecondsInteger"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (program-date-time-interval-seconds :initarg
                         :program-date-time-interval-seconds :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          create-hls-manifest-configuration-program-date-time-interval-seconds-integer
                          common-lisp:null)
                         :accessor
                         struct-shape-create-hls-manifest-configuration-program-date-time-interval-seconds
                         :shape
                         "CreateHlsManifestConfigurationProgramDateTimeIntervalSecondsInteger"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (filter-configuration :initarg :filter-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or filter-configuration common-lisp:null)
                         :accessor
                         struct-shape-create-hls-manifest-configuration-filter-configuration
                         :shape "FilterConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-hls-manifest-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-hls-manifest-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-hls-manifest-configuration
                    'make-create-hls-manifest-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-hls-manifest-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-hls-manifest-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'manifest-name))
      (common-lisp:list
       (common-lisp:cons "ManifestName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'child-manifest-name))
      (common-lisp:list
       (common-lisp:cons "ChildManifestName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scte-hls))
      (common-lisp:list
       (common-lisp:cons "ScteHls"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'manifest-window-seconds))
      (common-lisp:list
       (common-lisp:cons "ManifestWindowSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'program-date-time-interval-seconds))
      (common-lisp:list
       (common-lisp:cons "ProgramDateTimeIntervalSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'filter-configuration))
      (common-lisp:list
       (common-lisp:cons "FilterConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-hls-manifest-configuration))
   common-lisp:nil))
(common-lisp:deftype create-hls-manifest-configuration-manifest-window-seconds-integer
                     ()
  'common-lisp:integer)
(common-lisp:deftype create-hls-manifest-configuration-program-date-time-interval-seconds-integer
                     ()
  'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype create-hls-manifests ()
   '(trivial-types:proper-list create-hls-manifest-configuration))
 (common-lisp:defun make-create-hls-manifests
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            create-hls-manifest-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass create-low-latency-hls-manifest-configuration
                       common-lisp:nil
                       ((manifest-name :initarg :manifest-name :initform
                         (common-lisp:error ":manifest-name is required") :type
                         (common-lisp:or manifest-name common-lisp:null)
                         :accessor
                         struct-shape-create-low-latency-hls-manifest-configuration-manifest-name
                         :shape "ManifestName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (child-manifest-name :initarg :child-manifest-name
                         :initform common-lisp:nil :type
                         (common-lisp:or manifest-name common-lisp:null)
                         :accessor
                         struct-shape-create-low-latency-hls-manifest-configuration-child-manifest-name
                         :shape "ManifestName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (scte-hls :initarg :scte-hls :initform common-lisp:nil
                         :type (common-lisp:or scte-hls common-lisp:null)
                         :accessor
                         struct-shape-create-low-latency-hls-manifest-configuration-scte-hls
                         :shape "ScteHls" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (manifest-window-seconds :initarg
                         :manifest-window-seconds :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          create-low-latency-hls-manifest-configuration-manifest-window-seconds-integer
                          common-lisp:null)
                         :accessor
                         struct-shape-create-low-latency-hls-manifest-configuration-manifest-window-seconds
                         :shape
                         "CreateLowLatencyHlsManifestConfigurationManifestWindowSecondsInteger"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (program-date-time-interval-seconds :initarg
                         :program-date-time-interval-seconds :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          create-low-latency-hls-manifest-configuration-program-date-time-interval-seconds-integer
                          common-lisp:null)
                         :accessor
                         struct-shape-create-low-latency-hls-manifest-configuration-program-date-time-interval-seconds
                         :shape
                         "CreateLowLatencyHlsManifestConfigurationProgramDateTimeIntervalSecondsInteger"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (filter-configuration :initarg :filter-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or filter-configuration common-lisp:null)
                         :accessor
                         struct-shape-create-low-latency-hls-manifest-configuration-filter-configuration
                         :shape "FilterConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-low-latency-hls-manifest-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-low-latency-hls-manifest-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-low-latency-hls-manifest-configuration
                    'make-create-low-latency-hls-manifest-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-low-latency-hls-manifest-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-low-latency-hls-manifest-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'manifest-name))
      (common-lisp:list
       (common-lisp:cons "ManifestName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'child-manifest-name))
      (common-lisp:list
       (common-lisp:cons "ChildManifestName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scte-hls))
      (common-lisp:list
       (common-lisp:cons "ScteHls"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'manifest-window-seconds))
      (common-lisp:list
       (common-lisp:cons "ManifestWindowSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'program-date-time-interval-seconds))
      (common-lisp:list
       (common-lisp:cons "ProgramDateTimeIntervalSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'filter-configuration))
      (common-lisp:list
       (common-lisp:cons "FilterConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-low-latency-hls-manifest-configuration))
   common-lisp:nil))
(common-lisp:deftype create-low-latency-hls-manifest-configuration-manifest-window-seconds-integer
                     ()
  'common-lisp:integer)
(common-lisp:deftype create-low-latency-hls-manifest-configuration-program-date-time-interval-seconds-integer
                     ()
  'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype create-low-latency-hls-manifests ()
   '(trivial-types:proper-list create-low-latency-hls-manifest-configuration))
 (common-lisp:defun make-create-low-latency-hls-manifests
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            create-low-latency-hls-manifest-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass create-origin-endpoint-request common-lisp:nil
                       ((channel-group-name :initarg :channel-group-name
                         :initform
                         (common-lisp:error ":channel-group-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-create-origin-endpoint-request-channel-group-name
                         :shape "ResourceName" :location "uri" :location-name
                         "ChannelGroupName")
                        (channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-create-origin-endpoint-request-channel-name
                         :shape "ResourceName" :location "uri" :location-name
                         "ChannelName")
                        (origin-endpoint-name :initarg :origin-endpoint-name
                         :initform
                         (common-lisp:error
                          ":origin-endpoint-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-create-origin-endpoint-request-origin-endpoint-name
                         :shape "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (container-type :initarg :container-type :initform
                         (common-lisp:error ":container-type is required")
                         :type (common-lisp:or container-type common-lisp:null)
                         :accessor
                         struct-shape-create-origin-endpoint-request-container-type
                         :shape "ContainerType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (segment :initarg :segment :initform common-lisp:nil
                         :type (common-lisp:or segment common-lisp:null)
                         :accessor
                         struct-shape-create-origin-endpoint-request-segment
                         :shape "Segment" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or idempotency-token common-lisp:null)
                         :accessor
                         struct-shape-create-origin-endpoint-request-client-token
                         :shape "IdempotencyToken" :location "header"
                         :location-name "x-amzn-client-token")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-description common-lisp:null)
                         :accessor
                         struct-shape-create-origin-endpoint-request-description
                         :shape "ResourceDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (startover-window-seconds :initarg
                         :startover-window-seconds :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          create-origin-endpoint-request-startover-window-seconds-integer
                          common-lisp:null)
                         :accessor
                         struct-shape-create-origin-endpoint-request-startover-window-seconds
                         :shape
                         "CreateOriginEndpointRequestStartoverWindowSecondsInteger"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (hls-manifests :initarg :hls-manifests :initform
                         common-lisp:nil :type
                         (common-lisp:or create-hls-manifests common-lisp:null)
                         :accessor
                         struct-shape-create-origin-endpoint-request-hls-manifests
                         :shape "CreateHlsManifests" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (low-latency-hls-manifests :initarg
                         :low-latency-hls-manifests :initform common-lisp:nil
                         :type
                         (common-lisp:or create-low-latency-hls-manifests
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-origin-endpoint-request-low-latency-hls-manifests
                         :shape "CreateLowLatencyHlsManifests" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-create-origin-endpoint-request-tags
                         :shape "TagMap" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-origin-endpoint-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-origin-endpoint-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-origin-endpoint-request
                    'make-create-origin-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-origin-endpoint-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:cons "x-amzn-client-token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-origin-endpoint-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'origin-endpoint-name))
      (common-lisp:list
       (common-lisp:cons "OriginEndpointName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-type))
      (common-lisp:list
       (common-lisp:cons "ContainerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment))
      (common-lisp:list
       (common-lisp:cons "Segment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'startover-window-seconds))
      (common-lisp:list
       (common-lisp:cons "StartoverWindowSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-manifests))
      (common-lisp:list
       (common-lisp:cons "HlsManifests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'low-latency-hls-manifests))
      (common-lisp:list
       (common-lisp:cons "LowLatencyHlsManifests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-origin-endpoint-request))
   common-lisp:nil))
(common-lisp:deftype create-origin-endpoint-request-startover-window-seconds-integer
                     ()
  'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass create-origin-endpoint-response common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-origin-endpoint-response-arn
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-group-name :initarg :channel-group-name
                         :initform
                         (common-lisp:error ":channel-group-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-create-origin-endpoint-response-channel-group-name
                         :shape "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-create-origin-endpoint-response-channel-name
                         :shape "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (origin-endpoint-name :initarg :origin-endpoint-name
                         :initform
                         (common-lisp:error
                          ":origin-endpoint-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-create-origin-endpoint-response-origin-endpoint-name
                         :shape "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (container-type :initarg :container-type :initform
                         (common-lisp:error ":container-type is required")
                         :type (common-lisp:or container-type common-lisp:null)
                         :accessor
                         struct-shape-create-origin-endpoint-response-container-type
                         :shape "ContainerType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (segment :initarg :segment :initform
                         (common-lisp:error ":segment is required") :type
                         (common-lisp:or segment common-lisp:null) :accessor
                         struct-shape-create-origin-endpoint-response-segment
                         :shape "Segment" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         (common-lisp:error ":created-at is required") :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-create-origin-endpoint-response-created-at
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (modified-at :initarg :modified-at :initform
                         (common-lisp:error ":modified-at is required") :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-create-origin-endpoint-response-modified-at
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-description common-lisp:null)
                         :accessor
                         struct-shape-create-origin-endpoint-response-description
                         :shape "ResourceDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (startover-window-seconds :initarg
                         :startover-window-seconds :initform common-lisp:nil
                         :type (common-lisp:or integer common-lisp:null)
                         :accessor
                         struct-shape-create-origin-endpoint-response-startover-window-seconds
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (hls-manifests :initarg :hls-manifests :initform
                         common-lisp:nil :type
                         (common-lisp:or get-hls-manifests common-lisp:null)
                         :accessor
                         struct-shape-create-origin-endpoint-response-hls-manifests
                         :shape "GetHlsManifests" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (low-latency-hls-manifests :initarg
                         :low-latency-hls-manifests :initform common-lisp:nil
                         :type
                         (common-lisp:or get-low-latency-hls-manifests
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-origin-endpoint-response-low-latency-hls-manifests
                         :shape "GetLowLatencyHlsManifests" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-create-origin-endpoint-response-tags
                         :shape "TagMap" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-origin-endpoint-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-origin-endpoint-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-origin-endpoint-response
                    'make-create-origin-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-origin-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-origin-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-group-name))
      (common-lisp:list
       (common-lisp:cons "ChannelGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'origin-endpoint-name))
      (common-lisp:list
       (common-lisp:cons "OriginEndpointName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-type))
      (common-lisp:list
       (common-lisp:cons "ContainerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment))
      (common-lisp:list
       (common-lisp:cons "Segment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'modified-at))
      (common-lisp:list
       (common-lisp:cons "ModifiedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'startover-window-seconds))
      (common-lisp:list
       (common-lisp:cons "StartoverWindowSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-manifests))
      (common-lisp:list
       (common-lisp:cons "HlsManifests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'low-latency-hls-manifests))
      (common-lisp:list
       (common-lisp:cons "LowLatencyHlsManifests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-origin-endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-channel-group-request common-lisp:nil
                       ((channel-group-name :initarg :channel-group-name
                         :initform
                         (common-lisp:error ":channel-group-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-delete-channel-group-request-channel-group-name
                         :shape "ResourceName" :location "uri" :location-name
                         "ChannelGroupName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-channel-group-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-channel-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-channel-group-request
                    'make-delete-channel-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-channel-group-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-channel-group-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-channel-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-channel-group-response
                    'make-delete-channel-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-channel-policy-request common-lisp:nil
                       ((channel-group-name :initarg :channel-group-name
                         :initform
                         (common-lisp:error ":channel-group-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-delete-channel-policy-request-channel-group-name
                         :shape "ResourceName" :location "uri" :location-name
                         "ChannelGroupName")
                        (channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-delete-channel-policy-request-channel-name
                         :shape "ResourceName" :location "uri" :location-name
                         "ChannelName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-channel-policy-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-channel-policy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-channel-policy-request
                    'make-delete-channel-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-channel-policy-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-channel-policy-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-channel-policy-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-channel-policy-response
                    'make-delete-channel-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-channel-request common-lisp:nil
                       ((channel-group-name :initarg :channel-group-name
                         :initform
                         (common-lisp:error ":channel-group-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-delete-channel-request-channel-group-name
                         :shape "ResourceName" :location "uri" :location-name
                         "ChannelGroupName")
                        (channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-delete-channel-request-channel-name
                         :shape "ResourceName" :location "uri" :location-name
                         "ChannelName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-channel-request 'make-delete-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-channel-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-channel-response 'make-delete-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-origin-endpoint-policy-request common-lisp:nil
                       ((channel-group-name :initarg :channel-group-name
                         :initform
                         (common-lisp:error ":channel-group-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-delete-origin-endpoint-policy-request-channel-group-name
                         :shape "ResourceName" :location "uri" :location-name
                         "ChannelGroupName")
                        (channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-delete-origin-endpoint-policy-request-channel-name
                         :shape "ResourceName" :location "uri" :location-name
                         "ChannelName")
                        (origin-endpoint-name :initarg :origin-endpoint-name
                         :initform
                         (common-lisp:error
                          ":origin-endpoint-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-delete-origin-endpoint-policy-request-origin-endpoint-name
                         :shape "ResourceName" :location "uri" :location-name
                         "OriginEndpointName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-origin-endpoint-policy-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-origin-endpoint-policy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-origin-endpoint-policy-request
                    'make-delete-origin-endpoint-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-origin-endpoint-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-origin-endpoint-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-origin-endpoint-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-origin-endpoint-policy-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-origin-endpoint-policy-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-origin-endpoint-policy-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-origin-endpoint-policy-response
                    'make-delete-origin-endpoint-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-origin-endpoint-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-origin-endpoint-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-origin-endpoint-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-origin-endpoint-request common-lisp:nil
                       ((channel-group-name :initarg :channel-group-name
                         :initform
                         (common-lisp:error ":channel-group-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-delete-origin-endpoint-request-channel-group-name
                         :shape "ResourceName" :location "uri" :location-name
                         "ChannelGroupName")
                        (channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-delete-origin-endpoint-request-channel-name
                         :shape "ResourceName" :location "uri" :location-name
                         "ChannelName")
                        (origin-endpoint-name :initarg :origin-endpoint-name
                         :initform
                         (common-lisp:error
                          ":origin-endpoint-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-delete-origin-endpoint-request-origin-endpoint-name
                         :shape "ResourceName" :location "uri" :location-name
                         "OriginEndpointName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-origin-endpoint-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-origin-endpoint-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-origin-endpoint-request
                    'make-delete-origin-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-origin-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-origin-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-origin-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-origin-endpoint-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-origin-endpoint-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-origin-endpoint-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-origin-endpoint-response
                    'make-delete-origin-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-origin-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-origin-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-origin-endpoint-response))
   common-lisp:nil))
(common-lisp:deftype drm-system () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass encryption common-lisp:nil
                       ((constant-initialization-vector :initarg
                         :constant-initialization-vector :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          encryption-constant-initialization-vector-string
                          common-lisp:null)
                         :accessor
                         struct-shape-encryption-constant-initialization-vector
                         :shape "EncryptionConstantInitializationVectorString"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (encryption-method :initarg :encryption-method
                         :initform
                         (common-lisp:error ":encryption-method is required")
                         :type
                         (common-lisp:or encryption-method common-lisp:null)
                         :accessor struct-shape-encryption-encryption-method
                         :shape "EncryptionMethod" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (key-rotation-interval-seconds :initarg
                         :key-rotation-interval-seconds :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          encryption-key-rotation-interval-seconds-integer
                          common-lisp:null)
                         :accessor
                         struct-shape-encryption-key-rotation-interval-seconds
                         :shape "EncryptionKeyRotationIntervalSecondsInteger"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (speke-key-provider :initarg :speke-key-provider
                         :initform
                         (common-lisp:error ":speke-key-provider is required")
                         :type
                         (common-lisp:or speke-key-provider common-lisp:null)
                         :accessor struct-shape-encryption-speke-key-provider
                         :shape "SpekeKeyProvider" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-encryption
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'encryption
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'encryption 'make-encryption))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input encryption))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input encryption))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'constant-initialization-vector))
      (common-lisp:list
       (common-lisp:cons "ConstantInitializationVector"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption-method))
      (common-lisp:list
       (common-lisp:cons "EncryptionMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'key-rotation-interval-seconds))
      (common-lisp:list
       (common-lisp:cons "KeyRotationIntervalSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'speke-key-provider))
      (common-lisp:list
       (common-lisp:cons "SpekeKeyProvider"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input encryption))
   common-lisp:nil))
(common-lisp:deftype encryption-constant-initialization-vector-string ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass encryption-contract-configuration common-lisp:nil
                       ((preset-speke20audio :initarg :preset-speke20audio
                         :initform
                         (common-lisp:error ":preset-speke20audio is required")
                         :type
                         (common-lisp:or preset-speke20audio common-lisp:null)
                         :accessor
                         struct-shape-encryption-contract-configuration-preset-speke20audio
                         :shape "PresetSpeke20Audio" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (preset-speke20video :initarg :preset-speke20video
                         :initform
                         (common-lisp:error ":preset-speke20video is required")
                         :type
                         (common-lisp:or preset-speke20video common-lisp:null)
                         :accessor
                         struct-shape-encryption-contract-configuration-preset-speke20video
                         :shape "PresetSpeke20Video" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-encryption-contract-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'encryption-contract-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'encryption-contract-configuration
                    'make-encryption-contract-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          encryption-contract-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          encryption-contract-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'preset-speke20audio))
      (common-lisp:list
       (common-lisp:cons "PresetSpeke20Audio"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'preset-speke20video))
      (common-lisp:list
       (common-lisp:cons "PresetSpeke20Video"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          encryption-contract-configuration))
   common-lisp:nil))
(common-lisp:deftype encryption-key-rotation-interval-seconds-integer ()
  'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass encryption-method common-lisp:nil
                       ((ts-encryption-method :initarg :ts-encryption-method
                         :initform common-lisp:nil :type
                         (common-lisp:or ts-encryption-method common-lisp:null)
                         :accessor
                         struct-shape-encryption-method-ts-encryption-method
                         :shape "TsEncryptionMethod" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cmaf-encryption-method :initarg
                         :cmaf-encryption-method :initform common-lisp:nil
                         :type
                         (common-lisp:or cmaf-encryption-method
                                         common-lisp:null)
                         :accessor
                         struct-shape-encryption-method-cmaf-encryption-method
                         :shape "CmafEncryptionMethod" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-encryption-method
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'encryption-method
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'encryption-method 'make-encryption-method))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input encryption-method))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input encryption-method))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ts-encryption-method))
      (common-lisp:list
       (common-lisp:cons "TsEncryptionMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cmaf-encryption-method))
      (common-lisp:list
       (common-lisp:cons "CmafEncryptionMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input encryption-method))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass filter-configuration common-lisp:nil
                       ((manifest-filter :initarg :manifest-filter :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          filter-configuration-manifest-filter-string
                          common-lisp:null)
                         :accessor
                         struct-shape-filter-configuration-manifest-filter
                         :shape "FilterConfigurationManifestFilterString"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (start :initarg :start :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-filter-configuration-start :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (end :initarg :end :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-filter-configuration-end :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (time-delay-seconds :initarg :time-delay-seconds
                         :initform common-lisp:nil :type
                         (common-lisp:or
                          filter-configuration-time-delay-seconds-integer
                          common-lisp:null)
                         :accessor
                         struct-shape-filter-configuration-time-delay-seconds
                         :shape "FilterConfigurationTimeDelaySecondsInteger"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-filter-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'filter-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'filter-configuration 'make-filter-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input filter-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input filter-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'manifest-filter))
      (common-lisp:list
       (common-lisp:cons "ManifestFilter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start))
      (common-lisp:list
       (common-lisp:cons "Start"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end))
      (common-lisp:list
       (common-lisp:cons "End"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-delay-seconds))
      (common-lisp:list
       (common-lisp:cons "TimeDelaySeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input filter-configuration))
   common-lisp:nil))
(common-lisp:deftype filter-configuration-manifest-filter-string ()
  'common-lisp:string)
(common-lisp:deftype filter-configuration-time-delay-seconds-integer ()
  'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass get-channel-group-request common-lisp:nil
                       ((channel-group-name :initarg :channel-group-name
                         :initform
                         (common-lisp:error ":channel-group-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-get-channel-group-request-channel-group-name
                         :shape "ResourceName" :location "uri" :location-name
                         "ChannelGroupName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-channel-group-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-channel-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-channel-group-request
                    'make-get-channel-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-channel-group-response common-lisp:nil
                       ((channel-group-name :initarg :channel-group-name
                         :initform
                         (common-lisp:error ":channel-group-name is required")
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-get-channel-group-response-channel-group-name
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-channel-group-response-arn :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (egress-domain :initarg :egress-domain :initform
                         (common-lisp:error ":egress-domain is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-channel-group-response-egress-domain
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         (common-lisp:error ":created-at is required") :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-get-channel-group-response-created-at
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (modified-at :initarg :modified-at :initform
                         (common-lisp:error ":modified-at is required") :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-get-channel-group-response-modified-at
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-description common-lisp:null)
                         :accessor
                         struct-shape-get-channel-group-response-description
                         :shape "ResourceDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-get-channel-group-response-tags :shape
                         "TagMap" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-channel-group-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-channel-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-channel-group-response
                    'make-get-channel-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-group-name))
      (common-lisp:list
       (common-lisp:cons "ChannelGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'egress-domain))
      (common-lisp:list
       (common-lisp:cons "EgressDomain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'modified-at))
      (common-lisp:list
       (common-lisp:cons "ModifiedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-channel-policy-request common-lisp:nil
                       ((channel-group-name :initarg :channel-group-name
                         :initform
                         (common-lisp:error ":channel-group-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-get-channel-policy-request-channel-group-name
                         :shape "ResourceName" :location "uri" :location-name
                         "ChannelGroupName")
                        (channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-get-channel-policy-request-channel-name
                         :shape "ResourceName" :location "uri" :location-name
                         "ChannelName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-channel-policy-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-channel-policy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-channel-policy-request
                    'make-get-channel-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-channel-policy-response common-lisp:nil
                       ((channel-group-name :initarg :channel-group-name
                         :initform
                         (common-lisp:error ":channel-group-name is required")
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-get-channel-policy-response-channel-group-name
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-channel-policy-response-channel-name
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (policy :initarg :policy :initform
                         (common-lisp:error ":policy is required") :type
                         (common-lisp:or policy-text common-lisp:null)
                         :accessor
                         struct-shape-get-channel-policy-response-policy :shape
                         "PolicyText" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-channel-policy-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-channel-policy-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-channel-policy-response
                    'make-get-channel-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-group-name))
      (common-lisp:list
       (common-lisp:cons "ChannelGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "Policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-channel-request common-lisp:nil
                       ((channel-group-name :initarg :channel-group-name
                         :initform
                         (common-lisp:error ":channel-group-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-get-channel-request-channel-group-name
                         :shape "ResourceName" :location "uri" :location-name
                         "ChannelGroupName")
                        (channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-get-channel-request-channel-name :shape
                         "ResourceName" :location "uri" :location-name
                         "ChannelName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-channel-request 'make-get-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-channel-response common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-channel-response-arn :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-channel-response-channel-name :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (channel-group-name :initarg :channel-group-name
                         :initform
                         (common-lisp:error ":channel-group-name is required")
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-get-channel-response-channel-group-name
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         (common-lisp:error ":created-at is required") :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-get-channel-response-created-at :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (modified-at :initarg :modified-at :initform
                         (common-lisp:error ":modified-at is required") :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-get-channel-response-modified-at :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-description common-lisp:null)
                         :accessor
                         struct-shape-get-channel-response-description :shape
                         "ResourceDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (ingest-endpoints :initarg :ingest-endpoints :initform
                         common-lisp:nil :type
                         (common-lisp:or ingest-endpoint-list common-lisp:null)
                         :accessor
                         struct-shape-get-channel-response-ingest-endpoints
                         :shape "IngestEndpointList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-get-channel-response-tags :shape "TagMap"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-channel-response 'make-get-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-group-name))
      (common-lisp:list
       (common-lisp:cons "ChannelGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'modified-at))
      (common-lisp:list
       (common-lisp:cons "ModifiedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ingest-endpoints))
      (common-lisp:list
       (common-lisp:cons "IngestEndpoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-channel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-hls-manifest-configuration common-lisp:nil
                       ((manifest-name :initarg :manifest-name :initform
                         (common-lisp:error ":manifest-name is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-get-hls-manifest-configuration-manifest-name
                         :shape "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (url :initarg :url :initform
                         (common-lisp:error ":url is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-hls-manifest-configuration-url :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (child-manifest-name :initarg :child-manifest-name
                         :initform common-lisp:nil :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-get-hls-manifest-configuration-child-manifest-name
                         :shape "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (manifest-window-seconds :initarg
                         :manifest-window-seconds :initform common-lisp:nil
                         :type (common-lisp:or integer common-lisp:null)
                         :accessor
                         struct-shape-get-hls-manifest-configuration-manifest-window-seconds
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (program-date-time-interval-seconds :initarg
                         :program-date-time-interval-seconds :initform
                         common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-get-hls-manifest-configuration-program-date-time-interval-seconds
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (scte-hls :initarg :scte-hls :initform common-lisp:nil
                         :type (common-lisp:or scte-hls common-lisp:null)
                         :accessor
                         struct-shape-get-hls-manifest-configuration-scte-hls
                         :shape "ScteHls" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filter-configuration :initarg :filter-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or filter-configuration common-lisp:null)
                         :accessor
                         struct-shape-get-hls-manifest-configuration-filter-configuration
                         :shape "FilterConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-hls-manifest-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-hls-manifest-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-hls-manifest-configuration
                    'make-get-hls-manifest-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-hls-manifest-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-hls-manifest-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'manifest-name))
      (common-lisp:list
       (common-lisp:cons "ManifestName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'child-manifest-name))
      (common-lisp:list
       (common-lisp:cons "ChildManifestName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'manifest-window-seconds))
      (common-lisp:list
       (common-lisp:cons "ManifestWindowSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'program-date-time-interval-seconds))
      (common-lisp:list
       (common-lisp:cons "ProgramDateTimeIntervalSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scte-hls))
      (common-lisp:list
       (common-lisp:cons "ScteHls"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'filter-configuration))
      (common-lisp:list
       (common-lisp:cons "FilterConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-hls-manifest-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype get-hls-manifests ()
   '(trivial-types:proper-list get-hls-manifest-configuration))
 (common-lisp:defun make-get-hls-manifests
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            get-hls-manifest-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass get-low-latency-hls-manifest-configuration
                       common-lisp:nil
                       ((manifest-name :initarg :manifest-name :initform
                         (common-lisp:error ":manifest-name is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-get-low-latency-hls-manifest-configuration-manifest-name
                         :shape "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (url :initarg :url :initform
                         (common-lisp:error ":url is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-low-latency-hls-manifest-configuration-url
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (child-manifest-name :initarg :child-manifest-name
                         :initform common-lisp:nil :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-get-low-latency-hls-manifest-configuration-child-manifest-name
                         :shape "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (manifest-window-seconds :initarg
                         :manifest-window-seconds :initform common-lisp:nil
                         :type (common-lisp:or integer common-lisp:null)
                         :accessor
                         struct-shape-get-low-latency-hls-manifest-configuration-manifest-window-seconds
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (program-date-time-interval-seconds :initarg
                         :program-date-time-interval-seconds :initform
                         common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-get-low-latency-hls-manifest-configuration-program-date-time-interval-seconds
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (scte-hls :initarg :scte-hls :initform common-lisp:nil
                         :type (common-lisp:or scte-hls common-lisp:null)
                         :accessor
                         struct-shape-get-low-latency-hls-manifest-configuration-scte-hls
                         :shape "ScteHls" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filter-configuration :initarg :filter-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or filter-configuration common-lisp:null)
                         :accessor
                         struct-shape-get-low-latency-hls-manifest-configuration-filter-configuration
                         :shape "FilterConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-low-latency-hls-manifest-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-low-latency-hls-manifest-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-low-latency-hls-manifest-configuration
                    'make-get-low-latency-hls-manifest-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-low-latency-hls-manifest-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-low-latency-hls-manifest-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'manifest-name))
      (common-lisp:list
       (common-lisp:cons "ManifestName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'child-manifest-name))
      (common-lisp:list
       (common-lisp:cons "ChildManifestName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'manifest-window-seconds))
      (common-lisp:list
       (common-lisp:cons "ManifestWindowSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'program-date-time-interval-seconds))
      (common-lisp:list
       (common-lisp:cons "ProgramDateTimeIntervalSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scte-hls))
      (common-lisp:list
       (common-lisp:cons "ScteHls"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'filter-configuration))
      (common-lisp:list
       (common-lisp:cons "FilterConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-low-latency-hls-manifest-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype get-low-latency-hls-manifests ()
   '(trivial-types:proper-list get-low-latency-hls-manifest-configuration))
 (common-lisp:defun make-get-low-latency-hls-manifests
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            get-low-latency-hls-manifest-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass get-origin-endpoint-policy-request common-lisp:nil
                       ((channel-group-name :initarg :channel-group-name
                         :initform
                         (common-lisp:error ":channel-group-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-get-origin-endpoint-policy-request-channel-group-name
                         :shape "ResourceName" :location "uri" :location-name
                         "ChannelGroupName")
                        (channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-get-origin-endpoint-policy-request-channel-name
                         :shape "ResourceName" :location "uri" :location-name
                         "ChannelName")
                        (origin-endpoint-name :initarg :origin-endpoint-name
                         :initform
                         (common-lisp:error
                          ":origin-endpoint-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-get-origin-endpoint-policy-request-origin-endpoint-name
                         :shape "ResourceName" :location "uri" :location-name
                         "OriginEndpointName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-origin-endpoint-policy-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-origin-endpoint-policy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-origin-endpoint-policy-request
                    'make-get-origin-endpoint-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-origin-endpoint-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-origin-endpoint-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-origin-endpoint-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-origin-endpoint-policy-response common-lisp:nil
                       ((channel-group-name :initarg :channel-group-name
                         :initform
                         (common-lisp:error ":channel-group-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-get-origin-endpoint-policy-response-channel-group-name
                         :shape "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-get-origin-endpoint-policy-response-channel-name
                         :shape "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (origin-endpoint-name :initarg :origin-endpoint-name
                         :initform
                         (common-lisp:error
                          ":origin-endpoint-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-get-origin-endpoint-policy-response-origin-endpoint-name
                         :shape "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (policy :initarg :policy :initform
                         (common-lisp:error ":policy is required") :type
                         (common-lisp:or policy-text common-lisp:null)
                         :accessor
                         struct-shape-get-origin-endpoint-policy-response-policy
                         :shape "PolicyText" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-origin-endpoint-policy-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-origin-endpoint-policy-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-origin-endpoint-policy-response
                    'make-get-origin-endpoint-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-origin-endpoint-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-origin-endpoint-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-group-name))
      (common-lisp:list
       (common-lisp:cons "ChannelGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'origin-endpoint-name))
      (common-lisp:list
       (common-lisp:cons "OriginEndpointName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "Policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-origin-endpoint-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-origin-endpoint-request common-lisp:nil
                       ((channel-group-name :initarg :channel-group-name
                         :initform
                         (common-lisp:error ":channel-group-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-get-origin-endpoint-request-channel-group-name
                         :shape "ResourceName" :location "uri" :location-name
                         "ChannelGroupName")
                        (channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-get-origin-endpoint-request-channel-name
                         :shape "ResourceName" :location "uri" :location-name
                         "ChannelName")
                        (origin-endpoint-name :initarg :origin-endpoint-name
                         :initform
                         (common-lisp:error
                          ":origin-endpoint-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-get-origin-endpoint-request-origin-endpoint-name
                         :shape "ResourceName" :location "uri" :location-name
                         "OriginEndpointName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-origin-endpoint-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-origin-endpoint-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-origin-endpoint-request
                    'make-get-origin-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-origin-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-origin-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-origin-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-origin-endpoint-response common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-origin-endpoint-response-arn :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (channel-group-name :initarg :channel-group-name
                         :initform
                         (common-lisp:error ":channel-group-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-get-origin-endpoint-response-channel-group-name
                         :shape "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-get-origin-endpoint-response-channel-name
                         :shape "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (origin-endpoint-name :initarg :origin-endpoint-name
                         :initform
                         (common-lisp:error
                          ":origin-endpoint-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-get-origin-endpoint-response-origin-endpoint-name
                         :shape "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (container-type :initarg :container-type :initform
                         (common-lisp:error ":container-type is required")
                         :type (common-lisp:or container-type common-lisp:null)
                         :accessor
                         struct-shape-get-origin-endpoint-response-container-type
                         :shape "ContainerType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (segment :initarg :segment :initform
                         (common-lisp:error ":segment is required") :type
                         (common-lisp:or segment common-lisp:null) :accessor
                         struct-shape-get-origin-endpoint-response-segment
                         :shape "Segment" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         (common-lisp:error ":created-at is required") :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-get-origin-endpoint-response-created-at
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (modified-at :initarg :modified-at :initform
                         (common-lisp:error ":modified-at is required") :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-get-origin-endpoint-response-modified-at
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-description common-lisp:null)
                         :accessor
                         struct-shape-get-origin-endpoint-response-description
                         :shape "ResourceDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (startover-window-seconds :initarg
                         :startover-window-seconds :initform common-lisp:nil
                         :type (common-lisp:or integer common-lisp:null)
                         :accessor
                         struct-shape-get-origin-endpoint-response-startover-window-seconds
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (hls-manifests :initarg :hls-manifests :initform
                         common-lisp:nil :type
                         (common-lisp:or get-hls-manifests common-lisp:null)
                         :accessor
                         struct-shape-get-origin-endpoint-response-hls-manifests
                         :shape "GetHlsManifests" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (low-latency-hls-manifests :initarg
                         :low-latency-hls-manifests :initform common-lisp:nil
                         :type
                         (common-lisp:or get-low-latency-hls-manifests
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-origin-endpoint-response-low-latency-hls-manifests
                         :shape "GetLowLatencyHlsManifests" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-get-origin-endpoint-response-tags :shape
                         "TagMap" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-origin-endpoint-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-origin-endpoint-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-origin-endpoint-response
                    'make-get-origin-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-origin-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-origin-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-group-name))
      (common-lisp:list
       (common-lisp:cons "ChannelGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'origin-endpoint-name))
      (common-lisp:list
       (common-lisp:cons "OriginEndpointName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-type))
      (common-lisp:list
       (common-lisp:cons "ContainerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment))
      (common-lisp:list
       (common-lisp:cons "Segment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'modified-at))
      (common-lisp:list
       (common-lisp:cons "ModifiedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'startover-window-seconds))
      (common-lisp:list
       (common-lisp:cons "StartoverWindowSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-manifests))
      (common-lisp:list
       (common-lisp:cons "HlsManifests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'low-latency-hls-manifests))
      (common-lisp:list
       (common-lisp:cons "LowLatencyHlsManifests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-origin-endpoint-response))
   common-lisp:nil))
(common-lisp:deftype idempotency-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass ingest-endpoint common-lisp:nil
                       ((id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-ingest-endpoint-id :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (url :initarg :url :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-ingest-endpoint-url :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ingest-endpoint
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'ingest-endpoint
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'ingest-endpoint 'make-ingest-endpoint))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input ingest-endpoint))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input ingest-endpoint))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input ingest-endpoint))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype ingest-endpoint-list ()
   '(trivial-types:proper-list ingest-endpoint))
 (common-lisp:defun make-ingest-endpoint-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ingest-endpoint))
   aws-sdk/generator/shape::members))
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (mediapackagev2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message)))
(common-lisp:progn
 (common-lisp:defclass list-channel-groups-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or list-resource-max-results
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-channel-groups-request-max-results
                         :shape "ListResourceMaxResults" :location
                         "querystring" :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-channel-groups-request-next-token
                         :shape "String" :location "querystring" :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channel-groups-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-channel-groups-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channel-groups-request
                    'make-list-channel-groups-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-groups-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-groups-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-groups-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channel-groups-response common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or channel-groups-list common-lisp:null)
                         :accessor
                         struct-shape-list-channel-groups-response-items :shape
                         "ChannelGroupsList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-channel-groups-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channel-groups-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-channel-groups-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channel-groups-response
                    'make-list-channel-groups-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-groups-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-groups-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-groups-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channels-request common-lisp:nil
                       ((channel-group-name :initarg :channel-group-name
                         :initform
                         (common-lisp:error ":channel-group-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-list-channels-request-channel-group-name
                         :shape "ResourceName" :location "uri" :location-name
                         "ChannelGroupName")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or list-resource-max-results
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-channels-request-max-results :shape
                         "ListResourceMaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-channels-request-next-token :shape
                         "String" :location "querystring" :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channels-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-channels-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channels-request 'make-list-channels-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channels-response common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or channel-list common-lisp:null)
                         :accessor struct-shape-list-channels-response-items
                         :shape "ChannelList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-channels-response-next-token :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channels-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-channels-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channels-response 'make-list-channels-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-hls-manifest-configuration common-lisp:nil
                       ((manifest-name :initarg :manifest-name :initform
                         (common-lisp:error ":manifest-name is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-list-hls-manifest-configuration-manifest-name
                         :shape "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (child-manifest-name :initarg :child-manifest-name
                         :initform common-lisp:nil :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-list-hls-manifest-configuration-child-manifest-name
                         :shape "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (url :initarg :url :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-hls-manifest-configuration-url
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-hls-manifest-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-hls-manifest-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-hls-manifest-configuration
                    'make-list-hls-manifest-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-hls-manifest-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-hls-manifest-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'manifest-name))
      (common-lisp:list
       (common-lisp:cons "ManifestName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'child-manifest-name))
      (common-lisp:list
       (common-lisp:cons "ChildManifestName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-hls-manifest-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype list-hls-manifests ()
   '(trivial-types:proper-list list-hls-manifest-configuration))
 (common-lisp:defun make-list-hls-manifests
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            list-hls-manifest-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass list-low-latency-hls-manifest-configuration
                       common-lisp:nil
                       ((manifest-name :initarg :manifest-name :initform
                         (common-lisp:error ":manifest-name is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-list-low-latency-hls-manifest-configuration-manifest-name
                         :shape "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (child-manifest-name :initarg :child-manifest-name
                         :initform common-lisp:nil :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-list-low-latency-hls-manifest-configuration-child-manifest-name
                         :shape "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (url :initarg :url :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-low-latency-hls-manifest-configuration-url
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-low-latency-hls-manifest-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-low-latency-hls-manifest-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-low-latency-hls-manifest-configuration
                    'make-list-low-latency-hls-manifest-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-low-latency-hls-manifest-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-low-latency-hls-manifest-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'manifest-name))
      (common-lisp:list
       (common-lisp:cons "ManifestName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'child-manifest-name))
      (common-lisp:list
       (common-lisp:cons "ChildManifestName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-low-latency-hls-manifest-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype list-low-latency-hls-manifests ()
   '(trivial-types:proper-list list-low-latency-hls-manifest-configuration))
 (common-lisp:defun make-list-low-latency-hls-manifests
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            list-low-latency-hls-manifest-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass list-origin-endpoints-request common-lisp:nil
                       ((channel-group-name :initarg :channel-group-name
                         :initform
                         (common-lisp:error ":channel-group-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-list-origin-endpoints-request-channel-group-name
                         :shape "ResourceName" :location "uri" :location-name
                         "ChannelGroupName")
                        (channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-list-origin-endpoints-request-channel-name
                         :shape "ResourceName" :location "uri" :location-name
                         "ChannelName")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or list-resource-max-results
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-origin-endpoints-request-max-results
                         :shape "ListResourceMaxResults" :location
                         "querystring" :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-origin-endpoints-request-next-token
                         :shape "String" :location "querystring" :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-origin-endpoints-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-origin-endpoints-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-origin-endpoints-request
                    'make-list-origin-endpoints-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-origin-endpoints-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-origin-endpoints-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-origin-endpoints-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-origin-endpoints-response common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or origin-endpoints-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-origin-endpoints-response-items
                         :shape "OriginEndpointsList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-origin-endpoints-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-origin-endpoints-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-origin-endpoints-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-origin-endpoints-response
                    'make-list-origin-endpoints-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-origin-endpoints-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-origin-endpoints-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-origin-endpoints-response))
   common-lisp:nil))
(common-lisp:deftype list-resource-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or tag-arn common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-request-resource-arn
                         :shape "TagArn" :location "uri" :location-name
                         "ResourceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-response-tags
                         :shape "TagMap" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:deftype manifest-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass origin-endpoint-list-configuration common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-origin-endpoint-list-configuration-arn
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-group-name :initarg :channel-group-name
                         :initform
                         (common-lisp:error ":channel-group-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-origin-endpoint-list-configuration-channel-group-name
                         :shape "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-origin-endpoint-list-configuration-channel-name
                         :shape "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (origin-endpoint-name :initarg :origin-endpoint-name
                         :initform
                         (common-lisp:error
                          ":origin-endpoint-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-origin-endpoint-list-configuration-origin-endpoint-name
                         :shape "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (container-type :initarg :container-type :initform
                         (common-lisp:error ":container-type is required")
                         :type (common-lisp:or container-type common-lisp:null)
                         :accessor
                         struct-shape-origin-endpoint-list-configuration-container-type
                         :shape "ContainerType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-description common-lisp:null)
                         :accessor
                         struct-shape-origin-endpoint-list-configuration-description
                         :shape "ResourceDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-origin-endpoint-list-configuration-created-at
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (modified-at :initarg :modified-at :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-origin-endpoint-list-configuration-modified-at
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (hls-manifests :initarg :hls-manifests :initform
                         common-lisp:nil :type
                         (common-lisp:or list-hls-manifests common-lisp:null)
                         :accessor
                         struct-shape-origin-endpoint-list-configuration-hls-manifests
                         :shape "ListHlsManifests" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (low-latency-hls-manifests :initarg
                         :low-latency-hls-manifests :initform common-lisp:nil
                         :type
                         (common-lisp:or list-low-latency-hls-manifests
                                         common-lisp:null)
                         :accessor
                         struct-shape-origin-endpoint-list-configuration-low-latency-hls-manifests
                         :shape "ListLowLatencyHlsManifests" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-origin-endpoint-list-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'origin-endpoint-list-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'origin-endpoint-list-configuration
                    'make-origin-endpoint-list-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          origin-endpoint-list-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          origin-endpoint-list-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-group-name))
      (common-lisp:list
       (common-lisp:cons "ChannelGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'origin-endpoint-name))
      (common-lisp:list
       (common-lisp:cons "OriginEndpointName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-type))
      (common-lisp:list
       (common-lisp:cons "ContainerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'modified-at))
      (common-lisp:list
       (common-lisp:cons "ModifiedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-manifests))
      (common-lisp:list
       (common-lisp:cons "HlsManifests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'low-latency-hls-manifests))
      (common-lisp:list
       (common-lisp:cons "LowLatencyHlsManifests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          origin-endpoint-list-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype origin-endpoints-list ()
   '(trivial-types:proper-list origin-endpoint-list-configuration))
 (common-lisp:defun make-origin-endpoints-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            origin-endpoint-list-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:deftype policy-text () 'common-lisp:string)
(common-lisp:deftype preset-speke20audio () 'common-lisp:string)
(common-lisp:deftype preset-speke20video () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass put-channel-policy-request common-lisp:nil
                       ((channel-group-name :initarg :channel-group-name
                         :initform
                         (common-lisp:error ":channel-group-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-put-channel-policy-request-channel-group-name
                         :shape "ResourceName" :location "uri" :location-name
                         "ChannelGroupName")
                        (channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-put-channel-policy-request-channel-name
                         :shape "ResourceName" :location "uri" :location-name
                         "ChannelName")
                        (policy :initarg :policy :initform
                         (common-lisp:error ":policy is required") :type
                         (common-lisp:or policy-text common-lisp:null)
                         :accessor
                         struct-shape-put-channel-policy-request-policy :shape
                         "PolicyText" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-channel-policy-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'put-channel-policy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-channel-policy-request
                    'make-put-channel-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-channel-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-channel-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "Policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-channel-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-channel-policy-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-channel-policy-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'put-channel-policy-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-channel-policy-response
                    'make-put-channel-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-channel-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-channel-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-channel-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-origin-endpoint-policy-request common-lisp:nil
                       ((channel-group-name :initarg :channel-group-name
                         :initform
                         (common-lisp:error ":channel-group-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-put-origin-endpoint-policy-request-channel-group-name
                         :shape "ResourceName" :location "uri" :location-name
                         "ChannelGroupName")
                        (channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-put-origin-endpoint-policy-request-channel-name
                         :shape "ResourceName" :location "uri" :location-name
                         "ChannelName")
                        (origin-endpoint-name :initarg :origin-endpoint-name
                         :initform
                         (common-lisp:error
                          ":origin-endpoint-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-put-origin-endpoint-policy-request-origin-endpoint-name
                         :shape "ResourceName" :location "uri" :location-name
                         "OriginEndpointName")
                        (policy :initarg :policy :initform
                         (common-lisp:error ":policy is required") :type
                         (common-lisp:or policy-text common-lisp:null)
                         :accessor
                         struct-shape-put-origin-endpoint-policy-request-policy
                         :shape "PolicyText" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-origin-endpoint-policy-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-origin-endpoint-policy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-origin-endpoint-policy-request
                    'make-put-origin-endpoint-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-origin-endpoint-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-origin-endpoint-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "Policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-origin-endpoint-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-origin-endpoint-policy-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-origin-endpoint-policy-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-origin-endpoint-policy-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-origin-endpoint-policy-response
                    'make-put-origin-endpoint-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-origin-endpoint-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-origin-endpoint-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-origin-endpoint-policy-response))
   common-lisp:nil))
(common-lisp:deftype resource-description () 'common-lisp:string)
(common-lisp:deftype resource-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (mediapackagev2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)
      (resource-type-not-found :initarg :resource-type-not-found :initform
       common-lisp:nil :reader
       resource-not-found-exception-resource-type-not-found)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message
                    'resource-not-found-exception-resource-type-not-found)))
(common-lisp:deftype resource-type-not-found () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass scte common-lisp:nil
                       ((scte-filter :initarg :scte-filter :initform
                         common-lisp:nil :type
                         (common-lisp:or scte-filter-list common-lisp:null)
                         :accessor struct-shape-scte-scte-filter :shape
                         "ScteFilterList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-scte (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'scte
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'scte 'make-scte))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input scte))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input scte))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scte-filter))
      (common-lisp:list
       (common-lisp:cons "ScteFilter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input scte))
   common-lisp:nil))
(common-lisp:deftype scte-filter () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype scte-filter-list ()
   '(trivial-types:proper-list scte-filter))
 (common-lisp:defun make-scte-filter-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list scte-filter))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass scte-hls common-lisp:nil
                       ((ad-marker-hls :initarg :ad-marker-hls :initform
                         common-lisp:nil :type
                         (common-lisp:or ad-marker-hls common-lisp:null)
                         :accessor struct-shape-scte-hls-ad-marker-hls :shape
                         "AdMarkerHls" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-scte-hls
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'scte-hls
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'scte-hls 'make-scte-hls))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input scte-hls))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input scte-hls))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ad-marker-hls))
      (common-lisp:list
       (common-lisp:cons "AdMarkerHls"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input scte-hls))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass segment common-lisp:nil
                       ((segment-duration-seconds :initarg
                         :segment-duration-seconds :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          segment-segment-duration-seconds-integer
                          common-lisp:null)
                         :accessor
                         struct-shape-segment-segment-duration-seconds :shape
                         "SegmentSegmentDurationSecondsInteger" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (segment-name :initarg :segment-name :initform
                         common-lisp:nil :type
                         (common-lisp:or segment-segment-name-string
                                         common-lisp:null)
                         :accessor struct-shape-segment-segment-name :shape
                         "SegmentSegmentNameString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (ts-use-audio-rendition-group :initarg
                         :ts-use-audio-rendition-group :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-segment-ts-use-audio-rendition-group
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (include-iframe-only-streams :initarg
                         :include-iframe-only-streams :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         struct-shape-segment-include-iframe-only-streams
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (ts-include-dvb-subtitles :initarg
                         :ts-include-dvb-subtitles :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         struct-shape-segment-ts-include-dvb-subtitles :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (scte :initarg :scte :initform common-lisp:nil :type
                         (common-lisp:or scte common-lisp:null) :accessor
                         struct-shape-segment-scte :shape "Scte" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (encryption :initarg :encryption :initform
                         common-lisp:nil :type
                         (common-lisp:or encryption common-lisp:null) :accessor
                         struct-shape-segment-encryption :shape "Encryption"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-segment
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'segment
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'segment 'make-segment))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input segment))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input segment))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segment-duration-seconds))
      (common-lisp:list
       (common-lisp:cons "SegmentDurationSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-name))
      (common-lisp:list
       (common-lisp:cons "SegmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ts-use-audio-rendition-group))
      (common-lisp:list
       (common-lisp:cons "TsUseAudioRenditionGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-iframe-only-streams))
      (common-lisp:list
       (common-lisp:cons "IncludeIframeOnlyStreams"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ts-include-dvb-subtitles))
      (common-lisp:list
       (common-lisp:cons "TsIncludeDvbSubtitles"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scte))
      (common-lisp:list
       (common-lisp:cons "Scte"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption))
      (common-lisp:list
       (common-lisp:cons "Encryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input segment))
   common-lisp:nil))
(common-lisp:deftype segment-segment-duration-seconds-integer ()
  'common-lisp:integer)
(common-lisp:deftype segment-segment-name-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition service-quota-exceeded-exception
     (mediapackagev2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-quota-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-quota-exceeded-exception
                    'service-quota-exceeded-exception-message)))
(common-lisp:progn
 (common-lisp:defclass speke-key-provider common-lisp:nil
                       ((encryption-contract-configuration :initarg
                         :encryption-contract-configuration :initform
                         (common-lisp:error
                          ":encryption-contract-configuration is required")
                         :type
                         (common-lisp:or encryption-contract-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-speke-key-provider-encryption-contract-configuration
                         :shape "EncryptionContractConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (resource-id :initarg :resource-id :initform
                         (common-lisp:error ":resource-id is required") :type
                         (common-lisp:or speke-key-provider-resource-id-string
                                         common-lisp:null)
                         :accessor struct-shape-speke-key-provider-resource-id
                         :shape "SpekeKeyProviderResourceIdString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (drm-systems :initarg :drm-systems :initform
                         (common-lisp:error ":drm-systems is required") :type
                         (common-lisp:or speke-key-provider-drm-systems-list
                                         common-lisp:null)
                         :accessor struct-shape-speke-key-provider-drm-systems
                         :shape "SpekeKeyProviderDrmSystemsList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (role-arn :initarg :role-arn :initform
                         (common-lisp:error ":role-arn is required") :type
                         (common-lisp:or speke-key-provider-role-arn-string
                                         common-lisp:null)
                         :accessor struct-shape-speke-key-provider-role-arn
                         :shape "SpekeKeyProviderRoleArnString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (url :initarg :url :initform
                         (common-lisp:error ":url is required") :type
                         (common-lisp:or speke-key-provider-url-string
                                         common-lisp:null)
                         :accessor struct-shape-speke-key-provider-url :shape
                         "SpekeKeyProviderUrlString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-speke-key-provider
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'speke-key-provider
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'speke-key-provider 'make-speke-key-provider))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input speke-key-provider))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input speke-key-provider))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'encryption-contract-configuration))
      (common-lisp:list
       (common-lisp:cons "EncryptionContractConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id))
      (common-lisp:list
       (common-lisp:cons "ResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'drm-systems))
      (common-lisp:list
       (common-lisp:cons "DrmSystems"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input speke-key-provider))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype speke-key-provider-drm-systems-list ()
   '(trivial-types:proper-list drm-system))
 (common-lisp:defun make-speke-key-provider-drm-systems-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list drm-system))
   aws-sdk/generator/shape::members))
(common-lisp:deftype speke-key-provider-resource-id-string ()
  'common-lisp:string)
(common-lisp:deftype speke-key-provider-role-arn-string () 'common-lisp:string)
(common-lisp:deftype speke-key-provider-url-string () 'common-lisp:string)
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:deftype tag-arn () 'common-lisp:string)
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun make-tag-key-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-map () 'common-lisp:hash-table)
 (common-lisp:defun make-tag-map (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or tag-arn common-lisp:null) :accessor
                         struct-shape-tag-resource-request-resource-arn :shape
                         "TagArn" :location "uri" :location-name "ResourceArn")
                        (tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-tag-resource-request-tags :shape "TagMap"
                         :location common-lisp:nil :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (mediapackagev2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message)))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:deftype ts-encryption-method () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or tag-arn common-lisp:null) :accessor
                         struct-shape-untag-resource-request-resource-arn
                         :shape "TagArn" :location "uri" :location-name
                         "ResourceArn")
                        (tag-keys :initarg :tag-keys :initform
                         (common-lisp:error ":tag-keys is required") :type
                         (common-lisp:or tag-key-list common-lisp:null)
                         :accessor struct-shape-untag-resource-request-tag-keys
                         :shape "TagKeyList" :location "querystring"
                         :location-name "tagKeys"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-channel-group-request common-lisp:nil
                       ((channel-group-name :initarg :channel-group-name
                         :initform
                         (common-lisp:error ":channel-group-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-update-channel-group-request-channel-group-name
                         :shape "ResourceName" :location "uri" :location-name
                         "ChannelGroupName")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-description common-lisp:null)
                         :accessor
                         struct-shape-update-channel-group-request-description
                         :shape "ResourceDescription" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-channel-group-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-channel-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-channel-group-request
                    'make-update-channel-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-channel-group-response common-lisp:nil
                       ((channel-group-name :initarg :channel-group-name
                         :initform
                         (common-lisp:error ":channel-group-name is required")
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-update-channel-group-response-channel-group-name
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-channel-group-response-arn :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (egress-domain :initarg :egress-domain :initform
                         (common-lisp:error ":egress-domain is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-channel-group-response-egress-domain
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         (common-lisp:error ":created-at is required") :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-update-channel-group-response-created-at
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (modified-at :initarg :modified-at :initform
                         (common-lisp:error ":modified-at is required") :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-update-channel-group-response-modified-at
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-description common-lisp:null)
                         :accessor
                         struct-shape-update-channel-group-response-description
                         :shape "ResourceDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-update-channel-group-response-tags :shape
                         "TagMap" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-channel-group-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-channel-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-channel-group-response
                    'make-update-channel-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-group-name))
      (common-lisp:list
       (common-lisp:cons "ChannelGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'egress-domain))
      (common-lisp:list
       (common-lisp:cons "EgressDomain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'modified-at))
      (common-lisp:list
       (common-lisp:cons "ModifiedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-channel-request common-lisp:nil
                       ((channel-group-name :initarg :channel-group-name
                         :initform
                         (common-lisp:error ":channel-group-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-update-channel-request-channel-group-name
                         :shape "ResourceName" :location "uri" :location-name
                         "ChannelGroupName")
                        (channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-update-channel-request-channel-name
                         :shape "ResourceName" :location "uri" :location-name
                         "ChannelName")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-description common-lisp:null)
                         :accessor
                         struct-shape-update-channel-request-description :shape
                         "ResourceDescription" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-channel-request 'make-update-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-channel-response common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-channel-response-arn :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-channel-response-channel-name
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-group-name :initarg :channel-group-name
                         :initform
                         (common-lisp:error ":channel-group-name is required")
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-update-channel-response-channel-group-name
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         (common-lisp:error ":created-at is required") :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-update-channel-response-created-at :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (modified-at :initarg :modified-at :initform
                         (common-lisp:error ":modified-at is required") :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-update-channel-response-modified-at
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-description common-lisp:null)
                         :accessor
                         struct-shape-update-channel-response-description
                         :shape "ResourceDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (ingest-endpoints :initarg :ingest-endpoints :initform
                         common-lisp:nil :type
                         (common-lisp:or ingest-endpoint-list common-lisp:null)
                         :accessor
                         struct-shape-update-channel-response-ingest-endpoints
                         :shape "IngestEndpointList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-update-channel-response-tags :shape
                         "TagMap" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-channel-response 'make-update-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-group-name))
      (common-lisp:list
       (common-lisp:cons "ChannelGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'modified-at))
      (common-lisp:list
       (common-lisp:cons "ModifiedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ingest-endpoints))
      (common-lisp:list
       (common-lisp:cons "IngestEndpoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-origin-endpoint-request common-lisp:nil
                       ((channel-group-name :initarg :channel-group-name
                         :initform
                         (common-lisp:error ":channel-group-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-update-origin-endpoint-request-channel-group-name
                         :shape "ResourceName" :location "uri" :location-name
                         "ChannelGroupName")
                        (channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-update-origin-endpoint-request-channel-name
                         :shape "ResourceName" :location "uri" :location-name
                         "ChannelName")
                        (origin-endpoint-name :initarg :origin-endpoint-name
                         :initform
                         (common-lisp:error
                          ":origin-endpoint-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-update-origin-endpoint-request-origin-endpoint-name
                         :shape "ResourceName" :location "uri" :location-name
                         "OriginEndpointName")
                        (container-type :initarg :container-type :initform
                         (common-lisp:error ":container-type is required")
                         :type (common-lisp:or container-type common-lisp:null)
                         :accessor
                         struct-shape-update-origin-endpoint-request-container-type
                         :shape "ContainerType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (segment :initarg :segment :initform common-lisp:nil
                         :type (common-lisp:or segment common-lisp:null)
                         :accessor
                         struct-shape-update-origin-endpoint-request-segment
                         :shape "Segment" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-description common-lisp:null)
                         :accessor
                         struct-shape-update-origin-endpoint-request-description
                         :shape "ResourceDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (startover-window-seconds :initarg
                         :startover-window-seconds :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          update-origin-endpoint-request-startover-window-seconds-integer
                          common-lisp:null)
                         :accessor
                         struct-shape-update-origin-endpoint-request-startover-window-seconds
                         :shape
                         "UpdateOriginEndpointRequestStartoverWindowSecondsInteger"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (hls-manifests :initarg :hls-manifests :initform
                         common-lisp:nil :type
                         (common-lisp:or create-hls-manifests common-lisp:null)
                         :accessor
                         struct-shape-update-origin-endpoint-request-hls-manifests
                         :shape "CreateHlsManifests" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (low-latency-hls-manifests :initarg
                         :low-latency-hls-manifests :initform common-lisp:nil
                         :type
                         (common-lisp:or create-low-latency-hls-manifests
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-origin-endpoint-request-low-latency-hls-manifests
                         :shape "CreateLowLatencyHlsManifests" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-origin-endpoint-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-origin-endpoint-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-origin-endpoint-request
                    'make-update-origin-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-origin-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-origin-endpoint-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-type))
      (common-lisp:list
       (common-lisp:cons "ContainerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment))
      (common-lisp:list
       (common-lisp:cons "Segment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'startover-window-seconds))
      (common-lisp:list
       (common-lisp:cons "StartoverWindowSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-manifests))
      (common-lisp:list
       (common-lisp:cons "HlsManifests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'low-latency-hls-manifests))
      (common-lisp:list
       (common-lisp:cons "LowLatencyHlsManifests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-origin-endpoint-request))
   common-lisp:nil))
(common-lisp:deftype update-origin-endpoint-request-startover-window-seconds-integer
                     ()
  'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass update-origin-endpoint-response common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-origin-endpoint-response-arn
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-group-name :initarg :channel-group-name
                         :initform
                         (common-lisp:error ":channel-group-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-update-origin-endpoint-response-channel-group-name
                         :shape "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-update-origin-endpoint-response-channel-name
                         :shape "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (origin-endpoint-name :initarg :origin-endpoint-name
                         :initform
                         (common-lisp:error
                          ":origin-endpoint-name is required")
                         :type (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-update-origin-endpoint-response-origin-endpoint-name
                         :shape "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (container-type :initarg :container-type :initform
                         (common-lisp:error ":container-type is required")
                         :type (common-lisp:or container-type common-lisp:null)
                         :accessor
                         struct-shape-update-origin-endpoint-response-container-type
                         :shape "ContainerType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (segment :initarg :segment :initform
                         (common-lisp:error ":segment is required") :type
                         (common-lisp:or segment common-lisp:null) :accessor
                         struct-shape-update-origin-endpoint-response-segment
                         :shape "Segment" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         (common-lisp:error ":created-at is required") :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-update-origin-endpoint-response-created-at
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (modified-at :initarg :modified-at :initform
                         (common-lisp:error ":modified-at is required") :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-update-origin-endpoint-response-modified-at
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-description common-lisp:null)
                         :accessor
                         struct-shape-update-origin-endpoint-response-description
                         :shape "ResourceDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (startover-window-seconds :initarg
                         :startover-window-seconds :initform common-lisp:nil
                         :type (common-lisp:or integer common-lisp:null)
                         :accessor
                         struct-shape-update-origin-endpoint-response-startover-window-seconds
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (hls-manifests :initarg :hls-manifests :initform
                         common-lisp:nil :type
                         (common-lisp:or get-hls-manifests common-lisp:null)
                         :accessor
                         struct-shape-update-origin-endpoint-response-hls-manifests
                         :shape "GetHlsManifests" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (low-latency-hls-manifests :initarg
                         :low-latency-hls-manifests :initform common-lisp:nil
                         :type
                         (common-lisp:or get-low-latency-hls-manifests
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-origin-endpoint-response-low-latency-hls-manifests
                         :shape "GetLowLatencyHlsManifests" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-update-origin-endpoint-response-tags
                         :shape "TagMap" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-origin-endpoint-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-origin-endpoint-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-origin-endpoint-response
                    'make-update-origin-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-origin-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-origin-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-group-name))
      (common-lisp:list
       (common-lisp:cons "ChannelGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'origin-endpoint-name))
      (common-lisp:list
       (common-lisp:cons "OriginEndpointName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-type))
      (common-lisp:list
       (common-lisp:cons "ContainerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment))
      (common-lisp:list
       (common-lisp:cons "Segment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'modified-at))
      (common-lisp:list
       (common-lisp:cons "ModifiedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'startover-window-seconds))
      (common-lisp:list
       (common-lisp:cons "StartoverWindowSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-manifests))
      (common-lisp:list
       (common-lisp:cons "HlsManifests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'low-latency-hls-manifests))
      (common-lisp:list
       (common-lisp:cons "LowLatencyHlsManifests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-origin-endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (mediapackagev2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)
      (validation-exception-type :initarg :validation-exception-type :initform
       common-lisp:nil :reader
       validation-exception-validation-exception-type)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message
                    'validation-exception-validation-exception-type)))
(common-lisp:deftype validation-exception-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun create-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-group-name channel-name
                     client-token description tags)
   (common-lisp:declare
    (common-lisp:ignorable channel-group-name channel-name client-token
     description tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackagev2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channelGroup/~A/channel"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-group-name))))
                                                        "CreateChannel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-channel))
(common-lisp:progn
 (common-lisp:defun create-channel-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-group-name client-token
                     description tags)
   (common-lisp:declare
    (common-lisp:ignorable channel-group-name client-token description tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-channel-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackagev2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/channelGroup"
                                                        "CreateChannelGroup"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-channel-group))
(common-lisp:progn
 (common-lisp:defun create-origin-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-group-name channel-name
                     origin-endpoint-name container-type segment client-token
                     description startover-window-seconds hls-manifests
                     low-latency-hls-manifests tags)
   (common-lisp:declare
    (common-lisp:ignorable channel-group-name channel-name origin-endpoint-name
     container-type segment client-token description startover-window-seconds
     hls-manifests low-latency-hls-manifests tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-origin-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackagev2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channelGroup/~A/channel/~A/originEndpoint"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-group-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))))
                                                        "CreateOriginEndpoint"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-origin-endpoint))
(common-lisp:progn
 (common-lisp:defun delete-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-group-name channel-name)
   (common-lisp:declare
    (common-lisp:ignorable channel-group-name channel-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackagev2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channelGroup/~A/channel/~A/"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-group-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))))
                                                        "DeleteChannel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-channel))
(common-lisp:progn
 (common-lisp:defun delete-channel-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-group-name)
   (common-lisp:declare (common-lisp:ignorable channel-group-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-channel-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackagev2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channelGroup/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-group-name))))
                                                        "DeleteChannelGroup"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-channel-group))
(common-lisp:progn
 (common-lisp:defun delete-channel-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-group-name channel-name)
   (common-lisp:declare
    (common-lisp:ignorable channel-group-name channel-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-channel-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackagev2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channelGroup/~A/channel/~A/policy"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-group-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))))
                                                        "DeleteChannelPolicy"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-channel-policy))
(common-lisp:progn
 (common-lisp:defun delete-origin-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-group-name channel-name
                     origin-endpoint-name)
   (common-lisp:declare
    (common-lisp:ignorable channel-group-name channel-name
     origin-endpoint-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-origin-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackagev2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channelGroup/~A/channel/~A/originEndpoint/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-group-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'origin-endpoint-name))))
                                                        "DeleteOriginEndpoint"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-origin-endpoint))
(common-lisp:progn
 (common-lisp:defun delete-origin-endpoint-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-group-name channel-name
                     origin-endpoint-name)
   (common-lisp:declare
    (common-lisp:ignorable channel-group-name channel-name
     origin-endpoint-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-origin-endpoint-policy-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackagev2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channelGroup/~A/channel/~A/originEndpoint/~A/policy"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-group-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'origin-endpoint-name))))
                                                        "DeleteOriginEndpointPolicy"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-origin-endpoint-policy))
(common-lisp:progn
 (common-lisp:defun get-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-group-name channel-name)
   (common-lisp:declare
    (common-lisp:ignorable channel-group-name channel-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackagev2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channelGroup/~A/channel/~A/"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-group-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))))
                                                        "GetChannel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-channel))
(common-lisp:progn
 (common-lisp:defun get-channel-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-group-name)
   (common-lisp:declare (common-lisp:ignorable channel-group-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-channel-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackagev2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channelGroup/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-group-name))))
                                                        "GetChannelGroup"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-channel-group))
(common-lisp:progn
 (common-lisp:defun get-channel-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-group-name channel-name)
   (common-lisp:declare
    (common-lisp:ignorable channel-group-name channel-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-channel-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackagev2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channelGroup/~A/channel/~A/policy"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-group-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))))
                                                        "GetChannelPolicy"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-channel-policy))
(common-lisp:progn
 (common-lisp:defun get-origin-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-group-name channel-name
                     origin-endpoint-name)
   (common-lisp:declare
    (common-lisp:ignorable channel-group-name channel-name
     origin-endpoint-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-origin-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackagev2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channelGroup/~A/channel/~A/originEndpoint/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-group-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'origin-endpoint-name))))
                                                        "GetOriginEndpoint"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-origin-endpoint))
(common-lisp:progn
 (common-lisp:defun get-origin-endpoint-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-group-name channel-name
                     origin-endpoint-name)
   (common-lisp:declare
    (common-lisp:ignorable channel-group-name channel-name
     origin-endpoint-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-origin-endpoint-policy-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackagev2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channelGroup/~A/channel/~A/originEndpoint/~A/policy"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-group-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'origin-endpoint-name))))
                                                        "GetOriginEndpointPolicy"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-origin-endpoint-policy))
(common-lisp:progn
 (common-lisp:defun list-channel-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-channel-groups-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackagev2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/channelGroup"
                                                        "ListChannelGroups"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-channel-groups))
(common-lisp:progn
 (common-lisp:defun list-channels
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-group-name max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable channel-group-name max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-channels-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackagev2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channelGroup/~A/channel"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-group-name))))
                                                        "ListChannels"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-channels))
(common-lisp:progn
 (common-lisp:defun list-origin-endpoints
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-group-name channel-name
                     max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable channel-group-name channel-name max-results
     next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-origin-endpoints-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackagev2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channelGroup/~A/channel/~A/originEndpoint"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-group-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))))
                                                        "ListOriginEndpoints"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-origin-endpoints))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackagev2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun put-channel-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-group-name channel-name policy)
   (common-lisp:declare
    (common-lisp:ignorable channel-group-name channel-name policy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-channel-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackagev2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channelGroup/~A/channel/~A/policy"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-group-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))))
                                                        "PutChannelPolicy"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-channel-policy))
(common-lisp:progn
 (common-lisp:defun put-origin-endpoint-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-group-name channel-name
                     origin-endpoint-name policy)
   (common-lisp:declare
    (common-lisp:ignorable channel-group-name channel-name origin-endpoint-name
     policy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-origin-endpoint-policy-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackagev2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channelGroup/~A/channel/~A/originEndpoint/~A/policy"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-group-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'origin-endpoint-name))))
                                                        "PutOriginEndpointPolicy"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-origin-endpoint-policy))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackagev2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "TagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackagev2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-group-name channel-name
                     description)
   (common-lisp:declare
    (common-lisp:ignorable channel-group-name channel-name description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackagev2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channelGroup/~A/channel/~A/"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-group-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))))
                                                        "UpdateChannel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-channel))
(common-lisp:progn
 (common-lisp:defun update-channel-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-group-name description)
   (common-lisp:declare (common-lisp:ignorable channel-group-name description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-channel-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackagev2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channelGroup/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-group-name))))
                                                        "UpdateChannelGroup"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-channel-group))
(common-lisp:progn
 (common-lisp:defun update-origin-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-group-name channel-name
                     origin-endpoint-name container-type segment description
                     startover-window-seconds hls-manifests
                     low-latency-hls-manifests)
   (common-lisp:declare
    (common-lisp:ignorable channel-group-name channel-name origin-endpoint-name
     container-type segment description startover-window-seconds hls-manifests
     low-latency-hls-manifests))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-origin-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackagev2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channelGroup/~A/channel/~A/originEndpoint/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-group-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'origin-endpoint-name))))
                                                        "UpdateOriginEndpoint"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-origin-endpoint))
