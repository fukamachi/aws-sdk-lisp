;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(uiop/package:define-package #:aws-sdk/services/chime/api (:use)
                             (:nicknames #:aws/chime)
                             (:import-from #:aws-sdk/generator/shape)
                             (:import-from #:aws-sdk/generator/operation)
                             (:import-from #:aws-sdk/api)
                             (:import-from #:aws-sdk/request)
                             (:import-from #:aws-sdk/json-request)
                             (:import-from #:aws-sdk/rest-json-request)
                             (:import-from #:aws-sdk/rest-xml-request)
                             (:import-from #:aws-sdk/query-request)
                             (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/chime/api)
(common-lisp:progn
 (common-lisp:define-condition chime-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'chime-error))
(common-lisp:progn
 (common-lisp:defclass chime-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "chime" :api-version
                        "2018-05-01" :host-prefix "chime" :signing-name
                        common-lisp:nil :global-host common-lisp:nil))
 (common-lisp:export 'chime-request))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("BadRequestException" . bad-request-exception)
    ("ConflictException" . conflict-exception)
    ("ForbiddenException" . forbidden-exception)
    ("NotFoundException" . not-found-exception)
    ("ResourceLimitExceededException" . resource-limit-exceeded-exception)
    ("ServiceFailureException" . service-failure-exception)
    ("ServiceUnavailableException" . service-unavailable-exception)
    ("ThrottledClientException" . throttled-client-exception)
    ("UnauthorizedClientException" . unauthorized-client-exception)
    ("UnprocessableEntityException" . unprocessable-entity-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (chime-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       access-denied-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-code
                    'access-denied-exception-message)))
(common-lisp:progn
 (common-lisp:defclass account common-lisp:nil
                       ((aws-account-id :initarg :aws-account-id :initform
                         (common-lisp:error ":aws-account-id is required")
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-account-aws-account-id :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-account-account-id :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-account-name :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (account-type :initarg :account-type :initform
                         common-lisp:nil :type
                         (common-lisp:or account-type common-lisp:null)
                         :accessor struct-shape-account-account-type :shape
                         "AccountType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-account-created-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (default-license :initarg :default-license :initform
                         common-lisp:nil :type
                         (common-lisp:or license common-lisp:null) :accessor
                         struct-shape-account-default-license :shape "License"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (supported-licenses :initarg :supported-licenses
                         :initform common-lisp:nil :type
                         (common-lisp:or license-list common-lisp:null)
                         :accessor struct-shape-account-supported-licenses
                         :shape "LicenseList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (account-status :initarg :account-status :initform
                         common-lisp:nil :type
                         (common-lisp:or account-status common-lisp:null)
                         :accessor struct-shape-account-account-status :shape
                         "AccountStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (signin-delegate-groups :initarg
                         :signin-delegate-groups :initform common-lisp:nil
                         :type
                         (common-lisp:or signin-delegate-group-list
                                         common-lisp:null)
                         :accessor struct-shape-account-signin-delegate-groups
                         :shape "SigninDelegateGroupList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-account
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'account
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'account 'make-account))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input account))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input account))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-account-id))
      (common-lisp:list
       (common-lisp:cons "AwsAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-type))
      (common-lisp:list
       (common-lisp:cons "AccountType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default-license))
      (common-lisp:list
       (common-lisp:cons "DefaultLicense"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'supported-licenses))
      (common-lisp:list
       (common-lisp:cons "SupportedLicenses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-status))
      (common-lisp:list
       (common-lisp:cons "AccountStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'signin-delegate-groups))
      (common-lisp:list
       (common-lisp:cons "SigninDelegateGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input account))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype account-list () '(trivial-types:proper-list account))
 (common-lisp:defun make-account-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list account))
   aws-sdk/generator/shape::members))
(common-lisp:deftype account-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass account-settings common-lisp:nil
                       ((disable-remote-control :initarg
                         :disable-remote-control :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         struct-shape-account-settings-disable-remote-control
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (enable-dial-out :initarg :enable-dial-out :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-account-settings-enable-dial-out :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-account-settings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'account-settings
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'account-settings 'make-account-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input account-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input account-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-remote-control))
      (common-lisp:list
       (common-lisp:cons "DisableRemoteControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enable-dial-out))
      (common-lisp:list
       (common-lisp:cons "EnableDialOut"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input account-settings))
   common-lisp:nil))
(common-lisp:deftype account-status () 'common-lisp:string)
(common-lisp:deftype account-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass address common-lisp:nil
                       ((street-name :initarg :street-name :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor struct-shape-address-street-name :shape
                         "SensitiveNonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (street-suffix :initarg :street-suffix :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor struct-shape-address-street-suffix :shape
                         "SensitiveNonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (post-directional :initarg :post-directional :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor struct-shape-address-post-directional :shape
                         "SensitiveNonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (pre-directional :initarg :pre-directional :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor struct-shape-address-pre-directional :shape
                         "SensitiveNonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (street-number :initarg :street-number :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor struct-shape-address-street-number :shape
                         "SensitiveNonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (city :initarg :city :initform common-lisp:nil :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor struct-shape-address-city :shape
                         "SensitiveNonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor struct-shape-address-state :shape
                         "SensitiveNonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (postal-code :initarg :postal-code :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor struct-shape-address-postal-code :shape
                         "SensitiveNonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (postal-code-plus4 :initarg :postal-code-plus4
                         :initform common-lisp:nil :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor struct-shape-address-postal-code-plus4
                         :shape "SensitiveNonEmptyString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (country :initarg :country :initform common-lisp:nil
                         :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor struct-shape-address-country :shape
                         "SensitiveNonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-address
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'address
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'address 'make-address))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input address))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input address))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'street-name))
      (common-lisp:list
       (common-lisp:cons "streetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'street-suffix))
      (common-lisp:list
       (common-lisp:cons "streetSuffix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'post-directional))
      (common-lisp:list
       (common-lisp:cons "postDirectional"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pre-directional))
      (common-lisp:list
       (common-lisp:cons "preDirectional"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'street-number))
      (common-lisp:list
       (common-lisp:cons "streetNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'city))
      (common-lisp:list
       (common-lisp:cons "city"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'postal-code))
      (common-lisp:list
       (common-lisp:cons "postalCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'postal-code-plus4))
      (common-lisp:list
       (common-lisp:cons "postalCodePlus4"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'country))
      (common-lisp:list
       (common-lisp:cons "country"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input address))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass alexa-for-business-metadata common-lisp:nil
                       ((is-alexa-for-business-enabled :initarg
                         :is-alexa-for-business-enabled :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-alexa-for-business-metadata-is-alexa-for-business-enabled
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (alexa-for-business-room-arn :initarg
                         :alexa-for-business-room-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or sensitive-string common-lisp:null)
                         :accessor
                         struct-shape-alexa-for-business-metadata-alexa-for-business-room-arn
                         :shape "SensitiveString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-alexa-for-business-metadata
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'alexa-for-business-metadata
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'alexa-for-business-metadata
                    'make-alexa-for-business-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          alexa-for-business-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          alexa-for-business-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'is-alexa-for-business-enabled))
      (common-lisp:list
       (common-lisp:cons "IsAlexaForBusinessEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'alexa-for-business-room-arn))
      (common-lisp:list
       (common-lisp:cons "AlexaForBusinessRoomArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          alexa-for-business-metadata))
   common-lisp:nil))
(common-lisp:deftype alpha2country-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass app-instance common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-app-instance-app-instance-arn :shape
                         "ChimeArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or non-empty-resource-name
                                         common-lisp:null)
                         :accessor struct-shape-app-instance-name :shape
                         "NonEmptyResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or metadata common-lisp:null)
                         :accessor struct-shape-app-instance-metadata :shape
                         "Metadata" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-app-instance-created-timestamp :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :last-updated-timestamp :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-app-instance-last-updated-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-app-instance
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'app-instance
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'app-instance 'make-app-instance))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input app-instance))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input app-instance))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input app-instance))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass app-instance-admin common-lisp:nil
                       ((admin :initarg :admin :initform common-lisp:nil :type
                         (common-lisp:or identity common-lisp:null) :accessor
                         struct-shape-app-instance-admin-admin :shape
                         "Identity" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (app-instance-arn :initarg :app-instance-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-app-instance-admin-app-instance-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-app-instance-admin-created-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-app-instance-admin
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'app-instance-admin
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'app-instance-admin 'make-app-instance-admin))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input app-instance-admin))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input app-instance-admin))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'admin))
      (common-lisp:list
       (common-lisp:cons "Admin"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input app-instance-admin))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype app-instance-admin-list ()
   '(trivial-types:proper-list app-instance-admin-summary))
 (common-lisp:defun make-app-instance-admin-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            app-instance-admin-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass app-instance-admin-summary common-lisp:nil
                       ((admin :initarg :admin :initform common-lisp:nil :type
                         (common-lisp:or identity common-lisp:null) :accessor
                         struct-shape-app-instance-admin-summary-admin :shape
                         "Identity" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-app-instance-admin-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'app-instance-admin-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'app-instance-admin-summary
                    'make-app-instance-admin-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          app-instance-admin-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          app-instance-admin-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'admin))
      (common-lisp:list
       (common-lisp:cons "Admin"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          app-instance-admin-summary))
   common-lisp:nil))
(common-lisp:deftype app-instance-data-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype app-instance-list ()
   '(trivial-types:proper-list app-instance-summary))
 (common-lisp:defun make-app-instance-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list app-instance-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass app-instance-retention-settings common-lisp:nil
                       ((channel-retention-settings :initarg
                         :channel-retention-settings :initform common-lisp:nil
                         :type
                         (common-lisp:or channel-retention-settings
                                         common-lisp:null)
                         :accessor
                         struct-shape-app-instance-retention-settings-channel-retention-settings
                         :shape "ChannelRetentionSettings" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-app-instance-retention-settings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'app-instance-retention-settings
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'app-instance-retention-settings
                    'make-app-instance-retention-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          app-instance-retention-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          app-instance-retention-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'channel-retention-settings))
      (common-lisp:list
       (common-lisp:cons "ChannelRetentionSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          app-instance-retention-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass app-instance-streaming-configuration common-lisp:nil
                       ((app-instance-data-type :initarg
                         :app-instance-data-type :initform
                         (common-lisp:error
                          ":app-instance-data-type is required")
                         :type
                         (common-lisp:or app-instance-data-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-app-instance-streaming-configuration-app-instance-data-type
                         :shape "AppInstanceDataType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-app-instance-streaming-configuration-resource-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-app-instance-streaming-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'app-instance-streaming-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'app-instance-streaming-configuration
                    'make-app-instance-streaming-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          app-instance-streaming-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          app-instance-streaming-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-instance-data-type))
      (common-lisp:list
       (common-lisp:cons "AppInstanceDataType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          app-instance-streaming-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype app-instance-streaming-configuration-list ()
   '(trivial-types:proper-list app-instance-streaming-configuration))
 (common-lisp:defun make-app-instance-streaming-configuration-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            app-instance-streaming-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass app-instance-summary common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-app-instance-summary-app-instance-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or non-empty-resource-name
                                         common-lisp:null)
                         :accessor struct-shape-app-instance-summary-name
                         :shape "NonEmptyResourceName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or metadata common-lisp:null)
                         :accessor struct-shape-app-instance-summary-metadata
                         :shape "Metadata" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-app-instance-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'app-instance-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'app-instance-summary 'make-app-instance-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input app-instance-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input app-instance-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input app-instance-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass app-instance-user common-lisp:nil
                       ((app-instance-user-arn :initarg :app-instance-user-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-app-instance-user-app-instance-user-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or user-name common-lisp:null) :accessor
                         struct-shape-app-instance-user-name :shape "UserName"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-app-instance-user-created-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or metadata common-lisp:null)
                         :accessor struct-shape-app-instance-user-metadata
                         :shape "Metadata" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :last-updated-timestamp :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-app-instance-user-last-updated-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-app-instance-user
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'app-instance-user
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'app-instance-user 'make-app-instance-user))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input app-instance-user))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input app-instance-user))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-instance-user-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceUserArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input app-instance-user))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype app-instance-user-list ()
   '(trivial-types:proper-list app-instance-user-summary))
 (common-lisp:defun make-app-instance-user-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            app-instance-user-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass app-instance-user-membership-summary common-lisp:nil
                       ((type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or channel-membership-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-app-instance-user-membership-summary-type
                         :shape "ChannelMembershipType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (read-marker-timestamp :initarg :read-marker-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-app-instance-user-membership-summary-read-marker-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-app-instance-user-membership-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'app-instance-user-membership-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'app-instance-user-membership-summary
                    'make-app-instance-user-membership-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          app-instance-user-membership-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          app-instance-user-membership-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'read-marker-timestamp))
      (common-lisp:list
       (common-lisp:cons "ReadMarkerTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          app-instance-user-membership-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass app-instance-user-summary common-lisp:nil
                       ((app-instance-user-arn :initarg :app-instance-user-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-app-instance-user-summary-app-instance-user-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or user-name common-lisp:null) :accessor
                         struct-shape-app-instance-user-summary-name :shape
                         "UserName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or metadata common-lisp:null)
                         :accessor
                         struct-shape-app-instance-user-summary-metadata :shape
                         "Metadata" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-app-instance-user-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'app-instance-user-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'app-instance-user-summary
                    'make-app-instance-user-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          app-instance-user-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          app-instance-user-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-instance-user-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceUserArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          app-instance-user-summary))
   common-lisp:nil))
(common-lisp:deftype area-code () 'common-lisp:string)
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass artifacts-configuration common-lisp:nil
                       ((audio :initarg :audio :initform
                         (common-lisp:error ":audio is required") :type
                         (common-lisp:or audio-artifacts-configuration
                                         common-lisp:null)
                         :accessor struct-shape-artifacts-configuration-audio
                         :shape "AudioArtifactsConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (video :initarg :video :initform
                         (common-lisp:error ":video is required") :type
                         (common-lisp:or video-artifacts-configuration
                                         common-lisp:null)
                         :accessor struct-shape-artifacts-configuration-video
                         :shape "VideoArtifactsConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (content :initarg :content :initform
                         (common-lisp:error ":content is required") :type
                         (common-lisp:or content-artifacts-configuration
                                         common-lisp:null)
                         :accessor struct-shape-artifacts-configuration-content
                         :shape "ContentArtifactsConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-artifacts-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'artifacts-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'artifacts-configuration 'make-artifacts-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          artifacts-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          artifacts-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audio))
      (common-lisp:list
       (common-lisp:cons "Audio"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'video))
      (common-lisp:list
       (common-lisp:cons "Video"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content))
      (common-lisp:list
       (common-lisp:cons "Content"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          artifacts-configuration))
   common-lisp:nil))
(common-lisp:deftype artifacts-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass associate-phone-number-with-user-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-associate-phone-number-with-user-request-account-id
                         :shape "String" :location "uri" :location-name
                         "accountId")
                        (user-id :initarg :user-id :initform
                         (common-lisp:error ":user-id is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-associate-phone-number-with-user-request-user-id
                         :shape "String" :location "uri" :location-name
                         "userId")
                        (e164phone-number :initarg :e164phone-number :initform
                         (common-lisp:error ":e164phone-number is required")
                         :type
                         (common-lisp:or e164phone-number common-lisp:null)
                         :accessor
                         struct-shape-associate-phone-number-with-user-request-e164phone-number
                         :shape "E164PhoneNumber" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-associate-phone-number-with-user-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'associate-phone-number-with-user-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'associate-phone-number-with-user-request
                    'make-associate-phone-number-with-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-number-with-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-number-with-user-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'e164phone-number))
      (common-lisp:list
       (common-lisp:cons "E164PhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-number-with-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass associate-phone-number-with-user-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-associate-phone-number-with-user-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'associate-phone-number-with-user-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'associate-phone-number-with-user-response
                    'make-associate-phone-number-with-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-number-with-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-number-with-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-number-with-user-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  associate-phone-numbers-with-voice-connector-group-request common-lisp:nil
  ((voice-connector-group-id :initarg :voice-connector-group-id :initform
    (common-lisp:error ":voice-connector-group-id is required") :type
    (common-lisp:or non-empty-string common-lisp:null) :accessor
    struct-shape-associate-phone-numbers-with-voice-connector-group-request-voice-connector-group-id
    :shape "NonEmptyString" :location "uri" :location-name
    "voiceConnectorGroupId")
   (e164phone-numbers :initarg :e164phone-numbers :initform
    (common-lisp:error ":e164phone-numbers is required") :type
    (common-lisp:or e164phone-number-list common-lisp:null) :accessor
    struct-shape-associate-phone-numbers-with-voice-connector-group-request-e164phone-numbers
    :shape "E164PhoneNumberList" :location common-lisp:nil :location-name
    common-lisp:nil)
   (force-associate :initarg :force-associate :initform common-lisp:nil :type
    (common-lisp:or nullable-boolean common-lisp:null) :accessor
    struct-shape-associate-phone-numbers-with-voice-connector-group-request-force-associate
    :shape "NullableBoolean" :location common-lisp:nil :location-name
    common-lisp:nil))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-associate-phone-numbers-with-voice-connector-group-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'associate-phone-numbers-with-voice-connector-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'associate-phone-numbers-with-voice-connector-group-request
                    'make-associate-phone-numbers-with-voice-connector-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-numbers-with-voice-connector-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-numbers-with-voice-connector-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'e164phone-numbers))
      (common-lisp:list
       (common-lisp:cons "E164PhoneNumbers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'force-associate))
      (common-lisp:list
       (common-lisp:cons "ForceAssociate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-numbers-with-voice-connector-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  associate-phone-numbers-with-voice-connector-group-response common-lisp:nil
  ((phone-number-errors :initarg :phone-number-errors :initform common-lisp:nil
    :type (common-lisp:or phone-number-error-list common-lisp:null) :accessor
    struct-shape-associate-phone-numbers-with-voice-connector-group-response-phone-number-errors
    :shape "PhoneNumberErrorList" :location common-lisp:nil :location-name
    common-lisp:nil))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-associate-phone-numbers-with-voice-connector-group-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'associate-phone-numbers-with-voice-connector-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list
   'associate-phone-numbers-with-voice-connector-group-response
   'make-associate-phone-numbers-with-voice-connector-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-numbers-with-voice-connector-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-numbers-with-voice-connector-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-errors))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberErrors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-numbers-with-voice-connector-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass associate-phone-numbers-with-voice-connector-request
                       common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-associate-phone-numbers-with-voice-connector-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId")
                        (e164phone-numbers :initarg :e164phone-numbers
                         :initform
                         (common-lisp:error ":e164phone-numbers is required")
                         :type
                         (common-lisp:or e164phone-number-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-associate-phone-numbers-with-voice-connector-request-e164phone-numbers
                         :shape "E164PhoneNumberList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (force-associate :initarg :force-associate :initform
                         common-lisp:nil :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor
                         struct-shape-associate-phone-numbers-with-voice-connector-request-force-associate
                         :shape "NullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-associate-phone-numbers-with-voice-connector-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'associate-phone-numbers-with-voice-connector-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'associate-phone-numbers-with-voice-connector-request
                    'make-associate-phone-numbers-with-voice-connector-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-numbers-with-voice-connector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-numbers-with-voice-connector-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'e164phone-numbers))
      (common-lisp:list
       (common-lisp:cons "E164PhoneNumbers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'force-associate))
      (common-lisp:list
       (common-lisp:cons "ForceAssociate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-numbers-with-voice-connector-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass associate-phone-numbers-with-voice-connector-response
                       common-lisp:nil
                       ((phone-number-errors :initarg :phone-number-errors
                         :initform common-lisp:nil :type
                         (common-lisp:or phone-number-error-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-associate-phone-numbers-with-voice-connector-response-phone-number-errors
                         :shape "PhoneNumberErrorList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-associate-phone-numbers-with-voice-connector-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'associate-phone-numbers-with-voice-connector-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'associate-phone-numbers-with-voice-connector-response
                    'make-associate-phone-numbers-with-voice-connector-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-numbers-with-voice-connector-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-numbers-with-voice-connector-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-errors))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberErrors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-phone-numbers-with-voice-connector-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass associate-signin-delegate-groups-with-account-request
                       common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-associate-signin-delegate-groups-with-account-request-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId")
                        (signin-delegate-groups :initarg
                         :signin-delegate-groups :initform
                         (common-lisp:error
                          ":signin-delegate-groups is required")
                         :type
                         (common-lisp:or signin-delegate-group-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-associate-signin-delegate-groups-with-account-request-signin-delegate-groups
                         :shape "SigninDelegateGroupList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-associate-signin-delegate-groups-with-account-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'associate-signin-delegate-groups-with-account-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'associate-signin-delegate-groups-with-account-request
                    'make-associate-signin-delegate-groups-with-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-signin-delegate-groups-with-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-signin-delegate-groups-with-account-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'signin-delegate-groups))
      (common-lisp:list
       (common-lisp:cons "SigninDelegateGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-signin-delegate-groups-with-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass associate-signin-delegate-groups-with-account-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-associate-signin-delegate-groups-with-account-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'associate-signin-delegate-groups-with-account-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'associate-signin-delegate-groups-with-account-response
                    'make-associate-signin-delegate-groups-with-account-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-signin-delegate-groups-with-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-signin-delegate-groups-with-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-signin-delegate-groups-with-account-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass attendee common-lisp:nil
                       ((external-user-id :initarg :external-user-id :initform
                         common-lisp:nil :type
                         (common-lisp:or external-user-id-type
                                         common-lisp:null)
                         :accessor struct-shape-attendee-external-user-id
                         :shape "ExternalUserIdType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (attendee-id :initarg :attendee-id :initform
                         common-lisp:nil :type
                         (common-lisp:or guid-string common-lisp:null)
                         :accessor struct-shape-attendee-attendee-id :shape
                         "GuidString" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (join-token :initarg :join-token :initform
                         common-lisp:nil :type
                         (common-lisp:or join-token-string common-lisp:null)
                         :accessor struct-shape-attendee-join-token :shape
                         "JoinTokenString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-attendee
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'attendee
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'attendee 'make-attendee))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input attendee))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input attendee))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'external-user-id))
      (common-lisp:list
       (common-lisp:cons "ExternalUserId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attendee-id))
      (common-lisp:list
       (common-lisp:cons "AttendeeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'join-token))
      (common-lisp:list
       (common-lisp:cons "JoinToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input attendee))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype attendee-id-list ()
   '(trivial-types:proper-list guid-string))
 (common-lisp:defun make-attendee-id-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list guid-string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype attendee-list () '(trivial-types:proper-list attendee))
 (common-lisp:defun make-attendee-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attendee))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype attendee-tag-key-list ()
   '(trivial-types:proper-list tag-key))
 (common-lisp:defun make-attendee-tag-key-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype attendee-tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun make-attendee-tag-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass audio-artifacts-configuration common-lisp:nil
                       ((mux-type :initarg :mux-type :initform
                         (common-lisp:error ":mux-type is required") :type
                         (common-lisp:or audio-mux-type common-lisp:null)
                         :accessor
                         struct-shape-audio-artifacts-configuration-mux-type
                         :shape "AudioMuxType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-audio-artifacts-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'audio-artifacts-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'audio-artifacts-configuration
                    'make-audio-artifacts-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          audio-artifacts-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          audio-artifacts-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mux-type))
      (common-lisp:list
       (common-lisp:cons "MuxType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          audio-artifacts-configuration))
   common-lisp:nil))
(common-lisp:deftype audio-mux-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition bad-request-exception
     (chime-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       bad-request-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       bad-request-exception-message)))
 (common-lisp:export
  (common-lisp:list 'bad-request-exception 'bad-request-exception-code
                    'bad-request-exception-message)))
(common-lisp:progn
 (common-lisp:defclass batch-channel-memberships common-lisp:nil
                       ((invited-by :initarg :invited-by :initform
                         common-lisp:nil :type
                         (common-lisp:or identity common-lisp:null) :accessor
                         struct-shape-batch-channel-memberships-invited-by
                         :shape "Identity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or channel-membership-type
                                         common-lisp:null)
                         :accessor struct-shape-batch-channel-memberships-type
                         :shape "ChannelMembershipType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (members :initarg :members :initform common-lisp:nil
                         :type (common-lisp:or members common-lisp:null)
                         :accessor
                         struct-shape-batch-channel-memberships-members :shape
                         "Members" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-batch-channel-memberships-channel-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-channel-memberships
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'batch-channel-memberships
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-channel-memberships
                    'make-batch-channel-memberships))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-channel-memberships))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-channel-memberships))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'invited-by))
      (common-lisp:list
       (common-lisp:cons "InvitedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'members))
      (common-lisp:list
       (common-lisp:cons "Members"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-channel-memberships))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype batch-create-attendee-error-list ()
   '(trivial-types:proper-list create-attendee-error))
 (common-lisp:defun make-batch-create-attendee-error-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list create-attendee-error))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass batch-create-attendee-request common-lisp:nil
                       ((meeting-id :initarg :meeting-id :initform
                         (common-lisp:error ":meeting-id is required") :type
                         (common-lisp:or guid-string common-lisp:null)
                         :accessor
                         struct-shape-batch-create-attendee-request-meeting-id
                         :shape "GuidString" :location "uri" :location-name
                         "meetingId")
                        (attendees :initarg :attendees :initform
                         (common-lisp:error ":attendees is required") :type
                         (common-lisp:or create-attendee-request-item-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-create-attendee-request-attendees
                         :shape "CreateAttendeeRequestItemList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-create-attendee-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-create-attendee-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-create-attendee-request
                    'make-batch-create-attendee-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-create-attendee-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-create-attendee-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attendees))
      (common-lisp:list
       (common-lisp:cons "Attendees"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-create-attendee-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-create-attendee-response common-lisp:nil
                       ((attendees :initarg :attendees :initform
                         common-lisp:nil :type
                         (common-lisp:or attendee-list common-lisp:null)
                         :accessor
                         struct-shape-batch-create-attendee-response-attendees
                         :shape "AttendeeList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (errors :initarg :errors :initform common-lisp:nil
                         :type
                         (common-lisp:or batch-create-attendee-error-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-create-attendee-response-errors
                         :shape "BatchCreateAttendeeErrorList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-create-attendee-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-create-attendee-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-create-attendee-response
                    'make-batch-create-attendee-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-create-attendee-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-create-attendee-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attendees))
      (common-lisp:list
       (common-lisp:cons "Attendees"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'errors))
      (common-lisp:list
       (common-lisp:cons "Errors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-create-attendee-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-create-channel-membership-error common-lisp:nil
                       ((member-arn :initarg :member-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-batch-create-channel-membership-error-member-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (error-code :initarg :error-code :initform
                         common-lisp:nil :type
                         (common-lisp:or error-code common-lisp:null) :accessor
                         struct-shape-batch-create-channel-membership-error-error-code
                         :shape "ErrorCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (error-message :initarg :error-message :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-batch-create-channel-membership-error-error-message
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-create-channel-membership-error
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-create-channel-membership-error
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-create-channel-membership-error
                    'make-batch-create-channel-membership-error))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-create-channel-membership-error))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-create-channel-membership-error))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member-arn))
      (common-lisp:list
       (common-lisp:cons "MemberArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "ErrorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "ErrorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-create-channel-membership-error))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype batch-create-channel-membership-errors ()
   '(trivial-types:proper-list batch-create-channel-membership-error))
 (common-lisp:defun make-batch-create-channel-membership-errors
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            batch-create-channel-membership-error))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass batch-create-channel-membership-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-batch-create-channel-membership-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or channel-membership-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-create-channel-membership-request-type
                         :shape "ChannelMembershipType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (member-arns :initarg :member-arns :initform
                         (common-lisp:error ":member-arns is required") :type
                         (common-lisp:or member-arns common-lisp:null)
                         :accessor
                         struct-shape-batch-create-channel-membership-request-member-arns
                         :shape "MemberArns" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (chime-bearer :initarg :chime-bearer :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-batch-create-channel-membership-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-create-channel-membership-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-create-channel-membership-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-create-channel-membership-request
                    'make-batch-create-channel-membership-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-create-channel-membership-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-create-channel-membership-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member-arns))
      (common-lisp:list
       (common-lisp:cons "MemberArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-create-channel-membership-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-create-channel-membership-response common-lisp:nil
                       ((batch-channel-memberships :initarg
                         :batch-channel-memberships :initform common-lisp:nil
                         :type
                         (common-lisp:or batch-channel-memberships
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-create-channel-membership-response-batch-channel-memberships
                         :shape "BatchChannelMemberships" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (errors :initarg :errors :initform common-lisp:nil
                         :type
                         (common-lisp:or batch-create-channel-membership-errors
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-create-channel-membership-response-errors
                         :shape "BatchCreateChannelMembershipErrors" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-create-channel-membership-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-create-channel-membership-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-create-channel-membership-response
                    'make-batch-create-channel-membership-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-create-channel-membership-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-create-channel-membership-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'batch-channel-memberships))
      (common-lisp:list
       (common-lisp:cons "BatchChannelMemberships"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'errors))
      (common-lisp:list
       (common-lisp:cons "Errors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-create-channel-membership-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-create-room-membership-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-batch-create-room-membership-request-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId")
                        (room-id :initarg :room-id :initform
                         (common-lisp:error ":room-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-batch-create-room-membership-request-room-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "roomId")
                        (membership-item-list :initarg :membership-item-list
                         :initform
                         (common-lisp:error
                          ":membership-item-list is required")
                         :type
                         (common-lisp:or membership-item-list common-lisp:null)
                         :accessor
                         struct-shape-batch-create-room-membership-request-membership-item-list
                         :shape "MembershipItemList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-create-room-membership-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-create-room-membership-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-create-room-membership-request
                    'make-batch-create-room-membership-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-create-room-membership-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-create-room-membership-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'membership-item-list))
      (common-lisp:list
       (common-lisp:cons "MembershipItemList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-create-room-membership-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-create-room-membership-response common-lisp:nil
                       ((errors :initarg :errors :initform common-lisp:nil
                         :type
                         (common-lisp:or member-error-list common-lisp:null)
                         :accessor
                         struct-shape-batch-create-room-membership-response-errors
                         :shape "MemberErrorList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-create-room-membership-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-create-room-membership-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-create-room-membership-response
                    'make-batch-create-room-membership-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-create-room-membership-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-create-room-membership-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'errors))
      (common-lisp:list
       (common-lisp:cons "Errors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-create-room-membership-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-delete-phone-number-request common-lisp:nil
                       ((phone-number-ids :initarg :phone-number-ids :initform
                         (common-lisp:error ":phone-number-ids is required")
                         :type
                         (common-lisp:or non-empty-string-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-delete-phone-number-request-phone-number-ids
                         :shape "NonEmptyStringList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-delete-phone-number-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-delete-phone-number-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-delete-phone-number-request
                    'make-batch-delete-phone-number-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-delete-phone-number-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-delete-phone-number-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-ids))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-delete-phone-number-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-delete-phone-number-response common-lisp:nil
                       ((phone-number-errors :initarg :phone-number-errors
                         :initform common-lisp:nil :type
                         (common-lisp:or phone-number-error-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-delete-phone-number-response-phone-number-errors
                         :shape "PhoneNumberErrorList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-delete-phone-number-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-delete-phone-number-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-delete-phone-number-response
                    'make-batch-delete-phone-number-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-delete-phone-number-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-delete-phone-number-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-errors))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberErrors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-delete-phone-number-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-suspend-user-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-batch-suspend-user-request-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId")
                        (user-id-list :initarg :user-id-list :initform
                         (common-lisp:error ":user-id-list is required") :type
                         (common-lisp:or user-id-list common-lisp:null)
                         :accessor
                         struct-shape-batch-suspend-user-request-user-id-list
                         :shape "UserIdList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-suspend-user-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'batch-suspend-user-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-suspend-user-request
                    'make-batch-suspend-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-suspend-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-suspend-user-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-id-list))
      (common-lisp:list
       (common-lisp:cons "UserIdList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-suspend-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-suspend-user-response common-lisp:nil
                       ((user-errors :initarg :user-errors :initform
                         common-lisp:nil :type
                         (common-lisp:or user-error-list common-lisp:null)
                         :accessor
                         struct-shape-batch-suspend-user-response-user-errors
                         :shape "UserErrorList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-suspend-user-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'batch-suspend-user-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-suspend-user-response
                    'make-batch-suspend-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-suspend-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-suspend-user-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-errors))
      (common-lisp:list
       (common-lisp:cons "UserErrors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-suspend-user-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-unsuspend-user-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-batch-unsuspend-user-request-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId")
                        (user-id-list :initarg :user-id-list :initform
                         (common-lisp:error ":user-id-list is required") :type
                         (common-lisp:or user-id-list common-lisp:null)
                         :accessor
                         struct-shape-batch-unsuspend-user-request-user-id-list
                         :shape "UserIdList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-unsuspend-user-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'batch-unsuspend-user-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-unsuspend-user-request
                    'make-batch-unsuspend-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-unsuspend-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-unsuspend-user-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-id-list))
      (common-lisp:list
       (common-lisp:cons "UserIdList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-unsuspend-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-unsuspend-user-response common-lisp:nil
                       ((user-errors :initarg :user-errors :initform
                         common-lisp:nil :type
                         (common-lisp:or user-error-list common-lisp:null)
                         :accessor
                         struct-shape-batch-unsuspend-user-response-user-errors
                         :shape "UserErrorList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-unsuspend-user-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-unsuspend-user-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-unsuspend-user-response
                    'make-batch-unsuspend-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-unsuspend-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-unsuspend-user-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-errors))
      (common-lisp:list
       (common-lisp:cons "UserErrors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-unsuspend-user-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-update-phone-number-request common-lisp:nil
                       ((update-phone-number-request-items :initarg
                         :update-phone-number-request-items :initform
                         (common-lisp:error
                          ":update-phone-number-request-items is required")
                         :type
                         (common-lisp:or update-phone-number-request-item-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-update-phone-number-request-update-phone-number-request-items
                         :shape "UpdatePhoneNumberRequestItemList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-update-phone-number-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-update-phone-number-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-update-phone-number-request
                    'make-batch-update-phone-number-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-update-phone-number-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-update-phone-number-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'update-phone-number-request-items))
      (common-lisp:list
       (common-lisp:cons "UpdatePhoneNumberRequestItems"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-update-phone-number-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-update-phone-number-response common-lisp:nil
                       ((phone-number-errors :initarg :phone-number-errors
                         :initform common-lisp:nil :type
                         (common-lisp:or phone-number-error-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-update-phone-number-response-phone-number-errors
                         :shape "PhoneNumberErrorList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-update-phone-number-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-update-phone-number-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-update-phone-number-response
                    'make-batch-update-phone-number-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-update-phone-number-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-update-phone-number-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-errors))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberErrors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-update-phone-number-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-update-user-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-batch-update-user-request-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId")
                        (update-user-request-items :initarg
                         :update-user-request-items :initform
                         (common-lisp:error
                          ":update-user-request-items is required")
                         :type
                         (common-lisp:or update-user-request-item-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-update-user-request-update-user-request-items
                         :shape "UpdateUserRequestItemList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-update-user-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'batch-update-user-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-update-user-request
                    'make-batch-update-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-update-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-update-user-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'update-user-request-items))
      (common-lisp:list
       (common-lisp:cons "UpdateUserRequestItems"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-update-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-update-user-response common-lisp:nil
                       ((user-errors :initarg :user-errors :initform
                         common-lisp:nil :type
                         (common-lisp:or user-error-list common-lisp:null)
                         :accessor
                         struct-shape-batch-update-user-response-user-errors
                         :shape "UserErrorList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-update-user-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'batch-update-user-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-update-user-response
                    'make-batch-update-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-update-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-update-user-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-errors))
      (common-lisp:list
       (common-lisp:cons "UserErrors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-update-user-response))
   common-lisp:nil))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defclass bot common-lisp:nil
                       ((bot-id :initarg :bot-id :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-bot-bot-id :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (user-id :initarg :user-id :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-bot-user-id :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (display-name :initarg :display-name :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitive-string common-lisp:null)
                         :accessor struct-shape-bot-display-name :shape
                         "SensitiveString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (bot-type :initarg :bot-type :initform common-lisp:nil
                         :type (common-lisp:or bot-type common-lisp:null)
                         :accessor struct-shape-bot-bot-type :shape "BotType"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (disabled :initarg :disabled :initform common-lisp:nil
                         :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor struct-shape-bot-disabled :shape
                         "NullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-bot-created-timestamp :shape
                         "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-timestamp :initarg :updated-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-bot-updated-timestamp :shape
                         "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (bot-email :initarg :bot-email :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitive-string common-lisp:null)
                         :accessor struct-shape-bot-bot-email :shape
                         "SensitiveString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (security-token :initarg :security-token :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitive-string common-lisp:null)
                         :accessor struct-shape-bot-security-token :shape
                         "SensitiveString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-bot (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'bot
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'bot 'make-bot))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input bot))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input bot))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bot-id))
      (common-lisp:list
       (common-lisp:cons "BotId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-id))
      (common-lisp:list
       (common-lisp:cons "UserId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'display-name))
      (common-lisp:list
       (common-lisp:cons "DisplayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bot-type))
      (common-lisp:list
       (common-lisp:cons "BotType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disabled))
      (common-lisp:list
       (common-lisp:cons "Disabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bot-email))
      (common-lisp:list
       (common-lisp:cons "BotEmail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-token))
      (common-lisp:list
       (common-lisp:cons "SecurityToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input bot))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype bot-list () '(trivial-types:proper-list bot))
 (common-lisp:defun make-bot-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list bot))
   aws-sdk/generator/shape::members))
(common-lisp:deftype bot-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass business-calling-settings common-lisp:nil
                       ((cdr-bucket :initarg :cdr-bucket :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-business-calling-settings-cdr-bucket
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-business-calling-settings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'business-calling-settings
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'business-calling-settings
                    'make-business-calling-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          business-calling-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          business-calling-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cdr-bucket))
      (common-lisp:list
       (common-lisp:cons "CdrBucket"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          business-calling-settings))
   common-lisp:nil))
(common-lisp:deftype calling-name () 'common-lisp:string)
(common-lisp:deftype calling-name-status () 'common-lisp:string)
(common-lisp:deftype calling-region () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype calling-region-list ()
   '(trivial-types:proper-list calling-region))
 (common-lisp:defun make-calling-region-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list calling-region))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass candidate-address common-lisp:nil
                       ((street-info :initarg :street-info :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor struct-shape-candidate-address-street-info
                         :shape "SensitiveNonEmptyString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (street-number :initarg :street-number :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor struct-shape-candidate-address-street-number
                         :shape "SensitiveNonEmptyString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (city :initarg :city :initform common-lisp:nil :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor struct-shape-candidate-address-city :shape
                         "SensitiveNonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor struct-shape-candidate-address-state :shape
                         "SensitiveNonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (postal-code :initarg :postal-code :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor struct-shape-candidate-address-postal-code
                         :shape "SensitiveNonEmptyString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (postal-code-plus4 :initarg :postal-code-plus4
                         :initform common-lisp:nil :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-candidate-address-postal-code-plus4
                         :shape "SensitiveNonEmptyString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (country :initarg :country :initform common-lisp:nil
                         :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor struct-shape-candidate-address-country
                         :shape "SensitiveNonEmptyString" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-candidate-address
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'candidate-address
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'candidate-address 'make-candidate-address))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input candidate-address))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input candidate-address))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'street-info))
      (common-lisp:list
       (common-lisp:cons "streetInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'street-number))
      (common-lisp:list
       (common-lisp:cons "streetNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'city))
      (common-lisp:list
       (common-lisp:cons "city"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'postal-code))
      (common-lisp:list
       (common-lisp:cons "postalCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'postal-code-plus4))
      (common-lisp:list
       (common-lisp:cons "postalCodePlus4"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'country))
      (common-lisp:list
       (common-lisp:cons "country"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input candidate-address))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype candidate-address-list ()
   '(trivial-types:proper-list candidate-address))
 (common-lisp:defun make-candidate-address-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list candidate-address))
   aws-sdk/generator/shape::members))
(common-lisp:deftype capability () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype capability-list ()
   '(trivial-types:proper-list capability))
 (common-lisp:defun make-capability-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list capability))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass channel common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or non-empty-resource-name
                                         common-lisp:null)
                         :accessor struct-shape-channel-name :shape
                         "NonEmptyResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-channel-channel-arn :shape "ChimeArn"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (mode :initarg :mode :initform common-lisp:nil :type
                         (common-lisp:or channel-mode common-lisp:null)
                         :accessor struct-shape-channel-mode :shape
                         "ChannelMode" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (privacy :initarg :privacy :initform common-lisp:nil
                         :type
                         (common-lisp:or channel-privacy common-lisp:null)
                         :accessor struct-shape-channel-privacy :shape
                         "ChannelPrivacy" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or metadata common-lisp:null)
                         :accessor struct-shape-channel-metadata :shape
                         "Metadata" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-by :initarg :created-by :initform
                         common-lisp:nil :type
                         (common-lisp:or identity common-lisp:null) :accessor
                         struct-shape-channel-created-by :shape "Identity"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-channel-created-timestamp :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-message-timestamp :initarg
                         :last-message-timestamp :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor struct-shape-channel-last-message-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :last-updated-timestamp :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor struct-shape-channel-last-updated-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channel
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'channel 'make-channel))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input channel))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input channel))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mode))
      (common-lisp:list
       (common-lisp:cons "Mode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'privacy))
      (common-lisp:list
       (common-lisp:cons "Privacy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-by))
      (common-lisp:list
       (common-lisp:cons "CreatedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-message-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastMessageTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input channel))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass channel-ban common-lisp:nil
                       ((member :initarg :member :initform common-lisp:nil
                         :type (common-lisp:or identity common-lisp:null)
                         :accessor struct-shape-channel-ban-member :shape
                         "Identity" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-channel-ban-channel-arn :shape "ChimeArn"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-channel-ban-created-timestamp :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-by :initarg :created-by :initform
                         common-lisp:nil :type
                         (common-lisp:or identity common-lisp:null) :accessor
                         struct-shape-channel-ban-created-by :shape "Identity"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-ban
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channel-ban
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'channel-ban 'make-channel-ban))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input channel-ban))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input channel-ban))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member))
      (common-lisp:list
       (common-lisp:cons "Member"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-by))
      (common-lisp:list
       (common-lisp:cons "CreatedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input channel-ban))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass channel-ban-summary common-lisp:nil
                       ((member :initarg :member :initform common-lisp:nil
                         :type (common-lisp:or identity common-lisp:null)
                         :accessor struct-shape-channel-ban-summary-member
                         :shape "Identity" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-ban-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channel-ban-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'channel-ban-summary 'make-channel-ban-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input channel-ban-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input channel-ban-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member))
      (common-lisp:list
       (common-lisp:cons "Member"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input channel-ban-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype channel-ban-summary-list ()
   '(trivial-types:proper-list channel-ban-summary))
 (common-lisp:defun make-channel-ban-summary-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list channel-ban-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass channel-membership common-lisp:nil
                       ((invited-by :initarg :invited-by :initform
                         common-lisp:nil :type
                         (common-lisp:or identity common-lisp:null) :accessor
                         struct-shape-channel-membership-invited-by :shape
                         "Identity" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or channel-membership-type
                                         common-lisp:null)
                         :accessor struct-shape-channel-membership-type :shape
                         "ChannelMembershipType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (member :initarg :member :initform common-lisp:nil
                         :type (common-lisp:or identity common-lisp:null)
                         :accessor struct-shape-channel-membership-member
                         :shape "Identity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-channel-membership-channel-arn :shape
                         "ChimeArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-channel-membership-created-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :last-updated-timestamp :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-channel-membership-last-updated-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-membership
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channel-membership
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'channel-membership 'make-channel-membership))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input channel-membership))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input channel-membership))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'invited-by))
      (common-lisp:list
       (common-lisp:cons "InvitedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member))
      (common-lisp:list
       (common-lisp:cons "Member"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input channel-membership))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass channel-membership-for-app-instance-user-summary
                       common-lisp:nil
                       ((channel-summary :initarg :channel-summary :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-summary common-lisp:null)
                         :accessor
                         struct-shape-channel-membership-for-app-instance-user-summary-channel-summary
                         :shape "ChannelSummary" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (app-instance-user-membership-summary :initarg
                         :app-instance-user-membership-summary :initform
                         common-lisp:nil :type
                         (common-lisp:or app-instance-user-membership-summary
                                         common-lisp:null)
                         :accessor
                         struct-shape-channel-membership-for-app-instance-user-summary-app-instance-user-membership-summary
                         :shape "AppInstanceUserMembershipSummary" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-membership-for-app-instance-user-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'channel-membership-for-app-instance-user-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'channel-membership-for-app-instance-user-summary
                    'make-channel-membership-for-app-instance-user-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          channel-membership-for-app-instance-user-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          channel-membership-for-app-instance-user-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-summary))
      (common-lisp:list
       (common-lisp:cons "ChannelSummary"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-instance-user-membership-summary))
      (common-lisp:list
       (common-lisp:cons "AppInstanceUserMembershipSummary"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          channel-membership-for-app-instance-user-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype channel-membership-for-app-instance-user-summary-list ()
   '(trivial-types:proper-list
     channel-membership-for-app-instance-user-summary))
 (common-lisp:defun make-channel-membership-for-app-instance-user-summary-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            channel-membership-for-app-instance-user-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass channel-membership-summary common-lisp:nil
                       ((member :initarg :member :initform common-lisp:nil
                         :type (common-lisp:or identity common-lisp:null)
                         :accessor
                         struct-shape-channel-membership-summary-member :shape
                         "Identity" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-membership-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channel-membership-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'channel-membership-summary
                    'make-channel-membership-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          channel-membership-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          channel-membership-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member))
      (common-lisp:list
       (common-lisp:cons "Member"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          channel-membership-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype channel-membership-summary-list ()
   '(trivial-types:proper-list channel-membership-summary))
 (common-lisp:defun make-channel-membership-summary-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            channel-membership-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype channel-membership-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass channel-message common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-channel-message-channel-arn :shape
                         "ChimeArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (message-id :initarg :message-id :initform
                         common-lisp:nil :type
                         (common-lisp:or message-id common-lisp:null) :accessor
                         struct-shape-channel-message-message-id :shape
                         "MessageId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (content :initarg :content :initform common-lisp:nil
                         :type (common-lisp:or content common-lisp:null)
                         :accessor struct-shape-channel-message-content :shape
                         "Content" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or metadata common-lisp:null)
                         :accessor struct-shape-channel-message-metadata :shape
                         "Metadata" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or channel-message-type common-lisp:null)
                         :accessor struct-shape-channel-message-type :shape
                         "ChannelMessageType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-channel-message-created-timestamp :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-edited-timestamp :initarg :last-edited-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-channel-message-last-edited-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :last-updated-timestamp :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-channel-message-last-updated-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sender :initarg :sender :initform common-lisp:nil
                         :type (common-lisp:or identity common-lisp:null)
                         :accessor struct-shape-channel-message-sender :shape
                         "Identity" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (redacted :initarg :redacted :initform common-lisp:nil
                         :type
                         (common-lisp:or non-nullable-boolean common-lisp:null)
                         :accessor struct-shape-channel-message-redacted :shape
                         "NonNullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (persistence :initarg :persistence :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-message-persistence-type
                                         common-lisp:null)
                         :accessor struct-shape-channel-message-persistence
                         :shape "ChannelMessagePersistenceType" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-message
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channel-message
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'channel-message 'make-channel-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input channel-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input channel-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-id))
      (common-lisp:list
       (common-lisp:cons "MessageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content))
      (common-lisp:list
       (common-lisp:cons "Content"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-edited-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastEditedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sender))
      (common-lisp:list
       (common-lisp:cons "Sender"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'redacted))
      (common-lisp:list
       (common-lisp:cons "Redacted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'persistence))
      (common-lisp:list
       (common-lisp:cons "Persistence"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input channel-message))
   common-lisp:nil))
(common-lisp:deftype channel-message-persistence-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass channel-message-summary common-lisp:nil
                       ((message-id :initarg :message-id :initform
                         common-lisp:nil :type
                         (common-lisp:or message-id common-lisp:null) :accessor
                         struct-shape-channel-message-summary-message-id :shape
                         "MessageId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (content :initarg :content :initform common-lisp:nil
                         :type (common-lisp:or content common-lisp:null)
                         :accessor struct-shape-channel-message-summary-content
                         :shape "Content" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or metadata common-lisp:null)
                         :accessor
                         struct-shape-channel-message-summary-metadata :shape
                         "Metadata" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or channel-message-type common-lisp:null)
                         :accessor struct-shape-channel-message-summary-type
                         :shape "ChannelMessageType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-channel-message-summary-created-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :last-updated-timestamp :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-channel-message-summary-last-updated-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-edited-timestamp :initarg :last-edited-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-channel-message-summary-last-edited-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sender :initarg :sender :initform common-lisp:nil
                         :type (common-lisp:or identity common-lisp:null)
                         :accessor struct-shape-channel-message-summary-sender
                         :shape "Identity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (redacted :initarg :redacted :initform common-lisp:nil
                         :type
                         (common-lisp:or non-nullable-boolean common-lisp:null)
                         :accessor
                         struct-shape-channel-message-summary-redacted :shape
                         "NonNullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-message-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channel-message-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'channel-message-summary 'make-channel-message-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          channel-message-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          channel-message-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-id))
      (common-lisp:list
       (common-lisp:cons "MessageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content))
      (common-lisp:list
       (common-lisp:cons "Content"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-edited-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastEditedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sender))
      (common-lisp:list
       (common-lisp:cons "Sender"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'redacted))
      (common-lisp:list
       (common-lisp:cons "Redacted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          channel-message-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype channel-message-summary-list ()
   '(trivial-types:proper-list channel-message-summary))
 (common-lisp:defun make-channel-message-summary-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list channel-message-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype channel-message-type () 'common-lisp:string)
(common-lisp:deftype channel-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass channel-moderated-by-app-instance-user-summary
                       common-lisp:nil
                       ((channel-summary :initarg :channel-summary :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-summary common-lisp:null)
                         :accessor
                         struct-shape-channel-moderated-by-app-instance-user-summary-channel-summary
                         :shape "ChannelSummary" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-moderated-by-app-instance-user-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'channel-moderated-by-app-instance-user-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'channel-moderated-by-app-instance-user-summary
                    'make-channel-moderated-by-app-instance-user-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          channel-moderated-by-app-instance-user-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          channel-moderated-by-app-instance-user-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-summary))
      (common-lisp:list
       (common-lisp:cons "ChannelSummary"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          channel-moderated-by-app-instance-user-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype channel-moderated-by-app-instance-user-summary-list ()
   '(trivial-types:proper-list channel-moderated-by-app-instance-user-summary))
 (common-lisp:defun make-channel-moderated-by-app-instance-user-summary-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            channel-moderated-by-app-instance-user-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass channel-moderator common-lisp:nil
                       ((moderator :initarg :moderator :initform
                         common-lisp:nil :type
                         (common-lisp:or identity common-lisp:null) :accessor
                         struct-shape-channel-moderator-moderator :shape
                         "Identity" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-channel-moderator-channel-arn :shape
                         "ChimeArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-channel-moderator-created-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-by :initarg :created-by :initform
                         common-lisp:nil :type
                         (common-lisp:or identity common-lisp:null) :accessor
                         struct-shape-channel-moderator-created-by :shape
                         "Identity" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-moderator
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channel-moderator
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'channel-moderator 'make-channel-moderator))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input channel-moderator))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input channel-moderator))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'moderator))
      (common-lisp:list
       (common-lisp:cons "Moderator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-by))
      (common-lisp:list
       (common-lisp:cons "CreatedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input channel-moderator))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass channel-moderator-summary common-lisp:nil
                       ((moderator :initarg :moderator :initform
                         common-lisp:nil :type
                         (common-lisp:or identity common-lisp:null) :accessor
                         struct-shape-channel-moderator-summary-moderator
                         :shape "Identity" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-moderator-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channel-moderator-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'channel-moderator-summary
                    'make-channel-moderator-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          channel-moderator-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          channel-moderator-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'moderator))
      (common-lisp:list
       (common-lisp:cons "Moderator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          channel-moderator-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype channel-moderator-summary-list ()
   '(trivial-types:proper-list channel-moderator-summary))
 (common-lisp:defun make-channel-moderator-summary-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            channel-moderator-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype channel-privacy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass channel-retention-settings common-lisp:nil
                       ((retention-days :initarg :retention-days :initform
                         common-lisp:nil :type
                         (common-lisp:or retention-days common-lisp:null)
                         :accessor
                         struct-shape-channel-retention-settings-retention-days
                         :shape "RetentionDays" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-retention-settings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channel-retention-settings
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'channel-retention-settings
                    'make-channel-retention-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          channel-retention-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          channel-retention-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retention-days))
      (common-lisp:list
       (common-lisp:cons "RetentionDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          channel-retention-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass channel-summary common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or non-empty-resource-name
                                         common-lisp:null)
                         :accessor struct-shape-channel-summary-name :shape
                         "NonEmptyResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-channel-summary-channel-arn :shape
                         "ChimeArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (mode :initarg :mode :initform common-lisp:nil :type
                         (common-lisp:or channel-mode common-lisp:null)
                         :accessor struct-shape-channel-summary-mode :shape
                         "ChannelMode" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (privacy :initarg :privacy :initform common-lisp:nil
                         :type
                         (common-lisp:or channel-privacy common-lisp:null)
                         :accessor struct-shape-channel-summary-privacy :shape
                         "ChannelPrivacy" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or metadata common-lisp:null)
                         :accessor struct-shape-channel-summary-metadata :shape
                         "Metadata" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-message-timestamp :initarg
                         :last-message-timestamp :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-channel-summary-last-message-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channel-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'channel-summary 'make-channel-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input channel-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input channel-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mode))
      (common-lisp:list
       (common-lisp:cons "Mode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'privacy))
      (common-lisp:list
       (common-lisp:cons "Privacy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-message-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastMessageTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input channel-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype channel-summary-list ()
   '(trivial-types:proper-list channel-summary))
 (common-lisp:defun make-channel-summary-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list channel-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype chime-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass chime-sdk-meeting-configuration common-lisp:nil
                       ((source-configuration :initarg :source-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or source-configuration common-lisp:null)
                         :accessor
                         struct-shape-chime-sdk-meeting-configuration-source-configuration
                         :shape "SourceConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (artifacts-configuration :initarg
                         :artifacts-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or artifacts-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-chime-sdk-meeting-configuration-artifacts-configuration
                         :shape "ArtifactsConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-chime-sdk-meeting-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'chime-sdk-meeting-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'chime-sdk-meeting-configuration
                    'make-chime-sdk-meeting-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          chime-sdk-meeting-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          chime-sdk-meeting-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-configuration))
      (common-lisp:list
       (common-lisp:cons "SourceConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'artifacts-configuration))
      (common-lisp:list
       (common-lisp:cons "ArtifactsConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          chime-sdk-meeting-configuration))
   common-lisp:nil))
(common-lisp:deftype client-request-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (chime-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       conflict-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-code
                    'conflict-exception-message)))
(common-lisp:deftype content () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass content-artifacts-configuration common-lisp:nil
                       ((state :initarg :state :initform
                         (common-lisp:error ":state is required") :type
                         (common-lisp:or artifacts-state common-lisp:null)
                         :accessor
                         struct-shape-content-artifacts-configuration-state
                         :shape "ArtifactsState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (mux-type :initarg :mux-type :initform common-lisp:nil
                         :type
                         (common-lisp:or content-mux-type common-lisp:null)
                         :accessor
                         struct-shape-content-artifacts-configuration-mux-type
                         :shape "ContentMuxType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-content-artifacts-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'content-artifacts-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'content-artifacts-configuration
                    'make-content-artifacts-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          content-artifacts-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          content-artifacts-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mux-type))
      (common-lisp:list
       (common-lisp:cons "MuxType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          content-artifacts-configuration))
   common-lisp:nil))
(common-lisp:deftype content-mux-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass conversation-retention-settings common-lisp:nil
                       ((retention-days :initarg :retention-days :initform
                         common-lisp:nil :type
                         (common-lisp:or retention-days common-lisp:null)
                         :accessor
                         struct-shape-conversation-retention-settings-retention-days
                         :shape "RetentionDays" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-conversation-retention-settings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'conversation-retention-settings
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'conversation-retention-settings
                    'make-conversation-retention-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          conversation-retention-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          conversation-retention-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retention-days))
      (common-lisp:list
       (common-lisp:cons "RetentionDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          conversation-retention-settings))
   common-lisp:nil))
(common-lisp:deftype country () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype country-list () '(trivial-types:proper-list country))
 (common-lisp:defun make-country-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list country))
   aws-sdk/generator/shape::members))
(common-lisp:deftype cps-limit () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass create-account-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or account-name common-lisp:null)
                         :accessor struct-shape-create-account-request-name
                         :shape "AccountName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-account-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-account-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-account-request 'make-create-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-account-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-account-response common-lisp:nil
                       ((account :initarg :account :initform common-lisp:nil
                         :type (common-lisp:or account common-lisp:null)
                         :accessor struct-shape-create-account-response-account
                         :shape "Account" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-account-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-account-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-account-response 'make-create-account-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-account-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account))
      (common-lisp:list
       (common-lisp:cons "Account"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-account-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-app-instance-admin-request common-lisp:nil
                       ((app-instance-admin-arn :initarg
                         :app-instance-admin-arn :initform
                         (common-lisp:error
                          ":app-instance-admin-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-create-app-instance-admin-request-app-instance-admin-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (app-instance-arn :initarg :app-instance-arn :initform
                         (common-lisp:error ":app-instance-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-create-app-instance-admin-request-app-instance-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-app-instance-admin-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-app-instance-admin-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-app-instance-admin-request
                    'make-create-app-instance-admin-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-admin-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-admin-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-instance-admin-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceAdminArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-admin-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-app-instance-admin-response common-lisp:nil
                       ((app-instance-admin :initarg :app-instance-admin
                         :initform common-lisp:nil :type
                         (common-lisp:or identity common-lisp:null) :accessor
                         struct-shape-create-app-instance-admin-response-app-instance-admin
                         :shape "Identity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (app-instance-arn :initarg :app-instance-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-create-app-instance-admin-response-app-instance-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-app-instance-admin-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-app-instance-admin-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-app-instance-admin-response
                    'make-create-app-instance-admin-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-admin-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-admin-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance-admin))
      (common-lisp:list
       (common-lisp:cons "AppInstanceAdmin"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-admin-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-app-instance-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or non-empty-resource-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-app-instance-request-name :shape
                         "NonEmptyResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or metadata common-lisp:null)
                         :accessor
                         struct-shape-create-app-instance-request-metadata
                         :shape "Metadata" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-request-token :initarg :client-request-token
                         :initform
                         (common-lisp:error
                          ":client-request-token is required")
                         :type
                         (common-lisp:or client-request-token common-lisp:null)
                         :accessor
                         struct-shape-create-app-instance-request-client-request-token
                         :shape "ClientRequestToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-create-app-instance-request-tags :shape
                         "TagList" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-app-instance-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-app-instance-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-app-instance-request
                    'make-create-app-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-app-instance-response common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-create-app-instance-response-app-instance-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-app-instance-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-app-instance-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-app-instance-response
                    'make-create-app-instance-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-app-instance-user-request common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         (common-lisp:error ":app-instance-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-create-app-instance-user-request-app-instance-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (app-instance-user-id :initarg :app-instance-user-id
                         :initform
                         (common-lisp:error
                          ":app-instance-user-id is required")
                         :type (common-lisp:or user-id common-lisp:null)
                         :accessor
                         struct-shape-create-app-instance-user-request-app-instance-user-id
                         :shape "UserId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or user-name common-lisp:null) :accessor
                         struct-shape-create-app-instance-user-request-name
                         :shape "UserName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or metadata common-lisp:null)
                         :accessor
                         struct-shape-create-app-instance-user-request-metadata
                         :shape "Metadata" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-request-token :initarg :client-request-token
                         :initform
                         (common-lisp:error
                          ":client-request-token is required")
                         :type
                         (common-lisp:or client-request-token common-lisp:null)
                         :accessor
                         struct-shape-create-app-instance-user-request-client-request-token
                         :shape "ClientRequestToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-create-app-instance-user-request-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-app-instance-user-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-app-instance-user-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-app-instance-user-request
                    'make-create-app-instance-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-user-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-instance-user-id))
      (common-lisp:list
       (common-lisp:cons "AppInstanceUserId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-app-instance-user-response common-lisp:nil
                       ((app-instance-user-arn :initarg :app-instance-user-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-create-app-instance-user-response-app-instance-user-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-app-instance-user-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-app-instance-user-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-app-instance-user-response
                    'make-create-app-instance-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-user-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-instance-user-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceUserArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-app-instance-user-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-attendee-error common-lisp:nil
                       ((external-user-id :initarg :external-user-id :initform
                         common-lisp:nil :type
                         (common-lisp:or external-user-id-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-attendee-error-external-user-id
                         :shape "ExternalUserIdType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (error-code :initarg :error-code :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-attendee-error-error-code :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (error-message :initarg :error-message :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-attendee-error-error-message
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-attendee-error
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-attendee-error
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-attendee-error 'make-create-attendee-error))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-attendee-error))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-attendee-error))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'external-user-id))
      (common-lisp:list
       (common-lisp:cons "ExternalUserId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "ErrorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "ErrorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-attendee-error))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-attendee-request common-lisp:nil
                       ((meeting-id :initarg :meeting-id :initform
                         (common-lisp:error ":meeting-id is required") :type
                         (common-lisp:or guid-string common-lisp:null)
                         :accessor
                         struct-shape-create-attendee-request-meeting-id :shape
                         "GuidString" :location "uri" :location-name
                         "meetingId")
                        (external-user-id :initarg :external-user-id :initform
                         (common-lisp:error ":external-user-id is required")
                         :type
                         (common-lisp:or external-user-id-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-attendee-request-external-user-id
                         :shape "ExternalUserIdType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or attendee-tag-list common-lisp:null)
                         :accessor struct-shape-create-attendee-request-tags
                         :shape "AttendeeTagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-attendee-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-attendee-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-attendee-request 'make-create-attendee-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-attendee-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-attendee-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'external-user-id))
      (common-lisp:list
       (common-lisp:cons "ExternalUserId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-attendee-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-attendee-request-item common-lisp:nil
                       ((external-user-id :initarg :external-user-id :initform
                         (common-lisp:error ":external-user-id is required")
                         :type
                         (common-lisp:or external-user-id-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-attendee-request-item-external-user-id
                         :shape "ExternalUserIdType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or attendee-tag-list common-lisp:null)
                         :accessor
                         struct-shape-create-attendee-request-item-tags :shape
                         "AttendeeTagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-attendee-request-item
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-attendee-request-item
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-attendee-request-item
                    'make-create-attendee-request-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-attendee-request-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-attendee-request-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'external-user-id))
      (common-lisp:list
       (common-lisp:cons "ExternalUserId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-attendee-request-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype create-attendee-request-item-list ()
   '(trivial-types:proper-list create-attendee-request-item))
 (common-lisp:defun make-create-attendee-request-item-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            create-attendee-request-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass create-attendee-response common-lisp:nil
                       ((attendee :initarg :attendee :initform common-lisp:nil
                         :type (common-lisp:or attendee common-lisp:null)
                         :accessor
                         struct-shape-create-attendee-response-attendee :shape
                         "Attendee" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-attendee-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-attendee-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-attendee-response 'make-create-attendee-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-attendee-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-attendee-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attendee))
      (common-lisp:list
       (common-lisp:cons "Attendee"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-attendee-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-bot-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-create-bot-request-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId")
                        (display-name :initarg :display-name :initform
                         (common-lisp:error ":display-name is required") :type
                         (common-lisp:or sensitive-string common-lisp:null)
                         :accessor struct-shape-create-bot-request-display-name
                         :shape "SensitiveString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (domain :initarg :domain :initform common-lisp:nil
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-create-bot-request-domain
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-bot-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-bot-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-bot-request 'make-create-bot-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-bot-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-bot-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'display-name))
      (common-lisp:list
       (common-lisp:cons "DisplayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain))
      (common-lisp:list
       (common-lisp:cons "Domain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-bot-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-bot-response common-lisp:nil
                       ((bot :initarg :bot :initform common-lisp:nil :type
                         (common-lisp:or bot common-lisp:null) :accessor
                         struct-shape-create-bot-response-bot :shape "Bot"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-bot-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-bot-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-bot-response 'make-create-bot-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-bot-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-bot-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bot))
      (common-lisp:list
       (common-lisp:cons "Bot"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-bot-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-channel-ban-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-create-channel-ban-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (member-arn :initarg :member-arn :initform
                         (common-lisp:error ":member-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-create-channel-ban-request-member-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (chime-bearer :initarg :chime-bearer :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-create-channel-ban-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-channel-ban-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-channel-ban-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-channel-ban-request
                    'make-create-channel-ban-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-ban-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-ban-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member-arn))
      (common-lisp:list
       (common-lisp:cons "MemberArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-ban-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-channel-ban-response common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-create-channel-ban-response-channel-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (member :initarg :member :initform common-lisp:nil
                         :type (common-lisp:or identity common-lisp:null)
                         :accessor
                         struct-shape-create-channel-ban-response-member :shape
                         "Identity" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-channel-ban-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-channel-ban-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-channel-ban-response
                    'make-create-channel-ban-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-ban-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-ban-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member))
      (common-lisp:list
       (common-lisp:cons "Member"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-ban-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-channel-membership-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-create-channel-membership-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (member-arn :initarg :member-arn :initform
                         (common-lisp:error ":member-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-create-channel-membership-request-member-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (type :initarg :type :initform
                         (common-lisp:error ":type is required") :type
                         (common-lisp:or channel-membership-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-channel-membership-request-type
                         :shape "ChannelMembershipType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (chime-bearer :initarg :chime-bearer :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-create-channel-membership-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-channel-membership-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-channel-membership-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-channel-membership-request
                    'make-create-channel-membership-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-membership-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-membership-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member-arn))
      (common-lisp:list
       (common-lisp:cons "MemberArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-membership-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-channel-membership-response common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-create-channel-membership-response-channel-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (member :initarg :member :initform common-lisp:nil
                         :type (common-lisp:or identity common-lisp:null)
                         :accessor
                         struct-shape-create-channel-membership-response-member
                         :shape "Identity" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-channel-membership-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-channel-membership-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-channel-membership-response
                    'make-create-channel-membership-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-membership-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-membership-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member))
      (common-lisp:list
       (common-lisp:cons "Member"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-membership-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-channel-moderator-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-create-channel-moderator-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (channel-moderator-arn :initarg :channel-moderator-arn
                         :initform
                         (common-lisp:error
                          ":channel-moderator-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-create-channel-moderator-request-channel-moderator-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (chime-bearer :initarg :chime-bearer :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-create-channel-moderator-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-channel-moderator-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-channel-moderator-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-channel-moderator-request
                    'make-create-channel-moderator-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-moderator-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-moderator-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'channel-moderator-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelModeratorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-moderator-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-channel-moderator-response common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-create-channel-moderator-response-channel-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-moderator :initarg :channel-moderator
                         :initform common-lisp:nil :type
                         (common-lisp:or identity common-lisp:null) :accessor
                         struct-shape-create-channel-moderator-response-channel-moderator
                         :shape "Identity" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-channel-moderator-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-channel-moderator-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-channel-moderator-response
                    'make-create-channel-moderator-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-moderator-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-moderator-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-moderator))
      (common-lisp:list
       (common-lisp:cons "ChannelModerator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-moderator-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-channel-request common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         (common-lisp:error ":app-instance-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-create-channel-request-app-instance-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or non-empty-resource-name
                                         common-lisp:null)
                         :accessor struct-shape-create-channel-request-name
                         :shape "NonEmptyResourceName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (mode :initarg :mode :initform common-lisp:nil :type
                         (common-lisp:or channel-mode common-lisp:null)
                         :accessor struct-shape-create-channel-request-mode
                         :shape "ChannelMode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (privacy :initarg :privacy :initform common-lisp:nil
                         :type
                         (common-lisp:or channel-privacy common-lisp:null)
                         :accessor struct-shape-create-channel-request-privacy
                         :shape "ChannelPrivacy" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or metadata common-lisp:null)
                         :accessor struct-shape-create-channel-request-metadata
                         :shape "Metadata" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-request-token :initarg :client-request-token
                         :initform
                         (common-lisp:error
                          ":client-request-token is required")
                         :type
                         (common-lisp:or client-request-token common-lisp:null)
                         :accessor
                         struct-shape-create-channel-request-client-request-token
                         :shape "ClientRequestToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-create-channel-request-tags :shape
                         "TagList" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (chime-bearer :initarg :chime-bearer :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-create-channel-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-channel-request 'make-create-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mode))
      (common-lisp:list
       (common-lisp:cons "Mode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'privacy))
      (common-lisp:list
       (common-lisp:cons "Privacy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-channel-response common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-create-channel-response-channel-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-channel-response 'make-create-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-media-capture-pipeline-request common-lisp:nil
                       ((source-type :initarg :source-type :initform
                         (common-lisp:error ":source-type is required") :type
                         (common-lisp:or media-pipeline-source-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-media-capture-pipeline-request-source-type
                         :shape "MediaPipelineSourceType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (source-arn :initarg :source-arn :initform
                         (common-lisp:error ":source-arn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-create-media-capture-pipeline-request-source-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (sink-type :initarg :sink-type :initform
                         (common-lisp:error ":sink-type is required") :type
                         (common-lisp:or media-pipeline-sink-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-media-capture-pipeline-request-sink-type
                         :shape "MediaPipelineSinkType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (sink-arn :initarg :sink-arn :initform
                         (common-lisp:error ":sink-arn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-create-media-capture-pipeline-request-sink-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (client-request-token :initarg :client-request-token
                         :initform common-lisp:nil :type
                         (common-lisp:or client-request-token common-lisp:null)
                         :accessor
                         struct-shape-create-media-capture-pipeline-request-client-request-token
                         :shape "ClientRequestToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (chime-sdk-meeting-configuration :initarg
                         :chime-sdk-meeting-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-sdk-meeting-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-media-capture-pipeline-request-chime-sdk-meeting-configuration
                         :shape "ChimeSdkMeetingConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-media-capture-pipeline-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-media-capture-pipeline-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-media-capture-pipeline-request
                    'make-create-media-capture-pipeline-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-media-capture-pipeline-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-media-capture-pipeline-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-type))
      (common-lisp:list
       (common-lisp:cons "SourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-arn))
      (common-lisp:list
       (common-lisp:cons "SourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sink-type))
      (common-lisp:list
       (common-lisp:cons "SinkType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sink-arn))
      (common-lisp:list
       (common-lisp:cons "SinkArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'chime-sdk-meeting-configuration))
      (common-lisp:list
       (common-lisp:cons "ChimeSdkMeetingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-media-capture-pipeline-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-media-capture-pipeline-response common-lisp:nil
                       ((media-capture-pipeline :initarg
                         :media-capture-pipeline :initform common-lisp:nil
                         :type
                         (common-lisp:or media-capture-pipeline
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-media-capture-pipeline-response-media-capture-pipeline
                         :shape "MediaCapturePipeline" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-media-capture-pipeline-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-media-capture-pipeline-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-media-capture-pipeline-response
                    'make-create-media-capture-pipeline-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-media-capture-pipeline-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-media-capture-pipeline-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'media-capture-pipeline))
      (common-lisp:list
       (common-lisp:cons "MediaCapturePipeline"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-media-capture-pipeline-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-meeting-dial-out-request common-lisp:nil
                       ((meeting-id :initarg :meeting-id :initform
                         (common-lisp:error ":meeting-id is required") :type
                         (common-lisp:or guid-string common-lisp:null)
                         :accessor
                         struct-shape-create-meeting-dial-out-request-meeting-id
                         :shape "GuidString" :location "uri" :location-name
                         "meetingId")
                        (from-phone-number :initarg :from-phone-number
                         :initform
                         (common-lisp:error ":from-phone-number is required")
                         :type
                         (common-lisp:or e164phone-number common-lisp:null)
                         :accessor
                         struct-shape-create-meeting-dial-out-request-from-phone-number
                         :shape "E164PhoneNumber" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (to-phone-number :initarg :to-phone-number :initform
                         (common-lisp:error ":to-phone-number is required")
                         :type
                         (common-lisp:or e164phone-number common-lisp:null)
                         :accessor
                         struct-shape-create-meeting-dial-out-request-to-phone-number
                         :shape "E164PhoneNumber" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (join-token :initarg :join-token :initform
                         (common-lisp:error ":join-token is required") :type
                         (common-lisp:or join-token-string common-lisp:null)
                         :accessor
                         struct-shape-create-meeting-dial-out-request-join-token
                         :shape "JoinTokenString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-meeting-dial-out-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-meeting-dial-out-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-meeting-dial-out-request
                    'make-create-meeting-dial-out-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-meeting-dial-out-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-meeting-dial-out-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-phone-number))
      (common-lisp:list
       (common-lisp:cons "FromPhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'to-phone-number))
      (common-lisp:list
       (common-lisp:cons "ToPhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'join-token))
      (common-lisp:list
       (common-lisp:cons "JoinToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-meeting-dial-out-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-meeting-dial-out-response common-lisp:nil
                       ((transaction-id :initarg :transaction-id :initform
                         common-lisp:nil :type
                         (common-lisp:or guid-string common-lisp:null)
                         :accessor
                         struct-shape-create-meeting-dial-out-response-transaction-id
                         :shape "GuidString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-meeting-dial-out-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-meeting-dial-out-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-meeting-dial-out-response
                    'make-create-meeting-dial-out-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-meeting-dial-out-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-meeting-dial-out-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'transaction-id))
      (common-lisp:list
       (common-lisp:cons "TransactionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-meeting-dial-out-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-meeting-request common-lisp:nil
                       ((client-request-token :initarg :client-request-token
                         :initform
                         (common-lisp:error
                          ":client-request-token is required")
                         :type
                         (common-lisp:or client-request-token common-lisp:null)
                         :accessor
                         struct-shape-create-meeting-request-client-request-token
                         :shape "ClientRequestToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (external-meeting-id :initarg :external-meeting-id
                         :initform common-lisp:nil :type
                         (common-lisp:or external-meeting-id-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-meeting-request-external-meeting-id
                         :shape "ExternalMeetingIdType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (meeting-host-id :initarg :meeting-host-id :initform
                         common-lisp:nil :type
                         (common-lisp:or external-user-id-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-meeting-request-meeting-host-id
                         :shape "ExternalUserIdType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (media-region :initarg :media-region :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-meeting-request-media-region
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or meeting-tag-list common-lisp:null)
                         :accessor struct-shape-create-meeting-request-tags
                         :shape "MeetingTagList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (notifications-configuration :initarg
                         :notifications-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or meeting-notification-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-meeting-request-notifications-configuration
                         :shape "MeetingNotificationConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-meeting-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-meeting-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-meeting-request 'make-create-meeting-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-meeting-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-meeting-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'external-meeting-id))
      (common-lisp:list
       (common-lisp:cons "ExternalMeetingId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'meeting-host-id))
      (common-lisp:list
       (common-lisp:cons "MeetingHostId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'media-region))
      (common-lisp:list
       (common-lisp:cons "MediaRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'notifications-configuration))
      (common-lisp:list
       (common-lisp:cons "NotificationsConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-meeting-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-meeting-response common-lisp:nil
                       ((meeting :initarg :meeting :initform common-lisp:nil
                         :type (common-lisp:or meeting common-lisp:null)
                         :accessor struct-shape-create-meeting-response-meeting
                         :shape "Meeting" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-meeting-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-meeting-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-meeting-response 'make-create-meeting-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-meeting-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-meeting-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'meeting))
      (common-lisp:list
       (common-lisp:cons "Meeting"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-meeting-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-meeting-with-attendees-request common-lisp:nil
                       ((client-request-token :initarg :client-request-token
                         :initform
                         (common-lisp:error
                          ":client-request-token is required")
                         :type
                         (common-lisp:or client-request-token common-lisp:null)
                         :accessor
                         struct-shape-create-meeting-with-attendees-request-client-request-token
                         :shape "ClientRequestToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (external-meeting-id :initarg :external-meeting-id
                         :initform common-lisp:nil :type
                         (common-lisp:or external-meeting-id-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-meeting-with-attendees-request-external-meeting-id
                         :shape "ExternalMeetingIdType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (meeting-host-id :initarg :meeting-host-id :initform
                         common-lisp:nil :type
                         (common-lisp:or external-user-id-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-meeting-with-attendees-request-meeting-host-id
                         :shape "ExternalUserIdType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (media-region :initarg :media-region :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-meeting-with-attendees-request-media-region
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or meeting-tag-list common-lisp:null)
                         :accessor
                         struct-shape-create-meeting-with-attendees-request-tags
                         :shape "MeetingTagList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (notifications-configuration :initarg
                         :notifications-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or meeting-notification-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-meeting-with-attendees-request-notifications-configuration
                         :shape "MeetingNotificationConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (attendees :initarg :attendees :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          create-meeting-with-attendees-request-item-list
                          common-lisp:null)
                         :accessor
                         struct-shape-create-meeting-with-attendees-request-attendees
                         :shape "CreateMeetingWithAttendeesRequestItemList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-meeting-with-attendees-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-meeting-with-attendees-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-meeting-with-attendees-request
                    'make-create-meeting-with-attendees-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-meeting-with-attendees-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-meeting-with-attendees-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'external-meeting-id))
      (common-lisp:list
       (common-lisp:cons "ExternalMeetingId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'meeting-host-id))
      (common-lisp:list
       (common-lisp:cons "MeetingHostId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'media-region))
      (common-lisp:list
       (common-lisp:cons "MediaRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'notifications-configuration))
      (common-lisp:list
       (common-lisp:cons "NotificationsConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attendees))
      (common-lisp:list
       (common-lisp:cons "Attendees"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-meeting-with-attendees-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype create-meeting-with-attendees-request-item-list ()
   '(trivial-types:proper-list create-attendee-request-item))
 (common-lisp:defun make-create-meeting-with-attendees-request-item-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            create-attendee-request-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass create-meeting-with-attendees-response common-lisp:nil
                       ((meeting :initarg :meeting :initform common-lisp:nil
                         :type (common-lisp:or meeting common-lisp:null)
                         :accessor
                         struct-shape-create-meeting-with-attendees-response-meeting
                         :shape "Meeting" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (attendees :initarg :attendees :initform
                         common-lisp:nil :type
                         (common-lisp:or attendee-list common-lisp:null)
                         :accessor
                         struct-shape-create-meeting-with-attendees-response-attendees
                         :shape "AttendeeList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (errors :initarg :errors :initform common-lisp:nil
                         :type
                         (common-lisp:or batch-create-attendee-error-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-meeting-with-attendees-response-errors
                         :shape "BatchCreateAttendeeErrorList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-meeting-with-attendees-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-meeting-with-attendees-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-meeting-with-attendees-response
                    'make-create-meeting-with-attendees-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-meeting-with-attendees-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-meeting-with-attendees-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'meeting))
      (common-lisp:list
       (common-lisp:cons "Meeting"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attendees))
      (common-lisp:list
       (common-lisp:cons "Attendees"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'errors))
      (common-lisp:list
       (common-lisp:cons "Errors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-meeting-with-attendees-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-phone-number-order-request common-lisp:nil
                       ((product-type :initarg :product-type :initform
                         (common-lisp:error ":product-type is required") :type
                         (common-lisp:or phone-number-product-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-phone-number-order-request-product-type
                         :shape "PhoneNumberProductType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (e164phone-numbers :initarg :e164phone-numbers
                         :initform
                         (common-lisp:error ":e164phone-numbers is required")
                         :type
                         (common-lisp:or e164phone-number-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-phone-number-order-request-e164phone-numbers
                         :shape "E164PhoneNumberList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-phone-number-order-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-phone-number-order-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-phone-number-order-request
                    'make-create-phone-number-order-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-phone-number-order-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-phone-number-order-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'product-type))
      (common-lisp:list
       (common-lisp:cons "ProductType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'e164phone-numbers))
      (common-lisp:list
       (common-lisp:cons "E164PhoneNumbers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-phone-number-order-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-phone-number-order-response common-lisp:nil
                       ((phone-number-order :initarg :phone-number-order
                         :initform common-lisp:nil :type
                         (common-lisp:or phone-number-order common-lisp:null)
                         :accessor
                         struct-shape-create-phone-number-order-response-phone-number-order
                         :shape "PhoneNumberOrder" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-phone-number-order-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-phone-number-order-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-phone-number-order-response
                    'make-create-phone-number-order-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-phone-number-order-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-phone-number-order-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-order))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberOrder"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-phone-number-order-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-proxy-session-request common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string128 common-lisp:null)
                         :accessor
                         struct-shape-create-proxy-session-request-voice-connector-id
                         :shape "NonEmptyString128" :location "uri"
                         :location-name "voiceConnectorId")
                        (participant-phone-numbers :initarg
                         :participant-phone-numbers :initform
                         (common-lisp:error
                          ":participant-phone-numbers is required")
                         :type
                         (common-lisp:or participant-phone-number-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-proxy-session-request-participant-phone-numbers
                         :shape "ParticipantPhoneNumberList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or proxy-session-name-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-proxy-session-request-name :shape
                         "ProxySessionNameString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (expiry-minutes :initarg :expiry-minutes :initform
                         common-lisp:nil :type
                         (common-lisp:or positive-integer common-lisp:null)
                         :accessor
                         struct-shape-create-proxy-session-request-expiry-minutes
                         :shape "PositiveInteger" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (capabilities :initarg :capabilities :initform
                         (common-lisp:error ":capabilities is required") :type
                         (common-lisp:or capability-list common-lisp:null)
                         :accessor
                         struct-shape-create-proxy-session-request-capabilities
                         :shape "CapabilityList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (number-selection-behavior :initarg
                         :number-selection-behavior :initform common-lisp:nil
                         :type
                         (common-lisp:or number-selection-behavior
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-proxy-session-request-number-selection-behavior
                         :shape "NumberSelectionBehavior" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (geo-match-level :initarg :geo-match-level :initform
                         common-lisp:nil :type
                         (common-lisp:or geo-match-level common-lisp:null)
                         :accessor
                         struct-shape-create-proxy-session-request-geo-match-level
                         :shape "GeoMatchLevel" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (geo-match-params :initarg :geo-match-params :initform
                         common-lisp:nil :type
                         (common-lisp:or geo-match-params common-lisp:null)
                         :accessor
                         struct-shape-create-proxy-session-request-geo-match-params
                         :shape "GeoMatchParams" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-proxy-session-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-proxy-session-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-proxy-session-request
                    'make-create-proxy-session-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-proxy-session-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-proxy-session-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'participant-phone-numbers))
      (common-lisp:list
       (common-lisp:cons "ParticipantPhoneNumbers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiry-minutes))
      (common-lisp:list
       (common-lisp:cons "ExpiryMinutes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'capabilities))
      (common-lisp:list
       (common-lisp:cons "Capabilities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-selection-behavior))
      (common-lisp:list
       (common-lisp:cons "NumberSelectionBehavior"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'geo-match-level))
      (common-lisp:list
       (common-lisp:cons "GeoMatchLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'geo-match-params))
      (common-lisp:list
       (common-lisp:cons "GeoMatchParams"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-proxy-session-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-proxy-session-response common-lisp:nil
                       ((proxy-session :initarg :proxy-session :initform
                         common-lisp:nil :type
                         (common-lisp:or proxy-session common-lisp:null)
                         :accessor
                         struct-shape-create-proxy-session-response-proxy-session
                         :shape "ProxySession" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-proxy-session-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-proxy-session-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-proxy-session-response
                    'make-create-proxy-session-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-proxy-session-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-proxy-session-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proxy-session))
      (common-lisp:list
       (common-lisp:cons "ProxySession"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-proxy-session-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-room-membership-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-create-room-membership-request-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId")
                        (room-id :initarg :room-id :initform
                         (common-lisp:error ":room-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-create-room-membership-request-room-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "roomId")
                        (member-id :initarg :member-id :initform
                         (common-lisp:error ":member-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-create-room-membership-request-member-id
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (role :initarg :role :initform common-lisp:nil :type
                         (common-lisp:or room-membership-role common-lisp:null)
                         :accessor
                         struct-shape-create-room-membership-request-role
                         :shape "RoomMembershipRole" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-room-membership-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-room-membership-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-room-membership-request
                    'make-create-room-membership-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-room-membership-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-room-membership-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member-id))
      (common-lisp:list
       (common-lisp:cons "MemberId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role))
      (common-lisp:list
       (common-lisp:cons "Role"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-room-membership-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-room-membership-response common-lisp:nil
                       ((room-membership :initarg :room-membership :initform
                         common-lisp:nil :type
                         (common-lisp:or room-membership common-lisp:null)
                         :accessor
                         struct-shape-create-room-membership-response-room-membership
                         :shape "RoomMembership" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-room-membership-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-room-membership-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-room-membership-response
                    'make-create-room-membership-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-room-membership-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-room-membership-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'room-membership))
      (common-lisp:list
       (common-lisp:cons "RoomMembership"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-room-membership-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-room-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-create-room-request-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or sensitive-string common-lisp:null)
                         :accessor struct-shape-create-room-request-name :shape
                         "SensitiveString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-request-token :initarg :client-request-token
                         :initform common-lisp:nil :type
                         (common-lisp:or client-request-token common-lisp:null)
                         :accessor
                         struct-shape-create-room-request-client-request-token
                         :shape "ClientRequestToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-room-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-room-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-room-request 'make-create-room-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-room-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-room-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-room-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-room-response common-lisp:nil
                       ((room :initarg :room :initform common-lisp:nil :type
                         (common-lisp:or room common-lisp:null) :accessor
                         struct-shape-create-room-response-room :shape "Room"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-room-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-room-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-room-response 'make-create-room-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-room-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-room-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'room))
      (common-lisp:list
       (common-lisp:cons "Room"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-room-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-sip-media-application-call-request
                       common-lisp:nil
                       ((from-phone-number :initarg :from-phone-number
                         :initform
                         (common-lisp:error ":from-phone-number is required")
                         :type
                         (common-lisp:or e164phone-number common-lisp:null)
                         :accessor
                         struct-shape-create-sip-media-application-call-request-from-phone-number
                         :shape "E164PhoneNumber" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (to-phone-number :initarg :to-phone-number :initform
                         (common-lisp:error ":to-phone-number is required")
                         :type
                         (common-lisp:or e164phone-number common-lisp:null)
                         :accessor
                         struct-shape-create-sip-media-application-call-request-to-phone-number
                         :shape "E164PhoneNumber" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sip-media-application-id :initarg
                         :sip-media-application-id :initform
                         (common-lisp:error
                          ":sip-media-application-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-create-sip-media-application-call-request-sip-media-application-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "sipMediaApplicationId")
                        (sip-headers :initarg :sip-headers :initform
                         common-lisp:nil :type
                         (common-lisp:or sip-headers-map common-lisp:null)
                         :accessor
                         struct-shape-create-sip-media-application-call-request-sip-headers
                         :shape "SipHeadersMap" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-sip-media-application-call-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-sip-media-application-call-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-sip-media-application-call-request
                    'make-create-sip-media-application-call-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-media-application-call-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-media-application-call-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-phone-number))
      (common-lisp:list
       (common-lisp:cons "FromPhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'to-phone-number))
      (common-lisp:list
       (common-lisp:cons "ToPhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sip-headers))
      (common-lisp:list
       (common-lisp:cons "SipHeaders"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-media-application-call-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-sip-media-application-call-response
                       common-lisp:nil
                       ((sip-media-application-call :initarg
                         :sip-media-application-call :initform common-lisp:nil
                         :type
                         (common-lisp:or sip-media-application-call
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-sip-media-application-call-response-sip-media-application-call
                         :shape "SipMediaApplicationCall" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-sip-media-application-call-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-sip-media-application-call-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-sip-media-application-call-response
                    'make-create-sip-media-application-call-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-media-application-call-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-media-application-call-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application-call))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplicationCall"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-media-application-call-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-sip-media-application-request common-lisp:nil
                       ((aws-region :initarg :aws-region :initform
                         (common-lisp:error ":aws-region is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-sip-media-application-request-aws-region
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or sip-media-application-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-sip-media-application-request-name
                         :shape "SipMediaApplicationName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (endpoints :initarg :endpoints :initform
                         (common-lisp:error ":endpoints is required") :type
                         (common-lisp:or sip-media-application-endpoint-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-sip-media-application-request-endpoints
                         :shape "SipMediaApplicationEndpointList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-sip-media-application-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-sip-media-application-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-sip-media-application-request
                    'make-create-sip-media-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-media-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-media-application-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-region))
      (common-lisp:list
       (common-lisp:cons "AwsRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoints))
      (common-lisp:list
       (common-lisp:cons "Endpoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-media-application-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-sip-media-application-response common-lisp:nil
                       ((sip-media-application :initarg :sip-media-application
                         :initform common-lisp:nil :type
                         (common-lisp:or sip-media-application
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-sip-media-application-response-sip-media-application
                         :shape "SipMediaApplication" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-sip-media-application-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-sip-media-application-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-sip-media-application-response
                    'make-create-sip-media-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-media-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-media-application-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplication"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-media-application-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-sip-rule-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or sip-rule-name common-lisp:null)
                         :accessor struct-shape-create-sip-rule-request-name
                         :shape "SipRuleName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (trigger-type :initarg :trigger-type :initform
                         (common-lisp:error ":trigger-type is required") :type
                         (common-lisp:or sip-rule-trigger-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-sip-rule-request-trigger-type
                         :shape "SipRuleTriggerType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (trigger-value :initarg :trigger-value :initform
                         (common-lisp:error ":trigger-value is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-create-sip-rule-request-trigger-value
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (disabled :initarg :disabled :initform common-lisp:nil
                         :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor
                         struct-shape-create-sip-rule-request-disabled :shape
                         "NullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (target-applications :initarg :target-applications
                         :initform
                         (common-lisp:error ":target-applications is required")
                         :type
                         (common-lisp:or sip-rule-target-application-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-sip-rule-request-target-applications
                         :shape "SipRuleTargetApplicationList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-sip-rule-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-sip-rule-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-sip-rule-request 'make-create-sip-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-rule-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'trigger-type))
      (common-lisp:list
       (common-lisp:cons "TriggerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'trigger-value))
      (common-lisp:list
       (common-lisp:cons "TriggerValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disabled))
      (common-lisp:list
       (common-lisp:cons "Disabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-applications))
      (common-lisp:list
       (common-lisp:cons "TargetApplications"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-rule-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-sip-rule-response common-lisp:nil
                       ((sip-rule :initarg :sip-rule :initform common-lisp:nil
                         :type (common-lisp:or sip-rule common-lisp:null)
                         :accessor
                         struct-shape-create-sip-rule-response-sip-rule :shape
                         "SipRule" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-sip-rule-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-sip-rule-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-sip-rule-response 'make-create-sip-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-rule-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-rule-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sip-rule))
      (common-lisp:list
       (common-lisp:cons "SipRule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-sip-rule-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-user-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-create-user-request-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId")
                        (username :initarg :username :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-create-user-request-username
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (email :initarg :email :initform common-lisp:nil :type
                         (common-lisp:or email-address common-lisp:null)
                         :accessor struct-shape-create-user-request-email
                         :shape "EmailAddress" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (user-type :initarg :user-type :initform
                         common-lisp:nil :type
                         (common-lisp:or user-type common-lisp:null) :accessor
                         struct-shape-create-user-request-user-type :shape
                         "UserType" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-user-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-user-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-user-request 'make-create-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-user-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email))
      (common-lisp:list
       (common-lisp:cons "Email"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-type))
      (common-lisp:list
       (common-lisp:cons "UserType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-user-response common-lisp:nil
                       ((user :initarg :user :initform common-lisp:nil :type
                         (common-lisp:or user common-lisp:null) :accessor
                         struct-shape-create-user-response-user :shape "User"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-user-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-user-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-user-response 'make-create-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-user-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user))
      (common-lisp:list
       (common-lisp:cons "User"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-user-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-voice-connector-group-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or voice-connector-group-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-voice-connector-group-request-name
                         :shape "VoiceConnectorGroupName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (voice-connector-items :initarg :voice-connector-items
                         :initform common-lisp:nil :type
                         (common-lisp:or voice-connector-item-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-voice-connector-group-request-voice-connector-items
                         :shape "VoiceConnectorItemList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-voice-connector-group-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-voice-connector-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-voice-connector-group-request
                    'make-create-voice-connector-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-connector-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-connector-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-connector-items))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorItems"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-connector-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-voice-connector-group-response common-lisp:nil
                       ((voice-connector-group :initarg :voice-connector-group
                         :initform common-lisp:nil :type
                         (common-lisp:or voice-connector-group
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-voice-connector-group-response-voice-connector-group
                         :shape "VoiceConnectorGroup" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-voice-connector-group-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-voice-connector-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-voice-connector-group-response
                    'make-create-voice-connector-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-connector-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-connector-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-connector-group))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-connector-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-voice-connector-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or voice-connector-name common-lisp:null)
                         :accessor
                         struct-shape-create-voice-connector-request-name
                         :shape "VoiceConnectorName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (aws-region :initarg :aws-region :initform
                         common-lisp:nil :type
                         (common-lisp:or voice-connector-aws-region
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-voice-connector-request-aws-region
                         :shape "VoiceConnectorAwsRegion" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (require-encryption :initarg :require-encryption
                         :initform
                         (common-lisp:error ":require-encryption is required")
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         struct-shape-create-voice-connector-request-require-encryption
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-voice-connector-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-voice-connector-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-voice-connector-request
                    'make-create-voice-connector-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-connector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-connector-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-region))
      (common-lisp:list
       (common-lisp:cons "AwsRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'require-encryption))
      (common-lisp:list
       (common-lisp:cons "RequireEncryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-connector-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-voice-connector-response common-lisp:nil
                       ((voice-connector :initarg :voice-connector :initform
                         common-lisp:nil :type
                         (common-lisp:or voice-connector common-lisp:null)
                         :accessor
                         struct-shape-create-voice-connector-response-voice-connector
                         :shape "VoiceConnector" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-voice-connector-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-voice-connector-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-voice-connector-response
                    'make-create-voice-connector-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-connector-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-connector-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-connector))
      (common-lisp:list
       (common-lisp:cons "VoiceConnector"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-connector-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass credential common-lisp:nil
                       ((username :initarg :username :initform common-lisp:nil
                         :type
                         (common-lisp:or sensitive-string common-lisp:null)
                         :accessor struct-shape-credential-username :shape
                         "SensitiveString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (password :initarg :password :initform common-lisp:nil
                         :type
                         (common-lisp:or sensitive-string common-lisp:null)
                         :accessor struct-shape-credential-password :shape
                         "SensitiveString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-credential
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'credential
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'credential 'make-credential))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input credential))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input credential))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input credential))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype credential-list ()
   '(trivial-types:proper-list credential))
 (common-lisp:defun make-credential-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list credential))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass dnisemergency-calling-configuration common-lisp:nil
                       ((emergency-phone-number :initarg
                         :emergency-phone-number :initform
                         (common-lisp:error
                          ":emergency-phone-number is required")
                         :type
                         (common-lisp:or e164phone-number common-lisp:null)
                         :accessor
                         struct-shape-dnisemergency-calling-configuration-emergency-phone-number
                         :shape "E164PhoneNumber" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (test-phone-number :initarg :test-phone-number
                         :initform common-lisp:nil :type
                         (common-lisp:or e164phone-number common-lisp:null)
                         :accessor
                         struct-shape-dnisemergency-calling-configuration-test-phone-number
                         :shape "E164PhoneNumber" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (calling-country :initarg :calling-country :initform
                         (common-lisp:error ":calling-country is required")
                         :type
                         (common-lisp:or alpha2country-code common-lisp:null)
                         :accessor
                         struct-shape-dnisemergency-calling-configuration-calling-country
                         :shape "Alpha2CountryCode" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-dnisemergency-calling-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'dnisemergency-calling-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'dnisemergency-calling-configuration
                    'make-dnisemergency-calling-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dnisemergency-calling-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dnisemergency-calling-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'emergency-phone-number))
      (common-lisp:list
       (common-lisp:cons "EmergencyPhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'test-phone-number))
      (common-lisp:list
       (common-lisp:cons "TestPhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'calling-country))
      (common-lisp:list
       (common-lisp:cons "CallingCountry"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dnisemergency-calling-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype dnisemergency-calling-configuration-list ()
   '(trivial-types:proper-list dnisemergency-calling-configuration))
 (common-lisp:defun make-dnisemergency-calling-configuration-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            dnisemergency-calling-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:deftype data-retention-in-hours () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass delete-account-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-delete-account-request-account-id :shape
                         "NonEmptyString" :location "uri" :location-name
                         "accountId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-account-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-account-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-account-request 'make-delete-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-account-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-account-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-account-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-account-response 'make-delete-account-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-account-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-app-instance-admin-request common-lisp:nil
                       ((app-instance-admin-arn :initarg
                         :app-instance-admin-arn :initform
                         (common-lisp:error
                          ":app-instance-admin-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-app-instance-admin-request-app-instance-admin-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceAdminArn")
                        (app-instance-arn :initarg :app-instance-arn :initform
                         (common-lisp:error ":app-instance-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-app-instance-admin-request-app-instance-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-app-instance-admin-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-app-instance-admin-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-app-instance-admin-request
                    'make-delete-app-instance-admin-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-app-instance-admin-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-app-instance-admin-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-app-instance-admin-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-app-instance-request common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         (common-lisp:error ":app-instance-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-app-instance-request-app-instance-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-app-instance-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-app-instance-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-app-instance-request
                    'make-delete-app-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-app-instance-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-app-instance-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-app-instance-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-app-instance-streaming-configurations-request
                       common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         (common-lisp:error ":app-instance-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-app-instance-streaming-configurations-request-app-instance-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-app-instance-streaming-configurations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-app-instance-streaming-configurations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-app-instance-streaming-configurations-request
                    'make-delete-app-instance-streaming-configurations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-app-instance-streaming-configurations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-app-instance-streaming-configurations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-app-instance-streaming-configurations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-app-instance-user-request common-lisp:nil
                       ((app-instance-user-arn :initarg :app-instance-user-arn
                         :initform
                         (common-lisp:error
                          ":app-instance-user-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-app-instance-user-request-app-instance-user-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceUserArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-app-instance-user-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-app-instance-user-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-app-instance-user-request
                    'make-delete-app-instance-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-app-instance-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-app-instance-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-app-instance-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-attendee-request common-lisp:nil
                       ((meeting-id :initarg :meeting-id :initform
                         (common-lisp:error ":meeting-id is required") :type
                         (common-lisp:or guid-string common-lisp:null)
                         :accessor
                         struct-shape-delete-attendee-request-meeting-id :shape
                         "GuidString" :location "uri" :location-name
                         "meetingId")
                        (attendee-id :initarg :attendee-id :initform
                         (common-lisp:error ":attendee-id is required") :type
                         (common-lisp:or guid-string common-lisp:null)
                         :accessor
                         struct-shape-delete-attendee-request-attendee-id
                         :shape "GuidString" :location "uri" :location-name
                         "attendeeId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-attendee-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-attendee-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-attendee-request 'make-delete-attendee-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-attendee-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-attendee-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-attendee-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-channel-ban-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-delete-channel-ban-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (member-arn :initarg :member-arn :initform
                         (common-lisp:error ":member-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-delete-channel-ban-request-member-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "memberArn")
                        (chime-bearer :initarg :chime-bearer :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-delete-channel-ban-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-channel-ban-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-channel-ban-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-channel-ban-request
                    'make-delete-channel-ban-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-ban-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-ban-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-ban-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-channel-membership-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-delete-channel-membership-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (member-arn :initarg :member-arn :initform
                         (common-lisp:error ":member-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-delete-channel-membership-request-member-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "memberArn")
                        (chime-bearer :initarg :chime-bearer :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-delete-channel-membership-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-channel-membership-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-channel-membership-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-channel-membership-request
                    'make-delete-channel-membership-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-membership-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-membership-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-membership-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-channel-message-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-delete-channel-message-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (message-id :initarg :message-id :initform
                         (common-lisp:error ":message-id is required") :type
                         (common-lisp:or message-id common-lisp:null) :accessor
                         struct-shape-delete-channel-message-request-message-id
                         :shape "MessageId" :location "uri" :location-name
                         "messageId")
                        (chime-bearer :initarg :chime-bearer :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-delete-channel-message-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-channel-message-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-channel-message-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-channel-message-request
                    'make-delete-channel-message-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-message-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-message-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-message-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-channel-moderator-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-delete-channel-moderator-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (channel-moderator-arn :initarg :channel-moderator-arn
                         :initform
                         (common-lisp:error
                          ":channel-moderator-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-channel-moderator-request-channel-moderator-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelModeratorArn")
                        (chime-bearer :initarg :chime-bearer :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-delete-channel-moderator-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-channel-moderator-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-channel-moderator-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-channel-moderator-request
                    'make-delete-channel-moderator-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-moderator-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-moderator-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-moderator-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-channel-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-delete-channel-request-channel-arn :shape
                         "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (chime-bearer :initarg :chime-bearer :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-delete-channel-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-channel-request 'make-delete-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-events-configuration-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-delete-events-configuration-request-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId")
                        (bot-id :initarg :bot-id :initform
                         (common-lisp:error ":bot-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-delete-events-configuration-request-bot-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "botId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-events-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-events-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-events-configuration-request
                    'make-delete-events-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-events-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-events-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-events-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-media-capture-pipeline-request common-lisp:nil
                       ((media-pipeline-id :initarg :media-pipeline-id
                         :initform
                         (common-lisp:error ":media-pipeline-id is required")
                         :type (common-lisp:or guid-string common-lisp:null)
                         :accessor
                         struct-shape-delete-media-capture-pipeline-request-media-pipeline-id
                         :shape "GuidString" :location "uri" :location-name
                         "mediaPipelineId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-media-capture-pipeline-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-media-capture-pipeline-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-media-capture-pipeline-request
                    'make-delete-media-capture-pipeline-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-media-capture-pipeline-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-media-capture-pipeline-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-media-capture-pipeline-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-meeting-request common-lisp:nil
                       ((meeting-id :initarg :meeting-id :initform
                         (common-lisp:error ":meeting-id is required") :type
                         (common-lisp:or guid-string common-lisp:null)
                         :accessor
                         struct-shape-delete-meeting-request-meeting-id :shape
                         "GuidString" :location "uri" :location-name
                         "meetingId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-meeting-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-meeting-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-meeting-request 'make-delete-meeting-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-meeting-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-meeting-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-meeting-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-phone-number-request common-lisp:nil
                       ((phone-number-id :initarg :phone-number-id :initform
                         (common-lisp:error ":phone-number-id is required")
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-delete-phone-number-request-phone-number-id
                         :shape "String" :location "uri" :location-name
                         "phoneNumberId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-phone-number-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-phone-number-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-phone-number-request
                    'make-delete-phone-number-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-phone-number-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-phone-number-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-phone-number-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-proxy-session-request common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string128 common-lisp:null)
                         :accessor
                         struct-shape-delete-proxy-session-request-voice-connector-id
                         :shape "NonEmptyString128" :location "uri"
                         :location-name "voiceConnectorId")
                        (proxy-session-id :initarg :proxy-session-id :initform
                         (common-lisp:error ":proxy-session-id is required")
                         :type
                         (common-lisp:or non-empty-string128 common-lisp:null)
                         :accessor
                         struct-shape-delete-proxy-session-request-proxy-session-id
                         :shape "NonEmptyString128" :location "uri"
                         :location-name "proxySessionId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-proxy-session-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-proxy-session-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-proxy-session-request
                    'make-delete-proxy-session-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-proxy-session-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-proxy-session-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-proxy-session-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-room-membership-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-delete-room-membership-request-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId")
                        (room-id :initarg :room-id :initform
                         (common-lisp:error ":room-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-delete-room-membership-request-room-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "roomId")
                        (member-id :initarg :member-id :initform
                         (common-lisp:error ":member-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-delete-room-membership-request-member-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "memberId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-room-membership-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-room-membership-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-room-membership-request
                    'make-delete-room-membership-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-room-membership-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-room-membership-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-room-membership-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-room-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-delete-room-request-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId")
                        (room-id :initarg :room-id :initform
                         (common-lisp:error ":room-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-delete-room-request-room-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "roomId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-room-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-room-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-room-request 'make-delete-room-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-room-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-room-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-room-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-sip-media-application-request common-lisp:nil
                       ((sip-media-application-id :initarg
                         :sip-media-application-id :initform
                         (common-lisp:error
                          ":sip-media-application-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-delete-sip-media-application-request-sip-media-application-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "sipMediaApplicationId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-sip-media-application-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-sip-media-application-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-sip-media-application-request
                    'make-delete-sip-media-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-sip-media-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-sip-media-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-sip-media-application-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-sip-rule-request common-lisp:nil
                       ((sip-rule-id :initarg :sip-rule-id :initform
                         (common-lisp:error ":sip-rule-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-delete-sip-rule-request-sip-rule-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "sipRuleId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-sip-rule-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-sip-rule-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-sip-rule-request 'make-delete-sip-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-sip-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-sip-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-sip-rule-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  delete-voice-connector-emergency-calling-configuration-request
  common-lisp:nil
  ((voice-connector-id :initarg :voice-connector-id :initform
    (common-lisp:error ":voice-connector-id is required") :type
    (common-lisp:or non-empty-string common-lisp:null) :accessor
    struct-shape-delete-voice-connector-emergency-calling-configuration-request-voice-connector-id
    :shape "NonEmptyString" :location "uri" :location-name "voiceConnectorId"))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-voice-connector-emergency-calling-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-voice-connector-emergency-calling-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list
   'delete-voice-connector-emergency-calling-configuration-request
   'make-delete-voice-connector-emergency-calling-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-emergency-calling-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-emergency-calling-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-emergency-calling-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-voice-connector-group-request common-lisp:nil
                       ((voice-connector-group-id :initarg
                         :voice-connector-group-id :initform
                         (common-lisp:error
                          ":voice-connector-group-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-delete-voice-connector-group-request-voice-connector-group-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorGroupId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-voice-connector-group-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-voice-connector-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-voice-connector-group-request
                    'make-delete-voice-connector-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-voice-connector-origination-request
                       common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-delete-voice-connector-origination-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-voice-connector-origination-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-voice-connector-origination-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-voice-connector-origination-request
                    'make-delete-voice-connector-origination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-origination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-origination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-origination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-voice-connector-proxy-request common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string128 common-lisp:null)
                         :accessor
                         struct-shape-delete-voice-connector-proxy-request-voice-connector-id
                         :shape "NonEmptyString128" :location "uri"
                         :location-name "voiceConnectorId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-voice-connector-proxy-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-voice-connector-proxy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-voice-connector-proxy-request
                    'make-delete-voice-connector-proxy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-proxy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-proxy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-proxy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-voice-connector-request common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-delete-voice-connector-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-voice-connector-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-voice-connector-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-voice-connector-request
                    'make-delete-voice-connector-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-voice-connector-streaming-configuration-request
                       common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-delete-voice-connector-streaming-configuration-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-voice-connector-streaming-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-voice-connector-streaming-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-voice-connector-streaming-configuration-request
                    'make-delete-voice-connector-streaming-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-streaming-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-streaming-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-streaming-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-voice-connector-termination-credentials-request
                       common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-delete-voice-connector-termination-credentials-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId")
                        (usernames :initarg :usernames :initform
                         (common-lisp:error ":usernames is required") :type
                         (common-lisp:or sensitive-string-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-voice-connector-termination-credentials-request-usernames
                         :shape "SensitiveStringList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-voice-connector-termination-credentials-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-voice-connector-termination-credentials-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-voice-connector-termination-credentials-request
                    'make-delete-voice-connector-termination-credentials-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-termination-credentials-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-termination-credentials-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'usernames))
      (common-lisp:list
       (common-lisp:cons "Usernames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-termination-credentials-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-voice-connector-termination-request
                       common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-delete-voice-connector-termination-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-voice-connector-termination-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-voice-connector-termination-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-voice-connector-termination-request
                    'make-delete-voice-connector-termination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-termination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-termination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-connector-termination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-app-instance-admin-request common-lisp:nil
                       ((app-instance-admin-arn :initarg
                         :app-instance-admin-arn :initform
                         (common-lisp:error
                          ":app-instance-admin-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-app-instance-admin-request-app-instance-admin-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceAdminArn")
                        (app-instance-arn :initarg :app-instance-arn :initform
                         (common-lisp:error ":app-instance-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-app-instance-admin-request-app-instance-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-app-instance-admin-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-app-instance-admin-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-app-instance-admin-request
                    'make-describe-app-instance-admin-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-admin-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-admin-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-admin-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-app-instance-admin-response common-lisp:nil
                       ((app-instance-admin :initarg :app-instance-admin
                         :initform common-lisp:nil :type
                         (common-lisp:or app-instance-admin common-lisp:null)
                         :accessor
                         struct-shape-describe-app-instance-admin-response-app-instance-admin
                         :shape "AppInstanceAdmin" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-app-instance-admin-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-app-instance-admin-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-app-instance-admin-response
                    'make-describe-app-instance-admin-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-admin-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-admin-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance-admin))
      (common-lisp:list
       (common-lisp:cons "AppInstanceAdmin"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-admin-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-app-instance-request common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         (common-lisp:error ":app-instance-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-app-instance-request-app-instance-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-app-instance-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-app-instance-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-app-instance-request
                    'make-describe-app-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-app-instance-response common-lisp:nil
                       ((app-instance :initarg :app-instance :initform
                         common-lisp:nil :type
                         (common-lisp:or app-instance common-lisp:null)
                         :accessor
                         struct-shape-describe-app-instance-response-app-instance
                         :shape "AppInstance" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-app-instance-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-app-instance-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-app-instance-response
                    'make-describe-app-instance-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance))
      (common-lisp:list
       (common-lisp:cons "AppInstance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-app-instance-user-request common-lisp:nil
                       ((app-instance-user-arn :initarg :app-instance-user-arn
                         :initform
                         (common-lisp:error
                          ":app-instance-user-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-app-instance-user-request-app-instance-user-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceUserArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-app-instance-user-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-app-instance-user-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-app-instance-user-request
                    'make-describe-app-instance-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-app-instance-user-response common-lisp:nil
                       ((app-instance-user :initarg :app-instance-user
                         :initform common-lisp:nil :type
                         (common-lisp:or app-instance-user common-lisp:null)
                         :accessor
                         struct-shape-describe-app-instance-user-response-app-instance-user
                         :shape "AppInstanceUser" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-app-instance-user-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-app-instance-user-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-app-instance-user-response
                    'make-describe-app-instance-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-user-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance-user))
      (common-lisp:list
       (common-lisp:cons "AppInstanceUser"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-app-instance-user-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-channel-ban-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-describe-channel-ban-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (member-arn :initarg :member-arn :initform
                         (common-lisp:error ":member-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-describe-channel-ban-request-member-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "memberArn")
                        (chime-bearer :initarg :chime-bearer :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-describe-channel-ban-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-channel-ban-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-channel-ban-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-channel-ban-request
                    'make-describe-channel-ban-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-ban-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-ban-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-ban-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-channel-ban-response common-lisp:nil
                       ((channel-ban :initarg :channel-ban :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-ban common-lisp:null)
                         :accessor
                         struct-shape-describe-channel-ban-response-channel-ban
                         :shape "ChannelBan" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-channel-ban-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-channel-ban-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-channel-ban-response
                    'make-describe-channel-ban-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-ban-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-ban-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-ban))
      (common-lisp:list
       (common-lisp:cons "ChannelBan"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-ban-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  describe-channel-membership-for-app-instance-user-request common-lisp:nil
  ((channel-arn :initarg :channel-arn :initform
    (common-lisp:error ":channel-arn is required") :type
    (common-lisp:or chime-arn common-lisp:null) :accessor
    struct-shape-describe-channel-membership-for-app-instance-user-request-channel-arn
    :shape "ChimeArn" :location "uri" :location-name "channelArn")
   (app-instance-user-arn :initarg :app-instance-user-arn :initform
    (common-lisp:error ":app-instance-user-arn is required") :type
    (common-lisp:or chime-arn common-lisp:null) :accessor
    struct-shape-describe-channel-membership-for-app-instance-user-request-app-instance-user-arn
    :shape "ChimeArn" :location "querystring" :location-name
    "app-instance-user-arn")
   (chime-bearer :initarg :chime-bearer :initform common-lisp:nil :type
    (common-lisp:or chime-arn common-lisp:null) :accessor
    struct-shape-describe-channel-membership-for-app-instance-user-request-chime-bearer
    :shape "ChimeArn" :location "header" :location-name "x-amz-chime-bearer"))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-channel-membership-for-app-instance-user-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-channel-membership-for-app-instance-user-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-channel-membership-for-app-instance-user-request
                    'make-describe-channel-membership-for-app-instance-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-membership-for-app-instance-user-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-membership-for-app-instance-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-membership-for-app-instance-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  describe-channel-membership-for-app-instance-user-response common-lisp:nil
  ((channel-membership :initarg :channel-membership :initform common-lisp:nil
    :type
    (common-lisp:or channel-membership-for-app-instance-user-summary
                    common-lisp:null)
    :accessor
    struct-shape-describe-channel-membership-for-app-instance-user-response-channel-membership
    :shape "ChannelMembershipForAppInstanceUserSummary" :location
    common-lisp:nil :location-name common-lisp:nil))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-channel-membership-for-app-instance-user-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-channel-membership-for-app-instance-user-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-channel-membership-for-app-instance-user-response
                    'make-describe-channel-membership-for-app-instance-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-membership-for-app-instance-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-membership-for-app-instance-user-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-membership))
      (common-lisp:list
       (common-lisp:cons "ChannelMembership"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-membership-for-app-instance-user-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-channel-membership-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-describe-channel-membership-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (member-arn :initarg :member-arn :initform
                         (common-lisp:error ":member-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-describe-channel-membership-request-member-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "memberArn")
                        (chime-bearer :initarg :chime-bearer :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-describe-channel-membership-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-channel-membership-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-channel-membership-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-channel-membership-request
                    'make-describe-channel-membership-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-membership-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-membership-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-membership-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-channel-membership-response common-lisp:nil
                       ((channel-membership :initarg :channel-membership
                         :initform common-lisp:nil :type
                         (common-lisp:or channel-membership common-lisp:null)
                         :accessor
                         struct-shape-describe-channel-membership-response-channel-membership
                         :shape "ChannelMembership" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-channel-membership-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-channel-membership-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-channel-membership-response
                    'make-describe-channel-membership-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-membership-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-membership-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-membership))
      (common-lisp:list
       (common-lisp:cons "ChannelMembership"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-membership-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-channel-moderated-by-app-instance-user-request
                       common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-describe-channel-moderated-by-app-instance-user-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (app-instance-user-arn :initarg :app-instance-user-arn
                         :initform
                         (common-lisp:error
                          ":app-instance-user-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-channel-moderated-by-app-instance-user-request-app-instance-user-arn
                         :shape "ChimeArn" :location "querystring"
                         :location-name "app-instance-user-arn")
                        (chime-bearer :initarg :chime-bearer :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-describe-channel-moderated-by-app-instance-user-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-channel-moderated-by-app-instance-user-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-channel-moderated-by-app-instance-user-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-channel-moderated-by-app-instance-user-request
                    'make-describe-channel-moderated-by-app-instance-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-moderated-by-app-instance-user-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-moderated-by-app-instance-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-moderated-by-app-instance-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-channel-moderated-by-app-instance-user-response
                       common-lisp:nil
                       ((channel :initarg :channel :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          channel-moderated-by-app-instance-user-summary
                          common-lisp:null)
                         :accessor
                         struct-shape-describe-channel-moderated-by-app-instance-user-response-channel
                         :shape "ChannelModeratedByAppInstanceUserSummary"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-channel-moderated-by-app-instance-user-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-channel-moderated-by-app-instance-user-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-channel-moderated-by-app-instance-user-response
                    'make-describe-channel-moderated-by-app-instance-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-moderated-by-app-instance-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-moderated-by-app-instance-user-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel))
      (common-lisp:list
       (common-lisp:cons "Channel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-moderated-by-app-instance-user-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-channel-moderator-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-describe-channel-moderator-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (channel-moderator-arn :initarg :channel-moderator-arn
                         :initform
                         (common-lisp:error
                          ":channel-moderator-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-channel-moderator-request-channel-moderator-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelModeratorArn")
                        (chime-bearer :initarg :chime-bearer :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-describe-channel-moderator-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-channel-moderator-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-channel-moderator-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-channel-moderator-request
                    'make-describe-channel-moderator-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-moderator-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-moderator-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-moderator-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-channel-moderator-response common-lisp:nil
                       ((channel-moderator :initarg :channel-moderator
                         :initform common-lisp:nil :type
                         (common-lisp:or channel-moderator common-lisp:null)
                         :accessor
                         struct-shape-describe-channel-moderator-response-channel-moderator
                         :shape "ChannelModerator" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-channel-moderator-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-channel-moderator-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-channel-moderator-response
                    'make-describe-channel-moderator-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-moderator-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-moderator-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-moderator))
      (common-lisp:list
       (common-lisp:cons "ChannelModerator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-moderator-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-channel-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-describe-channel-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (chime-bearer :initarg :chime-bearer :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-describe-channel-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-channel-request 'make-describe-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-channel-response common-lisp:nil
                       ((channel :initarg :channel :initform common-lisp:nil
                         :type (common-lisp:or channel common-lisp:null)
                         :accessor
                         struct-shape-describe-channel-response-channel :shape
                         "Channel" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-channel-response
                    'make-describe-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel))
      (common-lisp:list
       (common-lisp:cons "Channel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-phone-number-from-user-request
                       common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-disassociate-phone-number-from-user-request-account-id
                         :shape "String" :location "uri" :location-name
                         "accountId")
                        (user-id :initarg :user-id :initform
                         (common-lisp:error ":user-id is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-disassociate-phone-number-from-user-request-user-id
                         :shape "String" :location "uri" :location-name
                         "userId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disassociate-phone-number-from-user-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-phone-number-from-user-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'disassociate-phone-number-from-user-request
                    'make-disassociate-phone-number-from-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-number-from-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-number-from-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-number-from-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-phone-number-from-user-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disassociate-phone-number-from-user-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-phone-number-from-user-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'disassociate-phone-number-from-user-response
                    'make-disassociate-phone-number-from-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-number-from-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-number-from-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-number-from-user-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  disassociate-phone-numbers-from-voice-connector-group-request common-lisp:nil
  ((voice-connector-group-id :initarg :voice-connector-group-id :initform
    (common-lisp:error ":voice-connector-group-id is required") :type
    (common-lisp:or non-empty-string common-lisp:null) :accessor
    struct-shape-disassociate-phone-numbers-from-voice-connector-group-request-voice-connector-group-id
    :shape "NonEmptyString" :location "uri" :location-name
    "voiceConnectorGroupId")
   (e164phone-numbers :initarg :e164phone-numbers :initform
    (common-lisp:error ":e164phone-numbers is required") :type
    (common-lisp:or e164phone-number-list common-lisp:null) :accessor
    struct-shape-disassociate-phone-numbers-from-voice-connector-group-request-e164phone-numbers
    :shape "E164PhoneNumberList" :location common-lisp:nil :location-name
    common-lisp:nil))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disassociate-phone-numbers-from-voice-connector-group-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-phone-numbers-from-voice-connector-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list
   'disassociate-phone-numbers-from-voice-connector-group-request
   'make-disassociate-phone-numbers-from-voice-connector-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-numbers-from-voice-connector-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-numbers-from-voice-connector-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'e164phone-numbers))
      (common-lisp:list
       (common-lisp:cons "E164PhoneNumbers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-numbers-from-voice-connector-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  disassociate-phone-numbers-from-voice-connector-group-response
  common-lisp:nil
  ((phone-number-errors :initarg :phone-number-errors :initform common-lisp:nil
    :type (common-lisp:or phone-number-error-list common-lisp:null) :accessor
    struct-shape-disassociate-phone-numbers-from-voice-connector-group-response-phone-number-errors
    :shape "PhoneNumberErrorList" :location common-lisp:nil :location-name
    common-lisp:nil))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disassociate-phone-numbers-from-voice-connector-group-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-phone-numbers-from-voice-connector-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list
   'disassociate-phone-numbers-from-voice-connector-group-response
   'make-disassociate-phone-numbers-from-voice-connector-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-numbers-from-voice-connector-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-numbers-from-voice-connector-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-errors))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberErrors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-numbers-from-voice-connector-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-phone-numbers-from-voice-connector-request
                       common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-disassociate-phone-numbers-from-voice-connector-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId")
                        (e164phone-numbers :initarg :e164phone-numbers
                         :initform
                         (common-lisp:error ":e164phone-numbers is required")
                         :type
                         (common-lisp:or e164phone-number-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-disassociate-phone-numbers-from-voice-connector-request-e164phone-numbers
                         :shape "E164PhoneNumberList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disassociate-phone-numbers-from-voice-connector-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-phone-numbers-from-voice-connector-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'disassociate-phone-numbers-from-voice-connector-request
                    'make-disassociate-phone-numbers-from-voice-connector-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-numbers-from-voice-connector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-numbers-from-voice-connector-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'e164phone-numbers))
      (common-lisp:list
       (common-lisp:cons "E164PhoneNumbers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-numbers-from-voice-connector-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-phone-numbers-from-voice-connector-response
                       common-lisp:nil
                       ((phone-number-errors :initarg :phone-number-errors
                         :initform common-lisp:nil :type
                         (common-lisp:or phone-number-error-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-disassociate-phone-numbers-from-voice-connector-response-phone-number-errors
                         :shape "PhoneNumberErrorList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disassociate-phone-numbers-from-voice-connector-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-phone-numbers-from-voice-connector-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'disassociate-phone-numbers-from-voice-connector-response
                    'make-disassociate-phone-numbers-from-voice-connector-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-numbers-from-voice-connector-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-numbers-from-voice-connector-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-errors))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberErrors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-phone-numbers-from-voice-connector-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-signin-delegate-groups-from-account-request
                       common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-disassociate-signin-delegate-groups-from-account-request-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId")
                        (group-names :initarg :group-names :initform
                         (common-lisp:error ":group-names is required") :type
                         (common-lisp:or non-empty-string-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-disassociate-signin-delegate-groups-from-account-request-group-names
                         :shape "NonEmptyStringList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disassociate-signin-delegate-groups-from-account-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-signin-delegate-groups-from-account-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'disassociate-signin-delegate-groups-from-account-request
                    'make-disassociate-signin-delegate-groups-from-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-signin-delegate-groups-from-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-signin-delegate-groups-from-account-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-names))
      (common-lisp:list
       (common-lisp:cons "GroupNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-signin-delegate-groups-from-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  disassociate-signin-delegate-groups-from-account-response common-lisp:nil
  common-lisp:nil (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disassociate-signin-delegate-groups-from-account-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-signin-delegate-groups-from-account-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'disassociate-signin-delegate-groups-from-account-response
                    'make-disassociate-signin-delegate-groups-from-account-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-signin-delegate-groups-from-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-signin-delegate-groups-from-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-signin-delegate-groups-from-account-response))
   common-lisp:nil))
(common-lisp:deftype e164phone-number () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype e164phone-number-list ()
   '(trivial-types:proper-list e164phone-number))
 (common-lisp:defun make-e164phone-number-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list e164phone-number))
   aws-sdk/generator/shape::members))
(common-lisp:deftype email-address () 'common-lisp:string)
(common-lisp:deftype email-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass emergency-calling-configuration common-lisp:nil
                       ((dnis :initarg :dnis :initform common-lisp:nil :type
                         (common-lisp:or
                          dnisemergency-calling-configuration-list
                          common-lisp:null)
                         :accessor
                         struct-shape-emergency-calling-configuration-dnis
                         :shape "DNISEmergencyCallingConfigurationList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-emergency-calling-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'emergency-calling-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'emergency-calling-configuration
                    'make-emergency-calling-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          emergency-calling-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          emergency-calling-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dnis))
      (common-lisp:list
       (common-lisp:cons "DNIS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          emergency-calling-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass engine-transcribe-medical-settings common-lisp:nil
                       ((language-code :initarg :language-code :initform
                         (common-lisp:error ":language-code is required") :type
                         (common-lisp:or transcribe-medical-language-code
                                         common-lisp:null)
                         :accessor
                         struct-shape-engine-transcribe-medical-settings-language-code
                         :shape "TranscribeMedicalLanguageCode" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (specialty :initarg :specialty :initform
                         (common-lisp:error ":specialty is required") :type
                         (common-lisp:or transcribe-medical-specialty
                                         common-lisp:null)
                         :accessor
                         struct-shape-engine-transcribe-medical-settings-specialty
                         :shape "TranscribeMedicalSpecialty" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (type :initarg :type :initform
                         (common-lisp:error ":type is required") :type
                         (common-lisp:or transcribe-medical-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-engine-transcribe-medical-settings-type
                         :shape "TranscribeMedicalType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (vocabulary-name :initarg :vocabulary-name :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-engine-transcribe-medical-settings-vocabulary-name
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (region :initarg :region :initform common-lisp:nil
                         :type
                         (common-lisp:or transcribe-medical-region
                                         common-lisp:null)
                         :accessor
                         struct-shape-engine-transcribe-medical-settings-region
                         :shape "TranscribeMedicalRegion" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (content-identification-type :initarg
                         :content-identification-type :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          transcribe-medical-content-identification-type
                          common-lisp:null)
                         :accessor
                         struct-shape-engine-transcribe-medical-settings-content-identification-type
                         :shape "TranscribeMedicalContentIdentificationType"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-engine-transcribe-medical-settings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'engine-transcribe-medical-settings
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'engine-transcribe-medical-settings
                    'make-engine-transcribe-medical-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          engine-transcribe-medical-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          engine-transcribe-medical-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'specialty))
      (common-lisp:list
       (common-lisp:cons "Specialty"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vocabulary-name))
      (common-lisp:list
       (common-lisp:cons "VocabularyName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'region))
      (common-lisp:list
       (common-lisp:cons "Region"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-identification-type))
      (common-lisp:list
       (common-lisp:cons "ContentIdentificationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          engine-transcribe-medical-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass engine-transcribe-settings common-lisp:nil
                       ((language-code :initarg :language-code :initform
                         common-lisp:nil :type
                         (common-lisp:or transcribe-language-code
                                         common-lisp:null)
                         :accessor
                         struct-shape-engine-transcribe-settings-language-code
                         :shape "TranscribeLanguageCode" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (vocabulary-filter-method :initarg
                         :vocabulary-filter-method :initform common-lisp:nil
                         :type
                         (common-lisp:or transcribe-vocabulary-filter-method
                                         common-lisp:null)
                         :accessor
                         struct-shape-engine-transcribe-settings-vocabulary-filter-method
                         :shape "TranscribeVocabularyFilterMethod" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (vocabulary-filter-name :initarg
                         :vocabulary-filter-name :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-engine-transcribe-settings-vocabulary-filter-name
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vocabulary-name :initarg :vocabulary-name :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-engine-transcribe-settings-vocabulary-name
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (region :initarg :region :initform common-lisp:nil
                         :type
                         (common-lisp:or transcribe-region common-lisp:null)
                         :accessor
                         struct-shape-engine-transcribe-settings-region :shape
                         "TranscribeRegion" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (enable-partial-results-stabilization :initarg
                         :enable-partial-results-stabilization :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-engine-transcribe-settings-enable-partial-results-stabilization
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (partial-results-stability :initarg
                         :partial-results-stability :initform common-lisp:nil
                         :type
                         (common-lisp:or transcribe-partial-results-stability
                                         common-lisp:null)
                         :accessor
                         struct-shape-engine-transcribe-settings-partial-results-stability
                         :shape "TranscribePartialResultsStability" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (content-identification-type :initarg
                         :content-identification-type :initform common-lisp:nil
                         :type
                         (common-lisp:or transcribe-content-identification-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-engine-transcribe-settings-content-identification-type
                         :shape "TranscribeContentIdentificationType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (content-redaction-type :initarg
                         :content-redaction-type :initform common-lisp:nil
                         :type
                         (common-lisp:or transcribe-content-redaction-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-engine-transcribe-settings-content-redaction-type
                         :shape "TranscribeContentRedactionType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (pii-entity-types :initarg :pii-entity-types :initform
                         common-lisp:nil :type
                         (common-lisp:or transcribe-pii-entity-types
                                         common-lisp:null)
                         :accessor
                         struct-shape-engine-transcribe-settings-pii-entity-types
                         :shape "TranscribePiiEntityTypes" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (language-model-name :initarg :language-model-name
                         :initform common-lisp:nil :type
                         (common-lisp:or transcribe-language-model-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-engine-transcribe-settings-language-model-name
                         :shape "TranscribeLanguageModelName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (identify-language :initarg :identify-language
                         :initform common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-engine-transcribe-settings-identify-language
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (language-options :initarg :language-options :initform
                         common-lisp:nil :type
                         (common-lisp:or transcribe-language-options
                                         common-lisp:null)
                         :accessor
                         struct-shape-engine-transcribe-settings-language-options
                         :shape "TranscribeLanguageOptions" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (preferred-language :initarg :preferred-language
                         :initform common-lisp:nil :type
                         (common-lisp:or transcribe-language-code
                                         common-lisp:null)
                         :accessor
                         struct-shape-engine-transcribe-settings-preferred-language
                         :shape "TranscribeLanguageCode" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (vocabulary-names :initarg :vocabulary-names :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          transcribe-vocabulary-names-or-filter-names-string
                          common-lisp:null)
                         :accessor
                         struct-shape-engine-transcribe-settings-vocabulary-names
                         :shape "TranscribeVocabularyNamesOrFilterNamesString"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (vocabulary-filter-names :initarg
                         :vocabulary-filter-names :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          transcribe-vocabulary-names-or-filter-names-string
                          common-lisp:null)
                         :accessor
                         struct-shape-engine-transcribe-settings-vocabulary-filter-names
                         :shape "TranscribeVocabularyNamesOrFilterNamesString"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-engine-transcribe-settings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'engine-transcribe-settings
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'engine-transcribe-settings
                    'make-engine-transcribe-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          engine-transcribe-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          engine-transcribe-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vocabulary-filter-method))
      (common-lisp:list
       (common-lisp:cons "VocabularyFilterMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vocabulary-filter-name))
      (common-lisp:list
       (common-lisp:cons "VocabularyFilterName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vocabulary-name))
      (common-lisp:list
       (common-lisp:cons "VocabularyName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'region))
      (common-lisp:list
       (common-lisp:cons "Region"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-partial-results-stabilization))
      (common-lisp:list
       (common-lisp:cons "EnablePartialResultsStabilization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'partial-results-stability))
      (common-lisp:list
       (common-lisp:cons "PartialResultsStability"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-identification-type))
      (common-lisp:list
       (common-lisp:cons "ContentIdentificationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-redaction-type))
      (common-lisp:list
       (common-lisp:cons "ContentRedactionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pii-entity-types))
      (common-lisp:list
       (common-lisp:cons "PiiEntityTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-model-name))
      (common-lisp:list
       (common-lisp:cons "LanguageModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identify-language))
      (common-lisp:list
       (common-lisp:cons "IdentifyLanguage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-options))
      (common-lisp:list
       (common-lisp:cons "LanguageOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'preferred-language))
      (common-lisp:list
       (common-lisp:cons "PreferredLanguage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vocabulary-names))
      (common-lisp:list
       (common-lisp:cons "VocabularyNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vocabulary-filter-names))
      (common-lisp:list
       (common-lisp:cons "VocabularyFilterNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          engine-transcribe-settings))
   common-lisp:nil))
(common-lisp:deftype error-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass events-configuration common-lisp:nil
                       ((bot-id :initarg :bot-id :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-events-configuration-bot-id
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (outbound-events-httpsendpoint :initarg
                         :outbound-events-httpsendpoint :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitive-string common-lisp:null)
                         :accessor
                         struct-shape-events-configuration-outbound-events-httpsendpoint
                         :shape "SensitiveString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (lambda-function-arn :initarg :lambda-function-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or sensitive-string common-lisp:null)
                         :accessor
                         struct-shape-events-configuration-lambda-function-arn
                         :shape "SensitiveString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-events-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'events-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'events-configuration 'make-events-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input events-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input events-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bot-id))
      (common-lisp:list
       (common-lisp:cons "BotId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'outbound-events-httpsendpoint))
      (common-lisp:list
       (common-lisp:cons "OutboundEventsHTTPSEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lambda-function-arn))
      (common-lisp:list
       (common-lisp:cons "LambdaFunctionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input events-configuration))
   common-lisp:nil))
(common-lisp:deftype external-meeting-id-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype external-user-id-list ()
   '(trivial-types:proper-list external-user-id-type))
 (common-lisp:defun make-external-user-id-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list external-user-id-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype external-user-id-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition forbidden-exception
     (chime-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       forbidden-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       forbidden-exception-message)))
 (common-lisp:export
  (common-lisp:list 'forbidden-exception 'forbidden-exception-code
                    'forbidden-exception-message)))
(common-lisp:deftype function-arn () 'common-lisp:string)
(common-lisp:deftype geo-match-level () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass geo-match-params common-lisp:nil
                       ((country :initarg :country :initform
                         (common-lisp:error ":country is required") :type
                         (common-lisp:or country common-lisp:null) :accessor
                         struct-shape-geo-match-params-country :shape "Country"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (area-code :initarg :area-code :initform
                         (common-lisp:error ":area-code is required") :type
                         (common-lisp:or area-code common-lisp:null) :accessor
                         struct-shape-geo-match-params-area-code :shape
                         "AreaCode" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-geo-match-params
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'geo-match-params
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'geo-match-params 'make-geo-match-params))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input geo-match-params))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input geo-match-params))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'country))
      (common-lisp:list
       (common-lisp:cons "Country"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'area-code))
      (common-lisp:list
       (common-lisp:cons "AreaCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input geo-match-params))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-account-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-get-account-request-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-account-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-account-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-account-request 'make-get-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-account-response common-lisp:nil
                       ((account :initarg :account :initform common-lisp:nil
                         :type (common-lisp:or account common-lisp:null)
                         :accessor struct-shape-get-account-response-account
                         :shape "Account" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-account-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-account-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-account-response 'make-get-account-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-account-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account))
      (common-lisp:list
       (common-lisp:cons "Account"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-account-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-account-settings-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-get-account-settings-request-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-account-settings-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-account-settings-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-account-settings-request
                    'make-get-account-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-account-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-account-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-account-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-account-settings-response common-lisp:nil
                       ((account-settings :initarg :account-settings :initform
                         common-lisp:nil :type
                         (common-lisp:or account-settings common-lisp:null)
                         :accessor
                         struct-shape-get-account-settings-response-account-settings
                         :shape "AccountSettings" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-account-settings-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-account-settings-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-account-settings-response
                    'make-get-account-settings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-account-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-account-settings-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-settings))
      (common-lisp:list
       (common-lisp:cons "AccountSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-account-settings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-app-instance-retention-settings-request
                       common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         (common-lisp:error ":app-instance-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-get-app-instance-retention-settings-request-app-instance-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-app-instance-retention-settings-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-app-instance-retention-settings-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-app-instance-retention-settings-request
                    'make-get-app-instance-retention-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-app-instance-retention-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-app-instance-retention-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-app-instance-retention-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-app-instance-retention-settings-response
                       common-lisp:nil
                       ((app-instance-retention-settings :initarg
                         :app-instance-retention-settings :initform
                         common-lisp:nil :type
                         (common-lisp:or app-instance-retention-settings
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-app-instance-retention-settings-response-app-instance-retention-settings
                         :shape "AppInstanceRetentionSettings" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (initiate-deletion-timestamp :initarg
                         :initiate-deletion-timestamp :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-get-app-instance-retention-settings-response-initiate-deletion-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-app-instance-retention-settings-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-app-instance-retention-settings-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-app-instance-retention-settings-response
                    'make-get-app-instance-retention-settings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-app-instance-retention-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-app-instance-retention-settings-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-instance-retention-settings))
      (common-lisp:list
       (common-lisp:cons "AppInstanceRetentionSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'initiate-deletion-timestamp))
      (common-lisp:list
       (common-lisp:cons "InitiateDeletionTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-app-instance-retention-settings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-app-instance-streaming-configurations-request
                       common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         (common-lisp:error ":app-instance-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-get-app-instance-streaming-configurations-request-app-instance-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-app-instance-streaming-configurations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-app-instance-streaming-configurations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-app-instance-streaming-configurations-request
                    'make-get-app-instance-streaming-configurations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-app-instance-streaming-configurations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-app-instance-streaming-configurations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-app-instance-streaming-configurations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-app-instance-streaming-configurations-response
                       common-lisp:nil
                       ((app-instance-streaming-configurations :initarg
                         :app-instance-streaming-configurations :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          app-instance-streaming-configuration-list
                          common-lisp:null)
                         :accessor
                         struct-shape-get-app-instance-streaming-configurations-response-app-instance-streaming-configurations
                         :shape "AppInstanceStreamingConfigurationList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-app-instance-streaming-configurations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-app-instance-streaming-configurations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-app-instance-streaming-configurations-response
                    'make-get-app-instance-streaming-configurations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-app-instance-streaming-configurations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-app-instance-streaming-configurations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-instance-streaming-configurations))
      (common-lisp:list
       (common-lisp:cons "AppInstanceStreamingConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-app-instance-streaming-configurations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-attendee-request common-lisp:nil
                       ((meeting-id :initarg :meeting-id :initform
                         (common-lisp:error ":meeting-id is required") :type
                         (common-lisp:or guid-string common-lisp:null)
                         :accessor struct-shape-get-attendee-request-meeting-id
                         :shape "GuidString" :location "uri" :location-name
                         "meetingId")
                        (attendee-id :initarg :attendee-id :initform
                         (common-lisp:error ":attendee-id is required") :type
                         (common-lisp:or guid-string common-lisp:null)
                         :accessor
                         struct-shape-get-attendee-request-attendee-id :shape
                         "GuidString" :location "uri" :location-name
                         "attendeeId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-attendee-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-attendee-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-attendee-request 'make-get-attendee-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-attendee-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-attendee-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-attendee-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-attendee-response common-lisp:nil
                       ((attendee :initarg :attendee :initform common-lisp:nil
                         :type (common-lisp:or attendee common-lisp:null)
                         :accessor struct-shape-get-attendee-response-attendee
                         :shape "Attendee" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-attendee-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-attendee-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-attendee-response 'make-get-attendee-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-attendee-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-attendee-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attendee))
      (common-lisp:list
       (common-lisp:cons "Attendee"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-attendee-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-bot-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-get-bot-request-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId")
                        (bot-id :initarg :bot-id :initform
                         (common-lisp:error ":bot-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-get-bot-request-bot-id :shape
                         "NonEmptyString" :location "uri" :location-name
                         "botId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-bot-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-bot-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'get-bot-request 'make-get-bot-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-bot-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-bot-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-bot-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-bot-response common-lisp:nil
                       ((bot :initarg :bot :initform common-lisp:nil :type
                         (common-lisp:or bot common-lisp:null) :accessor
                         struct-shape-get-bot-response-bot :shape "Bot"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-bot-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-bot-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-bot-response 'make-get-bot-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-bot-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-bot-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bot))
      (common-lisp:list
       (common-lisp:cons "Bot"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-bot-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-channel-message-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-get-channel-message-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (message-id :initarg :message-id :initform
                         (common-lisp:error ":message-id is required") :type
                         (common-lisp:or message-id common-lisp:null) :accessor
                         struct-shape-get-channel-message-request-message-id
                         :shape "MessageId" :location "uri" :location-name
                         "messageId")
                        (chime-bearer :initarg :chime-bearer :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-get-channel-message-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-channel-message-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-channel-message-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-channel-message-request
                    'make-get-channel-message-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-message-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-message-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-message-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-channel-message-response common-lisp:nil
                       ((channel-message :initarg :channel-message :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-message common-lisp:null)
                         :accessor
                         struct-shape-get-channel-message-response-channel-message
                         :shape "ChannelMessage" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-channel-message-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-channel-message-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-channel-message-response
                    'make-get-channel-message-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-message-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-message-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-message))
      (common-lisp:list
       (common-lisp:cons "ChannelMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-message-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-events-configuration-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-get-events-configuration-request-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId")
                        (bot-id :initarg :bot-id :initform
                         (common-lisp:error ":bot-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-get-events-configuration-request-bot-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "botId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-events-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-events-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-events-configuration-request
                    'make-get-events-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-events-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-events-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-events-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-events-configuration-response common-lisp:nil
                       ((events-configuration :initarg :events-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or events-configuration common-lisp:null)
                         :accessor
                         struct-shape-get-events-configuration-response-events-configuration
                         :shape "EventsConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-events-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-events-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-events-configuration-response
                    'make-get-events-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-events-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-events-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'events-configuration))
      (common-lisp:list
       (common-lisp:cons "EventsConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-events-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-global-settings-response common-lisp:nil
                       ((business-calling :initarg :business-calling :initform
                         common-lisp:nil :type
                         (common-lisp:or business-calling-settings
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-global-settings-response-business-calling
                         :shape "BusinessCallingSettings" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (voice-connector :initarg :voice-connector :initform
                         common-lisp:nil :type
                         (common-lisp:or voice-connector-settings
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-global-settings-response-voice-connector
                         :shape "VoiceConnectorSettings" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-global-settings-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-global-settings-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-global-settings-response
                    'make-get-global-settings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-global-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-global-settings-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'business-calling))
      (common-lisp:list
       (common-lisp:cons "BusinessCalling"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-connector))
      (common-lisp:list
       (common-lisp:cons "VoiceConnector"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-global-settings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-media-capture-pipeline-request common-lisp:nil
                       ((media-pipeline-id :initarg :media-pipeline-id
                         :initform
                         (common-lisp:error ":media-pipeline-id is required")
                         :type (common-lisp:or guid-string common-lisp:null)
                         :accessor
                         struct-shape-get-media-capture-pipeline-request-media-pipeline-id
                         :shape "GuidString" :location "uri" :location-name
                         "mediaPipelineId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-media-capture-pipeline-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-media-capture-pipeline-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-media-capture-pipeline-request
                    'make-get-media-capture-pipeline-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-media-capture-pipeline-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-media-capture-pipeline-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-media-capture-pipeline-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-media-capture-pipeline-response common-lisp:nil
                       ((media-capture-pipeline :initarg
                         :media-capture-pipeline :initform common-lisp:nil
                         :type
                         (common-lisp:or media-capture-pipeline
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-media-capture-pipeline-response-media-capture-pipeline
                         :shape "MediaCapturePipeline" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-media-capture-pipeline-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-media-capture-pipeline-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-media-capture-pipeline-response
                    'make-get-media-capture-pipeline-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-media-capture-pipeline-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-media-capture-pipeline-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'media-capture-pipeline))
      (common-lisp:list
       (common-lisp:cons "MediaCapturePipeline"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-media-capture-pipeline-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-meeting-request common-lisp:nil
                       ((meeting-id :initarg :meeting-id :initform
                         (common-lisp:error ":meeting-id is required") :type
                         (common-lisp:or guid-string common-lisp:null)
                         :accessor struct-shape-get-meeting-request-meeting-id
                         :shape "GuidString" :location "uri" :location-name
                         "meetingId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-meeting-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-meeting-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-meeting-request 'make-get-meeting-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-meeting-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-meeting-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-meeting-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-meeting-response common-lisp:nil
                       ((meeting :initarg :meeting :initform common-lisp:nil
                         :type (common-lisp:or meeting common-lisp:null)
                         :accessor struct-shape-get-meeting-response-meeting
                         :shape "Meeting" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-meeting-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-meeting-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-meeting-response 'make-get-meeting-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-meeting-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-meeting-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'meeting))
      (common-lisp:list
       (common-lisp:cons "Meeting"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-meeting-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-messaging-session-endpoint-request common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-messaging-session-endpoint-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-messaging-session-endpoint-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-messaging-session-endpoint-request
                    'make-get-messaging-session-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-messaging-session-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-messaging-session-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-messaging-session-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-messaging-session-endpoint-response common-lisp:nil
                       ((endpoint :initarg :endpoint :initform common-lisp:nil
                         :type
                         (common-lisp:or messaging-session-endpoint
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-messaging-session-endpoint-response-endpoint
                         :shape "MessagingSessionEndpoint" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-messaging-session-endpoint-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-messaging-session-endpoint-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-messaging-session-endpoint-response
                    'make-get-messaging-session-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-messaging-session-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-messaging-session-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint))
      (common-lisp:list
       (common-lisp:cons "Endpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-messaging-session-endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-phone-number-order-request common-lisp:nil
                       ((phone-number-order-id :initarg :phone-number-order-id
                         :initform
                         (common-lisp:error
                          ":phone-number-order-id is required")
                         :type (common-lisp:or guid-string common-lisp:null)
                         :accessor
                         struct-shape-get-phone-number-order-request-phone-number-order-id
                         :shape "GuidString" :location "uri" :location-name
                         "phoneNumberOrderId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-phone-number-order-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-phone-number-order-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-phone-number-order-request
                    'make-get-phone-number-order-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-order-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-order-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-order-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-phone-number-order-response common-lisp:nil
                       ((phone-number-order :initarg :phone-number-order
                         :initform common-lisp:nil :type
                         (common-lisp:or phone-number-order common-lisp:null)
                         :accessor
                         struct-shape-get-phone-number-order-response-phone-number-order
                         :shape "PhoneNumberOrder" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-phone-number-order-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-phone-number-order-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-phone-number-order-response
                    'make-get-phone-number-order-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-order-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-order-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-order))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberOrder"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-order-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-phone-number-request common-lisp:nil
                       ((phone-number-id :initarg :phone-number-id :initform
                         (common-lisp:error ":phone-number-id is required")
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-get-phone-number-request-phone-number-id
                         :shape "String" :location "uri" :location-name
                         "phoneNumberId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-phone-number-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-phone-number-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-phone-number-request 'make-get-phone-number-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-phone-number-response common-lisp:nil
                       ((phone-number :initarg :phone-number :initform
                         common-lisp:nil :type
                         (common-lisp:or phone-number common-lisp:null)
                         :accessor
                         struct-shape-get-phone-number-response-phone-number
                         :shape "PhoneNumber" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-phone-number-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-phone-number-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-phone-number-response
                    'make-get-phone-number-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number))
      (common-lisp:list
       (common-lisp:cons "PhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-phone-number-settings-response common-lisp:nil
                       ((calling-name :initarg :calling-name :initform
                         common-lisp:nil :type
                         (common-lisp:or calling-name common-lisp:null)
                         :accessor
                         struct-shape-get-phone-number-settings-response-calling-name
                         :shape "CallingName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (calling-name-updated-timestamp :initarg
                         :calling-name-updated-timestamp :initform
                         common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-get-phone-number-settings-response-calling-name-updated-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-phone-number-settings-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-phone-number-settings-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-phone-number-settings-response
                    'make-get-phone-number-settings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-settings-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'calling-name))
      (common-lisp:list
       (common-lisp:cons "CallingName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'calling-name-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "CallingNameUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-phone-number-settings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-proxy-session-request common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string128 common-lisp:null)
                         :accessor
                         struct-shape-get-proxy-session-request-voice-connector-id
                         :shape "NonEmptyString128" :location "uri"
                         :location-name "voiceConnectorId")
                        (proxy-session-id :initarg :proxy-session-id :initform
                         (common-lisp:error ":proxy-session-id is required")
                         :type
                         (common-lisp:or non-empty-string128 common-lisp:null)
                         :accessor
                         struct-shape-get-proxy-session-request-proxy-session-id
                         :shape "NonEmptyString128" :location "uri"
                         :location-name "proxySessionId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-proxy-session-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-proxy-session-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-proxy-session-request
                    'make-get-proxy-session-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-proxy-session-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-proxy-session-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-proxy-session-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-proxy-session-response common-lisp:nil
                       ((proxy-session :initarg :proxy-session :initform
                         common-lisp:nil :type
                         (common-lisp:or proxy-session common-lisp:null)
                         :accessor
                         struct-shape-get-proxy-session-response-proxy-session
                         :shape "ProxySession" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-proxy-session-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-proxy-session-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-proxy-session-response
                    'make-get-proxy-session-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-proxy-session-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-proxy-session-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proxy-session))
      (common-lisp:list
       (common-lisp:cons "ProxySession"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-proxy-session-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-retention-settings-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-get-retention-settings-request-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-retention-settings-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-retention-settings-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-retention-settings-request
                    'make-get-retention-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-retention-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-retention-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-retention-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-retention-settings-response common-lisp:nil
                       ((retention-settings :initarg :retention-settings
                         :initform common-lisp:nil :type
                         (common-lisp:or retention-settings common-lisp:null)
                         :accessor
                         struct-shape-get-retention-settings-response-retention-settings
                         :shape "RetentionSettings" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (initiate-deletion-timestamp :initarg
                         :initiate-deletion-timestamp :initform common-lisp:nil
                         :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-get-retention-settings-response-initiate-deletion-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-retention-settings-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-retention-settings-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-retention-settings-response
                    'make-get-retention-settings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-retention-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-retention-settings-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retention-settings))
      (common-lisp:list
       (common-lisp:cons "RetentionSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'initiate-deletion-timestamp))
      (common-lisp:list
       (common-lisp:cons "InitiateDeletionTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-retention-settings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-room-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-get-room-request-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId")
                        (room-id :initarg :room-id :initform
                         (common-lisp:error ":room-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-get-room-request-room-id :shape
                         "NonEmptyString" :location "uri" :location-name
                         "roomId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-room-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-room-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-room-request 'make-get-room-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-room-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-room-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-room-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-room-response common-lisp:nil
                       ((room :initarg :room :initform common-lisp:nil :type
                         (common-lisp:or room common-lisp:null) :accessor
                         struct-shape-get-room-response-room :shape "Room"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-room-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-room-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-room-response 'make-get-room-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-room-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-room-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'room))
      (common-lisp:list
       (common-lisp:cons "Room"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-room-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-sip-media-application-logging-configuration-request
                       common-lisp:nil
                       ((sip-media-application-id :initarg
                         :sip-media-application-id :initform
                         (common-lisp:error
                          ":sip-media-application-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-get-sip-media-application-logging-configuration-request-sip-media-application-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "sipMediaApplicationId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-sip-media-application-logging-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-sip-media-application-logging-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-sip-media-application-logging-configuration-request
                    'make-get-sip-media-application-logging-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-logging-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-logging-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-logging-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-sip-media-application-logging-configuration-response
                       common-lisp:nil
                       ((sip-media-application-logging-configuration :initarg
                         :sip-media-application-logging-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          sip-media-application-logging-configuration
                          common-lisp:null)
                         :accessor
                         struct-shape-get-sip-media-application-logging-configuration-response-sip-media-application-logging-configuration
                         :shape "SipMediaApplicationLoggingConfiguration"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-sip-media-application-logging-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-sip-media-application-logging-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-sip-media-application-logging-configuration-response
                    'make-get-sip-media-application-logging-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-logging-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-logging-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application-logging-configuration))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplicationLoggingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-logging-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-sip-media-application-request common-lisp:nil
                       ((sip-media-application-id :initarg
                         :sip-media-application-id :initform
                         (common-lisp:error
                          ":sip-media-application-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-get-sip-media-application-request-sip-media-application-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "sipMediaApplicationId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-sip-media-application-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-sip-media-application-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-sip-media-application-request
                    'make-get-sip-media-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-sip-media-application-response common-lisp:nil
                       ((sip-media-application :initarg :sip-media-application
                         :initform common-lisp:nil :type
                         (common-lisp:or sip-media-application
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-sip-media-application-response-sip-media-application
                         :shape "SipMediaApplication" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-sip-media-application-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-sip-media-application-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-sip-media-application-response
                    'make-get-sip-media-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplication"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-media-application-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-sip-rule-request common-lisp:nil
                       ((sip-rule-id :initarg :sip-rule-id :initform
                         (common-lisp:error ":sip-rule-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-get-sip-rule-request-sip-rule-id :shape
                         "NonEmptyString" :location "uri" :location-name
                         "sipRuleId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-sip-rule-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-sip-rule-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-sip-rule-request 'make-get-sip-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-sip-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-sip-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-sip-rule-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-sip-rule-response common-lisp:nil
                       ((sip-rule :initarg :sip-rule :initform common-lisp:nil
                         :type (common-lisp:or sip-rule common-lisp:null)
                         :accessor struct-shape-get-sip-rule-response-sip-rule
                         :shape "SipRule" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-sip-rule-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-sip-rule-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-sip-rule-response 'make-get-sip-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-rule-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-rule-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sip-rule))
      (common-lisp:list
       (common-lisp:cons "SipRule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-sip-rule-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-user-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-get-user-request-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId")
                        (user-id :initarg :user-id :initform
                         (common-lisp:error ":user-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-get-user-request-user-id :shape
                         "NonEmptyString" :location "uri" :location-name
                         "userId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-user-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-user-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-user-request 'make-get-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-user-response common-lisp:nil
                       ((user :initarg :user :initform common-lisp:nil :type
                         (common-lisp:or user common-lisp:null) :accessor
                         struct-shape-get-user-response-user :shape "User"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-user-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-user-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-user-response 'make-get-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-user-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user))
      (common-lisp:list
       (common-lisp:cons "User"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-user-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-user-settings-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-user-settings-request-account-id
                         :shape "String" :location "uri" :location-name
                         "accountId")
                        (user-id :initarg :user-id :initform
                         (common-lisp:error ":user-id is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-user-settings-request-user-id :shape
                         "String" :location "uri" :location-name "userId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-user-settings-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-user-settings-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-user-settings-request
                    'make-get-user-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-user-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-user-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-user-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-user-settings-response common-lisp:nil
                       ((user-settings :initarg :user-settings :initform
                         common-lisp:nil :type
                         (common-lisp:or user-settings common-lisp:null)
                         :accessor
                         struct-shape-get-user-settings-response-user-settings
                         :shape "UserSettings" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-user-settings-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-user-settings-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-user-settings-response
                    'make-get-user-settings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-user-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-user-settings-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-settings))
      (common-lisp:list
       (common-lisp:cons "UserSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-user-settings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  get-voice-connector-emergency-calling-configuration-request common-lisp:nil
  ((voice-connector-id :initarg :voice-connector-id :initform
    (common-lisp:error ":voice-connector-id is required") :type
    (common-lisp:or non-empty-string common-lisp:null) :accessor
    struct-shape-get-voice-connector-emergency-calling-configuration-request-voice-connector-id
    :shape "NonEmptyString" :location "uri" :location-name "voiceConnectorId"))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-connector-emergency-calling-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-voice-connector-emergency-calling-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list
   'get-voice-connector-emergency-calling-configuration-request
   'make-get-voice-connector-emergency-calling-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-emergency-calling-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-emergency-calling-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-emergency-calling-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  get-voice-connector-emergency-calling-configuration-response common-lisp:nil
  ((emergency-calling-configuration :initarg :emergency-calling-configuration
    :initform common-lisp:nil :type
    (common-lisp:or emergency-calling-configuration common-lisp:null) :accessor
    struct-shape-get-voice-connector-emergency-calling-configuration-response-emergency-calling-configuration
    :shape "EmergencyCallingConfiguration" :location common-lisp:nil
    :location-name common-lisp:nil))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-connector-emergency-calling-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-voice-connector-emergency-calling-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list
   'get-voice-connector-emergency-calling-configuration-response
   'make-get-voice-connector-emergency-calling-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-emergency-calling-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-emergency-calling-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'emergency-calling-configuration))
      (common-lisp:list
       (common-lisp:cons "EmergencyCallingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-emergency-calling-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-connector-group-request common-lisp:nil
                       ((voice-connector-group-id :initarg
                         :voice-connector-group-id :initform
                         (common-lisp:error
                          ":voice-connector-group-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-get-voice-connector-group-request-voice-connector-group-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorGroupId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-connector-group-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-voice-connector-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-group-request
                    'make-get-voice-connector-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-connector-group-response common-lisp:nil
                       ((voice-connector-group :initarg :voice-connector-group
                         :initform common-lisp:nil :type
                         (common-lisp:or voice-connector-group
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-voice-connector-group-response-voice-connector-group
                         :shape "VoiceConnectorGroup" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-connector-group-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-voice-connector-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-group-response
                    'make-get-voice-connector-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-connector-group))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-connector-logging-configuration-request
                       common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-get-voice-connector-logging-configuration-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-connector-logging-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-voice-connector-logging-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-logging-configuration-request
                    'make-get-voice-connector-logging-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-logging-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-logging-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-logging-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-connector-logging-configuration-response
                       common-lisp:nil
                       ((logging-configuration :initarg :logging-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or logging-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-voice-connector-logging-configuration-response-logging-configuration
                         :shape "LoggingConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-connector-logging-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-voice-connector-logging-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-logging-configuration-response
                    'make-get-voice-connector-logging-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-logging-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-logging-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'logging-configuration))
      (common-lisp:list
       (common-lisp:cons "LoggingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-logging-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-connector-origination-request common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-get-voice-connector-origination-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-connector-origination-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-voice-connector-origination-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-origination-request
                    'make-get-voice-connector-origination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-origination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-origination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-origination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-connector-origination-response common-lisp:nil
                       ((origination :initarg :origination :initform
                         common-lisp:nil :type
                         (common-lisp:or origination common-lisp:null)
                         :accessor
                         struct-shape-get-voice-connector-origination-response-origination
                         :shape "Origination" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-connector-origination-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-voice-connector-origination-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-origination-response
                    'make-get-voice-connector-origination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-origination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-origination-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origination))
      (common-lisp:list
       (common-lisp:cons "Origination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-origination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-connector-proxy-request common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string128 common-lisp:null)
                         :accessor
                         struct-shape-get-voice-connector-proxy-request-voice-connector-id
                         :shape "NonEmptyString128" :location "uri"
                         :location-name "voiceConnectorId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-connector-proxy-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-voice-connector-proxy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-proxy-request
                    'make-get-voice-connector-proxy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-proxy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-proxy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-proxy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-connector-proxy-response common-lisp:nil
                       ((proxy :initarg :proxy :initform common-lisp:nil :type
                         (common-lisp:or proxy common-lisp:null) :accessor
                         struct-shape-get-voice-connector-proxy-response-proxy
                         :shape "Proxy" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-connector-proxy-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-voice-connector-proxy-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-proxy-response
                    'make-get-voice-connector-proxy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-proxy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-proxy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proxy))
      (common-lisp:list
       (common-lisp:cons "Proxy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-proxy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-connector-request common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-get-voice-connector-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-connector-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-voice-connector-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-request
                    'make-get-voice-connector-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-connector-response common-lisp:nil
                       ((voice-connector :initarg :voice-connector :initform
                         common-lisp:nil :type
                         (common-lisp:or voice-connector common-lisp:null)
                         :accessor
                         struct-shape-get-voice-connector-response-voice-connector
                         :shape "VoiceConnector" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-connector-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-voice-connector-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-response
                    'make-get-voice-connector-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-connector))
      (common-lisp:list
       (common-lisp:cons "VoiceConnector"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-connector-streaming-configuration-request
                       common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-get-voice-connector-streaming-configuration-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-connector-streaming-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-voice-connector-streaming-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-streaming-configuration-request
                    'make-get-voice-connector-streaming-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-streaming-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-streaming-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-streaming-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-connector-streaming-configuration-response
                       common-lisp:nil
                       ((streaming-configuration :initarg
                         :streaming-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or streaming-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-voice-connector-streaming-configuration-response-streaming-configuration
                         :shape "StreamingConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-connector-streaming-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-voice-connector-streaming-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-streaming-configuration-response
                    'make-get-voice-connector-streaming-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-streaming-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-streaming-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'streaming-configuration))
      (common-lisp:list
       (common-lisp:cons "StreamingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-streaming-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-connector-termination-health-request
                       common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-get-voice-connector-termination-health-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-connector-termination-health-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-voice-connector-termination-health-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-termination-health-request
                    'make-get-voice-connector-termination-health-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-termination-health-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-termination-health-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-termination-health-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-connector-termination-health-response
                       common-lisp:nil
                       ((termination-health :initarg :termination-health
                         :initform common-lisp:nil :type
                         (common-lisp:or termination-health common-lisp:null)
                         :accessor
                         struct-shape-get-voice-connector-termination-health-response-termination-health
                         :shape "TerminationHealth" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-connector-termination-health-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-voice-connector-termination-health-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-termination-health-response
                    'make-get-voice-connector-termination-health-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-termination-health-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-termination-health-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'termination-health))
      (common-lisp:list
       (common-lisp:cons "TerminationHealth"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-termination-health-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-connector-termination-request common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-get-voice-connector-termination-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-connector-termination-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-voice-connector-termination-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-termination-request
                    'make-get-voice-connector-termination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-termination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-termination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-termination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-connector-termination-response common-lisp:nil
                       ((termination :initarg :termination :initform
                         common-lisp:nil :type
                         (common-lisp:or termination common-lisp:null)
                         :accessor
                         struct-shape-get-voice-connector-termination-response-termination
                         :shape "Termination" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-connector-termination-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-voice-connector-termination-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-connector-termination-response
                    'make-get-voice-connector-termination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-termination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-termination-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'termination))
      (common-lisp:list
       (common-lisp:cons "Termination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-connector-termination-response))
   common-lisp:nil))
(common-lisp:deftype guid-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass identity common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-identity-arn :shape "ChimeArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor struct-shape-identity-name :shape
                         "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-identity
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'identity
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'identity 'make-identity))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input identity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input identity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input identity))
   common-lisp:nil))
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass invite common-lisp:nil
                       ((invite-id :initarg :invite-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-invite-invite-id :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or invite-status common-lisp:null)
                         :accessor struct-shape-invite-status :shape
                         "InviteStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (email-address :initarg :email-address :initform
                         common-lisp:nil :type
                         (common-lisp:or email-address common-lisp:null)
                         :accessor struct-shape-invite-email-address :shape
                         "EmailAddress" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (email-status :initarg :email-status :initform
                         common-lisp:nil :type
                         (common-lisp:or email-status common-lisp:null)
                         :accessor struct-shape-invite-email-status :shape
                         "EmailStatus" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-invite
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'invite
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'invite 'make-invite))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input invite))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input invite))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'invite-id))
      (common-lisp:list
       (common-lisp:cons "InviteId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-address))
      (common-lisp:list
       (common-lisp:cons "EmailAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-status))
      (common-lisp:list
       (common-lisp:cons "EmailStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input invite))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype invite-list () '(trivial-types:proper-list invite))
 (common-lisp:defun make-invite-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list invite))
   aws-sdk/generator/shape::members))
(common-lisp:deftype invite-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass invite-users-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-invite-users-request-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId")
                        (user-email-list :initarg :user-email-list :initform
                         (common-lisp:error ":user-email-list is required")
                         :type
                         (common-lisp:or user-email-list common-lisp:null)
                         :accessor
                         struct-shape-invite-users-request-user-email-list
                         :shape "UserEmailList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (user-type :initarg :user-type :initform
                         common-lisp:nil :type
                         (common-lisp:or user-type common-lisp:null) :accessor
                         struct-shape-invite-users-request-user-type :shape
                         "UserType" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-invite-users-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'invite-users-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'invite-users-request 'make-invite-users-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input invite-users-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input invite-users-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-email-list))
      (common-lisp:list
       (common-lisp:cons "UserEmailList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-type))
      (common-lisp:list
       (common-lisp:cons "UserType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input invite-users-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass invite-users-response common-lisp:nil
                       ((invites :initarg :invites :initform common-lisp:nil
                         :type (common-lisp:or invite-list common-lisp:null)
                         :accessor struct-shape-invite-users-response-invites
                         :shape "InviteList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-invite-users-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'invite-users-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'invite-users-response 'make-invite-users-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          invite-users-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          invite-users-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'invites))
      (common-lisp:list
       (common-lisp:cons "Invites"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          invite-users-response))
   common-lisp:nil))
(common-lisp:deftype iso8601timestamp () 'common-lisp:string)
(common-lisp:deftype join-token-string () 'common-lisp:string)
(common-lisp:deftype license () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype license-list () '(trivial-types:proper-list license))
 (common-lisp:defun make-license-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list license))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass list-accounts-request common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or account-name common-lisp:null)
                         :accessor struct-shape-list-accounts-request-name
                         :shape "AccountName" :location "querystring"
                         :location-name "name")
                        (user-email :initarg :user-email :initform
                         common-lisp:nil :type
                         (common-lisp:or email-address common-lisp:null)
                         :accessor
                         struct-shape-list-accounts-request-user-email :shape
                         "EmailAddress" :location "querystring" :location-name
                         "user-email")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-accounts-request-next-token :shape
                         "String" :location "querystring" :location-name
                         "next-token")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or profile-service-max-results
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-accounts-request-max-results :shape
                         "ProfileServiceMaxResults" :location "querystring"
                         :location-name "max-results"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-accounts-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-accounts-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-accounts-request 'make-list-accounts-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-accounts-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-accounts-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-accounts-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-accounts-response common-lisp:nil
                       ((accounts :initarg :accounts :initform common-lisp:nil
                         :type (common-lisp:or account-list common-lisp:null)
                         :accessor struct-shape-list-accounts-response-accounts
                         :shape "AccountList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-accounts-response-next-token :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-accounts-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-accounts-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-accounts-response 'make-list-accounts-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-accounts-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-accounts-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'accounts))
      (common-lisp:list
       (common-lisp:cons "Accounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-accounts-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-app-instance-admins-request common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         (common-lisp:error ":app-instance-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-list-app-instance-admins-request-app-instance-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceArn")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-app-instance-admins-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-app-instance-admins-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "next-token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-app-instance-admins-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-app-instance-admins-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-app-instance-admins-request
                    'make-list-app-instance-admins-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instance-admins-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instance-admins-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instance-admins-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-app-instance-admins-response common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-app-instance-admins-response-app-instance-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (app-instance-admins :initarg :app-instance-admins
                         :initform common-lisp:nil :type
                         (common-lisp:or app-instance-admin-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-app-instance-admins-response-app-instance-admins
                         :shape "AppInstanceAdminList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-app-instance-admins-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-app-instance-admins-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-app-instance-admins-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-app-instance-admins-response
                    'make-list-app-instance-admins-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instance-admins-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instance-admins-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance-admins))
      (common-lisp:list
       (common-lisp:cons "AppInstanceAdmins"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instance-admins-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-app-instance-users-request common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         (common-lisp:error ":app-instance-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-list-app-instance-users-request-app-instance-arn
                         :shape "ChimeArn" :location "querystring"
                         :location-name "app-instance-arn")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-app-instance-users-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-app-instance-users-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "next-token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-app-instance-users-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-app-instance-users-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-app-instance-users-request
                    'make-list-app-instance-users-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instance-users-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instance-users-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instance-users-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-app-instance-users-response common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-app-instance-users-response-app-instance-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (app-instance-users :initarg :app-instance-users
                         :initform common-lisp:nil :type
                         (common-lisp:or app-instance-user-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-app-instance-users-response-app-instance-users
                         :shape "AppInstanceUserList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-app-instance-users-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-app-instance-users-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-app-instance-users-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-app-instance-users-response
                    'make-list-app-instance-users-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instance-users-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instance-users-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance-users))
      (common-lisp:list
       (common-lisp:cons "AppInstanceUsers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instance-users-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-app-instances-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-app-instances-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-app-instances-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "next-token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-app-instances-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-app-instances-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-app-instances-request
                    'make-list-app-instances-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instances-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instances-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instances-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-app-instances-response common-lisp:nil
                       ((app-instances :initarg :app-instances :initform
                         common-lisp:nil :type
                         (common-lisp:or app-instance-list common-lisp:null)
                         :accessor
                         struct-shape-list-app-instances-response-app-instances
                         :shape "AppInstanceList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-app-instances-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-app-instances-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-app-instances-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-app-instances-response
                    'make-list-app-instances-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instances-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instances-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instances))
      (common-lisp:list
       (common-lisp:cons "AppInstances"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-app-instances-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-attendee-tags-request common-lisp:nil
                       ((meeting-id :initarg :meeting-id :initform
                         (common-lisp:error ":meeting-id is required") :type
                         (common-lisp:or guid-string common-lisp:null)
                         :accessor
                         struct-shape-list-attendee-tags-request-meeting-id
                         :shape "GuidString" :location "uri" :location-name
                         "meetingId")
                        (attendee-id :initarg :attendee-id :initform
                         (common-lisp:error ":attendee-id is required") :type
                         (common-lisp:or guid-string common-lisp:null)
                         :accessor
                         struct-shape-list-attendee-tags-request-attendee-id
                         :shape "GuidString" :location "uri" :location-name
                         "attendeeId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-attendee-tags-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-attendee-tags-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-attendee-tags-request
                    'make-list-attendee-tags-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-attendee-tags-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-attendee-tags-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-attendee-tags-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-attendee-tags-response common-lisp:nil
                       ((tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-list-attendee-tags-response-tags :shape
                         "TagList" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-attendee-tags-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-attendee-tags-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-attendee-tags-response
                    'make-list-attendee-tags-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-attendee-tags-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-attendee-tags-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-attendee-tags-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-attendees-request common-lisp:nil
                       ((meeting-id :initarg :meeting-id :initform
                         (common-lisp:error ":meeting-id is required") :type
                         (common-lisp:or guid-string common-lisp:null)
                         :accessor
                         struct-shape-list-attendees-request-meeting-id :shape
                         "GuidString" :location "uri" :location-name
                         "meetingId")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-attendees-request-next-token :shape
                         "String" :location "querystring" :location-name
                         "next-token")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or result-max common-lisp:null) :accessor
                         struct-shape-list-attendees-request-max-results :shape
                         "ResultMax" :location "querystring" :location-name
                         "max-results"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-attendees-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-attendees-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-attendees-request 'make-list-attendees-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-attendees-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-attendees-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-attendees-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-attendees-response common-lisp:nil
                       ((attendees :initarg :attendees :initform
                         common-lisp:nil :type
                         (common-lisp:or attendee-list common-lisp:null)
                         :accessor
                         struct-shape-list-attendees-response-attendees :shape
                         "AttendeeList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-attendees-response-next-token :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-attendees-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-attendees-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-attendees-response 'make-list-attendees-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-attendees-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-attendees-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attendees))
      (common-lisp:list
       (common-lisp:cons "Attendees"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-attendees-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-bots-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-list-bots-request-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or result-max common-lisp:null) :accessor
                         struct-shape-list-bots-request-max-results :shape
                         "ResultMax" :location "querystring" :location-name
                         "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-bots-request-next-token :shape
                         "String" :location "querystring" :location-name
                         "next-token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-bots-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-bots-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-bots-request 'make-list-bots-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-bots-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-bots-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-bots-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-bots-response common-lisp:nil
                       ((bots :initarg :bots :initform common-lisp:nil :type
                         (common-lisp:or bot-list common-lisp:null) :accessor
                         struct-shape-list-bots-response-bots :shape "BotList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-bots-response-next-token :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-bots-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-bots-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-bots-response 'make-list-bots-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-bots-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-bots-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bots))
      (common-lisp:list
       (common-lisp:cons "Bots"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-bots-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channel-bans-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-channel-bans-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-channel-bans-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-channel-bans-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "next-token")
                        (chime-bearer :initarg :chime-bearer :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-channel-bans-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channel-bans-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-channel-bans-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channel-bans-request
                    'make-list-channel-bans-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-bans-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-bans-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-bans-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channel-bans-response common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-channel-bans-response-channel-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-channel-bans-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-bans :initarg :channel-bans :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-ban-summary-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-channel-bans-response-channel-bans
                         :shape "ChannelBanSummaryList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channel-bans-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-channel-bans-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channel-bans-response
                    'make-list-channel-bans-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-bans-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-bans-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-bans))
      (common-lisp:list
       (common-lisp:cons "ChannelBans"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-bans-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channel-memberships-for-app-instance-user-request
                       common-lisp:nil
                       ((app-instance-user-arn :initarg :app-instance-user-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-channel-memberships-for-app-instance-user-request-app-instance-user-arn
                         :shape "ChimeArn" :location "querystring"
                         :location-name "app-instance-user-arn")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-channel-memberships-for-app-instance-user-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-channel-memberships-for-app-instance-user-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "next-token")
                        (chime-bearer :initarg :chime-bearer :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-channel-memberships-for-app-instance-user-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channel-memberships-for-app-instance-user-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-channel-memberships-for-app-instance-user-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channel-memberships-for-app-instance-user-request
                    'make-list-channel-memberships-for-app-instance-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-memberships-for-app-instance-user-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-memberships-for-app-instance-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-memberships-for-app-instance-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channel-memberships-for-app-instance-user-response
                       common-lisp:nil
                       ((channel-memberships :initarg :channel-memberships
                         :initform common-lisp:nil :type
                         (common-lisp:or
                          channel-membership-for-app-instance-user-summary-list
                          common-lisp:null)
                         :accessor
                         struct-shape-list-channel-memberships-for-app-instance-user-response-channel-memberships
                         :shape
                         "ChannelMembershipForAppInstanceUserSummaryList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-channel-memberships-for-app-instance-user-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channel-memberships-for-app-instance-user-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-channel-memberships-for-app-instance-user-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channel-memberships-for-app-instance-user-response
                    'make-list-channel-memberships-for-app-instance-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-memberships-for-app-instance-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-memberships-for-app-instance-user-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-memberships))
      (common-lisp:list
       (common-lisp:cons "ChannelMemberships"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-memberships-for-app-instance-user-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channel-memberships-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-channel-memberships-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or channel-membership-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-channel-memberships-request-type
                         :shape "ChannelMembershipType" :location "querystring"
                         :location-name "type")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-channel-memberships-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-channel-memberships-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "next-token")
                        (chime-bearer :initarg :chime-bearer :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-channel-memberships-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channel-memberships-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-channel-memberships-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channel-memberships-request
                    'make-list-channel-memberships-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-memberships-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-memberships-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-memberships-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channel-memberships-response common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-channel-memberships-response-channel-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-memberships :initarg :channel-memberships
                         :initform common-lisp:nil :type
                         (common-lisp:or channel-membership-summary-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-channel-memberships-response-channel-memberships
                         :shape "ChannelMembershipSummaryList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-channel-memberships-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channel-memberships-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-channel-memberships-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channel-memberships-response
                    'make-list-channel-memberships-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-memberships-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-memberships-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-memberships))
      (common-lisp:list
       (common-lisp:cons "ChannelMemberships"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-memberships-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channel-messages-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-channel-messages-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (sort-order :initarg :sort-order :initform
                         common-lisp:nil :type
                         (common-lisp:or sort-order common-lisp:null) :accessor
                         struct-shape-list-channel-messages-request-sort-order
                         :shape "SortOrder" :location "querystring"
                         :location-name "sort-order")
                        (not-before :initarg :not-before :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-list-channel-messages-request-not-before
                         :shape "Timestamp" :location "querystring"
                         :location-name "not-before")
                        (not-after :initarg :not-after :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-list-channel-messages-request-not-after
                         :shape "Timestamp" :location "querystring"
                         :location-name "not-after")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-channel-messages-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-channel-messages-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "next-token")
                        (chime-bearer :initarg :chime-bearer :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-channel-messages-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channel-messages-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-channel-messages-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channel-messages-request
                    'make-list-channel-messages-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-messages-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-messages-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-messages-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channel-messages-response common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-channel-messages-response-channel-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-channel-messages-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-messages :initarg :channel-messages :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-message-summary-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-channel-messages-response-channel-messages
                         :shape "ChannelMessageSummaryList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channel-messages-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-channel-messages-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channel-messages-response
                    'make-list-channel-messages-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-messages-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-messages-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-messages))
      (common-lisp:list
       (common-lisp:cons "ChannelMessages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-messages-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channel-moderators-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-channel-moderators-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-channel-moderators-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-channel-moderators-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "next-token")
                        (chime-bearer :initarg :chime-bearer :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-channel-moderators-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channel-moderators-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-channel-moderators-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channel-moderators-request
                    'make-list-channel-moderators-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-moderators-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-moderators-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-moderators-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channel-moderators-response common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-channel-moderators-response-channel-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-channel-moderators-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-moderators :initarg :channel-moderators
                         :initform common-lisp:nil :type
                         (common-lisp:or channel-moderator-summary-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-channel-moderators-response-channel-moderators
                         :shape "ChannelModeratorSummaryList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channel-moderators-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-channel-moderators-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channel-moderators-response
                    'make-list-channel-moderators-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-moderators-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-moderators-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-moderators))
      (common-lisp:list
       (common-lisp:cons "ChannelModerators"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-moderators-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channels-moderated-by-app-instance-user-request
                       common-lisp:nil
                       ((app-instance-user-arn :initarg :app-instance-user-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-channels-moderated-by-app-instance-user-request-app-instance-user-arn
                         :shape "ChimeArn" :location "querystring"
                         :location-name "app-instance-user-arn")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-channels-moderated-by-app-instance-user-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-channels-moderated-by-app-instance-user-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "next-token")
                        (chime-bearer :initarg :chime-bearer :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-channels-moderated-by-app-instance-user-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channels-moderated-by-app-instance-user-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-channels-moderated-by-app-instance-user-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channels-moderated-by-app-instance-user-request
                    'make-list-channels-moderated-by-app-instance-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-moderated-by-app-instance-user-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-moderated-by-app-instance-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-moderated-by-app-instance-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channels-moderated-by-app-instance-user-response
                       common-lisp:nil
                       ((channels :initarg :channels :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          channel-moderated-by-app-instance-user-summary-list
                          common-lisp:null)
                         :accessor
                         struct-shape-list-channels-moderated-by-app-instance-user-response-channels
                         :shape "ChannelModeratedByAppInstanceUserSummaryList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-channels-moderated-by-app-instance-user-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channels-moderated-by-app-instance-user-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-channels-moderated-by-app-instance-user-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channels-moderated-by-app-instance-user-response
                    'make-list-channels-moderated-by-app-instance-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-moderated-by-app-instance-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-moderated-by-app-instance-user-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channels))
      (common-lisp:list
       (common-lisp:cons "Channels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-moderated-by-app-instance-user-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channels-request common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         (common-lisp:error ":app-instance-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-list-channels-request-app-instance-arn
                         :shape "ChimeArn" :location "querystring"
                         :location-name "app-instance-arn")
                        (privacy :initarg :privacy :initform common-lisp:nil
                         :type
                         (common-lisp:or channel-privacy common-lisp:null)
                         :accessor struct-shape-list-channels-request-privacy
                         :shape "ChannelPrivacy" :location "querystring"
                         :location-name "privacy")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-channels-request-max-results :shape
                         "MaxResults" :location "querystring" :location-name
                         "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-channels-request-next-token :shape
                         "NextToken" :location "querystring" :location-name
                         "next-token")
                        (chime-bearer :initarg :chime-bearer :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-channels-request-chime-bearer :shape
                         "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channels-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-channels-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channels-request 'make-list-channels-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channels-response common-lisp:nil
                       ((channels :initarg :channels :initform common-lisp:nil
                         :type
                         (common-lisp:or channel-summary-list common-lisp:null)
                         :accessor struct-shape-list-channels-response-channels
                         :shape "ChannelSummaryList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-channels-response-next-token :shape
                         "NextToken" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channels-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-channels-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channels-response 'make-list-channels-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channels))
      (common-lisp:list
       (common-lisp:cons "Channels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-media-capture-pipelines-request common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-media-capture-pipelines-request-next-token
                         :shape "String" :location "querystring" :location-name
                         "next-token")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or result-max common-lisp:null) :accessor
                         struct-shape-list-media-capture-pipelines-request-max-results
                         :shape "ResultMax" :location "querystring"
                         :location-name "max-results"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-media-capture-pipelines-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-media-capture-pipelines-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-media-capture-pipelines-request
                    'make-list-media-capture-pipelines-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-media-capture-pipelines-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-media-capture-pipelines-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-media-capture-pipelines-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-media-capture-pipelines-response common-lisp:nil
                       ((media-capture-pipelines :initarg
                         :media-capture-pipelines :initform common-lisp:nil
                         :type
                         (common-lisp:or media-capture-pipeline-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-media-capture-pipelines-response-media-capture-pipelines
                         :shape "MediaCapturePipelineList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-media-capture-pipelines-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-media-capture-pipelines-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-media-capture-pipelines-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-media-capture-pipelines-response
                    'make-list-media-capture-pipelines-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-media-capture-pipelines-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-media-capture-pipelines-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'media-capture-pipelines))
      (common-lisp:list
       (common-lisp:cons "MediaCapturePipelines"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-media-capture-pipelines-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-meeting-tags-request common-lisp:nil
                       ((meeting-id :initarg :meeting-id :initform
                         (common-lisp:error ":meeting-id is required") :type
                         (common-lisp:or guid-string common-lisp:null)
                         :accessor
                         struct-shape-list-meeting-tags-request-meeting-id
                         :shape "GuidString" :location "uri" :location-name
                         "meetingId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-meeting-tags-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-meeting-tags-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-meeting-tags-request
                    'make-list-meeting-tags-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-meeting-tags-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-meeting-tags-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-meeting-tags-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-meeting-tags-response common-lisp:nil
                       ((tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-list-meeting-tags-response-tags :shape
                         "TagList" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-meeting-tags-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-meeting-tags-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-meeting-tags-response
                    'make-list-meeting-tags-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-meeting-tags-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-meeting-tags-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-meeting-tags-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-meetings-request common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-meetings-request-next-token :shape
                         "String" :location "querystring" :location-name
                         "next-token")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or result-max common-lisp:null) :accessor
                         struct-shape-list-meetings-request-max-results :shape
                         "ResultMax" :location "querystring" :location-name
                         "max-results"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-meetings-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-meetings-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-meetings-request 'make-list-meetings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-meetings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-meetings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-meetings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-meetings-response common-lisp:nil
                       ((meetings :initarg :meetings :initform common-lisp:nil
                         :type (common-lisp:or meeting-list common-lisp:null)
                         :accessor struct-shape-list-meetings-response-meetings
                         :shape "MeetingList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-meetings-response-next-token :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-meetings-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-meetings-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-meetings-response 'make-list-meetings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-meetings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-meetings-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'meetings))
      (common-lisp:list
       (common-lisp:cons "Meetings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-meetings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-phone-number-orders-request common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-phone-number-orders-request-next-token
                         :shape "String" :location "querystring" :location-name
                         "next-token")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or result-max common-lisp:null) :accessor
                         struct-shape-list-phone-number-orders-request-max-results
                         :shape "ResultMax" :location "querystring"
                         :location-name "max-results"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-phone-number-orders-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-phone-number-orders-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-phone-number-orders-request
                    'make-list-phone-number-orders-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-number-orders-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-number-orders-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-number-orders-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-phone-number-orders-response common-lisp:nil
                       ((phone-number-orders :initarg :phone-number-orders
                         :initform common-lisp:nil :type
                         (common-lisp:or phone-number-order-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-phone-number-orders-response-phone-number-orders
                         :shape "PhoneNumberOrderList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-phone-number-orders-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-phone-number-orders-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-phone-number-orders-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-phone-number-orders-response
                    'make-list-phone-number-orders-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-number-orders-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-number-orders-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-orders))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberOrders"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-number-orders-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-phone-numbers-request common-lisp:nil
                       ((status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or phone-number-status common-lisp:null)
                         :accessor
                         struct-shape-list-phone-numbers-request-status :shape
                         "PhoneNumberStatus" :location "querystring"
                         :location-name "status")
                        (product-type :initarg :product-type :initform
                         common-lisp:nil :type
                         (common-lisp:or phone-number-product-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-phone-numbers-request-product-type
                         :shape "PhoneNumberProductType" :location
                         "querystring" :location-name "product-type")
                        (filter-name :initarg :filter-name :initform
                         common-lisp:nil :type
                         (common-lisp:or phone-number-association-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-phone-numbers-request-filter-name
                         :shape "PhoneNumberAssociationName" :location
                         "querystring" :location-name "filter-name")
                        (filter-value :initarg :filter-value :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-phone-numbers-request-filter-value
                         :shape "String" :location "querystring" :location-name
                         "filter-value")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or result-max common-lisp:null) :accessor
                         struct-shape-list-phone-numbers-request-max-results
                         :shape "ResultMax" :location "querystring"
                         :location-name "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-phone-numbers-request-next-token
                         :shape "String" :location "querystring" :location-name
                         "next-token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-phone-numbers-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-phone-numbers-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-phone-numbers-request
                    'make-list-phone-numbers-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-numbers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-numbers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-numbers-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-phone-numbers-response common-lisp:nil
                       ((phone-numbers :initarg :phone-numbers :initform
                         common-lisp:nil :type
                         (common-lisp:or phone-number-list common-lisp:null)
                         :accessor
                         struct-shape-list-phone-numbers-response-phone-numbers
                         :shape "PhoneNumberList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-phone-numbers-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-phone-numbers-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-phone-numbers-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-phone-numbers-response
                    'make-list-phone-numbers-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-numbers-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-numbers-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-numbers))
      (common-lisp:list
       (common-lisp:cons "PhoneNumbers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-numbers-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-proxy-sessions-request common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string128 common-lisp:null)
                         :accessor
                         struct-shape-list-proxy-sessions-request-voice-connector-id
                         :shape "NonEmptyString128" :location "uri"
                         :location-name "voiceConnectorId")
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or proxy-session-status common-lisp:null)
                         :accessor
                         struct-shape-list-proxy-sessions-request-status :shape
                         "ProxySessionStatus" :location "querystring"
                         :location-name "status")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token-string common-lisp:null)
                         :accessor
                         struct-shape-list-proxy-sessions-request-next-token
                         :shape "NextTokenString" :location "querystring"
                         :location-name "next-token")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or result-max common-lisp:null) :accessor
                         struct-shape-list-proxy-sessions-request-max-results
                         :shape "ResultMax" :location "querystring"
                         :location-name "max-results"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-proxy-sessions-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-proxy-sessions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-proxy-sessions-request
                    'make-list-proxy-sessions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-proxy-sessions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-proxy-sessions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-proxy-sessions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-proxy-sessions-response common-lisp:nil
                       ((proxy-sessions :initarg :proxy-sessions :initform
                         common-lisp:nil :type
                         (common-lisp:or proxy-sessions common-lisp:null)
                         :accessor
                         struct-shape-list-proxy-sessions-response-proxy-sessions
                         :shape "ProxySessions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token-string common-lisp:null)
                         :accessor
                         struct-shape-list-proxy-sessions-response-next-token
                         :shape "NextTokenString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-proxy-sessions-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-proxy-sessions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-proxy-sessions-response
                    'make-list-proxy-sessions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-proxy-sessions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-proxy-sessions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proxy-sessions))
      (common-lisp:list
       (common-lisp:cons "ProxySessions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-proxy-sessions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-room-memberships-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-list-room-memberships-request-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId")
                        (room-id :initarg :room-id :initform
                         (common-lisp:error ":room-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-list-room-memberships-request-room-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "roomId")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or result-max common-lisp:null) :accessor
                         struct-shape-list-room-memberships-request-max-results
                         :shape "ResultMax" :location "querystring"
                         :location-name "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-room-memberships-request-next-token
                         :shape "String" :location "querystring" :location-name
                         "next-token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-room-memberships-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-room-memberships-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-room-memberships-request
                    'make-list-room-memberships-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-room-memberships-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-room-memberships-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-room-memberships-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-room-memberships-response common-lisp:nil
                       ((room-memberships :initarg :room-memberships :initform
                         common-lisp:nil :type
                         (common-lisp:or room-membership-list common-lisp:null)
                         :accessor
                         struct-shape-list-room-memberships-response-room-memberships
                         :shape "RoomMembershipList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-room-memberships-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-room-memberships-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-room-memberships-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-room-memberships-response
                    'make-list-room-memberships-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-room-memberships-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-room-memberships-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'room-memberships))
      (common-lisp:list
       (common-lisp:cons "RoomMemberships"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-room-memberships-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-rooms-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-list-rooms-request-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId")
                        (member-id :initarg :member-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-rooms-request-member-id :shape
                         "String" :location "querystring" :location-name
                         "member-id")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or result-max common-lisp:null) :accessor
                         struct-shape-list-rooms-request-max-results :shape
                         "ResultMax" :location "querystring" :location-name
                         "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-rooms-request-next-token :shape
                         "String" :location "querystring" :location-name
                         "next-token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-rooms-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-rooms-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-rooms-request 'make-list-rooms-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-rooms-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-rooms-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-rooms-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-rooms-response common-lisp:nil
                       ((rooms :initarg :rooms :initform common-lisp:nil :type
                         (common-lisp:or room-list common-lisp:null) :accessor
                         struct-shape-list-rooms-response-rooms :shape
                         "RoomList" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-rooms-response-next-token :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-rooms-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-rooms-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-rooms-response 'make-list-rooms-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-rooms-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-rooms-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rooms))
      (common-lisp:list
       (common-lisp:cons "Rooms"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-rooms-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-sip-media-applications-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or result-max common-lisp:null) :accessor
                         struct-shape-list-sip-media-applications-request-max-results
                         :shape "ResultMax" :location "querystring"
                         :location-name "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token-string common-lisp:null)
                         :accessor
                         struct-shape-list-sip-media-applications-request-next-token
                         :shape "NextTokenString" :location "querystring"
                         :location-name "next-token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-sip-media-applications-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-sip-media-applications-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-sip-media-applications-request
                    'make-list-sip-media-applications-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-sip-media-applications-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-sip-media-applications-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-sip-media-applications-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-sip-media-applications-response common-lisp:nil
                       ((sip-media-applications :initarg
                         :sip-media-applications :initform common-lisp:nil
                         :type
                         (common-lisp:or sip-media-application-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-sip-media-applications-response-sip-media-applications
                         :shape "SipMediaApplicationList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token-string common-lisp:null)
                         :accessor
                         struct-shape-list-sip-media-applications-response-next-token
                         :shape "NextTokenString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-sip-media-applications-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-sip-media-applications-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-sip-media-applications-response
                    'make-list-sip-media-applications-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-sip-media-applications-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-sip-media-applications-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-applications))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplications"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-sip-media-applications-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-sip-rules-request common-lisp:nil
                       ((sip-media-application-id :initarg
                         :sip-media-application-id :initform common-lisp:nil
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-list-sip-rules-request-sip-media-application-id
                         :shape "NonEmptyString" :location "querystring"
                         :location-name "sip-media-application")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or result-max common-lisp:null) :accessor
                         struct-shape-list-sip-rules-request-max-results :shape
                         "ResultMax" :location "querystring" :location-name
                         "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token-string common-lisp:null)
                         :accessor
                         struct-shape-list-sip-rules-request-next-token :shape
                         "NextTokenString" :location "querystring"
                         :location-name "next-token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-sip-rules-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-sip-rules-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-sip-rules-request 'make-list-sip-rules-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-sip-rules-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-sip-rules-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-sip-rules-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-sip-rules-response common-lisp:nil
                       ((sip-rules :initarg :sip-rules :initform
                         common-lisp:nil :type
                         (common-lisp:or sip-rule-list common-lisp:null)
                         :accessor
                         struct-shape-list-sip-rules-response-sip-rules :shape
                         "SipRuleList" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token-string common-lisp:null)
                         :accessor
                         struct-shape-list-sip-rules-response-next-token :shape
                         "NextTokenString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-sip-rules-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-sip-rules-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-sip-rules-response 'make-list-sip-rules-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-sip-rules-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-sip-rules-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sip-rules))
      (common-lisp:list
       (common-lisp:cons "SipRules"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-sip-rules-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-supported-phone-number-countries-request
                       common-lisp:nil
                       ((product-type :initarg :product-type :initform
                         (common-lisp:error ":product-type is required") :type
                         (common-lisp:or phone-number-product-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-supported-phone-number-countries-request-product-type
                         :shape "PhoneNumberProductType" :location
                         "querystring" :location-name "product-type"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-supported-phone-number-countries-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-supported-phone-number-countries-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-supported-phone-number-countries-request
                    'make-list-supported-phone-number-countries-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-supported-phone-number-countries-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-supported-phone-number-countries-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-supported-phone-number-countries-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-supported-phone-number-countries-response
                       common-lisp:nil
                       ((phone-number-countries :initarg
                         :phone-number-countries :initform common-lisp:nil
                         :type
                         (common-lisp:or phone-number-countries-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-supported-phone-number-countries-response-phone-number-countries
                         :shape "PhoneNumberCountriesList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-supported-phone-number-countries-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-supported-phone-number-countries-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-supported-phone-number-countries-response
                    'make-list-supported-phone-number-countries-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-supported-phone-number-countries-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-supported-phone-number-countries-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'phone-number-countries))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberCountries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-supported-phone-number-countries-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-request-resource-arn
                         :shape "Arn" :location "querystring" :location-name
                         "arn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-response-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-users-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-list-users-request-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId")
                        (user-email :initarg :user-email :initform
                         common-lisp:nil :type
                         (common-lisp:or email-address common-lisp:null)
                         :accessor struct-shape-list-users-request-user-email
                         :shape "EmailAddress" :location "querystring"
                         :location-name "user-email")
                        (user-type :initarg :user-type :initform
                         common-lisp:nil :type
                         (common-lisp:or user-type common-lisp:null) :accessor
                         struct-shape-list-users-request-user-type :shape
                         "UserType" :location "querystring" :location-name
                         "user-type")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or profile-service-max-results
                                         common-lisp:null)
                         :accessor struct-shape-list-users-request-max-results
                         :shape "ProfileServiceMaxResults" :location
                         "querystring" :location-name "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-users-request-next-token :shape
                         "String" :location "querystring" :location-name
                         "next-token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-users-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-users-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-users-request 'make-list-users-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-users-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-users-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-users-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-users-response common-lisp:nil
                       ((users :initarg :users :initform common-lisp:nil :type
                         (common-lisp:or user-list common-lisp:null) :accessor
                         struct-shape-list-users-response-users :shape
                         "UserList" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-users-response-next-token :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-users-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-users-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-users-response 'make-list-users-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-users-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-users-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'users))
      (common-lisp:list
       (common-lisp:cons "Users"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-users-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-voice-connector-groups-request common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-voice-connector-groups-request-next-token
                         :shape "String" :location "querystring" :location-name
                         "next-token")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or result-max common-lisp:null) :accessor
                         struct-shape-list-voice-connector-groups-request-max-results
                         :shape "ResultMax" :location "querystring"
                         :location-name "max-results"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-voice-connector-groups-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-voice-connector-groups-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-voice-connector-groups-request
                    'make-list-voice-connector-groups-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connector-groups-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connector-groups-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connector-groups-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-voice-connector-groups-response common-lisp:nil
                       ((voice-connector-groups :initarg
                         :voice-connector-groups :initform common-lisp:nil
                         :type
                         (common-lisp:or voice-connector-group-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-voice-connector-groups-response-voice-connector-groups
                         :shape "VoiceConnectorGroupList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-voice-connector-groups-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-voice-connector-groups-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-voice-connector-groups-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-voice-connector-groups-response
                    'make-list-voice-connector-groups-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connector-groups-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connector-groups-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-connector-groups))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connector-groups-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-voice-connector-termination-credentials-request
                       common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-list-voice-connector-termination-credentials-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-voice-connector-termination-credentials-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-voice-connector-termination-credentials-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-voice-connector-termination-credentials-request
                    'make-list-voice-connector-termination-credentials-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connector-termination-credentials-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connector-termination-credentials-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connector-termination-credentials-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-voice-connector-termination-credentials-response
                       common-lisp:nil
                       ((usernames :initarg :usernames :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitive-string-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-voice-connector-termination-credentials-response-usernames
                         :shape "SensitiveStringList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-voice-connector-termination-credentials-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-voice-connector-termination-credentials-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-voice-connector-termination-credentials-response
                    'make-list-voice-connector-termination-credentials-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connector-termination-credentials-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connector-termination-credentials-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'usernames))
      (common-lisp:list
       (common-lisp:cons "Usernames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connector-termination-credentials-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-voice-connectors-request common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-voice-connectors-request-next-token
                         :shape "String" :location "querystring" :location-name
                         "next-token")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or result-max common-lisp:null) :accessor
                         struct-shape-list-voice-connectors-request-max-results
                         :shape "ResultMax" :location "querystring"
                         :location-name "max-results"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-voice-connectors-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-voice-connectors-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-voice-connectors-request
                    'make-list-voice-connectors-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connectors-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connectors-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connectors-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-voice-connectors-response common-lisp:nil
                       ((voice-connectors :initarg :voice-connectors :initform
                         common-lisp:nil :type
                         (common-lisp:or voice-connector-list common-lisp:null)
                         :accessor
                         struct-shape-list-voice-connectors-response-voice-connectors
                         :shape "VoiceConnectorList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-voice-connectors-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-voice-connectors-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-voice-connectors-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-voice-connectors-response
                    'make-list-voice-connectors-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connectors-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connectors-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-connectors))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-voice-connectors-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass logging-configuration common-lisp:nil
                       ((enable-siplogs :initarg :enable-siplogs :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-logging-configuration-enable-siplogs
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (enable-media-metric-logs :initarg
                         :enable-media-metric-logs :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         struct-shape-logging-configuration-enable-media-metric-logs
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-logging-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'logging-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'logging-configuration 'make-logging-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          logging-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          logging-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enable-siplogs))
      (common-lisp:list
       (common-lisp:cons "EnableSIPLogs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-media-metric-logs))
      (common-lisp:list
       (common-lisp:cons "EnableMediaMetricLogs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          logging-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass logout-user-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-logout-user-request-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId")
                        (user-id :initarg :user-id :initform
                         (common-lisp:error ":user-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-logout-user-request-user-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "userId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-logout-user-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'logout-user-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'logout-user-request 'make-logout-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input logout-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input logout-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input logout-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass logout-user-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-logout-user-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'logout-user-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'logout-user-response 'make-logout-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input logout-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input logout-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input logout-user-response))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass media-capture-pipeline common-lisp:nil
                       ((media-pipeline-id :initarg :media-pipeline-id
                         :initform common-lisp:nil :type
                         (common-lisp:or guid-string common-lisp:null)
                         :accessor
                         struct-shape-media-capture-pipeline-media-pipeline-id
                         :shape "GuidString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (source-type :initarg :source-type :initform
                         common-lisp:nil :type
                         (common-lisp:or media-pipeline-source-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-media-capture-pipeline-source-type :shape
                         "MediaPipelineSourceType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (source-arn :initarg :source-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-media-capture-pipeline-source-arn :shape
                         "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or media-pipeline-status
                                         common-lisp:null)
                         :accessor struct-shape-media-capture-pipeline-status
                         :shape "MediaPipelineStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sink-type :initarg :sink-type :initform
                         common-lisp:nil :type
                         (common-lisp:or media-pipeline-sink-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-media-capture-pipeline-sink-type :shape
                         "MediaPipelineSinkType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sink-arn :initarg :sink-arn :initform common-lisp:nil
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-media-capture-pipeline-sink-arn :shape
                         "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-media-capture-pipeline-created-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-timestamp :initarg :updated-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-media-capture-pipeline-updated-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (chime-sdk-meeting-configuration :initarg
                         :chime-sdk-meeting-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-sdk-meeting-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-media-capture-pipeline-chime-sdk-meeting-configuration
                         :shape "ChimeSdkMeetingConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-media-capture-pipeline
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'media-capture-pipeline
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'media-capture-pipeline 'make-media-capture-pipeline))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          media-capture-pipeline))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          media-capture-pipeline))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'media-pipeline-id))
      (common-lisp:list
       (common-lisp:cons "MediaPipelineId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-type))
      (common-lisp:list
       (common-lisp:cons "SourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-arn))
      (common-lisp:list
       (common-lisp:cons "SourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sink-type))
      (common-lisp:list
       (common-lisp:cons "SinkType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sink-arn))
      (common-lisp:list
       (common-lisp:cons "SinkArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'chime-sdk-meeting-configuration))
      (common-lisp:list
       (common-lisp:cons "ChimeSdkMeetingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          media-capture-pipeline))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype media-capture-pipeline-list ()
   '(trivial-types:proper-list media-capture-pipeline))
 (common-lisp:defun make-media-capture-pipeline-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list media-capture-pipeline))
   aws-sdk/generator/shape::members))
(common-lisp:deftype media-pipeline-sink-type () 'common-lisp:string)
(common-lisp:deftype media-pipeline-source-type () 'common-lisp:string)
(common-lisp:deftype media-pipeline-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass media-placement common-lisp:nil
                       ((audio-host-url :initarg :audio-host-url :initform
                         common-lisp:nil :type
                         (common-lisp:or uri-type common-lisp:null) :accessor
                         struct-shape-media-placement-audio-host-url :shape
                         "UriType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (audio-fallback-url :initarg :audio-fallback-url
                         :initform common-lisp:nil :type
                         (common-lisp:or uri-type common-lisp:null) :accessor
                         struct-shape-media-placement-audio-fallback-url :shape
                         "UriType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (screen-data-url :initarg :screen-data-url :initform
                         common-lisp:nil :type
                         (common-lisp:or uri-type common-lisp:null) :accessor
                         struct-shape-media-placement-screen-data-url :shape
                         "UriType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (screen-sharing-url :initarg :screen-sharing-url
                         :initform common-lisp:nil :type
                         (common-lisp:or uri-type common-lisp:null) :accessor
                         struct-shape-media-placement-screen-sharing-url :shape
                         "UriType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (screen-viewing-url :initarg :screen-viewing-url
                         :initform common-lisp:nil :type
                         (common-lisp:or uri-type common-lisp:null) :accessor
                         struct-shape-media-placement-screen-viewing-url :shape
                         "UriType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (signaling-url :initarg :signaling-url :initform
                         common-lisp:nil :type
                         (common-lisp:or uri-type common-lisp:null) :accessor
                         struct-shape-media-placement-signaling-url :shape
                         "UriType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (turn-control-url :initarg :turn-control-url :initform
                         common-lisp:nil :type
                         (common-lisp:or uri-type common-lisp:null) :accessor
                         struct-shape-media-placement-turn-control-url :shape
                         "UriType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (event-ingestion-url :initarg :event-ingestion-url
                         :initform common-lisp:nil :type
                         (common-lisp:or uri-type common-lisp:null) :accessor
                         struct-shape-media-placement-event-ingestion-url
                         :shape "UriType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-media-placement
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'media-placement
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'media-placement 'make-media-placement))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input media-placement))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input media-placement))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audio-host-url))
      (common-lisp:list
       (common-lisp:cons "AudioHostUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audio-fallback-url))
      (common-lisp:list
       (common-lisp:cons "AudioFallbackUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'screen-data-url))
      (common-lisp:list
       (common-lisp:cons "ScreenDataUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'screen-sharing-url))
      (common-lisp:list
       (common-lisp:cons "ScreenSharingUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'screen-viewing-url))
      (common-lisp:list
       (common-lisp:cons "ScreenViewingUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'signaling-url))
      (common-lisp:list
       (common-lisp:cons "SignalingUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'turn-control-url))
      (common-lisp:list
       (common-lisp:cons "TurnControlUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-ingestion-url))
      (common-lisp:list
       (common-lisp:cons "EventIngestionUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input media-placement))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass meeting common-lisp:nil
                       ((meeting-id :initarg :meeting-id :initform
                         common-lisp:nil :type
                         (common-lisp:or guid-string common-lisp:null)
                         :accessor struct-shape-meeting-meeting-id :shape
                         "GuidString" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (external-meeting-id :initarg :external-meeting-id
                         :initform common-lisp:nil :type
                         (common-lisp:or external-meeting-id-type
                                         common-lisp:null)
                         :accessor struct-shape-meeting-external-meeting-id
                         :shape "ExternalMeetingIdType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (media-placement :initarg :media-placement :initform
                         common-lisp:nil :type
                         (common-lisp:or media-placement common-lisp:null)
                         :accessor struct-shape-meeting-media-placement :shape
                         "MediaPlacement" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (media-region :initarg :media-region :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-meeting-media-region :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-meeting
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'meeting
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'meeting 'make-meeting))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input meeting))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input meeting))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'meeting-id))
      (common-lisp:list
       (common-lisp:cons "MeetingId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'external-meeting-id))
      (common-lisp:list
       (common-lisp:cons "ExternalMeetingId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'media-placement))
      (common-lisp:list
       (common-lisp:cons "MediaPlacement"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'media-region))
      (common-lisp:list
       (common-lisp:cons "MediaRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input meeting))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype meeting-list () '(trivial-types:proper-list meeting))
 (common-lisp:defun make-meeting-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list meeting))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass meeting-notification-configuration common-lisp:nil
                       ((sns-topic-arn :initarg :sns-topic-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-meeting-notification-configuration-sns-topic-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (sqs-queue-arn :initarg :sqs-queue-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-meeting-notification-configuration-sqs-queue-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-meeting-notification-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'meeting-notification-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'meeting-notification-configuration
                    'make-meeting-notification-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          meeting-notification-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          meeting-notification-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns-topic-arn))
      (common-lisp:list
       (common-lisp:cons "SnsTopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sqs-queue-arn))
      (common-lisp:list
       (common-lisp:cons "SqsQueueArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          meeting-notification-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype meeting-tag-key-list ()
   '(trivial-types:proper-list tag-key))
 (common-lisp:defun make-meeting-tag-key-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype meeting-tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun make-meeting-tag-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass member common-lisp:nil
                       ((member-id :initarg :member-id :initform
                         common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-member-member-id :shape
                         "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (member-type :initarg :member-type :initform
                         common-lisp:nil :type
                         (common-lisp:or member-type common-lisp:null)
                         :accessor struct-shape-member-member-type :shape
                         "MemberType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (email :initarg :email :initform common-lisp:nil :type
                         (common-lisp:or sensitive-string common-lisp:null)
                         :accessor struct-shape-member-email :shape
                         "SensitiveString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (full-name :initarg :full-name :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitive-string common-lisp:null)
                         :accessor struct-shape-member-full-name :shape
                         "SensitiveString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-member-account-id :shape
                         "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-member
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'member
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'member 'make-member))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input member))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input member))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member-id))
      (common-lisp:list
       (common-lisp:cons "MemberId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member-type))
      (common-lisp:list
       (common-lisp:cons "MemberType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email))
      (common-lisp:list
       (common-lisp:cons "Email"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'full-name))
      (common-lisp:list
       (common-lisp:cons "FullName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input member))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype member-arns () '(trivial-types:proper-list chime-arn))
 (common-lisp:defun make-member-arns
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list chime-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass member-error common-lisp:nil
                       ((member-id :initarg :member-id :initform
                         common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-member-error-member-id :shape
                         "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (error-code :initarg :error-code :initform
                         common-lisp:nil :type
                         (common-lisp:or error-code common-lisp:null) :accessor
                         struct-shape-member-error-error-code :shape
                         "ErrorCode" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (error-message :initarg :error-message :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-member-error-error-message :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-member-error
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'member-error
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'member-error 'make-member-error))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input member-error))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input member-error))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member-id))
      (common-lisp:list
       (common-lisp:cons "MemberId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "ErrorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "ErrorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input member-error))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype member-error-list ()
   '(trivial-types:proper-list member-error))
 (common-lisp:defun make-member-error-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list member-error))
   aws-sdk/generator/shape::members))
(common-lisp:deftype member-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype members () '(trivial-types:proper-list identity))
 (common-lisp:defun make-members
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list identity))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass membership-item common-lisp:nil
                       ((member-id :initarg :member-id :initform
                         common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-membership-item-member-id
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (role :initarg :role :initform common-lisp:nil :type
                         (common-lisp:or room-membership-role common-lisp:null)
                         :accessor struct-shape-membership-item-role :shape
                         "RoomMembershipRole" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-membership-item
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'membership-item
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'membership-item 'make-membership-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input membership-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input membership-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member-id))
      (common-lisp:list
       (common-lisp:cons "MemberId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role))
      (common-lisp:list
       (common-lisp:cons "Role"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input membership-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype membership-item-list ()
   '(trivial-types:proper-list membership-item))
 (common-lisp:defun make-membership-item-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list membership-item))
   aws-sdk/generator/shape::members))
(common-lisp:deftype message-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass messaging-session-endpoint common-lisp:nil
                       ((url :initarg :url :initform common-lisp:nil :type
                         (common-lisp:or url-type common-lisp:null) :accessor
                         struct-shape-messaging-session-endpoint-url :shape
                         "UrlType" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-messaging-session-endpoint
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'messaging-session-endpoint
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'messaging-session-endpoint
                    'make-messaging-session-endpoint))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          messaging-session-endpoint))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          messaging-session-endpoint))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          messaging-session-endpoint))
   common-lisp:nil))
(common-lisp:deftype metadata () 'common-lisp:string)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:deftype next-token-string () 'common-lisp:string)
(common-lisp:deftype non-empty-content () 'common-lisp:string)
(common-lisp:deftype non-empty-resource-name () 'common-lisp:string)
(common-lisp:deftype non-empty-string () 'common-lisp:string)
(common-lisp:deftype non-empty-string128 () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype non-empty-string-list ()
   '(trivial-types:proper-list string))
 (common-lisp:defun make-non-empty-string-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype non-nullable-boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:define-condition not-found-exception
     (chime-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       not-found-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'not-found-exception 'not-found-exception-code
                    'not-found-exception-message)))
(common-lisp:deftype notification-target () 'common-lisp:string)
(common-lisp:deftype nullable-boolean () 'common-lisp:boolean)
(common-lisp:deftype number-selection-behavior () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass ordered-phone-number common-lisp:nil
                       ((e164phone-number :initarg :e164phone-number :initform
                         common-lisp:nil :type
                         (common-lisp:or e164phone-number common-lisp:null)
                         :accessor
                         struct-shape-ordered-phone-number-e164phone-number
                         :shape "E164PhoneNumber" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or ordered-phone-number-status
                                         common-lisp:null)
                         :accessor struct-shape-ordered-phone-number-status
                         :shape "OrderedPhoneNumberStatus" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ordered-phone-number
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'ordered-phone-number
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'ordered-phone-number 'make-ordered-phone-number))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input ordered-phone-number))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input ordered-phone-number))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'e164phone-number))
      (common-lisp:list
       (common-lisp:cons "E164PhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input ordered-phone-number))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype ordered-phone-number-list ()
   '(trivial-types:proper-list ordered-phone-number))
 (common-lisp:defun make-ordered-phone-number-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ordered-phone-number))
   aws-sdk/generator/shape::members))
(common-lisp:deftype ordered-phone-number-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass origination common-lisp:nil
                       ((routes :initarg :routes :initform common-lisp:nil
                         :type
                         (common-lisp:or origination-route-list
                                         common-lisp:null)
                         :accessor struct-shape-origination-routes :shape
                         "OriginationRouteList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (disabled :initarg :disabled :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor struct-shape-origination-disabled :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-origination
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'origination
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'origination 'make-origination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input origination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input origination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'routes))
      (common-lisp:list
       (common-lisp:cons "Routes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disabled))
      (common-lisp:list
       (common-lisp:cons "Disabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input origination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass origination-route common-lisp:nil
                       ((host :initarg :host :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-origination-route-host :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (port :initarg :port :initform common-lisp:nil :type
                         (common-lisp:or port common-lisp:null) :accessor
                         struct-shape-origination-route-port :shape "Port"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (protocol :initarg :protocol :initform common-lisp:nil
                         :type
                         (common-lisp:or origination-route-protocol
                                         common-lisp:null)
                         :accessor struct-shape-origination-route-protocol
                         :shape "OriginationRouteProtocol" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (priority :initarg :priority :initform common-lisp:nil
                         :type
                         (common-lisp:or origination-route-priority
                                         common-lisp:null)
                         :accessor struct-shape-origination-route-priority
                         :shape "OriginationRoutePriority" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (weight :initarg :weight :initform common-lisp:nil
                         :type
                         (common-lisp:or origination-route-weight
                                         common-lisp:null)
                         :accessor struct-shape-origination-route-weight :shape
                         "OriginationRouteWeight" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-origination-route
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'origination-route
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'origination-route 'make-origination-route))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input origination-route))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input origination-route))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host))
      (common-lisp:list
       (common-lisp:cons "Host"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'port))
      (common-lisp:list
       (common-lisp:cons "Port"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "Protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'priority))
      (common-lisp:list
       (common-lisp:cons "Priority"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'weight))
      (common-lisp:list
       (common-lisp:cons "Weight"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input origination-route))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype origination-route-list ()
   '(trivial-types:proper-list origination-route))
 (common-lisp:defun make-origination-route-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list origination-route))
   aws-sdk/generator/shape::members))
(common-lisp:deftype origination-route-priority () 'common-lisp:integer)
(common-lisp:deftype origination-route-protocol () 'common-lisp:string)
(common-lisp:deftype origination-route-weight () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass participant common-lisp:nil
                       ((phone-number :initarg :phone-number :initform
                         common-lisp:nil :type
                         (common-lisp:or e164phone-number common-lisp:null)
                         :accessor struct-shape-participant-phone-number :shape
                         "E164PhoneNumber" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (proxy-phone-number :initarg :proxy-phone-number
                         :initform common-lisp:nil :type
                         (common-lisp:or e164phone-number common-lisp:null)
                         :accessor struct-shape-participant-proxy-phone-number
                         :shape "E164PhoneNumber" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-participant
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'participant
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'participant 'make-participant))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input participant))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input participant))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number))
      (common-lisp:list
       (common-lisp:cons "PhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proxy-phone-number))
      (common-lisp:list
       (common-lisp:cons "ProxyPhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input participant))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype participant-phone-number-list ()
   '(trivial-types:proper-list e164phone-number))
 (common-lisp:defun make-participant-phone-number-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list e164phone-number))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype participants () '(trivial-types:proper-list participant))
 (common-lisp:defun make-participants
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list participant))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass phone-number common-lisp:nil
                       ((phone-number-id :initarg :phone-number-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-phone-number-phone-number-id :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (e164phone-number :initarg :e164phone-number :initform
                         common-lisp:nil :type
                         (common-lisp:or e164phone-number common-lisp:null)
                         :accessor struct-shape-phone-number-e164phone-number
                         :shape "E164PhoneNumber" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (country :initarg :country :initform common-lisp:nil
                         :type
                         (common-lisp:or alpha2country-code common-lisp:null)
                         :accessor struct-shape-phone-number-country :shape
                         "Alpha2CountryCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or phone-number-type common-lisp:null)
                         :accessor struct-shape-phone-number-type :shape
                         "PhoneNumberType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (product-type :initarg :product-type :initform
                         common-lisp:nil :type
                         (common-lisp:or phone-number-product-type
                                         common-lisp:null)
                         :accessor struct-shape-phone-number-product-type
                         :shape "PhoneNumberProductType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or phone-number-status common-lisp:null)
                         :accessor struct-shape-phone-number-status :shape
                         "PhoneNumberStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (capabilities :initarg :capabilities :initform
                         common-lisp:nil :type
                         (common-lisp:or phone-number-capabilities
                                         common-lisp:null)
                         :accessor struct-shape-phone-number-capabilities
                         :shape "PhoneNumberCapabilities" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (associations :initarg :associations :initform
                         common-lisp:nil :type
                         (common-lisp:or phone-number-association-list
                                         common-lisp:null)
                         :accessor struct-shape-phone-number-associations
                         :shape "PhoneNumberAssociationList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (calling-name :initarg :calling-name :initform
                         common-lisp:nil :type
                         (common-lisp:or calling-name common-lisp:null)
                         :accessor struct-shape-phone-number-calling-name
                         :shape "CallingName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (calling-name-status :initarg :calling-name-status
                         :initform common-lisp:nil :type
                         (common-lisp:or calling-name-status common-lisp:null)
                         :accessor
                         struct-shape-phone-number-calling-name-status :shape
                         "CallingNameStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-phone-number-created-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-timestamp :initarg :updated-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-phone-number-updated-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (deletion-timestamp :initarg :deletion-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-phone-number-deletion-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-phone-number
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'phone-number
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'phone-number 'make-phone-number))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input phone-number))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input phone-number))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-id))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'e164phone-number))
      (common-lisp:list
       (common-lisp:cons "E164PhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'country))
      (common-lisp:list
       (common-lisp:cons "Country"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'product-type))
      (common-lisp:list
       (common-lisp:cons "ProductType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'capabilities))
      (common-lisp:list
       (common-lisp:cons "Capabilities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'associations))
      (common-lisp:list
       (common-lisp:cons "Associations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'calling-name))
      (common-lisp:list
       (common-lisp:cons "CallingName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'calling-name-status))
      (common-lisp:list
       (common-lisp:cons "CallingNameStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deletion-timestamp))
      (common-lisp:list
       (common-lisp:cons "DeletionTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input phone-number))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass phone-number-association common-lisp:nil
                       ((value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-phone-number-association-value :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or phone-number-association-name
                                         common-lisp:null)
                         :accessor struct-shape-phone-number-association-name
                         :shape "PhoneNumberAssociationName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (associated-timestamp :initarg :associated-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-phone-number-association-associated-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-phone-number-association
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'phone-number-association
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'phone-number-association 'make-phone-number-association))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          phone-number-association))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          phone-number-association))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'associated-timestamp))
      (common-lisp:list
       (common-lisp:cons "AssociatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          phone-number-association))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype phone-number-association-list ()
   '(trivial-types:proper-list phone-number-association))
 (common-lisp:defun make-phone-number-association-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            phone-number-association))
   aws-sdk/generator/shape::members))
(common-lisp:deftype phone-number-association-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass phone-number-capabilities common-lisp:nil
                       ((inbound-call :initarg :inbound-call :initform
                         common-lisp:nil :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor
                         struct-shape-phone-number-capabilities-inbound-call
                         :shape "NullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (outbound-call :initarg :outbound-call :initform
                         common-lisp:nil :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor
                         struct-shape-phone-number-capabilities-outbound-call
                         :shape "NullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (inbound-sms :initarg :inbound-sms :initform
                         common-lisp:nil :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor
                         struct-shape-phone-number-capabilities-inbound-sms
                         :shape "NullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (outbound-sms :initarg :outbound-sms :initform
                         common-lisp:nil :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor
                         struct-shape-phone-number-capabilities-outbound-sms
                         :shape "NullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (inbound-mms :initarg :inbound-mms :initform
                         common-lisp:nil :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor
                         struct-shape-phone-number-capabilities-inbound-mms
                         :shape "NullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (outbound-mms :initarg :outbound-mms :initform
                         common-lisp:nil :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor
                         struct-shape-phone-number-capabilities-outbound-mms
                         :shape "NullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-phone-number-capabilities
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'phone-number-capabilities
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'phone-number-capabilities
                    'make-phone-number-capabilities))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          phone-number-capabilities))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          phone-number-capabilities))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inbound-call))
      (common-lisp:list
       (common-lisp:cons "InboundCall"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outbound-call))
      (common-lisp:list
       (common-lisp:cons "OutboundCall"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inbound-sms))
      (common-lisp:list
       (common-lisp:cons "InboundSMS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outbound-sms))
      (common-lisp:list
       (common-lisp:cons "OutboundSMS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inbound-mms))
      (common-lisp:list
       (common-lisp:cons "InboundMMS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outbound-mms))
      (common-lisp:list
       (common-lisp:cons "OutboundMMS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          phone-number-capabilities))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype phone-number-countries-list ()
   '(trivial-types:proper-list phone-number-country))
 (common-lisp:defun make-phone-number-countries-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list phone-number-country))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass phone-number-country common-lisp:nil
                       ((country-code :initarg :country-code :initform
                         common-lisp:nil :type
                         (common-lisp:or alpha2country-code common-lisp:null)
                         :accessor
                         struct-shape-phone-number-country-country-code :shape
                         "Alpha2CountryCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (supported-phone-number-types :initarg
                         :supported-phone-number-types :initform
                         common-lisp:nil :type
                         (common-lisp:or phone-number-type-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-phone-number-country-supported-phone-number-types
                         :shape "PhoneNumberTypeList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-phone-number-country
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'phone-number-country
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'phone-number-country 'make-phone-number-country))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input phone-number-country))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input phone-number-country))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'country-code))
      (common-lisp:list
       (common-lisp:cons "CountryCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'supported-phone-number-types))
      (common-lisp:list
       (common-lisp:cons "SupportedPhoneNumberTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input phone-number-country))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass phone-number-error common-lisp:nil
                       ((phone-number-id :initarg :phone-number-id :initform
                         common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-phone-number-error-phone-number-id :shape
                         "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (error-code :initarg :error-code :initform
                         common-lisp:nil :type
                         (common-lisp:or error-code common-lisp:null) :accessor
                         struct-shape-phone-number-error-error-code :shape
                         "ErrorCode" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (error-message :initarg :error-message :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-phone-number-error-error-message :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-phone-number-error
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'phone-number-error
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'phone-number-error 'make-phone-number-error))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input phone-number-error))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input phone-number-error))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-id))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "ErrorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "ErrorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input phone-number-error))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype phone-number-error-list ()
   '(trivial-types:proper-list phone-number-error))
 (common-lisp:defun make-phone-number-error-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list phone-number-error))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype phone-number-list ()
   '(trivial-types:proper-list phone-number))
 (common-lisp:defun make-phone-number-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list phone-number))
   aws-sdk/generator/shape::members))
(common-lisp:deftype phone-number-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass phone-number-order common-lisp:nil
                       ((phone-number-order-id :initarg :phone-number-order-id
                         :initform common-lisp:nil :type
                         (common-lisp:or guid-string common-lisp:null)
                         :accessor
                         struct-shape-phone-number-order-phone-number-order-id
                         :shape "GuidString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (product-type :initarg :product-type :initform
                         common-lisp:nil :type
                         (common-lisp:or phone-number-product-type
                                         common-lisp:null)
                         :accessor struct-shape-phone-number-order-product-type
                         :shape "PhoneNumberProductType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or phone-number-order-status
                                         common-lisp:null)
                         :accessor struct-shape-phone-number-order-status
                         :shape "PhoneNumberOrderStatus" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (ordered-phone-numbers :initarg :ordered-phone-numbers
                         :initform common-lisp:nil :type
                         (common-lisp:or ordered-phone-number-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-phone-number-order-ordered-phone-numbers
                         :shape "OrderedPhoneNumberList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-phone-number-order-created-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-timestamp :initarg :updated-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-phone-number-order-updated-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-phone-number-order
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'phone-number-order
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'phone-number-order 'make-phone-number-order))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input phone-number-order))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input phone-number-order))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'phone-number-order-id))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberOrderId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'product-type))
      (common-lisp:list
       (common-lisp:cons "ProductType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ordered-phone-numbers))
      (common-lisp:list
       (common-lisp:cons "OrderedPhoneNumbers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input phone-number-order))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype phone-number-order-list ()
   '(trivial-types:proper-list phone-number-order))
 (common-lisp:defun make-phone-number-order-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list phone-number-order))
   aws-sdk/generator/shape::members))
(common-lisp:deftype phone-number-order-status () 'common-lisp:string)
(common-lisp:deftype phone-number-product-type () 'common-lisp:string)
(common-lisp:deftype phone-number-status () 'common-lisp:string)
(common-lisp:deftype phone-number-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype phone-number-type-list ()
   '(trivial-types:proper-list phone-number-type))
 (common-lisp:defun make-phone-number-type-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list phone-number-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype port () 'common-lisp:integer)
(common-lisp:deftype positive-integer () 'common-lisp:integer)
(common-lisp:deftype profile-service-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass proxy common-lisp:nil
                       ((default-session-expiry-minutes :initarg
                         :default-session-expiry-minutes :initform
                         common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-proxy-default-session-expiry-minutes
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (disabled :initarg :disabled :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor struct-shape-proxy-disabled :shape "Boolean"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (fall-back-phone-number :initarg
                         :fall-back-phone-number :initform common-lisp:nil
                         :type
                         (common-lisp:or e164phone-number common-lisp:null)
                         :accessor struct-shape-proxy-fall-back-phone-number
                         :shape "E164PhoneNumber" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (phone-number-countries :initarg
                         :phone-number-countries :initform common-lisp:nil
                         :type (common-lisp:or string-list common-lisp:null)
                         :accessor struct-shape-proxy-phone-number-countries
                         :shape "StringList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-proxy
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'proxy
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'proxy 'make-proxy))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input proxy))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input proxy))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-session-expiry-minutes))
      (common-lisp:list
       (common-lisp:cons "DefaultSessionExpiryMinutes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disabled))
      (common-lisp:list
       (common-lisp:cons "Disabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'fall-back-phone-number))
      (common-lisp:list
       (common-lisp:cons "FallBackPhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'phone-number-countries))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberCountries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input proxy))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass proxy-session common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform common-lisp:nil :type
                         (common-lisp:or non-empty-string128 common-lisp:null)
                         :accessor
                         struct-shape-proxy-session-voice-connector-id :shape
                         "NonEmptyString128" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (proxy-session-id :initarg :proxy-session-id :initform
                         common-lisp:nil :type
                         (common-lisp:or non-empty-string128 common-lisp:null)
                         :accessor struct-shape-proxy-session-proxy-session-id
                         :shape "NonEmptyString128" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string128 common-lisp:null) :accessor
                         struct-shape-proxy-session-name :shape "String128"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or proxy-session-status common-lisp:null)
                         :accessor struct-shape-proxy-session-status :shape
                         "ProxySessionStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (expiry-minutes :initarg :expiry-minutes :initform
                         common-lisp:nil :type
                         (common-lisp:or positive-integer common-lisp:null)
                         :accessor struct-shape-proxy-session-expiry-minutes
                         :shape "PositiveInteger" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (capabilities :initarg :capabilities :initform
                         common-lisp:nil :type
                         (common-lisp:or capability-list common-lisp:null)
                         :accessor struct-shape-proxy-session-capabilities
                         :shape "CapabilityList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-proxy-session-created-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-timestamp :initarg :updated-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-proxy-session-updated-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (ended-timestamp :initarg :ended-timestamp :initform
                         common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-proxy-session-ended-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (participants :initarg :participants :initform
                         common-lisp:nil :type
                         (common-lisp:or participants common-lisp:null)
                         :accessor struct-shape-proxy-session-participants
                         :shape "Participants" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (number-selection-behavior :initarg
                         :number-selection-behavior :initform common-lisp:nil
                         :type
                         (common-lisp:or number-selection-behavior
                                         common-lisp:null)
                         :accessor
                         struct-shape-proxy-session-number-selection-behavior
                         :shape "NumberSelectionBehavior" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (geo-match-level :initarg :geo-match-level :initform
                         common-lisp:nil :type
                         (common-lisp:or geo-match-level common-lisp:null)
                         :accessor struct-shape-proxy-session-geo-match-level
                         :shape "GeoMatchLevel" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (geo-match-params :initarg :geo-match-params :initform
                         common-lisp:nil :type
                         (common-lisp:or geo-match-params common-lisp:null)
                         :accessor struct-shape-proxy-session-geo-match-params
                         :shape "GeoMatchParams" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-proxy-session
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'proxy-session
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'proxy-session 'make-proxy-session))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input proxy-session))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input proxy-session))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-connector-id))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proxy-session-id))
      (common-lisp:list
       (common-lisp:cons "ProxySessionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiry-minutes))
      (common-lisp:list
       (common-lisp:cons "ExpiryMinutes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'capabilities))
      (common-lisp:list
       (common-lisp:cons "Capabilities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ended-timestamp))
      (common-lisp:list
       (common-lisp:cons "EndedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'participants))
      (common-lisp:list
       (common-lisp:cons "Participants"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-selection-behavior))
      (common-lisp:list
       (common-lisp:cons "NumberSelectionBehavior"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'geo-match-level))
      (common-lisp:list
       (common-lisp:cons "GeoMatchLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'geo-match-params))
      (common-lisp:list
       (common-lisp:cons "GeoMatchParams"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input proxy-session))
   common-lisp:nil))
(common-lisp:deftype proxy-session-name-string () 'common-lisp:string)
(common-lisp:deftype proxy-session-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype proxy-sessions ()
   '(trivial-types:proper-list proxy-session))
 (common-lisp:defun make-proxy-sessions
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list proxy-session))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass put-app-instance-retention-settings-request
                       common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         (common-lisp:error ":app-instance-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-put-app-instance-retention-settings-request-app-instance-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceArn")
                        (app-instance-retention-settings :initarg
                         :app-instance-retention-settings :initform
                         (common-lisp:error
                          ":app-instance-retention-settings is required")
                         :type
                         (common-lisp:or app-instance-retention-settings
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-app-instance-retention-settings-request-app-instance-retention-settings
                         :shape "AppInstanceRetentionSettings" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-app-instance-retention-settings-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-app-instance-retention-settings-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-app-instance-retention-settings-request
                    'make-put-app-instance-retention-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-app-instance-retention-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-app-instance-retention-settings-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-instance-retention-settings))
      (common-lisp:list
       (common-lisp:cons "AppInstanceRetentionSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-app-instance-retention-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-app-instance-retention-settings-response
                       common-lisp:nil
                       ((app-instance-retention-settings :initarg
                         :app-instance-retention-settings :initform
                         common-lisp:nil :type
                         (common-lisp:or app-instance-retention-settings
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-app-instance-retention-settings-response-app-instance-retention-settings
                         :shape "AppInstanceRetentionSettings" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (initiate-deletion-timestamp :initarg
                         :initiate-deletion-timestamp :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-put-app-instance-retention-settings-response-initiate-deletion-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-app-instance-retention-settings-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-app-instance-retention-settings-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-app-instance-retention-settings-response
                    'make-put-app-instance-retention-settings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-app-instance-retention-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-app-instance-retention-settings-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-instance-retention-settings))
      (common-lisp:list
       (common-lisp:cons "AppInstanceRetentionSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'initiate-deletion-timestamp))
      (common-lisp:list
       (common-lisp:cons "InitiateDeletionTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-app-instance-retention-settings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-app-instance-streaming-configurations-request
                       common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         (common-lisp:error ":app-instance-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-put-app-instance-streaming-configurations-request-app-instance-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceArn")
                        (app-instance-streaming-configurations :initarg
                         :app-instance-streaming-configurations :initform
                         (common-lisp:error
                          ":app-instance-streaming-configurations is required")
                         :type
                         (common-lisp:or
                          app-instance-streaming-configuration-list
                          common-lisp:null)
                         :accessor
                         struct-shape-put-app-instance-streaming-configurations-request-app-instance-streaming-configurations
                         :shape "AppInstanceStreamingConfigurationList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-app-instance-streaming-configurations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-app-instance-streaming-configurations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-app-instance-streaming-configurations-request
                    'make-put-app-instance-streaming-configurations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-app-instance-streaming-configurations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-app-instance-streaming-configurations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-instance-streaming-configurations))
      (common-lisp:list
       (common-lisp:cons "AppInstanceStreamingConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-app-instance-streaming-configurations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-app-instance-streaming-configurations-response
                       common-lisp:nil
                       ((app-instance-streaming-configurations :initarg
                         :app-instance-streaming-configurations :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          app-instance-streaming-configuration-list
                          common-lisp:null)
                         :accessor
                         struct-shape-put-app-instance-streaming-configurations-response-app-instance-streaming-configurations
                         :shape "AppInstanceStreamingConfigurationList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-app-instance-streaming-configurations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-app-instance-streaming-configurations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-app-instance-streaming-configurations-response
                    'make-put-app-instance-streaming-configurations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-app-instance-streaming-configurations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-app-instance-streaming-configurations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-instance-streaming-configurations))
      (common-lisp:list
       (common-lisp:cons "AppInstanceStreamingConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-app-instance-streaming-configurations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-events-configuration-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-put-events-configuration-request-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId")
                        (bot-id :initarg :bot-id :initform
                         (common-lisp:error ":bot-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-put-events-configuration-request-bot-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "botId")
                        (outbound-events-httpsendpoint :initarg
                         :outbound-events-httpsendpoint :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitive-string common-lisp:null)
                         :accessor
                         struct-shape-put-events-configuration-request-outbound-events-httpsendpoint
                         :shape "SensitiveString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (lambda-function-arn :initarg :lambda-function-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or sensitive-string common-lisp:null)
                         :accessor
                         struct-shape-put-events-configuration-request-lambda-function-arn
                         :shape "SensitiveString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-events-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-events-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-events-configuration-request
                    'make-put-events-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-events-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-events-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'outbound-events-httpsendpoint))
      (common-lisp:list
       (common-lisp:cons "OutboundEventsHTTPSEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lambda-function-arn))
      (common-lisp:list
       (common-lisp:cons "LambdaFunctionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-events-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-events-configuration-response common-lisp:nil
                       ((events-configuration :initarg :events-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or events-configuration common-lisp:null)
                         :accessor
                         struct-shape-put-events-configuration-response-events-configuration
                         :shape "EventsConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-events-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-events-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-events-configuration-response
                    'make-put-events-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-events-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-events-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'events-configuration))
      (common-lisp:list
       (common-lisp:cons "EventsConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-events-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-retention-settings-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-put-retention-settings-request-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId")
                        (retention-settings :initarg :retention-settings
                         :initform
                         (common-lisp:error ":retention-settings is required")
                         :type
                         (common-lisp:or retention-settings common-lisp:null)
                         :accessor
                         struct-shape-put-retention-settings-request-retention-settings
                         :shape "RetentionSettings" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-retention-settings-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-retention-settings-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-retention-settings-request
                    'make-put-retention-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-retention-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-retention-settings-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retention-settings))
      (common-lisp:list
       (common-lisp:cons "RetentionSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-retention-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-retention-settings-response common-lisp:nil
                       ((retention-settings :initarg :retention-settings
                         :initform common-lisp:nil :type
                         (common-lisp:or retention-settings common-lisp:null)
                         :accessor
                         struct-shape-put-retention-settings-response-retention-settings
                         :shape "RetentionSettings" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (initiate-deletion-timestamp :initarg
                         :initiate-deletion-timestamp :initform common-lisp:nil
                         :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-put-retention-settings-response-initiate-deletion-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-retention-settings-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-retention-settings-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-retention-settings-response
                    'make-put-retention-settings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-retention-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-retention-settings-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retention-settings))
      (common-lisp:list
       (common-lisp:cons "RetentionSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'initiate-deletion-timestamp))
      (common-lisp:list
       (common-lisp:cons "InitiateDeletionTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-retention-settings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-sip-media-application-logging-configuration-request
                       common-lisp:nil
                       ((sip-media-application-id :initarg
                         :sip-media-application-id :initform
                         (common-lisp:error
                          ":sip-media-application-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-put-sip-media-application-logging-configuration-request-sip-media-application-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "sipMediaApplicationId")
                        (sip-media-application-logging-configuration :initarg
                         :sip-media-application-logging-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          sip-media-application-logging-configuration
                          common-lisp:null)
                         :accessor
                         struct-shape-put-sip-media-application-logging-configuration-request-sip-media-application-logging-configuration
                         :shape "SipMediaApplicationLoggingConfiguration"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-sip-media-application-logging-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-sip-media-application-logging-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-sip-media-application-logging-configuration-request
                    'make-put-sip-media-application-logging-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-sip-media-application-logging-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-sip-media-application-logging-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application-logging-configuration))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplicationLoggingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-sip-media-application-logging-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-sip-media-application-logging-configuration-response
                       common-lisp:nil
                       ((sip-media-application-logging-configuration :initarg
                         :sip-media-application-logging-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          sip-media-application-logging-configuration
                          common-lisp:null)
                         :accessor
                         struct-shape-put-sip-media-application-logging-configuration-response-sip-media-application-logging-configuration
                         :shape "SipMediaApplicationLoggingConfiguration"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-sip-media-application-logging-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-sip-media-application-logging-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-sip-media-application-logging-configuration-response
                    'make-put-sip-media-application-logging-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-sip-media-application-logging-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-sip-media-application-logging-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application-logging-configuration))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplicationLoggingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-sip-media-application-logging-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  put-voice-connector-emergency-calling-configuration-request common-lisp:nil
  ((voice-connector-id :initarg :voice-connector-id :initform
    (common-lisp:error ":voice-connector-id is required") :type
    (common-lisp:or non-empty-string common-lisp:null) :accessor
    struct-shape-put-voice-connector-emergency-calling-configuration-request-voice-connector-id
    :shape "NonEmptyString" :location "uri" :location-name "voiceConnectorId")
   (emergency-calling-configuration :initarg :emergency-calling-configuration
    :initform
    (common-lisp:error ":emergency-calling-configuration is required") :type
    (common-lisp:or emergency-calling-configuration common-lisp:null) :accessor
    struct-shape-put-voice-connector-emergency-calling-configuration-request-emergency-calling-configuration
    :shape "EmergencyCallingConfiguration" :location common-lisp:nil
    :location-name common-lisp:nil))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-voice-connector-emergency-calling-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-voice-connector-emergency-calling-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list
   'put-voice-connector-emergency-calling-configuration-request
   'make-put-voice-connector-emergency-calling-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-emergency-calling-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-emergency-calling-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'emergency-calling-configuration))
      (common-lisp:list
       (common-lisp:cons "EmergencyCallingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-emergency-calling-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  put-voice-connector-emergency-calling-configuration-response common-lisp:nil
  ((emergency-calling-configuration :initarg :emergency-calling-configuration
    :initform common-lisp:nil :type
    (common-lisp:or emergency-calling-configuration common-lisp:null) :accessor
    struct-shape-put-voice-connector-emergency-calling-configuration-response-emergency-calling-configuration
    :shape "EmergencyCallingConfiguration" :location common-lisp:nil
    :location-name common-lisp:nil))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-voice-connector-emergency-calling-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-voice-connector-emergency-calling-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list
   'put-voice-connector-emergency-calling-configuration-response
   'make-put-voice-connector-emergency-calling-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-emergency-calling-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-emergency-calling-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'emergency-calling-configuration))
      (common-lisp:list
       (common-lisp:cons "EmergencyCallingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-emergency-calling-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-voice-connector-logging-configuration-request
                       common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-logging-configuration-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId")
                        (logging-configuration :initarg :logging-configuration
                         :initform
                         (common-lisp:error
                          ":logging-configuration is required")
                         :type
                         (common-lisp:or logging-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-logging-configuration-request-logging-configuration
                         :shape "LoggingConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-voice-connector-logging-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-voice-connector-logging-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-voice-connector-logging-configuration-request
                    'make-put-voice-connector-logging-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-logging-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-logging-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'logging-configuration))
      (common-lisp:list
       (common-lisp:cons "LoggingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-logging-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-voice-connector-logging-configuration-response
                       common-lisp:nil
                       ((logging-configuration :initarg :logging-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or logging-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-logging-configuration-response-logging-configuration
                         :shape "LoggingConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-voice-connector-logging-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-voice-connector-logging-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-voice-connector-logging-configuration-response
                    'make-put-voice-connector-logging-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-logging-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-logging-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'logging-configuration))
      (common-lisp:list
       (common-lisp:cons "LoggingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-logging-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-voice-connector-origination-request common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-origination-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId")
                        (origination :initarg :origination :initform
                         (common-lisp:error ":origination is required") :type
                         (common-lisp:or origination common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-origination-request-origination
                         :shape "Origination" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-voice-connector-origination-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-voice-connector-origination-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-voice-connector-origination-request
                    'make-put-voice-connector-origination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-origination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-origination-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origination))
      (common-lisp:list
       (common-lisp:cons "Origination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-origination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-voice-connector-origination-response common-lisp:nil
                       ((origination :initarg :origination :initform
                         common-lisp:nil :type
                         (common-lisp:or origination common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-origination-response-origination
                         :shape "Origination" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-voice-connector-origination-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-voice-connector-origination-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-voice-connector-origination-response
                    'make-put-voice-connector-origination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-origination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-origination-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origination))
      (common-lisp:list
       (common-lisp:cons "Origination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-origination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-voice-connector-proxy-request common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string128 common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-proxy-request-voice-connector-id
                         :shape "NonEmptyString128" :location "uri"
                         :location-name "voiceConnectorId")
                        (default-session-expiry-minutes :initarg
                         :default-session-expiry-minutes :initform
                         (common-lisp:error
                          ":default-session-expiry-minutes is required")
                         :type (common-lisp:or integer common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-proxy-request-default-session-expiry-minutes
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (phone-number-pool-countries :initarg
                         :phone-number-pool-countries :initform
                         (common-lisp:error
                          ":phone-number-pool-countries is required")
                         :type (common-lisp:or country-list common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-proxy-request-phone-number-pool-countries
                         :shape "CountryList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (fall-back-phone-number :initarg
                         :fall-back-phone-number :initform common-lisp:nil
                         :type
                         (common-lisp:or e164phone-number common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-proxy-request-fall-back-phone-number
                         :shape "E164PhoneNumber" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (disabled :initarg :disabled :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-proxy-request-disabled
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-voice-connector-proxy-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-voice-connector-proxy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-voice-connector-proxy-request
                    'make-put-voice-connector-proxy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-proxy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-proxy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-session-expiry-minutes))
      (common-lisp:list
       (common-lisp:cons "DefaultSessionExpiryMinutes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'phone-number-pool-countries))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberPoolCountries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'fall-back-phone-number))
      (common-lisp:list
       (common-lisp:cons "FallBackPhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disabled))
      (common-lisp:list
       (common-lisp:cons "Disabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-proxy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-voice-connector-proxy-response common-lisp:nil
                       ((proxy :initarg :proxy :initform common-lisp:nil :type
                         (common-lisp:or proxy common-lisp:null) :accessor
                         struct-shape-put-voice-connector-proxy-response-proxy
                         :shape "Proxy" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-voice-connector-proxy-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-voice-connector-proxy-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-voice-connector-proxy-response
                    'make-put-voice-connector-proxy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-proxy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-proxy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proxy))
      (common-lisp:list
       (common-lisp:cons "Proxy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-proxy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-voice-connector-streaming-configuration-request
                       common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-streaming-configuration-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId")
                        (streaming-configuration :initarg
                         :streaming-configuration :initform
                         (common-lisp:error
                          ":streaming-configuration is required")
                         :type
                         (common-lisp:or streaming-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-streaming-configuration-request-streaming-configuration
                         :shape "StreamingConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-voice-connector-streaming-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-voice-connector-streaming-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-voice-connector-streaming-configuration-request
                    'make-put-voice-connector-streaming-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-streaming-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-streaming-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'streaming-configuration))
      (common-lisp:list
       (common-lisp:cons "StreamingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-streaming-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-voice-connector-streaming-configuration-response
                       common-lisp:nil
                       ((streaming-configuration :initarg
                         :streaming-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or streaming-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-streaming-configuration-response-streaming-configuration
                         :shape "StreamingConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-voice-connector-streaming-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-voice-connector-streaming-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-voice-connector-streaming-configuration-response
                    'make-put-voice-connector-streaming-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-streaming-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-streaming-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'streaming-configuration))
      (common-lisp:list
       (common-lisp:cons "StreamingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-streaming-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-voice-connector-termination-credentials-request
                       common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-termination-credentials-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId")
                        (credentials :initarg :credentials :initform
                         common-lisp:nil :type
                         (common-lisp:or credential-list common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-termination-credentials-request-credentials
                         :shape "CredentialList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-voice-connector-termination-credentials-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-voice-connector-termination-credentials-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-voice-connector-termination-credentials-request
                    'make-put-voice-connector-termination-credentials-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-termination-credentials-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-termination-credentials-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials))
      (common-lisp:list
       (common-lisp:cons "Credentials"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-termination-credentials-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-voice-connector-termination-request common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-termination-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId")
                        (termination :initarg :termination :initform
                         (common-lisp:error ":termination is required") :type
                         (common-lisp:or termination common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-termination-request-termination
                         :shape "Termination" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-voice-connector-termination-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-voice-connector-termination-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-voice-connector-termination-request
                    'make-put-voice-connector-termination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-termination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-termination-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'termination))
      (common-lisp:list
       (common-lisp:cons "Termination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-termination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-voice-connector-termination-response common-lisp:nil
                       ((termination :initarg :termination :initform
                         common-lisp:nil :type
                         (common-lisp:or termination common-lisp:null)
                         :accessor
                         struct-shape-put-voice-connector-termination-response-termination
                         :shape "Termination" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-voice-connector-termination-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-voice-connector-termination-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-voice-connector-termination-response
                    'make-put-voice-connector-termination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-termination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-termination-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'termination))
      (common-lisp:list
       (common-lisp:cons "Termination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-voice-connector-termination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass redact-channel-message-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-redact-channel-message-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (message-id :initarg :message-id :initform
                         (common-lisp:error ":message-id is required") :type
                         (common-lisp:or message-id common-lisp:null) :accessor
                         struct-shape-redact-channel-message-request-message-id
                         :shape "MessageId" :location "uri" :location-name
                         "messageId")
                        (chime-bearer :initarg :chime-bearer :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-redact-channel-message-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-redact-channel-message-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'redact-channel-message-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'redact-channel-message-request
                    'make-redact-channel-message-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          redact-channel-message-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          redact-channel-message-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          redact-channel-message-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass redact-channel-message-response common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-redact-channel-message-response-channel-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message-id :initarg :message-id :initform
                         common-lisp:nil :type
                         (common-lisp:or message-id common-lisp:null) :accessor
                         struct-shape-redact-channel-message-response-message-id
                         :shape "MessageId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-redact-channel-message-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'redact-channel-message-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'redact-channel-message-response
                    'make-redact-channel-message-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          redact-channel-message-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          redact-channel-message-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-id))
      (common-lisp:list
       (common-lisp:cons "MessageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          redact-channel-message-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass redact-conversation-message-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-redact-conversation-message-request-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId")
                        (conversation-id :initarg :conversation-id :initform
                         (common-lisp:error ":conversation-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-redact-conversation-message-request-conversation-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "conversationId")
                        (message-id :initarg :message-id :initform
                         (common-lisp:error ":message-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-redact-conversation-message-request-message-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "messageId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-redact-conversation-message-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'redact-conversation-message-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'redact-conversation-message-request
                    'make-redact-conversation-message-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          redact-conversation-message-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          redact-conversation-message-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          redact-conversation-message-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass redact-conversation-message-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-redact-conversation-message-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'redact-conversation-message-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'redact-conversation-message-response
                    'make-redact-conversation-message-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          redact-conversation-message-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          redact-conversation-message-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          redact-conversation-message-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass redact-room-message-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-redact-room-message-request-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId")
                        (room-id :initarg :room-id :initform
                         (common-lisp:error ":room-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-redact-room-message-request-room-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "roomId")
                        (message-id :initarg :message-id :initform
                         (common-lisp:error ":message-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-redact-room-message-request-message-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "messageId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-redact-room-message-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'redact-room-message-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'redact-room-message-request
                    'make-redact-room-message-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          redact-room-message-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          redact-room-message-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          redact-room-message-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass redact-room-message-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-redact-room-message-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'redact-room-message-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'redact-room-message-response
                    'make-redact-room-message-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          redact-room-message-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          redact-room-message-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          redact-room-message-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass regenerate-security-token-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-regenerate-security-token-request-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId")
                        (bot-id :initarg :bot-id :initform
                         (common-lisp:error ":bot-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-regenerate-security-token-request-bot-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "botId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-regenerate-security-token-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'regenerate-security-token-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'regenerate-security-token-request
                    'make-regenerate-security-token-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          regenerate-security-token-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          regenerate-security-token-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          regenerate-security-token-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass regenerate-security-token-response common-lisp:nil
                       ((bot :initarg :bot :initform common-lisp:nil :type
                         (common-lisp:or bot common-lisp:null) :accessor
                         struct-shape-regenerate-security-token-response-bot
                         :shape "Bot" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-regenerate-security-token-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'regenerate-security-token-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'regenerate-security-token-response
                    'make-regenerate-security-token-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          regenerate-security-token-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          regenerate-security-token-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bot))
      (common-lisp:list
       (common-lisp:cons "Bot"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          regenerate-security-token-response))
   common-lisp:nil))
(common-lisp:deftype registration-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass reset-personal-pinrequest common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-reset-personal-pinrequest-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId")
                        (user-id :initarg :user-id :initform
                         (common-lisp:error ":user-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-reset-personal-pinrequest-user-id :shape
                         "NonEmptyString" :location "uri" :location-name
                         "userId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-reset-personal-pinrequest
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'reset-personal-pinrequest
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'reset-personal-pinrequest
                    'make-reset-personal-pinrequest))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reset-personal-pinrequest))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reset-personal-pinrequest))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reset-personal-pinrequest))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass reset-personal-pinresponse common-lisp:nil
                       ((user :initarg :user :initform common-lisp:nil :type
                         (common-lisp:or user common-lisp:null) :accessor
                         struct-shape-reset-personal-pinresponse-user :shape
                         "User" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-reset-personal-pinresponse
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'reset-personal-pinresponse
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'reset-personal-pinresponse
                    'make-reset-personal-pinresponse))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reset-personal-pinresponse))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reset-personal-pinresponse))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user))
      (common-lisp:list
       (common-lisp:cons "User"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reset-personal-pinresponse))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition resource-limit-exceeded-exception
     (chime-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       resource-limit-exceeded-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       resource-limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-limit-exceeded-exception
                    'resource-limit-exceeded-exception-code
                    'resource-limit-exceeded-exception-message)))
(common-lisp:deftype resource-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass restore-phone-number-request common-lisp:nil
                       ((phone-number-id :initarg :phone-number-id :initform
                         (common-lisp:error ":phone-number-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-restore-phone-number-request-phone-number-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "phoneNumberId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-restore-phone-number-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'restore-phone-number-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'restore-phone-number-request
                    'make-restore-phone-number-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          restore-phone-number-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          restore-phone-number-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          restore-phone-number-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass restore-phone-number-response common-lisp:nil
                       ((phone-number :initarg :phone-number :initform
                         common-lisp:nil :type
                         (common-lisp:or phone-number common-lisp:null)
                         :accessor
                         struct-shape-restore-phone-number-response-phone-number
                         :shape "PhoneNumber" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-restore-phone-number-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'restore-phone-number-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'restore-phone-number-response
                    'make-restore-phone-number-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          restore-phone-number-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          restore-phone-number-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number))
      (common-lisp:list
       (common-lisp:cons "PhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          restore-phone-number-response))
   common-lisp:nil))
(common-lisp:deftype result-max () 'common-lisp:integer)
(common-lisp:deftype retention-days () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass retention-settings common-lisp:nil
                       ((room-retention-settings :initarg
                         :room-retention-settings :initform common-lisp:nil
                         :type
                         (common-lisp:or room-retention-settings
                                         common-lisp:null)
                         :accessor
                         struct-shape-retention-settings-room-retention-settings
                         :shape "RoomRetentionSettings" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (conversation-retention-settings :initarg
                         :conversation-retention-settings :initform
                         common-lisp:nil :type
                         (common-lisp:or conversation-retention-settings
                                         common-lisp:null)
                         :accessor
                         struct-shape-retention-settings-conversation-retention-settings
                         :shape "ConversationRetentionSettings" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-retention-settings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'retention-settings
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'retention-settings 'make-retention-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input retention-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input retention-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'room-retention-settings))
      (common-lisp:list
       (common-lisp:cons "RoomRetentionSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'conversation-retention-settings))
      (common-lisp:list
       (common-lisp:cons "ConversationRetentionSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input retention-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass room common-lisp:nil
                       ((room-id :initarg :room-id :initform common-lisp:nil
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-room-room-id :shape
                         "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or sensitive-string common-lisp:null)
                         :accessor struct-shape-room-name :shape
                         "SensitiveString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-room-account-id :shape
                         "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-by :initarg :created-by :initform
                         common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-room-created-by :shape
                         "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-room-created-timestamp :shape
                         "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-timestamp :initarg :updated-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-room-updated-timestamp :shape
                         "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-room (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'room
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'room 'make-room))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input room))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input room))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'room-id))
      (common-lisp:list
       (common-lisp:cons "RoomId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-by))
      (common-lisp:list
       (common-lisp:cons "CreatedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input room))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype room-list () '(trivial-types:proper-list room))
 (common-lisp:defun make-room-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list room))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass room-membership common-lisp:nil
                       ((room-id :initarg :room-id :initform common-lisp:nil
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-room-membership-room-id :shape
                         "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (member :initarg :member :initform common-lisp:nil
                         :type (common-lisp:or member common-lisp:null)
                         :accessor struct-shape-room-membership-member :shape
                         "Member" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (role :initarg :role :initform common-lisp:nil :type
                         (common-lisp:or room-membership-role common-lisp:null)
                         :accessor struct-shape-room-membership-role :shape
                         "RoomMembershipRole" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (invited-by :initarg :invited-by :initform
                         common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-room-membership-invited-by
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-timestamp :initarg :updated-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-room-membership-updated-timestamp :shape
                         "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-room-membership
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'room-membership
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'room-membership 'make-room-membership))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input room-membership))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input room-membership))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'room-id))
      (common-lisp:list
       (common-lisp:cons "RoomId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member))
      (common-lisp:list
       (common-lisp:cons "Member"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role))
      (common-lisp:list
       (common-lisp:cons "Role"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'invited-by))
      (common-lisp:list
       (common-lisp:cons "InvitedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input room-membership))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype room-membership-list ()
   '(trivial-types:proper-list room-membership))
 (common-lisp:defun make-room-membership-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list room-membership))
   aws-sdk/generator/shape::members))
(common-lisp:deftype room-membership-role () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass room-retention-settings common-lisp:nil
                       ((retention-days :initarg :retention-days :initform
                         common-lisp:nil :type
                         (common-lisp:or retention-days common-lisp:null)
                         :accessor
                         struct-shape-room-retention-settings-retention-days
                         :shape "RetentionDays" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-room-retention-settings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'room-retention-settings
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'room-retention-settings 'make-room-retention-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          room-retention-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          room-retention-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retention-days))
      (common-lisp:list
       (common-lisp:cons "RetentionDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          room-retention-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype smaupdate-call-arguments-map () 'common-lisp:hash-table)
 (common-lisp:defun make-smaupdate-call-arguments-map
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass search-available-phone-numbers-request common-lisp:nil
                       ((area-code :initarg :area-code :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-search-available-phone-numbers-request-area-code
                         :shape "String" :location "querystring" :location-name
                         "area-code")
                        (city :initarg :city :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-search-available-phone-numbers-request-city
                         :shape "String" :location "querystring" :location-name
                         "city")
                        (country :initarg :country :initform common-lisp:nil
                         :type
                         (common-lisp:or alpha2country-code common-lisp:null)
                         :accessor
                         struct-shape-search-available-phone-numbers-request-country
                         :shape "Alpha2CountryCode" :location "querystring"
                         :location-name "country")
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-search-available-phone-numbers-request-state
                         :shape "String" :location "querystring" :location-name
                         "state")
                        (toll-free-prefix :initarg :toll-free-prefix :initform
                         common-lisp:nil :type
                         (common-lisp:or toll-free-prefix common-lisp:null)
                         :accessor
                         struct-shape-search-available-phone-numbers-request-toll-free-prefix
                         :shape "TollFreePrefix" :location "querystring"
                         :location-name "toll-free-prefix")
                        (phone-number-type :initarg :phone-number-type
                         :initform common-lisp:nil :type
                         (common-lisp:or phone-number-type common-lisp:null)
                         :accessor
                         struct-shape-search-available-phone-numbers-request-phone-number-type
                         :shape "PhoneNumberType" :location "querystring"
                         :location-name "phone-number-type")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or phone-number-max-results
                                         common-lisp:null)
                         :accessor
                         struct-shape-search-available-phone-numbers-request-max-results
                         :shape "PhoneNumberMaxResults" :location "querystring"
                         :location-name "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-search-available-phone-numbers-request-next-token
                         :shape "String" :location "querystring" :location-name
                         "next-token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-search-available-phone-numbers-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'search-available-phone-numbers-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'search-available-phone-numbers-request
                    'make-search-available-phone-numbers-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          search-available-phone-numbers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          search-available-phone-numbers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          search-available-phone-numbers-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass search-available-phone-numbers-response common-lisp:nil
                       ((e164phone-numbers :initarg :e164phone-numbers
                         :initform common-lisp:nil :type
                         (common-lisp:or e164phone-number-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-search-available-phone-numbers-response-e164phone-numbers
                         :shape "E164PhoneNumberList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-search-available-phone-numbers-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-search-available-phone-numbers-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'search-available-phone-numbers-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'search-available-phone-numbers-response
                    'make-search-available-phone-numbers-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          search-available-phone-numbers-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          search-available-phone-numbers-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'e164phone-numbers))
      (common-lisp:list
       (common-lisp:cons "E164PhoneNumbers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          search-available-phone-numbers-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass selected-video-streams common-lisp:nil
                       ((attendee-ids :initarg :attendee-ids :initform
                         common-lisp:nil :type
                         (common-lisp:or attendee-id-list common-lisp:null)
                         :accessor
                         struct-shape-selected-video-streams-attendee-ids
                         :shape "AttendeeIdList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (external-user-ids :initarg :external-user-ids
                         :initform common-lisp:nil :type
                         (common-lisp:or external-user-id-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-selected-video-streams-external-user-ids
                         :shape "ExternalUserIdList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-selected-video-streams
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'selected-video-streams
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'selected-video-streams 'make-selected-video-streams))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          selected-video-streams))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          selected-video-streams))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attendee-ids))
      (common-lisp:list
       (common-lisp:cons "AttendeeIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'external-user-ids))
      (common-lisp:list
       (common-lisp:cons "ExternalUserIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          selected-video-streams))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass send-channel-message-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-send-channel-message-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (content :initarg :content :initform
                         (common-lisp:error ":content is required") :type
                         (common-lisp:or non-empty-content common-lisp:null)
                         :accessor
                         struct-shape-send-channel-message-request-content
                         :shape "NonEmptyContent" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (type :initarg :type :initform
                         (common-lisp:error ":type is required") :type
                         (common-lisp:or channel-message-type common-lisp:null)
                         :accessor
                         struct-shape-send-channel-message-request-type :shape
                         "ChannelMessageType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (persistence :initarg :persistence :initform
                         (common-lisp:error ":persistence is required") :type
                         (common-lisp:or channel-message-persistence-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-send-channel-message-request-persistence
                         :shape "ChannelMessagePersistenceType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or metadata common-lisp:null)
                         :accessor
                         struct-shape-send-channel-message-request-metadata
                         :shape "Metadata" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-request-token :initarg :client-request-token
                         :initform
                         (common-lisp:error
                          ":client-request-token is required")
                         :type
                         (common-lisp:or client-request-token common-lisp:null)
                         :accessor
                         struct-shape-send-channel-message-request-client-request-token
                         :shape "ClientRequestToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (chime-bearer :initarg :chime-bearer :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-send-channel-message-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-send-channel-message-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'send-channel-message-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'send-channel-message-request
                    'make-send-channel-message-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-channel-message-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-channel-message-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content))
      (common-lisp:list
       (common-lisp:cons "Content"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'persistence))
      (common-lisp:list
       (common-lisp:cons "Persistence"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-channel-message-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass send-channel-message-response common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-send-channel-message-response-channel-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message-id :initarg :message-id :initform
                         common-lisp:nil :type
                         (common-lisp:or message-id common-lisp:null) :accessor
                         struct-shape-send-channel-message-response-message-id
                         :shape "MessageId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-send-channel-message-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'send-channel-message-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'send-channel-message-response
                    'make-send-channel-message-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-channel-message-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-channel-message-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-id))
      (common-lisp:list
       (common-lisp:cons "MessageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-channel-message-response))
   common-lisp:nil))
(common-lisp:deftype sensitive-non-empty-string () 'common-lisp:string)
(common-lisp:deftype sensitive-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype sensitive-string-list ()
   '(trivial-types:proper-list sensitive-string))
 (common-lisp:defun make-sensitive-string-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list sensitive-string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition service-failure-exception
     (chime-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       service-failure-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       service-failure-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-failure-exception 'service-failure-exception-code
                    'service-failure-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition service-unavailable-exception
     (chime-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       service-unavailable-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       service-unavailable-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-unavailable-exception
                    'service-unavailable-exception-code
                    'service-unavailable-exception-message)))
(common-lisp:progn
 (common-lisp:defclass signin-delegate-group common-lisp:nil
                       ((group-name :initarg :group-name :initform
                         common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-signin-delegate-group-group-name :shape
                         "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-signin-delegate-group
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'signin-delegate-group
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'signin-delegate-group 'make-signin-delegate-group))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          signin-delegate-group))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          signin-delegate-group))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-name))
      (common-lisp:list
       (common-lisp:cons "GroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          signin-delegate-group))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype signin-delegate-group-list ()
   '(trivial-types:proper-list signin-delegate-group))
 (common-lisp:defun make-signin-delegate-group-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list signin-delegate-group))
   aws-sdk/generator/shape::members))
(common-lisp:deftype sip-application-priority () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype sip-headers-map () 'common-lisp:hash-table)
 (common-lisp:defun make-sip-headers-map (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass sip-media-application common-lisp:nil
                       ((sip-media-application-id :initarg
                         :sip-media-application-id :initform common-lisp:nil
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-sip-media-application-sip-media-application-id
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (aws-region :initarg :aws-region :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-sip-media-application-aws-region :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or sip-media-application-name
                                         common-lisp:null)
                         :accessor struct-shape-sip-media-application-name
                         :shape "SipMediaApplicationName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (endpoints :initarg :endpoints :initform
                         common-lisp:nil :type
                         (common-lisp:or sip-media-application-endpoint-list
                                         common-lisp:null)
                         :accessor struct-shape-sip-media-application-endpoints
                         :shape "SipMediaApplicationEndpointList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-sip-media-application-created-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-timestamp :initarg :updated-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-sip-media-application-updated-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-sip-media-application
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'sip-media-application
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'sip-media-application 'make-sip-media-application))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application-id))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-region))
      (common-lisp:list
       (common-lisp:cons "AwsRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoints))
      (common-lisp:list
       (common-lisp:cons "Endpoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass sip-media-application-call common-lisp:nil
                       ((transaction-id :initarg :transaction-id :initform
                         common-lisp:nil :type
                         (common-lisp:or guid-string common-lisp:null)
                         :accessor
                         struct-shape-sip-media-application-call-transaction-id
                         :shape "GuidString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-sip-media-application-call
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'sip-media-application-call
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'sip-media-application-call
                    'make-sip-media-application-call))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application-call))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application-call))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'transaction-id))
      (common-lisp:list
       (common-lisp:cons "TransactionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application-call))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass sip-media-application-endpoint common-lisp:nil
                       ((lambda-arn :initarg :lambda-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or function-arn common-lisp:null)
                         :accessor
                         struct-shape-sip-media-application-endpoint-lambda-arn
                         :shape "FunctionArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-sip-media-application-endpoint
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'sip-media-application-endpoint
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'sip-media-application-endpoint
                    'make-sip-media-application-endpoint))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application-endpoint))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application-endpoint))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lambda-arn))
      (common-lisp:list
       (common-lisp:cons "LambdaArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application-endpoint))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype sip-media-application-endpoint-list ()
   '(trivial-types:proper-list sip-media-application-endpoint))
 (common-lisp:defun make-sip-media-application-endpoint-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            sip-media-application-endpoint))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype sip-media-application-list ()
   '(trivial-types:proper-list sip-media-application))
 (common-lisp:defun make-sip-media-application-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list sip-media-application))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass sip-media-application-logging-configuration
                       common-lisp:nil
                       ((enable-sip-media-application-message-logs :initarg
                         :enable-sip-media-application-message-logs :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-sip-media-application-logging-configuration-enable-sip-media-application-message-logs
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-sip-media-application-logging-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'sip-media-application-logging-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'sip-media-application-logging-configuration
                    'make-sip-media-application-logging-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application-logging-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application-logging-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-sip-media-application-message-logs))
      (common-lisp:list
       (common-lisp:cons "EnableSipMediaApplicationMessageLogs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sip-media-application-logging-configuration))
   common-lisp:nil))
(common-lisp:deftype sip-media-application-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass sip-rule common-lisp:nil
                       ((sip-rule-id :initarg :sip-rule-id :initform
                         common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-sip-rule-sip-rule-id :shape
                         "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or sip-rule-name common-lisp:null)
                         :accessor struct-shape-sip-rule-name :shape
                         "SipRuleName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (disabled :initarg :disabled :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor struct-shape-sip-rule-disabled :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (trigger-type :initarg :trigger-type :initform
                         common-lisp:nil :type
                         (common-lisp:or sip-rule-trigger-type
                                         common-lisp:null)
                         :accessor struct-shape-sip-rule-trigger-type :shape
                         "SipRuleTriggerType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (trigger-value :initarg :trigger-value :initform
                         common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-sip-rule-trigger-value :shape
                         "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (target-applications :initarg :target-applications
                         :initform common-lisp:nil :type
                         (common-lisp:or sip-rule-target-application-list
                                         common-lisp:null)
                         :accessor struct-shape-sip-rule-target-applications
                         :shape "SipRuleTargetApplicationList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-sip-rule-created-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-timestamp :initarg :updated-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-sip-rule-updated-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-sip-rule
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'sip-rule
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'sip-rule 'make-sip-rule))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sip-rule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sip-rule))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sip-rule-id))
      (common-lisp:list
       (common-lisp:cons "SipRuleId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disabled))
      (common-lisp:list
       (common-lisp:cons "Disabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'trigger-type))
      (common-lisp:list
       (common-lisp:cons "TriggerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'trigger-value))
      (common-lisp:list
       (common-lisp:cons "TriggerValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-applications))
      (common-lisp:list
       (common-lisp:cons "TargetApplications"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sip-rule))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype sip-rule-list () '(trivial-types:proper-list sip-rule))
 (common-lisp:defun make-sip-rule-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list sip-rule))
   aws-sdk/generator/shape::members))
(common-lisp:deftype sip-rule-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass sip-rule-target-application common-lisp:nil
                       ((sip-media-application-id :initarg
                         :sip-media-application-id :initform common-lisp:nil
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-sip-rule-target-application-sip-media-application-id
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (priority :initarg :priority :initform common-lisp:nil
                         :type
                         (common-lisp:or sip-application-priority
                                         common-lisp:null)
                         :accessor
                         struct-shape-sip-rule-target-application-priority
                         :shape "SipApplicationPriority" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (aws-region :initarg :aws-region :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-sip-rule-target-application-aws-region
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-sip-rule-target-application
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'sip-rule-target-application
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'sip-rule-target-application
                    'make-sip-rule-target-application))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sip-rule-target-application))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sip-rule-target-application))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application-id))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'priority))
      (common-lisp:list
       (common-lisp:cons "Priority"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-region))
      (common-lisp:list
       (common-lisp:cons "AwsRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sip-rule-target-application))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype sip-rule-target-application-list ()
   '(trivial-types:proper-list sip-rule-target-application))
 (common-lisp:defun make-sip-rule-target-application-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            sip-rule-target-application))
   aws-sdk/generator/shape::members))
(common-lisp:deftype sip-rule-trigger-type () 'common-lisp:string)
(common-lisp:deftype sort-order () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass source-configuration common-lisp:nil
                       ((selected-video-streams :initarg
                         :selected-video-streams :initform common-lisp:nil
                         :type
                         (common-lisp:or selected-video-streams
                                         common-lisp:null)
                         :accessor
                         struct-shape-source-configuration-selected-video-streams
                         :shape "SelectedVideoStreams" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-source-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'source-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'source-configuration 'make-source-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input source-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input source-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'selected-video-streams))
      (common-lisp:list
       (common-lisp:cons "SelectedVideoStreams"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input source-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-meeting-transcription-request common-lisp:nil
                       ((meeting-id :initarg :meeting-id :initform
                         (common-lisp:error ":meeting-id is required") :type
                         (common-lisp:or guid-string common-lisp:null)
                         :accessor
                         struct-shape-start-meeting-transcription-request-meeting-id
                         :shape "GuidString" :location "uri" :location-name
                         "meetingId")
                        (transcription-configuration :initarg
                         :transcription-configuration :initform
                         (common-lisp:error
                          ":transcription-configuration is required")
                         :type
                         (common-lisp:or transcription-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-start-meeting-transcription-request-transcription-configuration
                         :shape "TranscriptionConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-meeting-transcription-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-meeting-transcription-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-meeting-transcription-request
                    'make-start-meeting-transcription-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-meeting-transcription-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-meeting-transcription-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'transcription-configuration))
      (common-lisp:list
       (common-lisp:cons "TranscriptionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-meeting-transcription-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-meeting-transcription-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-meeting-transcription-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-meeting-transcription-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-meeting-transcription-response
                    'make-start-meeting-transcription-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-meeting-transcription-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-meeting-transcription-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-meeting-transcription-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-meeting-transcription-request common-lisp:nil
                       ((meeting-id :initarg :meeting-id :initform
                         (common-lisp:error ":meeting-id is required") :type
                         (common-lisp:or guid-string common-lisp:null)
                         :accessor
                         struct-shape-stop-meeting-transcription-request-meeting-id
                         :shape "GuidString" :location "uri" :location-name
                         "meetingId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stop-meeting-transcription-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'stop-meeting-transcription-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stop-meeting-transcription-request
                    'make-stop-meeting-transcription-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-meeting-transcription-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-meeting-transcription-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-meeting-transcription-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-meeting-transcription-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stop-meeting-transcription-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'stop-meeting-transcription-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stop-meeting-transcription-response
                    'make-stop-meeting-transcription-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-meeting-transcription-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-meeting-transcription-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-meeting-transcription-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass streaming-configuration common-lisp:nil
                       ((data-retention-in-hours :initarg
                         :data-retention-in-hours :initform
                         (common-lisp:error
                          ":data-retention-in-hours is required")
                         :type
                         (common-lisp:or data-retention-in-hours
                                         common-lisp:null)
                         :accessor
                         struct-shape-streaming-configuration-data-retention-in-hours
                         :shape "DataRetentionInHours" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (disabled :initarg :disabled :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         struct-shape-streaming-configuration-disabled :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (streaming-notification-targets :initarg
                         :streaming-notification-targets :initform
                         common-lisp:nil :type
                         (common-lisp:or streaming-notification-target-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-streaming-configuration-streaming-notification-targets
                         :shape "StreamingNotificationTargetList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-streaming-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'streaming-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'streaming-configuration 'make-streaming-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          streaming-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          streaming-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-retention-in-hours))
      (common-lisp:list
       (common-lisp:cons "DataRetentionInHours"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disabled))
      (common-lisp:list
       (common-lisp:cons "Disabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'streaming-notification-targets))
      (common-lisp:list
       (common-lisp:cons "StreamingNotificationTargets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          streaming-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass streaming-notification-target common-lisp:nil
                       ((notification-target :initarg :notification-target
                         :initform
                         (common-lisp:error ":notification-target is required")
                         :type
                         (common-lisp:or notification-target common-lisp:null)
                         :accessor
                         struct-shape-streaming-notification-target-notification-target
                         :shape "NotificationTarget" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-streaming-notification-target
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'streaming-notification-target
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'streaming-notification-target
                    'make-streaming-notification-target))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          streaming-notification-target))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          streaming-notification-target))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'notification-target))
      (common-lisp:list
       (common-lisp:cons "NotificationTarget"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          streaming-notification-target))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype streaming-notification-target-list ()
   '(trivial-types:proper-list streaming-notification-target))
 (common-lisp:defun make-streaming-notification-target-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            streaming-notification-target))
   aws-sdk/generator/shape::members))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:deftype string128 () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype string-list () '(trivial-types:proper-list string))
 (common-lisp:defun make-string-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass tag common-lisp:nil
                       ((key :initarg :key :initform
                         (common-lisp:error ":key is required") :type
                         (common-lisp:or tag-key common-lisp:null) :accessor
                         struct-shape-tag-key :shape "TagKey" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (value :initarg :value :initform
                         (common-lisp:error ":value is required") :type
                         (common-lisp:or tag-value common-lisp:null) :accessor
                         struct-shape-tag-value :shape "TagValue" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-attendee-request common-lisp:nil
                       ((meeting-id :initarg :meeting-id :initform
                         (common-lisp:error ":meeting-id is required") :type
                         (common-lisp:or guid-string common-lisp:null)
                         :accessor struct-shape-tag-attendee-request-meeting-id
                         :shape "GuidString" :location "uri" :location-name
                         "meetingId")
                        (attendee-id :initarg :attendee-id :initform
                         (common-lisp:error ":attendee-id is required") :type
                         (common-lisp:or guid-string common-lisp:null)
                         :accessor
                         struct-shape-tag-attendee-request-attendee-id :shape
                         "GuidString" :location "uri" :location-name
                         "attendeeId")
                        (tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or attendee-tag-list common-lisp:null)
                         :accessor struct-shape-tag-attendee-request-tags
                         :shape "AttendeeTagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-attendee-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-attendee-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-attendee-request 'make-tag-attendee-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-attendee-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-attendee-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-attendee-request))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun make-tag-key-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun make-tag-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass tag-meeting-request common-lisp:nil
                       ((meeting-id :initarg :meeting-id :initform
                         (common-lisp:error ":meeting-id is required") :type
                         (common-lisp:or guid-string common-lisp:null)
                         :accessor struct-shape-tag-meeting-request-meeting-id
                         :shape "GuidString" :location "uri" :location-name
                         "meetingId")
                        (tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or meeting-tag-list common-lisp:null)
                         :accessor struct-shape-tag-meeting-request-tags :shape
                         "MeetingTagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-meeting-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-meeting-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-meeting-request 'make-tag-meeting-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-meeting-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-meeting-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-meeting-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-tag-resource-request-resource-arn :shape
                         "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-tag-resource-request-tags :shape
                         "TagList" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass telephony-settings common-lisp:nil
                       ((inbound-calling :initarg :inbound-calling :initform
                         (common-lisp:error ":inbound-calling is required")
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         struct-shape-telephony-settings-inbound-calling :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (outbound-calling :initarg :outbound-calling :initform
                         (common-lisp:error ":outbound-calling is required")
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         struct-shape-telephony-settings-outbound-calling
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sms :initarg :sms :initform
                         (common-lisp:error ":sms is required") :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-telephony-settings-sms :shape "Boolean"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-telephony-settings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'telephony-settings
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'telephony-settings 'make-telephony-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input telephony-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input telephony-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inbound-calling))
      (common-lisp:list
       (common-lisp:cons "InboundCalling"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outbound-calling))
      (common-lisp:list
       (common-lisp:cons "OutboundCalling"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sms))
      (common-lisp:list
       (common-lisp:cons "SMS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input telephony-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass termination common-lisp:nil
                       ((cps-limit :initarg :cps-limit :initform
                         common-lisp:nil :type
                         (common-lisp:or cps-limit common-lisp:null) :accessor
                         struct-shape-termination-cps-limit :shape "CpsLimit"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (default-phone-number :initarg :default-phone-number
                         :initform common-lisp:nil :type
                         (common-lisp:or e164phone-number common-lisp:null)
                         :accessor
                         struct-shape-termination-default-phone-number :shape
                         "E164PhoneNumber" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (calling-regions :initarg :calling-regions :initform
                         common-lisp:nil :type
                         (common-lisp:or calling-region-list common-lisp:null)
                         :accessor struct-shape-termination-calling-regions
                         :shape "CallingRegionList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cidr-allowed-list :initarg :cidr-allowed-list
                         :initform common-lisp:nil :type
                         (common-lisp:or string-list common-lisp:null)
                         :accessor struct-shape-termination-cidr-allowed-list
                         :shape "StringList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (disabled :initarg :disabled :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor struct-shape-termination-disabled :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-termination
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'termination
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'termination 'make-termination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input termination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input termination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cps-limit))
      (common-lisp:list
       (common-lisp:cons "CpsLimit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-phone-number))
      (common-lisp:list
       (common-lisp:cons "DefaultPhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'calling-regions))
      (common-lisp:list
       (common-lisp:cons "CallingRegions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cidr-allowed-list))
      (common-lisp:list
       (common-lisp:cons "CidrAllowedList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disabled))
      (common-lisp:list
       (common-lisp:cons "Disabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input termination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass termination-health common-lisp:nil
                       ((timestamp :initarg :timestamp :initform
                         common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-termination-health-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (source :initarg :source :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-termination-health-source
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-termination-health
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'termination-health
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'termination-health 'make-termination-health))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input termination-health))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input termination-health))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamp))
      (common-lisp:list
       (common-lisp:cons "Timestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "Source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input termination-health))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition throttled-client-exception
     (chime-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       throttled-client-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       throttled-client-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttled-client-exception
                    'throttled-client-exception-code
                    'throttled-client-exception-message)))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:deftype toll-free-prefix () 'common-lisp:string)
(common-lisp:deftype transcribe-content-identification-type ()
  'common-lisp:string)
(common-lisp:deftype transcribe-content-redaction-type () 'common-lisp:string)
(common-lisp:deftype transcribe-language-code () 'common-lisp:string)
(common-lisp:deftype transcribe-language-model-name () 'common-lisp:string)
(common-lisp:deftype transcribe-language-options () 'common-lisp:string)
(common-lisp:deftype transcribe-medical-content-identification-type ()
  'common-lisp:string)
(common-lisp:deftype transcribe-medical-language-code () 'common-lisp:string)
(common-lisp:deftype transcribe-medical-region () 'common-lisp:string)
(common-lisp:deftype transcribe-medical-specialty () 'common-lisp:string)
(common-lisp:deftype transcribe-medical-type () 'common-lisp:string)
(common-lisp:deftype transcribe-partial-results-stability ()
  'common-lisp:string)
(common-lisp:deftype transcribe-pii-entity-types () 'common-lisp:string)
(common-lisp:deftype transcribe-region () 'common-lisp:string)
(common-lisp:deftype transcribe-vocabulary-filter-method () 'common-lisp:string)
(common-lisp:deftype transcribe-vocabulary-names-or-filter-names-string ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass transcription-configuration common-lisp:nil
                       ((engine-transcribe-settings :initarg
                         :engine-transcribe-settings :initform common-lisp:nil
                         :type
                         (common-lisp:or engine-transcribe-settings
                                         common-lisp:null)
                         :accessor
                         struct-shape-transcription-configuration-engine-transcribe-settings
                         :shape "EngineTranscribeSettings" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (engine-transcribe-medical-settings :initarg
                         :engine-transcribe-medical-settings :initform
                         common-lisp:nil :type
                         (common-lisp:or engine-transcribe-medical-settings
                                         common-lisp:null)
                         :accessor
                         struct-shape-transcription-configuration-engine-transcribe-medical-settings
                         :shape "EngineTranscribeMedicalSettings" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-transcription-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'transcription-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'transcription-configuration
                    'make-transcription-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          transcription-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          transcription-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'engine-transcribe-settings))
      (common-lisp:list
       (common-lisp:cons "EngineTranscribeSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'engine-transcribe-medical-settings))
      (common-lisp:list
       (common-lisp:cons "EngineTranscribeMedicalSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          transcription-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition unauthorized-client-exception
     (chime-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       unauthorized-client-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       unauthorized-client-exception-message)))
 (common-lisp:export
  (common-lisp:list 'unauthorized-client-exception
                    'unauthorized-client-exception-code
                    'unauthorized-client-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition unprocessable-entity-exception
     (chime-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       unprocessable-entity-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       unprocessable-entity-exception-message)))
 (common-lisp:export
  (common-lisp:list 'unprocessable-entity-exception
                    'unprocessable-entity-exception-code
                    'unprocessable-entity-exception-message)))
(common-lisp:progn
 (common-lisp:defclass untag-attendee-request common-lisp:nil
                       ((meeting-id :initarg :meeting-id :initform
                         (common-lisp:error ":meeting-id is required") :type
                         (common-lisp:or guid-string common-lisp:null)
                         :accessor
                         struct-shape-untag-attendee-request-meeting-id :shape
                         "GuidString" :location "uri" :location-name
                         "meetingId")
                        (attendee-id :initarg :attendee-id :initform
                         (common-lisp:error ":attendee-id is required") :type
                         (common-lisp:or guid-string common-lisp:null)
                         :accessor
                         struct-shape-untag-attendee-request-attendee-id :shape
                         "GuidString" :location "uri" :location-name
                         "attendeeId")
                        (tag-keys :initarg :tag-keys :initform
                         (common-lisp:error ":tag-keys is required") :type
                         (common-lisp:or attendee-tag-key-list
                                         common-lisp:null)
                         :accessor struct-shape-untag-attendee-request-tag-keys
                         :shape "AttendeeTagKeyList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-attendee-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-attendee-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-attendee-request 'make-untag-attendee-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-attendee-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-attendee-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "TagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-attendee-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-meeting-request common-lisp:nil
                       ((meeting-id :initarg :meeting-id :initform
                         (common-lisp:error ":meeting-id is required") :type
                         (common-lisp:or guid-string common-lisp:null)
                         :accessor
                         struct-shape-untag-meeting-request-meeting-id :shape
                         "GuidString" :location "uri" :location-name
                         "meetingId")
                        (tag-keys :initarg :tag-keys :initform
                         (common-lisp:error ":tag-keys is required") :type
                         (common-lisp:or meeting-tag-key-list common-lisp:null)
                         :accessor struct-shape-untag-meeting-request-tag-keys
                         :shape "MeetingTagKeyList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-meeting-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-meeting-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-meeting-request 'make-untag-meeting-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-meeting-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-meeting-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "TagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-meeting-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-untag-resource-request-resource-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tag-keys :initarg :tag-keys :initform
                         (common-lisp:error ":tag-keys is required") :type
                         (common-lisp:or tag-key-list common-lisp:null)
                         :accessor struct-shape-untag-resource-request-tag-keys
                         :shape "TagKeyList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "TagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-account-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-update-account-request-account-id :shape
                         "NonEmptyString" :location "uri" :location-name
                         "accountId")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or account-name common-lisp:null)
                         :accessor struct-shape-update-account-request-name
                         :shape "AccountName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (default-license :initarg :default-license :initform
                         common-lisp:nil :type
                         (common-lisp:or license common-lisp:null) :accessor
                         struct-shape-update-account-request-default-license
                         :shape "License" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-account-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-account-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-account-request 'make-update-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-account-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default-license))
      (common-lisp:list
       (common-lisp:cons "DefaultLicense"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-account-response common-lisp:nil
                       ((account :initarg :account :initform common-lisp:nil
                         :type (common-lisp:or account common-lisp:null)
                         :accessor struct-shape-update-account-response-account
                         :shape "Account" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-account-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-account-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-account-response 'make-update-account-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-account-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account))
      (common-lisp:list
       (common-lisp:cons "Account"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-account-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-account-settings-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-update-account-settings-request-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId")
                        (account-settings :initarg :account-settings :initform
                         (common-lisp:error ":account-settings is required")
                         :type
                         (common-lisp:or account-settings common-lisp:null)
                         :accessor
                         struct-shape-update-account-settings-request-account-settings
                         :shape "AccountSettings" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-account-settings-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-account-settings-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-account-settings-request
                    'make-update-account-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-account-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-account-settings-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-settings))
      (common-lisp:list
       (common-lisp:cons "AccountSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-account-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-account-settings-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-account-settings-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-account-settings-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-account-settings-response
                    'make-update-account-settings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-account-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-account-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-account-settings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-app-instance-request common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         (common-lisp:error ":app-instance-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-update-app-instance-request-app-instance-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceArn")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or non-empty-resource-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-app-instance-request-name :shape
                         "NonEmptyResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or metadata common-lisp:null)
                         :accessor
                         struct-shape-update-app-instance-request-metadata
                         :shape "Metadata" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-app-instance-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-app-instance-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-app-instance-request
                    'make-update-app-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-app-instance-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-app-instance-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-app-instance-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-app-instance-response common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-update-app-instance-response-app-instance-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-app-instance-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-app-instance-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-app-instance-response
                    'make-update-app-instance-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-app-instance-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-app-instance-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-app-instance-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-app-instance-user-request common-lisp:nil
                       ((app-instance-user-arn :initarg :app-instance-user-arn
                         :initform
                         (common-lisp:error
                          ":app-instance-user-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-update-app-instance-user-request-app-instance-user-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceUserArn")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or user-name common-lisp:null) :accessor
                         struct-shape-update-app-instance-user-request-name
                         :shape "UserName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or metadata common-lisp:null)
                         :accessor
                         struct-shape-update-app-instance-user-request-metadata
                         :shape "Metadata" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-app-instance-user-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-app-instance-user-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-app-instance-user-request
                    'make-update-app-instance-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-app-instance-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-app-instance-user-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-app-instance-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-app-instance-user-response common-lisp:nil
                       ((app-instance-user-arn :initarg :app-instance-user-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-update-app-instance-user-response-app-instance-user-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-app-instance-user-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-app-instance-user-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-app-instance-user-response
                    'make-update-app-instance-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-app-instance-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-app-instance-user-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-instance-user-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceUserArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-app-instance-user-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-bot-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-update-bot-request-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId")
                        (bot-id :initarg :bot-id :initform
                         (common-lisp:error ":bot-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-update-bot-request-bot-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "botId")
                        (disabled :initarg :disabled :initform common-lisp:nil
                         :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor struct-shape-update-bot-request-disabled
                         :shape "NullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-bot-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-bot-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-bot-request 'make-update-bot-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-bot-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-bot-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disabled))
      (common-lisp:list
       (common-lisp:cons "Disabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-bot-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-bot-response common-lisp:nil
                       ((bot :initarg :bot :initform common-lisp:nil :type
                         (common-lisp:or bot common-lisp:null) :accessor
                         struct-shape-update-bot-response-bot :shape "Bot"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-bot-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-bot-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-bot-response 'make-update-bot-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-bot-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-bot-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bot))
      (common-lisp:list
       (common-lisp:cons "Bot"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-bot-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-channel-message-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-update-channel-message-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (message-id :initarg :message-id :initform
                         (common-lisp:error ":message-id is required") :type
                         (common-lisp:or message-id common-lisp:null) :accessor
                         struct-shape-update-channel-message-request-message-id
                         :shape "MessageId" :location "uri" :location-name
                         "messageId")
                        (content :initarg :content :initform common-lisp:nil
                         :type (common-lisp:or content common-lisp:null)
                         :accessor
                         struct-shape-update-channel-message-request-content
                         :shape "Content" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or metadata common-lisp:null)
                         :accessor
                         struct-shape-update-channel-message-request-metadata
                         :shape "Metadata" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (chime-bearer :initarg :chime-bearer :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-update-channel-message-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-channel-message-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-channel-message-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-channel-message-request
                    'make-update-channel-message-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-message-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-message-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content))
      (common-lisp:list
       (common-lisp:cons "Content"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-message-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-channel-message-response common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-update-channel-message-response-channel-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message-id :initarg :message-id :initform
                         common-lisp:nil :type
                         (common-lisp:or message-id common-lisp:null) :accessor
                         struct-shape-update-channel-message-response-message-id
                         :shape "MessageId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-channel-message-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-channel-message-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-channel-message-response
                    'make-update-channel-message-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-message-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-message-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-id))
      (common-lisp:list
       (common-lisp:cons "MessageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-message-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-channel-read-marker-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-update-channel-read-marker-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (chime-bearer :initarg :chime-bearer :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-update-channel-read-marker-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-channel-read-marker-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-channel-read-marker-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-channel-read-marker-request
                    'make-update-channel-read-marker-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-read-marker-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-read-marker-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-read-marker-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-channel-read-marker-response common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-update-channel-read-marker-response-channel-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-channel-read-marker-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-channel-read-marker-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-channel-read-marker-response
                    'make-update-channel-read-marker-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-read-marker-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-read-marker-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-read-marker-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-channel-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-update-channel-request-channel-arn :shape
                         "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or non-empty-resource-name
                                         common-lisp:null)
                         :accessor struct-shape-update-channel-request-name
                         :shape "NonEmptyResourceName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (mode :initarg :mode :initform
                         (common-lisp:error ":mode is required") :type
                         (common-lisp:or channel-mode common-lisp:null)
                         :accessor struct-shape-update-channel-request-mode
                         :shape "ChannelMode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or metadata common-lisp:null)
                         :accessor struct-shape-update-channel-request-metadata
                         :shape "Metadata" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (chime-bearer :initarg :chime-bearer :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-update-channel-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-channel-request 'make-update-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mode))
      (common-lisp:list
       (common-lisp:cons "Mode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-channel-response common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-update-channel-response-channel-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-channel-response 'make-update-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-global-settings-request common-lisp:nil
                       ((business-calling :initarg :business-calling :initform
                         common-lisp:nil :type
                         (common-lisp:or business-calling-settings
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-global-settings-request-business-calling
                         :shape "BusinessCallingSettings" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (voice-connector :initarg :voice-connector :initform
                         common-lisp:nil :type
                         (common-lisp:or voice-connector-settings
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-global-settings-request-voice-connector
                         :shape "VoiceConnectorSettings" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-global-settings-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-global-settings-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-global-settings-request
                    'make-update-global-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-global-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-global-settings-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'business-calling))
      (common-lisp:list
       (common-lisp:cons "BusinessCalling"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-connector))
      (common-lisp:list
       (common-lisp:cons "VoiceConnector"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-global-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-phone-number-request common-lisp:nil
                       ((phone-number-id :initarg :phone-number-id :initform
                         (common-lisp:error ":phone-number-id is required")
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-update-phone-number-request-phone-number-id
                         :shape "String" :location "uri" :location-name
                         "phoneNumberId")
                        (product-type :initarg :product-type :initform
                         common-lisp:nil :type
                         (common-lisp:or phone-number-product-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-phone-number-request-product-type
                         :shape "PhoneNumberProductType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (calling-name :initarg :calling-name :initform
                         common-lisp:nil :type
                         (common-lisp:or calling-name common-lisp:null)
                         :accessor
                         struct-shape-update-phone-number-request-calling-name
                         :shape "CallingName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-phone-number-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-phone-number-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-phone-number-request
                    'make-update-phone-number-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-phone-number-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-phone-number-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'product-type))
      (common-lisp:list
       (common-lisp:cons "ProductType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'calling-name))
      (common-lisp:list
       (common-lisp:cons "CallingName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-phone-number-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-phone-number-request-item common-lisp:nil
                       ((phone-number-id :initarg :phone-number-id :initform
                         (common-lisp:error ":phone-number-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-update-phone-number-request-item-phone-number-id
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (product-type :initarg :product-type :initform
                         common-lisp:nil :type
                         (common-lisp:or phone-number-product-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-phone-number-request-item-product-type
                         :shape "PhoneNumberProductType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (calling-name :initarg :calling-name :initform
                         common-lisp:nil :type
                         (common-lisp:or calling-name common-lisp:null)
                         :accessor
                         struct-shape-update-phone-number-request-item-calling-name
                         :shape "CallingName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-phone-number-request-item
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-phone-number-request-item
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-phone-number-request-item
                    'make-update-phone-number-request-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-phone-number-request-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-phone-number-request-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number-id))
      (common-lisp:list
       (common-lisp:cons "PhoneNumberId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'product-type))
      (common-lisp:list
       (common-lisp:cons "ProductType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'calling-name))
      (common-lisp:list
       (common-lisp:cons "CallingName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-phone-number-request-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype update-phone-number-request-item-list ()
   '(trivial-types:proper-list update-phone-number-request-item))
 (common-lisp:defun make-update-phone-number-request-item-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            update-phone-number-request-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass update-phone-number-response common-lisp:nil
                       ((phone-number :initarg :phone-number :initform
                         common-lisp:nil :type
                         (common-lisp:or phone-number common-lisp:null)
                         :accessor
                         struct-shape-update-phone-number-response-phone-number
                         :shape "PhoneNumber" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-phone-number-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-phone-number-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-phone-number-response
                    'make-update-phone-number-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-phone-number-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-phone-number-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number))
      (common-lisp:list
       (common-lisp:cons "PhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-phone-number-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-phone-number-settings-request common-lisp:nil
                       ((calling-name :initarg :calling-name :initform
                         (common-lisp:error ":calling-name is required") :type
                         (common-lisp:or calling-name common-lisp:null)
                         :accessor
                         struct-shape-update-phone-number-settings-request-calling-name
                         :shape "CallingName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-phone-number-settings-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-phone-number-settings-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-phone-number-settings-request
                    'make-update-phone-number-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-phone-number-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-phone-number-settings-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'calling-name))
      (common-lisp:list
       (common-lisp:cons "CallingName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-phone-number-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-proxy-session-request common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string128 common-lisp:null)
                         :accessor
                         struct-shape-update-proxy-session-request-voice-connector-id
                         :shape "NonEmptyString128" :location "uri"
                         :location-name "voiceConnectorId")
                        (proxy-session-id :initarg :proxy-session-id :initform
                         (common-lisp:error ":proxy-session-id is required")
                         :type
                         (common-lisp:or non-empty-string128 common-lisp:null)
                         :accessor
                         struct-shape-update-proxy-session-request-proxy-session-id
                         :shape "NonEmptyString128" :location "uri"
                         :location-name "proxySessionId")
                        (capabilities :initarg :capabilities :initform
                         (common-lisp:error ":capabilities is required") :type
                         (common-lisp:or capability-list common-lisp:null)
                         :accessor
                         struct-shape-update-proxy-session-request-capabilities
                         :shape "CapabilityList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (expiry-minutes :initarg :expiry-minutes :initform
                         common-lisp:nil :type
                         (common-lisp:or positive-integer common-lisp:null)
                         :accessor
                         struct-shape-update-proxy-session-request-expiry-minutes
                         :shape "PositiveInteger" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-proxy-session-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-proxy-session-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-proxy-session-request
                    'make-update-proxy-session-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-proxy-session-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-proxy-session-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'capabilities))
      (common-lisp:list
       (common-lisp:cons "Capabilities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiry-minutes))
      (common-lisp:list
       (common-lisp:cons "ExpiryMinutes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-proxy-session-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-proxy-session-response common-lisp:nil
                       ((proxy-session :initarg :proxy-session :initform
                         common-lisp:nil :type
                         (common-lisp:or proxy-session common-lisp:null)
                         :accessor
                         struct-shape-update-proxy-session-response-proxy-session
                         :shape "ProxySession" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-proxy-session-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-proxy-session-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-proxy-session-response
                    'make-update-proxy-session-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-proxy-session-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-proxy-session-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proxy-session))
      (common-lisp:list
       (common-lisp:cons "ProxySession"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-proxy-session-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-room-membership-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-update-room-membership-request-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId")
                        (room-id :initarg :room-id :initform
                         (common-lisp:error ":room-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-update-room-membership-request-room-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "roomId")
                        (member-id :initarg :member-id :initform
                         (common-lisp:error ":member-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-update-room-membership-request-member-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "memberId")
                        (role :initarg :role :initform common-lisp:nil :type
                         (common-lisp:or room-membership-role common-lisp:null)
                         :accessor
                         struct-shape-update-room-membership-request-role
                         :shape "RoomMembershipRole" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-room-membership-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-room-membership-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-room-membership-request
                    'make-update-room-membership-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-room-membership-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-room-membership-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role))
      (common-lisp:list
       (common-lisp:cons "Role"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-room-membership-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-room-membership-response common-lisp:nil
                       ((room-membership :initarg :room-membership :initform
                         common-lisp:nil :type
                         (common-lisp:or room-membership common-lisp:null)
                         :accessor
                         struct-shape-update-room-membership-response-room-membership
                         :shape "RoomMembership" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-room-membership-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-room-membership-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-room-membership-response
                    'make-update-room-membership-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-room-membership-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-room-membership-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'room-membership))
      (common-lisp:list
       (common-lisp:cons "RoomMembership"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-room-membership-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-room-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-update-room-request-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId")
                        (room-id :initarg :room-id :initform
                         (common-lisp:error ":room-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-update-room-request-room-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "roomId")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or sensitive-string common-lisp:null)
                         :accessor struct-shape-update-room-request-name :shape
                         "SensitiveString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-room-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-room-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-room-request 'make-update-room-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-room-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-room-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-room-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-room-response common-lisp:nil
                       ((room :initarg :room :initform common-lisp:nil :type
                         (common-lisp:or room common-lisp:null) :accessor
                         struct-shape-update-room-response-room :shape "Room"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-room-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-room-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-room-response 'make-update-room-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-room-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-room-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'room))
      (common-lisp:list
       (common-lisp:cons "Room"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-room-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-sip-media-application-call-request
                       common-lisp:nil
                       ((sip-media-application-id :initarg
                         :sip-media-application-id :initform
                         (common-lisp:error
                          ":sip-media-application-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-update-sip-media-application-call-request-sip-media-application-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "sipMediaApplicationId")
                        (transaction-id :initarg :transaction-id :initform
                         (common-lisp:error ":transaction-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-update-sip-media-application-call-request-transaction-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "transactionId")
                        (arguments :initarg :arguments :initform
                         (common-lisp:error ":arguments is required") :type
                         (common-lisp:or smaupdate-call-arguments-map
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-sip-media-application-call-request-arguments
                         :shape "SMAUpdateCallArgumentsMap" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-sip-media-application-call-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-sip-media-application-call-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-sip-media-application-call-request
                    'make-update-sip-media-application-call-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-media-application-call-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-media-application-call-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arguments))
      (common-lisp:list
       (common-lisp:cons "Arguments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-media-application-call-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-sip-media-application-call-response
                       common-lisp:nil
                       ((sip-media-application-call :initarg
                         :sip-media-application-call :initform common-lisp:nil
                         :type
                         (common-lisp:or sip-media-application-call
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-sip-media-application-call-response-sip-media-application-call
                         :shape "SipMediaApplicationCall" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-sip-media-application-call-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-sip-media-application-call-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-sip-media-application-call-response
                    'make-update-sip-media-application-call-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-media-application-call-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-media-application-call-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application-call))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplicationCall"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-media-application-call-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-sip-media-application-request common-lisp:nil
                       ((sip-media-application-id :initarg
                         :sip-media-application-id :initform
                         (common-lisp:error
                          ":sip-media-application-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-update-sip-media-application-request-sip-media-application-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "sipMediaApplicationId")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or sip-media-application-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-sip-media-application-request-name
                         :shape "SipMediaApplicationName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (endpoints :initarg :endpoints :initform
                         common-lisp:nil :type
                         (common-lisp:or sip-media-application-endpoint-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-sip-media-application-request-endpoints
                         :shape "SipMediaApplicationEndpointList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-sip-media-application-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-sip-media-application-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-sip-media-application-request
                    'make-update-sip-media-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-media-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-media-application-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoints))
      (common-lisp:list
       (common-lisp:cons "Endpoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-media-application-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-sip-media-application-response common-lisp:nil
                       ((sip-media-application :initarg :sip-media-application
                         :initform common-lisp:nil :type
                         (common-lisp:or sip-media-application
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-sip-media-application-response-sip-media-application
                         :shape "SipMediaApplication" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-sip-media-application-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-sip-media-application-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-sip-media-application-response
                    'make-update-sip-media-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-media-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-media-application-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sip-media-application))
      (common-lisp:list
       (common-lisp:cons "SipMediaApplication"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-media-application-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-sip-rule-request common-lisp:nil
                       ((sip-rule-id :initarg :sip-rule-id :initform
                         (common-lisp:error ":sip-rule-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-update-sip-rule-request-sip-rule-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "sipRuleId")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or sip-rule-name common-lisp:null)
                         :accessor struct-shape-update-sip-rule-request-name
                         :shape "SipRuleName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (disabled :initarg :disabled :initform common-lisp:nil
                         :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor
                         struct-shape-update-sip-rule-request-disabled :shape
                         "NullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (target-applications :initarg :target-applications
                         :initform common-lisp:nil :type
                         (common-lisp:or sip-rule-target-application-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-sip-rule-request-target-applications
                         :shape "SipRuleTargetApplicationList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-sip-rule-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-sip-rule-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-sip-rule-request 'make-update-sip-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-rule-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disabled))
      (common-lisp:list
       (common-lisp:cons "Disabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-applications))
      (common-lisp:list
       (common-lisp:cons "TargetApplications"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-rule-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-sip-rule-response common-lisp:nil
                       ((sip-rule :initarg :sip-rule :initform common-lisp:nil
                         :type (common-lisp:or sip-rule common-lisp:null)
                         :accessor
                         struct-shape-update-sip-rule-response-sip-rule :shape
                         "SipRule" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-sip-rule-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-sip-rule-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-sip-rule-response 'make-update-sip-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-rule-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-rule-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sip-rule))
      (common-lisp:list
       (common-lisp:cons "SipRule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-sip-rule-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-user-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-update-user-request-account-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "accountId")
                        (user-id :initarg :user-id :initform
                         (common-lisp:error ":user-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-update-user-request-user-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "userId")
                        (license-type :initarg :license-type :initform
                         common-lisp:nil :type
                         (common-lisp:or license common-lisp:null) :accessor
                         struct-shape-update-user-request-license-type :shape
                         "License" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (user-type :initarg :user-type :initform
                         common-lisp:nil :type
                         (common-lisp:or user-type common-lisp:null) :accessor
                         struct-shape-update-user-request-user-type :shape
                         "UserType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (alexa-for-business-metadata :initarg
                         :alexa-for-business-metadata :initform common-lisp:nil
                         :type
                         (common-lisp:or alexa-for-business-metadata
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-user-request-alexa-for-business-metadata
                         :shape "AlexaForBusinessMetadata" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-user-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-user-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-user-request 'make-update-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-user-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'license-type))
      (common-lisp:list
       (common-lisp:cons "LicenseType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-type))
      (common-lisp:list
       (common-lisp:cons "UserType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'alexa-for-business-metadata))
      (common-lisp:list
       (common-lisp:cons "AlexaForBusinessMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-user-request-item common-lisp:nil
                       ((user-id :initarg :user-id :initform
                         (common-lisp:error ":user-id is required") :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-update-user-request-item-user-id :shape
                         "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (license-type :initarg :license-type :initform
                         common-lisp:nil :type
                         (common-lisp:or license common-lisp:null) :accessor
                         struct-shape-update-user-request-item-license-type
                         :shape "License" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (user-type :initarg :user-type :initform
                         common-lisp:nil :type
                         (common-lisp:or user-type common-lisp:null) :accessor
                         struct-shape-update-user-request-item-user-type :shape
                         "UserType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (alexa-for-business-metadata :initarg
                         :alexa-for-business-metadata :initform common-lisp:nil
                         :type
                         (common-lisp:or alexa-for-business-metadata
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-user-request-item-alexa-for-business-metadata
                         :shape "AlexaForBusinessMetadata" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-user-request-item
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-user-request-item
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-user-request-item 'make-update-user-request-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-user-request-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-user-request-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-id))
      (common-lisp:list
       (common-lisp:cons "UserId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'license-type))
      (common-lisp:list
       (common-lisp:cons "LicenseType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-type))
      (common-lisp:list
       (common-lisp:cons "UserType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'alexa-for-business-metadata))
      (common-lisp:list
       (common-lisp:cons "AlexaForBusinessMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-user-request-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype update-user-request-item-list ()
   '(trivial-types:proper-list update-user-request-item))
 (common-lisp:defun make-update-user-request-item-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            update-user-request-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass update-user-response common-lisp:nil
                       ((user :initarg :user :initform common-lisp:nil :type
                         (common-lisp:or user common-lisp:null) :accessor
                         struct-shape-update-user-response-user :shape "User"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-user-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-user-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-user-response 'make-update-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-user-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user))
      (common-lisp:list
       (common-lisp:cons "User"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-user-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-user-settings-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":account-id is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-user-settings-request-account-id
                         :shape "String" :location "uri" :location-name
                         "accountId")
                        (user-id :initarg :user-id :initform
                         (common-lisp:error ":user-id is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-user-settings-request-user-id
                         :shape "String" :location "uri" :location-name
                         "userId")
                        (user-settings :initarg :user-settings :initform
                         (common-lisp:error ":user-settings is required") :type
                         (common-lisp:or user-settings common-lisp:null)
                         :accessor
                         struct-shape-update-user-settings-request-user-settings
                         :shape "UserSettings" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-user-settings-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-user-settings-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-user-settings-request
                    'make-update-user-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-user-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-user-settings-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-settings))
      (common-lisp:list
       (common-lisp:cons "UserSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-user-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-voice-connector-group-request common-lisp:nil
                       ((voice-connector-group-id :initarg
                         :voice-connector-group-id :initform
                         (common-lisp:error
                          ":voice-connector-group-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-update-voice-connector-group-request-voice-connector-group-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorGroupId")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or voice-connector-group-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-voice-connector-group-request-name
                         :shape "VoiceConnectorGroupName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (voice-connector-items :initarg :voice-connector-items
                         :initform
                         (common-lisp:error
                          ":voice-connector-items is required")
                         :type
                         (common-lisp:or voice-connector-item-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-voice-connector-group-request-voice-connector-items
                         :shape "VoiceConnectorItemList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-voice-connector-group-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-voice-connector-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-voice-connector-group-request
                    'make-update-voice-connector-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-connector-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-connector-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-connector-items))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorItems"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-connector-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-voice-connector-group-response common-lisp:nil
                       ((voice-connector-group :initarg :voice-connector-group
                         :initform common-lisp:nil :type
                         (common-lisp:or voice-connector-group
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-voice-connector-group-response-voice-connector-group
                         :shape "VoiceConnectorGroup" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-voice-connector-group-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-voice-connector-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-voice-connector-group-response
                    'make-update-voice-connector-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-connector-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-connector-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-connector-group))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-connector-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-voice-connector-request common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-update-voice-connector-request-voice-connector-id
                         :shape "NonEmptyString" :location "uri" :location-name
                         "voiceConnectorId")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or voice-connector-name common-lisp:null)
                         :accessor
                         struct-shape-update-voice-connector-request-name
                         :shape "VoiceConnectorName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (require-encryption :initarg :require-encryption
                         :initform
                         (common-lisp:error ":require-encryption is required")
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         struct-shape-update-voice-connector-request-require-encryption
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-voice-connector-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-voice-connector-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-voice-connector-request
                    'make-update-voice-connector-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-connector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-connector-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'require-encryption))
      (common-lisp:list
       (common-lisp:cons "RequireEncryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-connector-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-voice-connector-response common-lisp:nil
                       ((voice-connector :initarg :voice-connector :initform
                         common-lisp:nil :type
                         (common-lisp:or voice-connector common-lisp:null)
                         :accessor
                         struct-shape-update-voice-connector-response-voice-connector
                         :shape "VoiceConnector" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-voice-connector-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-voice-connector-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-voice-connector-response
                    'make-update-voice-connector-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-connector-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-connector-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-connector))
      (common-lisp:list
       (common-lisp:cons "VoiceConnector"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-connector-response))
   common-lisp:nil))
(common-lisp:deftype uri-type () 'common-lisp:string)
(common-lisp:deftype url-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass user common-lisp:nil
                       ((user-id :initarg :user-id :initform
                         (common-lisp:error ":user-id is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-user-user-id :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-user-account-id :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (primary-email :initarg :primary-email :initform
                         common-lisp:nil :type
                         (common-lisp:or email-address common-lisp:null)
                         :accessor struct-shape-user-primary-email :shape
                         "EmailAddress" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (primary-provisioned-number :initarg
                         :primary-provisioned-number :initform common-lisp:nil
                         :type
                         (common-lisp:or sensitive-string common-lisp:null)
                         :accessor struct-shape-user-primary-provisioned-number
                         :shape "SensitiveString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (display-name :initarg :display-name :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitive-string common-lisp:null)
                         :accessor struct-shape-user-display-name :shape
                         "SensitiveString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (license-type :initarg :license-type :initform
                         common-lisp:nil :type
                         (common-lisp:or license common-lisp:null) :accessor
                         struct-shape-user-license-type :shape "License"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (user-type :initarg :user-type :initform
                         common-lisp:nil :type
                         (common-lisp:or user-type common-lisp:null) :accessor
                         struct-shape-user-user-type :shape "UserType"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (user-registration-status :initarg
                         :user-registration-status :initform common-lisp:nil
                         :type
                         (common-lisp:or registration-status common-lisp:null)
                         :accessor struct-shape-user-user-registration-status
                         :shape "RegistrationStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (user-invitation-status :initarg
                         :user-invitation-status :initform common-lisp:nil
                         :type (common-lisp:or invite-status common-lisp:null)
                         :accessor struct-shape-user-user-invitation-status
                         :shape "InviteStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (registered-on :initarg :registered-on :initform
                         common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-user-registered-on :shape
                         "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (invited-on :initarg :invited-on :initform
                         common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-user-invited-on :shape
                         "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (alexa-for-business-metadata :initarg
                         :alexa-for-business-metadata :initform common-lisp:nil
                         :type
                         (common-lisp:or alexa-for-business-metadata
                                         common-lisp:null)
                         :accessor
                         struct-shape-user-alexa-for-business-metadata :shape
                         "AlexaForBusinessMetadata" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (personal-pin :initarg :personal-pin :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-user-personal-pin :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-user (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'user
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'user 'make-user))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input user))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input user))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-id))
      (common-lisp:list
       (common-lisp:cons "UserId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'primary-email))
      (common-lisp:list
       (common-lisp:cons "PrimaryEmail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'primary-provisioned-number))
      (common-lisp:list
       (common-lisp:cons "PrimaryProvisionedNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'display-name))
      (common-lisp:list
       (common-lisp:cons "DisplayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'license-type))
      (common-lisp:list
       (common-lisp:cons "LicenseType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-type))
      (common-lisp:list
       (common-lisp:cons "UserType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'user-registration-status))
      (common-lisp:list
       (common-lisp:cons "UserRegistrationStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'user-invitation-status))
      (common-lisp:list
       (common-lisp:cons "UserInvitationStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'registered-on))
      (common-lisp:list
       (common-lisp:cons "RegisteredOn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'invited-on))
      (common-lisp:list
       (common-lisp:cons "InvitedOn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'alexa-for-business-metadata))
      (common-lisp:list
       (common-lisp:cons "AlexaForBusinessMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'personal-pin))
      (common-lisp:list
       (common-lisp:cons "PersonalPIN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input user))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype user-email-list ()
   '(trivial-types:proper-list email-address))
 (common-lisp:defun make-user-email-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list email-address))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass user-error common-lisp:nil
                       ((user-id :initarg :user-id :initform common-lisp:nil
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-user-error-user-id :shape
                         "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (error-code :initarg :error-code :initform
                         common-lisp:nil :type
                         (common-lisp:or error-code common-lisp:null) :accessor
                         struct-shape-user-error-error-code :shape "ErrorCode"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (error-message :initarg :error-message :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-user-error-error-message :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-user-error
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'user-error
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'user-error 'make-user-error))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input user-error))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input user-error))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-id))
      (common-lisp:list
       (common-lisp:cons "UserId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "ErrorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "ErrorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input user-error))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype user-error-list ()
   '(trivial-types:proper-list user-error))
 (common-lisp:defun make-user-error-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list user-error))
   aws-sdk/generator/shape::members))
(common-lisp:deftype user-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype user-id-list ()
   '(trivial-types:proper-list non-empty-string))
 (common-lisp:defun make-user-id-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list non-empty-string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype user-list () '(trivial-types:proper-list user))
 (common-lisp:defun make-user-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list user))
   aws-sdk/generator/shape::members))
(common-lisp:deftype user-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass user-settings common-lisp:nil
                       ((telephony :initarg :telephony :initform
                         (common-lisp:error ":telephony is required") :type
                         (common-lisp:or telephony-settings common-lisp:null)
                         :accessor struct-shape-user-settings-telephony :shape
                         "TelephonySettings" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-user-settings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'user-settings
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'user-settings 'make-user-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input user-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input user-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'telephony))
      (common-lisp:list
       (common-lisp:cons "Telephony"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input user-settings))
   common-lisp:nil))
(common-lisp:deftype user-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass validate-e911address-request common-lisp:nil
                       ((aws-account-id :initarg :aws-account-id :initform
                         (common-lisp:error ":aws-account-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-validate-e911address-request-aws-account-id
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (street-number :initarg :street-number :initform
                         (common-lisp:error ":street-number is required") :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-validate-e911address-request-street-number
                         :shape "SensitiveNonEmptyString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (street-info :initarg :street-info :initform
                         (common-lisp:error ":street-info is required") :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-validate-e911address-request-street-info
                         :shape "SensitiveNonEmptyString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (city :initarg :city :initform
                         (common-lisp:error ":city is required") :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-validate-e911address-request-city :shape
                         "SensitiveNonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform
                         (common-lisp:error ":state is required") :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-validate-e911address-request-state :shape
                         "SensitiveNonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (country :initarg :country :initform
                         (common-lisp:error ":country is required") :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-validate-e911address-request-country
                         :shape "SensitiveNonEmptyString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (postal-code :initarg :postal-code :initform
                         (common-lisp:error ":postal-code is required") :type
                         (common-lisp:or sensitive-non-empty-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-validate-e911address-request-postal-code
                         :shape "SensitiveNonEmptyString" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-validate-e911address-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'validate-e911address-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'validate-e911address-request
                    'make-validate-e911address-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          validate-e911address-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          validate-e911address-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-account-id))
      (common-lisp:list
       (common-lisp:cons "AwsAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'street-number))
      (common-lisp:list
       (common-lisp:cons "StreetNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'street-info))
      (common-lisp:list
       (common-lisp:cons "StreetInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'city))
      (common-lisp:list
       (common-lisp:cons "City"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'country))
      (common-lisp:list
       (common-lisp:cons "Country"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'postal-code))
      (common-lisp:list
       (common-lisp:cons "PostalCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          validate-e911address-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass validate-e911address-response common-lisp:nil
                       ((validation-result :initarg :validation-result
                         :initform common-lisp:nil :type
                         (common-lisp:or validation-result common-lisp:null)
                         :accessor
                         struct-shape-validate-e911address-response-validation-result
                         :shape "ValidationResult" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (address-external-id :initarg :address-external-id
                         :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-validate-e911address-response-address-external-id
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (address :initarg :address :initform common-lisp:nil
                         :type (common-lisp:or address common-lisp:null)
                         :accessor
                         struct-shape-validate-e911address-response-address
                         :shape "Address" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (candidate-address-list :initarg
                         :candidate-address-list :initform common-lisp:nil
                         :type
                         (common-lisp:or candidate-address-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-validate-e911address-response-candidate-address-list
                         :shape "CandidateAddressList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-validate-e911address-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'validate-e911address-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'validate-e911address-response
                    'make-validate-e911address-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          validate-e911address-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          validate-e911address-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'validation-result))
      (common-lisp:list
       (common-lisp:cons "ValidationResult"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'address-external-id))
      (common-lisp:list
       (common-lisp:cons "AddressExternalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'address))
      (common-lisp:list
       (common-lisp:cons "Address"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'candidate-address-list))
      (common-lisp:list
       (common-lisp:cons "CandidateAddressList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          validate-e911address-response))
   common-lisp:nil))
(common-lisp:deftype validation-result () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass video-artifacts-configuration common-lisp:nil
                       ((state :initarg :state :initform
                         (common-lisp:error ":state is required") :type
                         (common-lisp:or artifacts-state common-lisp:null)
                         :accessor
                         struct-shape-video-artifacts-configuration-state
                         :shape "ArtifactsState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (mux-type :initarg :mux-type :initform common-lisp:nil
                         :type (common-lisp:or video-mux-type common-lisp:null)
                         :accessor
                         struct-shape-video-artifacts-configuration-mux-type
                         :shape "VideoMuxType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-video-artifacts-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'video-artifacts-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'video-artifacts-configuration
                    'make-video-artifacts-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          video-artifacts-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          video-artifacts-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mux-type))
      (common-lisp:list
       (common-lisp:cons "MuxType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          video-artifacts-configuration))
   common-lisp:nil))
(common-lisp:deftype video-mux-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass voice-connector common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-voice-connector-voice-connector-id :shape
                         "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (aws-region :initarg :aws-region :initform
                         common-lisp:nil :type
                         (common-lisp:or voice-connector-aws-region
                                         common-lisp:null)
                         :accessor struct-shape-voice-connector-aws-region
                         :shape "VoiceConnectorAwsRegion" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or voice-connector-name common-lisp:null)
                         :accessor struct-shape-voice-connector-name :shape
                         "VoiceConnectorName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (outbound-host-name :initarg :outbound-host-name
                         :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-voice-connector-outbound-host-name :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (require-encryption :initarg :require-encryption
                         :initform common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-voice-connector-require-encryption :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-voice-connector-created-timestamp :shape
                         "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-timestamp :initarg :updated-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-voice-connector-updated-timestamp :shape
                         "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (voice-connector-arn :initarg :voice-connector-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-voice-connector-voice-connector-arn
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-voice-connector
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'voice-connector
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'voice-connector 'make-voice-connector))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input voice-connector))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input voice-connector))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-connector-id))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-region))
      (common-lisp:list
       (common-lisp:cons "AwsRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outbound-host-name))
      (common-lisp:list
       (common-lisp:cons "OutboundHostName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'require-encryption))
      (common-lisp:list
       (common-lisp:cons "RequireEncryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-connector-arn))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input voice-connector))
   common-lisp:nil))
(common-lisp:deftype voice-connector-aws-region () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass voice-connector-group common-lisp:nil
                       ((voice-connector-group-id :initarg
                         :voice-connector-group-id :initform common-lisp:nil
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-voice-connector-group-voice-connector-group-id
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or voice-connector-group-name
                                         common-lisp:null)
                         :accessor struct-shape-voice-connector-group-name
                         :shape "VoiceConnectorGroupName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (voice-connector-items :initarg :voice-connector-items
                         :initform common-lisp:nil :type
                         (common-lisp:or voice-connector-item-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-voice-connector-group-voice-connector-items
                         :shape "VoiceConnectorItemList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-voice-connector-group-created-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-timestamp :initarg :updated-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor
                         struct-shape-voice-connector-group-updated-timestamp
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (voice-connector-group-arn :initarg
                         :voice-connector-group-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-voice-connector-group-voice-connector-group-arn
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-voice-connector-group
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'voice-connector-group
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'voice-connector-group 'make-voice-connector-group))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          voice-connector-group))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          voice-connector-group))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-connector-group-id))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-connector-items))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorItems"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "UpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-connector-group-arn))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          voice-connector-group))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype voice-connector-group-list ()
   '(trivial-types:proper-list voice-connector-group))
 (common-lisp:defun make-voice-connector-group-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list voice-connector-group))
   aws-sdk/generator/shape::members))
(common-lisp:deftype voice-connector-group-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass voice-connector-item common-lisp:nil
                       ((voice-connector-id :initarg :voice-connector-id
                         :initform
                         (common-lisp:error ":voice-connector-id is required")
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-voice-connector-item-voice-connector-id
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (priority :initarg :priority :initform
                         (common-lisp:error ":priority is required") :type
                         (common-lisp:or voice-connector-item-priority
                                         common-lisp:null)
                         :accessor struct-shape-voice-connector-item-priority
                         :shape "VoiceConnectorItemPriority" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-voice-connector-item
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'voice-connector-item
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'voice-connector-item 'make-voice-connector-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input voice-connector-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input voice-connector-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-connector-id))
      (common-lisp:list
       (common-lisp:cons "VoiceConnectorId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'priority))
      (common-lisp:list
       (common-lisp:cons "Priority"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input voice-connector-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype voice-connector-item-list ()
   '(trivial-types:proper-list voice-connector-item))
 (common-lisp:defun make-voice-connector-item-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list voice-connector-item))
   aws-sdk/generator/shape::members))
(common-lisp:deftype voice-connector-item-priority () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype voice-connector-list ()
   '(trivial-types:proper-list voice-connector))
 (common-lisp:defun make-voice-connector-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list voice-connector))
   aws-sdk/generator/shape::members))
(common-lisp:deftype voice-connector-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass voice-connector-settings common-lisp:nil
                       ((cdr-bucket :initarg :cdr-bucket :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-voice-connector-settings-cdr-bucket
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-voice-connector-settings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'voice-connector-settings
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'voice-connector-settings 'make-voice-connector-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          voice-connector-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          voice-connector-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cdr-bucket))
      (common-lisp:list
       (common-lisp:cons "CdrBucket"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          voice-connector-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defun associate-phone-number-with-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id user-id e164phone-number)
   (common-lisp:declare
    (common-lisp:ignorable account-id user-id e164phone-number))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-associate-phone-number-with-user-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/users/~A?operation=associate-phone-number"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'user-id))))
                                                        "AssociatePhoneNumberWithUser"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'associate-phone-number-with-user))
(common-lisp:progn
 (common-lisp:defun associate-phone-numbers-with-voice-connector
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id e164phone-numbers
                     force-associate)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id e164phone-numbers
     force-associate))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-associate-phone-numbers-with-voice-connector-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/voice-connectors/~A?operation=associate-phone-numbers"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'voice-connector-id))))
                                                        "AssociatePhoneNumbersWithVoiceConnector"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'associate-phone-numbers-with-voice-connector))
(common-lisp:progn
 (common-lisp:defun associate-phone-numbers-with-voice-connector-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-group-id
                     e164phone-numbers force-associate)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-group-id e164phone-numbers
     force-associate))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-associate-phone-numbers-with-voice-connector-group-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/voice-connector-groups/~A?operation=associate-phone-numbers"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'voice-connector-group-id))))
                                                        "AssociatePhoneNumbersWithVoiceConnectorGroup"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'associate-phone-numbers-with-voice-connector-group))
(common-lisp:progn
 (common-lisp:defun associate-signin-delegate-groups-with-account
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id signin-delegate-groups)
   (common-lisp:declare
    (common-lisp:ignorable account-id signin-delegate-groups))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-associate-signin-delegate-groups-with-account-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A?operation=associate-signin-delegate-groups"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))))
                                                        "AssociateSigninDelegateGroupsWithAccount"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'associate-signin-delegate-groups-with-account))
(common-lisp:progn
 (common-lisp:defun batch-create-attendee
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key meeting-id attendees)
   (common-lisp:declare (common-lisp:ignorable meeting-id attendees))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-create-attendee-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/meetings/~A/attendees?operation=batch-create"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'meeting-id))))
                                                        "BatchCreateAttendee"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'batch-create-attendee))
(common-lisp:progn
 (common-lisp:defun batch-create-channel-membership
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn type member-arns
                     chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn type member-arns chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-batch-create-channel-membership-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channels/~A/memberships?operation=batch-create"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-arn))))
                                                        "BatchCreateChannelMembership"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'batch-create-channel-membership))
(common-lisp:progn
 (common-lisp:defun batch-create-room-membership
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id room-id membership-item-list)
   (common-lisp:declare
    (common-lisp:ignorable account-id room-id membership-item-list))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-batch-create-room-membership-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/rooms/~A/memberships?operation=batch-create"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'room-id))))
                                                        "BatchCreateRoomMembership"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'batch-create-room-membership))
(common-lisp:progn
 (common-lisp:defun batch-delete-phone-number
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key phone-number-ids)
   (common-lisp:declare (common-lisp:ignorable phone-number-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-batch-delete-phone-number-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/phone-numbers?operation=batch-delete"
                                                        "BatchDeletePhoneNumber"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'batch-delete-phone-number))
(common-lisp:progn
 (common-lisp:defun batch-suspend-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id user-id-list)
   (common-lisp:declare (common-lisp:ignorable account-id user-id-list))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-suspend-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/users?operation=suspend"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))))
                                                        "BatchSuspendUser"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'batch-suspend-user))
(common-lisp:progn
 (common-lisp:defun batch-unsuspend-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id user-id-list)
   (common-lisp:declare (common-lisp:ignorable account-id user-id-list))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-unsuspend-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/users?operation=unsuspend"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))))
                                                        "BatchUnsuspendUser"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'batch-unsuspend-user))
(common-lisp:progn
 (common-lisp:defun batch-update-phone-number
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key update-phone-number-request-items)
   (common-lisp:declare
    (common-lisp:ignorable update-phone-number-request-items))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-batch-update-phone-number-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/phone-numbers?operation=batch-update"
                                                        "BatchUpdatePhoneNumber"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'batch-update-phone-number))
(common-lisp:progn
 (common-lisp:defun batch-update-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id update-user-request-items)
   (common-lisp:declare
    (common-lisp:ignorable account-id update-user-request-items))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-update-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/users"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))))
                                                        "BatchUpdateUser"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'batch-update-user))
(common-lisp:progn
 (common-lisp:defun create-account
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-account-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/accounts"
                                                        "CreateAccount"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-account))
(common-lisp:progn
 (common-lisp:defun create-app-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name metadata client-request-token tags)
   (common-lisp:declare
    (common-lisp:ignorable name metadata client-request-token tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-app-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/app-instances"
                                                        "CreateAppInstance"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-app-instance))
(common-lisp:progn
 (common-lisp:defun create-app-instance-admin
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-admin-arn app-instance-arn)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-admin-arn app-instance-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-app-instance-admin-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/app-instances/~A/admins"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-instance-arn))))
                                                        "CreateAppInstanceAdmin"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-app-instance-admin))
(common-lisp:progn
 (common-lisp:defun create-app-instance-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-arn app-instance-user-id
                     name metadata client-request-token tags)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-arn app-instance-user-id name metadata
     client-request-token tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-app-instance-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/app-instance-users"
                                                        "CreateAppInstanceUser"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-app-instance-user))
(common-lisp:progn
 (common-lisp:defun create-attendee
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key meeting-id external-user-id tags)
   (common-lisp:declare
    (common-lisp:ignorable meeting-id external-user-id tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-attendee-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/meetings/~A/attendees"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'meeting-id))))
                                                        "CreateAttendee"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-attendee))
(common-lisp:progn
 (common-lisp:defun create-bot
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id display-name domain)
   (common-lisp:declare (common-lisp:ignorable account-id display-name domain))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-bot-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/bots"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))))
                                                        "CreateBot"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-bot))
(common-lisp:progn
 (common-lisp:defun create-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-arn name mode privacy
                     metadata client-request-token tags chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-arn name mode privacy metadata
     client-request-token tags chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/channels"
                                                        "CreateChannel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-channel))
(common-lisp:progn
 (common-lisp:defun create-channel-ban
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn member-arn chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn member-arn chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-channel-ban-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channels/~A/bans"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-arn))))
                                                        "CreateChannelBan"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-channel-ban))
(common-lisp:progn
 (common-lisp:defun create-channel-membership
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn member-arn type chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn member-arn type chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-channel-membership-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channels/~A/memberships"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-arn))))
                                                        "CreateChannelMembership"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-channel-membership))
(common-lisp:progn
 (common-lisp:defun create-channel-moderator
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn channel-moderator-arn
                     chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn channel-moderator-arn chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-channel-moderator-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channels/~A/moderators"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-arn))))
                                                        "CreateChannelModerator"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-channel-moderator))
(common-lisp:progn
 (common-lisp:defun create-media-capture-pipeline
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key source-type source-arn sink-type sink-arn
                     client-request-token chime-sdk-meeting-configuration)
   (common-lisp:declare
    (common-lisp:ignorable source-type source-arn sink-type sink-arn
     client-request-token chime-sdk-meeting-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-media-capture-pipeline-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/media-capture-pipelines"
                                                        "CreateMediaCapturePipeline"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-media-capture-pipeline))
(common-lisp:progn
 (common-lisp:defun create-meeting
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-request-token external-meeting-id
                     meeting-host-id media-region tags
                     notifications-configuration)
   (common-lisp:declare
    (common-lisp:ignorable client-request-token external-meeting-id
     meeting-host-id media-region tags notifications-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-meeting-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/meetings"
                                                        "CreateMeeting"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-meeting))
(common-lisp:progn
 (common-lisp:defun create-meeting-dial-out
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key meeting-id from-phone-number
                     to-phone-number join-token)
   (common-lisp:declare
    (common-lisp:ignorable meeting-id from-phone-number to-phone-number
     join-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-meeting-dial-out-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/meetings/~A/dial-outs"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'meeting-id))))
                                                        "CreateMeetingDialOut"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-meeting-dial-out))
(common-lisp:progn
 (common-lisp:defun create-meeting-with-attendees
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-request-token external-meeting-id
                     meeting-host-id media-region tags
                     notifications-configuration attendees)
   (common-lisp:declare
    (common-lisp:ignorable client-request-token external-meeting-id
     meeting-host-id media-region tags notifications-configuration attendees))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-meeting-with-attendees-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/meetings?operation=create-attendees"
                                                        "CreateMeetingWithAttendees"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-meeting-with-attendees))
(common-lisp:progn
 (common-lisp:defun create-phone-number-order
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key product-type e164phone-numbers)
   (common-lisp:declare (common-lisp:ignorable product-type e164phone-numbers))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-phone-number-order-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/phone-number-orders"
                                                        "CreatePhoneNumberOrder"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-phone-number-order))
(common-lisp:progn
 (common-lisp:defun create-proxy-session
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id
                     participant-phone-numbers name expiry-minutes capabilities
                     number-selection-behavior geo-match-level
                     geo-match-params)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id participant-phone-numbers name
     expiry-minutes capabilities number-selection-behavior geo-match-level
     geo-match-params))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-proxy-session-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/voice-connectors/~A/proxy-sessions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'voice-connector-id))))
                                                        "CreateProxySession"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-proxy-session))
(common-lisp:progn
 (common-lisp:defun create-room
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id name client-request-token)
   (common-lisp:declare
    (common-lisp:ignorable account-id name client-request-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-room-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/rooms"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))))
                                                        "CreateRoom"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-room))
(common-lisp:progn
 (common-lisp:defun create-room-membership
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id room-id member-id role)
   (common-lisp:declare
    (common-lisp:ignorable account-id room-id member-id role))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-room-membership-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/rooms/~A/memberships"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'room-id))))
                                                        "CreateRoomMembership"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-room-membership))
(common-lisp:progn
 (common-lisp:defun create-sip-media-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key aws-region name endpoints)
   (common-lisp:declare (common-lisp:ignorable aws-region name endpoints))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-sip-media-application-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/sip-media-applications"
                                                        "CreateSipMediaApplication"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-sip-media-application))
(common-lisp:progn
 (common-lisp:defun create-sip-media-application-call
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key from-phone-number to-phone-number
                     sip-media-application-id sip-headers)
   (common-lisp:declare
    (common-lisp:ignorable from-phone-number to-phone-number
     sip-media-application-id sip-headers))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-sip-media-application-call-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sip-media-applications/~A/calls"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'sip-media-application-id))))
                                                        "CreateSipMediaApplicationCall"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-sip-media-application-call))
(common-lisp:progn
 (common-lisp:defun create-sip-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name trigger-type trigger-value disabled
                     target-applications)
   (common-lisp:declare
    (common-lisp:ignorable name trigger-type trigger-value disabled
     target-applications))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-sip-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/sip-rules"
                                                        "CreateSipRule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-sip-rule))
(common-lisp:progn
 (common-lisp:defun create-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id username email user-type)
   (common-lisp:declare
    (common-lisp:ignorable account-id username email user-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/users?operation=create"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))))
                                                        "CreateUser"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-user))
(common-lisp:progn
 (common-lisp:defun create-voice-connector
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name aws-region require-encryption)
   (common-lisp:declare
    (common-lisp:ignorable name aws-region require-encryption))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-voice-connector-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/voice-connectors"
                                                        "CreateVoiceConnector"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-voice-connector))
(common-lisp:progn
 (common-lisp:defun create-voice-connector-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name voice-connector-items)
   (common-lisp:declare (common-lisp:ignorable name voice-connector-items))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-voice-connector-group-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/voice-connector-groups"
                                                        "CreateVoiceConnectorGroup"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-voice-connector-group))
(common-lisp:progn
 (common-lisp:defun delete-account
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id)
   (common-lisp:declare (common-lisp:ignorable account-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-account-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))))
                                                        "DeleteAccount"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-account))
(common-lisp:progn
 (common-lisp:defun delete-app-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-arn)
   (common-lisp:declare (common-lisp:ignorable app-instance-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-app-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/app-instances/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-instance-arn))))
                                                        "DeleteAppInstance"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-app-instance))
(common-lisp:progn
 (common-lisp:defun delete-app-instance-admin
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-admin-arn app-instance-arn)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-admin-arn app-instance-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-app-instance-admin-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/app-instances/~A/admins/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-instance-arn))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-instance-admin-arn))))
                                                        "DeleteAppInstanceAdmin"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-app-instance-admin))
(common-lisp:progn
 (common-lisp:defun delete-app-instance-streaming-configurations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-arn)
   (common-lisp:declare (common-lisp:ignorable app-instance-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-app-instance-streaming-configurations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/app-instances/~A/streaming-configurations"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-instance-arn))))
                                                        "DeleteAppInstanceStreamingConfigurations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-app-instance-streaming-configurations))
(common-lisp:progn
 (common-lisp:defun delete-app-instance-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-user-arn)
   (common-lisp:declare (common-lisp:ignorable app-instance-user-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-app-instance-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/app-instance-users/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-instance-user-arn))))
                                                        "DeleteAppInstanceUser"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-app-instance-user))
(common-lisp:progn
 (common-lisp:defun delete-attendee
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key meeting-id attendee-id)
   (common-lisp:declare (common-lisp:ignorable meeting-id attendee-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-attendee-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/meetings/~A/attendees/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'meeting-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'attendee-id))))
                                                        "DeleteAttendee"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-attendee))
(common-lisp:progn
 (common-lisp:defun delete-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn chime-bearer)
   (common-lisp:declare (common-lisp:ignorable channel-arn chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channels/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-arn))))
                                                        "DeleteChannel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-channel))
(common-lisp:progn
 (common-lisp:defun delete-channel-ban
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn member-arn chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn member-arn chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-channel-ban-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channels/~A/bans/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-arn))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'member-arn))))
                                                        "DeleteChannelBan"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-channel-ban))
(common-lisp:progn
 (common-lisp:defun delete-channel-membership
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn member-arn chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn member-arn chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-channel-membership-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channels/~A/memberships/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-arn))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'member-arn))))
                                                        "DeleteChannelMembership"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-channel-membership))
(common-lisp:progn
 (common-lisp:defun delete-channel-message
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn message-id chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn message-id chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-channel-message-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channels/~A/messages/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-arn))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'message-id))))
                                                        "DeleteChannelMessage"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-channel-message))
(common-lisp:progn
 (common-lisp:defun delete-channel-moderator
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn channel-moderator-arn
                     chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn channel-moderator-arn chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-channel-moderator-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channels/~A/moderators/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-arn))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-moderator-arn))))
                                                        "DeleteChannelModerator"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-channel-moderator))
(common-lisp:progn
 (common-lisp:defun delete-events-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id bot-id)
   (common-lisp:declare (common-lisp:ignorable account-id bot-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-events-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/bots/~A/events-configuration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'bot-id))))
                                                        "DeleteEventsConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-events-configuration))
(common-lisp:progn
 (common-lisp:defun delete-media-capture-pipeline
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key media-pipeline-id)
   (common-lisp:declare (common-lisp:ignorable media-pipeline-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-media-capture-pipeline-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/media-capture-pipelines/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'media-pipeline-id))))
                                                        "DeleteMediaCapturePipeline"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-media-capture-pipeline))
(common-lisp:progn
 (common-lisp:defun delete-meeting
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key meeting-id)
   (common-lisp:declare (common-lisp:ignorable meeting-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-meeting-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/meetings/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'meeting-id))))
                                                        "DeleteMeeting"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-meeting))
(common-lisp:progn
 (common-lisp:defun delete-phone-number
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key phone-number-id)
   (common-lisp:declare (common-lisp:ignorable phone-number-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-phone-number-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/phone-numbers/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'phone-number-id))))
                                                        "DeletePhoneNumber"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-phone-number))
(common-lisp:progn
 (common-lisp:defun delete-proxy-session
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id proxy-session-id)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id proxy-session-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-proxy-session-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/voice-connectors/~A/proxy-sessions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'voice-connector-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'proxy-session-id))))
                                                        "DeleteProxySession"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-proxy-session))
(common-lisp:progn
 (common-lisp:defun delete-room
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id room-id)
   (common-lisp:declare (common-lisp:ignorable account-id room-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-room-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/rooms/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'room-id))))
                                                        "DeleteRoom"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-room))
(common-lisp:progn
 (common-lisp:defun delete-room-membership
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id room-id member-id)
   (common-lisp:declare (common-lisp:ignorable account-id room-id member-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-room-membership-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/rooms/~A/memberships/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'room-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'member-id))))
                                                        "DeleteRoomMembership"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-room-membership))
(common-lisp:progn
 (common-lisp:defun delete-sip-media-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sip-media-application-id)
   (common-lisp:declare (common-lisp:ignorable sip-media-application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-sip-media-application-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sip-media-applications/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'sip-media-application-id))))
                                                        "DeleteSipMediaApplication"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-sip-media-application))
(common-lisp:progn
 (common-lisp:defun delete-sip-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sip-rule-id)
   (common-lisp:declare (common-lisp:ignorable sip-rule-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-sip-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sip-rules/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'sip-rule-id))))
                                                        "DeleteSipRule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-sip-rule))
(common-lisp:progn
 (common-lisp:defun delete-voice-connector
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-voice-connector-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/voice-connectors/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'voice-connector-id))))
                                                        "DeleteVoiceConnector"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-voice-connector))
(common-lisp:progn
 (common-lisp:defun delete-voice-connector-emergency-calling-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-voice-connector-emergency-calling-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/voice-connectors/~A/emergency-calling-configuration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'voice-connector-id))))
                                                        "DeleteVoiceConnectorEmergencyCallingConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-voice-connector-emergency-calling-configuration))
(common-lisp:progn
 (common-lisp:defun delete-voice-connector-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-group-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-group-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-voice-connector-group-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/voice-connector-groups/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'voice-connector-group-id))))
                                                        "DeleteVoiceConnectorGroup"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-voice-connector-group))
(common-lisp:progn
 (common-lisp:defun delete-voice-connector-origination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-voice-connector-origination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/voice-connectors/~A/origination"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'voice-connector-id))))
                                                        "DeleteVoiceConnectorOrigination"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-voice-connector-origination))
(common-lisp:progn
 (common-lisp:defun delete-voice-connector-proxy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-voice-connector-proxy-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/voice-connectors/~A/programmable-numbers/proxy"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'voice-connector-id))))
                                                        "DeleteVoiceConnectorProxy"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-voice-connector-proxy))
(common-lisp:progn
 (common-lisp:defun delete-voice-connector-streaming-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-voice-connector-streaming-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/voice-connectors/~A/streaming-configuration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'voice-connector-id))))
                                                        "DeleteVoiceConnectorStreamingConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-voice-connector-streaming-configuration))
(common-lisp:progn
 (common-lisp:defun delete-voice-connector-termination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-voice-connector-termination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/voice-connectors/~A/termination"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'voice-connector-id))))
                                                        "DeleteVoiceConnectorTermination"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-voice-connector-termination))
(common-lisp:progn
 (common-lisp:defun delete-voice-connector-termination-credentials
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id usernames)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id usernames))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-voice-connector-termination-credentials-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/voice-connectors/~A/termination/credentials?operation=delete"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'voice-connector-id))))
                                                        "DeleteVoiceConnectorTerminationCredentials"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-voice-connector-termination-credentials))
(common-lisp:progn
 (common-lisp:defun describe-app-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-arn)
   (common-lisp:declare (common-lisp:ignorable app-instance-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-app-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/app-instances/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-instance-arn))))
                                                        "DescribeAppInstance"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-app-instance))
(common-lisp:progn
 (common-lisp:defun describe-app-instance-admin
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-admin-arn app-instance-arn)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-admin-arn app-instance-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-app-instance-admin-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/app-instances/~A/admins/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-instance-arn))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-instance-admin-arn))))
                                                        "DescribeAppInstanceAdmin"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-app-instance-admin))
(common-lisp:progn
 (common-lisp:defun describe-app-instance-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-user-arn)
   (common-lisp:declare (common-lisp:ignorable app-instance-user-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-app-instance-user-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/app-instance-users/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-instance-user-arn))))
                                                        "DescribeAppInstanceUser"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-app-instance-user))
(common-lisp:progn
 (common-lisp:defun describe-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn chime-bearer)
   (common-lisp:declare (common-lisp:ignorable channel-arn chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channels/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-arn))))
                                                        "DescribeChannel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-channel))
(common-lisp:progn
 (common-lisp:defun describe-channel-ban
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn member-arn chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn member-arn chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-channel-ban-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channels/~A/bans/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-arn))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'member-arn))))
                                                        "DescribeChannelBan"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-channel-ban))
(common-lisp:progn
 (common-lisp:defun describe-channel-membership
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn member-arn chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn member-arn chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-channel-membership-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channels/~A/memberships/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-arn))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'member-arn))))
                                                        "DescribeChannelMembership"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-channel-membership))
(common-lisp:progn
 (common-lisp:defun describe-channel-membership-for-app-instance-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn app-instance-user-arn
                     chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn app-instance-user-arn chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-channel-membership-for-app-instance-user-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channels/~A?scope=app-instance-user-membership"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-arn))))
                                                        "DescribeChannelMembershipForAppInstanceUser"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-channel-membership-for-app-instance-user))
(common-lisp:progn
 (common-lisp:defun describe-channel-moderated-by-app-instance-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn app-instance-user-arn
                     chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn app-instance-user-arn chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-channel-moderated-by-app-instance-user-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channels/~A?scope=app-instance-user-moderated-channel"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-arn))))
                                                        "DescribeChannelModeratedByAppInstanceUser"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-channel-moderated-by-app-instance-user))
(common-lisp:progn
 (common-lisp:defun describe-channel-moderator
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn channel-moderator-arn
                     chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn channel-moderator-arn chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-channel-moderator-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channels/~A/moderators/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-arn))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-moderator-arn))))
                                                        "DescribeChannelModerator"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-channel-moderator))
(common-lisp:progn
 (common-lisp:defun disassociate-phone-number-from-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id user-id)
   (common-lisp:declare (common-lisp:ignorable account-id user-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disassociate-phone-number-from-user-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/users/~A?operation=disassociate-phone-number"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'user-id))))
                                                        "DisassociatePhoneNumberFromUser"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'disassociate-phone-number-from-user))
(common-lisp:progn
 (common-lisp:defun disassociate-phone-numbers-from-voice-connector
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id e164phone-numbers)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id e164phone-numbers))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disassociate-phone-numbers-from-voice-connector-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/voice-connectors/~A?operation=disassociate-phone-numbers"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'voice-connector-id))))
                                                        "DisassociatePhoneNumbersFromVoiceConnector"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'disassociate-phone-numbers-from-voice-connector))
(common-lisp:progn
 (common-lisp:defun disassociate-phone-numbers-from-voice-connector-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-group-id
                     e164phone-numbers)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-group-id e164phone-numbers))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disassociate-phone-numbers-from-voice-connector-group-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/voice-connector-groups/~A?operation=disassociate-phone-numbers"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'voice-connector-group-id))))
                                                        "DisassociatePhoneNumbersFromVoiceConnectorGroup"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'disassociate-phone-numbers-from-voice-connector-group))
(common-lisp:progn
 (common-lisp:defun disassociate-signin-delegate-groups-from-account
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id group-names)
   (common-lisp:declare (common-lisp:ignorable account-id group-names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disassociate-signin-delegate-groups-from-account-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A?operation=disassociate-signin-delegate-groups"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))))
                                                        "DisassociateSigninDelegateGroupsFromAccount"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'disassociate-signin-delegate-groups-from-account))
(common-lisp:progn
 (common-lisp:defun get-account
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id)
   (common-lisp:declare (common-lisp:ignorable account-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-account-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))))
                                                        "GetAccount"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-account))
(common-lisp:progn
 (common-lisp:defun get-account-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id)
   (common-lisp:declare (common-lisp:ignorable account-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-account-settings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/settings"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))))
                                                        "GetAccountSettings"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-account-settings))
(common-lisp:progn
 (common-lisp:defun get-app-instance-retention-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-arn)
   (common-lisp:declare (common-lisp:ignorable app-instance-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-app-instance-retention-settings-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/app-instances/~A/retention-settings"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-instance-arn))))
                                                        "GetAppInstanceRetentionSettings"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-app-instance-retention-settings))
(common-lisp:progn
 (common-lisp:defun get-app-instance-streaming-configurations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-arn)
   (common-lisp:declare (common-lisp:ignorable app-instance-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-app-instance-streaming-configurations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/app-instances/~A/streaming-configurations"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-instance-arn))))
                                                        "GetAppInstanceStreamingConfigurations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-app-instance-streaming-configurations))
(common-lisp:progn
 (common-lisp:defun get-attendee
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key meeting-id attendee-id)
   (common-lisp:declare (common-lisp:ignorable meeting-id attendee-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-attendee-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/meetings/~A/attendees/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'meeting-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'attendee-id))))
                                                        "GetAttendee"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-attendee))
(common-lisp:progn
 (common-lisp:defun get-bot
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id bot-id)
   (common-lisp:declare (common-lisp:ignorable account-id bot-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-bot-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/bots/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'bot-id))))
                                                        "GetBot"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-bot))
(common-lisp:progn
 (common-lisp:defun get-channel-message
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn message-id chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn message-id chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-channel-message-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channels/~A/messages/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-arn))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'message-id))))
                                                        "GetChannelMessage"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-channel-message))
(common-lisp:progn
 (common-lisp:defun get-events-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id bot-id)
   (common-lisp:declare (common-lisp:ignorable account-id bot-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-events-configuration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/bots/~A/events-configuration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'bot-id))))
                                                        "GetEventsConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-events-configuration))
(common-lisp:progn
 (common-lisp:defun get-global-settings ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'chime-request :method "GET" :path "/settings"
                                :operation "GetGlobalSettings"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-global-settings))
(common-lisp:progn
 (common-lisp:defun get-media-capture-pipeline
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key media-pipeline-id)
   (common-lisp:declare (common-lisp:ignorable media-pipeline-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-media-capture-pipeline-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/media-capture-pipelines/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'media-pipeline-id))))
                                                        "GetMediaCapturePipeline"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-media-capture-pipeline))
(common-lisp:progn
 (common-lisp:defun get-meeting
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key meeting-id)
   (common-lisp:declare (common-lisp:ignorable meeting-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-meeting-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/meetings/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'meeting-id))))
                                                        "GetMeeting"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-meeting))
(common-lisp:progn
 (common-lisp:defun get-messaging-session-endpoint ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'chime-request :method "GET" :path
                                "/endpoints/messaging-session" :operation
                                "GetMessagingSessionEndpoint"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-messaging-session-endpoint))
(common-lisp:progn
 (common-lisp:defun get-phone-number
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key phone-number-id)
   (common-lisp:declare (common-lisp:ignorable phone-number-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-phone-number-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/phone-numbers/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'phone-number-id))))
                                                        "GetPhoneNumber"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-phone-number))
(common-lisp:progn
 (common-lisp:defun get-phone-number-order
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key phone-number-order-id)
   (common-lisp:declare (common-lisp:ignorable phone-number-order-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-phone-number-order-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/phone-number-orders/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'phone-number-order-id))))
                                                        "GetPhoneNumberOrder"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-phone-number-order))
(common-lisp:progn
 (common-lisp:defun get-phone-number-settings ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'chime-request :method "GET" :path
                                "/settings/phone-number" :operation
                                "GetPhoneNumberSettings"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-phone-number-settings))
(common-lisp:progn
 (common-lisp:defun get-proxy-session
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id proxy-session-id)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id proxy-session-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-proxy-session-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/voice-connectors/~A/proxy-sessions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'voice-connector-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'proxy-session-id))))
                                                        "GetProxySession"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-proxy-session))
(common-lisp:progn
 (common-lisp:defun get-retention-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id)
   (common-lisp:declare (common-lisp:ignorable account-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-retention-settings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/retention-settings"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))))
                                                        "GetRetentionSettings"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-retention-settings))
(common-lisp:progn
 (common-lisp:defun get-room
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id room-id)
   (common-lisp:declare (common-lisp:ignorable account-id room-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-room-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/rooms/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'room-id))))
                                                        "GetRoom"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-room))
(common-lisp:progn
 (common-lisp:defun get-sip-media-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sip-media-application-id)
   (common-lisp:declare (common-lisp:ignorable sip-media-application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-sip-media-application-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sip-media-applications/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'sip-media-application-id))))
                                                        "GetSipMediaApplication"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-sip-media-application))
(common-lisp:progn
 (common-lisp:defun get-sip-media-application-logging-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sip-media-application-id)
   (common-lisp:declare (common-lisp:ignorable sip-media-application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-sip-media-application-logging-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sip-media-applications/~A/logging-configuration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'sip-media-application-id))))
                                                        "GetSipMediaApplicationLoggingConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-sip-media-application-logging-configuration))
(common-lisp:progn
 (common-lisp:defun get-sip-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sip-rule-id)
   (common-lisp:declare (common-lisp:ignorable sip-rule-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-sip-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sip-rules/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'sip-rule-id))))
                                                        "GetSipRule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-sip-rule))
(common-lisp:progn
 (common-lisp:defun get-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id user-id)
   (common-lisp:declare (common-lisp:ignorable account-id user-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/users/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'user-id))))
                                                        "GetUser"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-user))
(common-lisp:progn
 (common-lisp:defun get-user-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id user-id)
   (common-lisp:declare (common-lisp:ignorable account-id user-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-user-settings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/users/~A/settings"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'user-id))))
                                                        "GetUserSettings"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-user-settings))
(common-lisp:progn
 (common-lisp:defun get-voice-connector
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-voice-connector-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/voice-connectors/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'voice-connector-id))))
                                                        "GetVoiceConnector"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-voice-connector))
(common-lisp:progn
 (common-lisp:defun get-voice-connector-emergency-calling-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-voice-connector-emergency-calling-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/voice-connectors/~A/emergency-calling-configuration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'voice-connector-id))))
                                                        "GetVoiceConnectorEmergencyCallingConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-voice-connector-emergency-calling-configuration))
(common-lisp:progn
 (common-lisp:defun get-voice-connector-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-group-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-group-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-voice-connector-group-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/voice-connector-groups/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'voice-connector-group-id))))
                                                        "GetVoiceConnectorGroup"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-voice-connector-group))
(common-lisp:progn
 (common-lisp:defun get-voice-connector-logging-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-voice-connector-logging-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/voice-connectors/~A/logging-configuration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'voice-connector-id))))
                                                        "GetVoiceConnectorLoggingConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-voice-connector-logging-configuration))
(common-lisp:progn
 (common-lisp:defun get-voice-connector-origination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-voice-connector-origination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/voice-connectors/~A/origination"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'voice-connector-id))))
                                                        "GetVoiceConnectorOrigination"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-voice-connector-origination))
(common-lisp:progn
 (common-lisp:defun get-voice-connector-proxy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-voice-connector-proxy-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/voice-connectors/~A/programmable-numbers/proxy"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'voice-connector-id))))
                                                        "GetVoiceConnectorProxy"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-voice-connector-proxy))
(common-lisp:progn
 (common-lisp:defun get-voice-connector-streaming-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-voice-connector-streaming-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/voice-connectors/~A/streaming-configuration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'voice-connector-id))))
                                                        "GetVoiceConnectorStreamingConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-voice-connector-streaming-configuration))
(common-lisp:progn
 (common-lisp:defun get-voice-connector-termination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-voice-connector-termination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/voice-connectors/~A/termination"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'voice-connector-id))))
                                                        "GetVoiceConnectorTermination"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-voice-connector-termination))
(common-lisp:progn
 (common-lisp:defun get-voice-connector-termination-health
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-voice-connector-termination-health-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/voice-connectors/~A/termination/health"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'voice-connector-id))))
                                                        "GetVoiceConnectorTerminationHealth"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-voice-connector-termination-health))
(common-lisp:progn
 (common-lisp:defun invite-users
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id user-email-list user-type)
   (common-lisp:declare
    (common-lisp:ignorable account-id user-email-list user-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-invite-users-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/users?operation=add"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))))
                                                        "InviteUsers"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'invite-users))
(common-lisp:progn
 (common-lisp:defun list-accounts
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name user-email next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable name user-email next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-accounts-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/accounts"
                                                        "ListAccounts"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-accounts))
(common-lisp:progn
 (common-lisp:defun list-app-instance-admins
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-arn max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-app-instance-admins-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/app-instances/~A/admins"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-instance-arn))))
                                                        "ListAppInstanceAdmins"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-app-instance-admins))
(common-lisp:progn
 (common-lisp:defun list-app-instance-users
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-arn max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-app-instance-users-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/app-instance-users"
                                                        "ListAppInstanceUsers"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-app-instance-users))
(common-lisp:progn
 (common-lisp:defun list-app-instances
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-app-instances-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/app-instances"
                                                        "ListAppInstances"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-app-instances))
(common-lisp:progn
 (common-lisp:defun list-attendee-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key meeting-id attendee-id)
   (common-lisp:declare (common-lisp:ignorable meeting-id attendee-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-attendee-tags-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/meetings/~A/attendees/~A/tags"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'meeting-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'attendee-id))))
                                                        "ListAttendeeTags"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-attendee-tags))
(common-lisp:progn
 (common-lisp:defun list-attendees
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key meeting-id next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable meeting-id next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-attendees-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/meetings/~A/attendees"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'meeting-id))))
                                                        "ListAttendees"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-attendees))
(common-lisp:progn
 (common-lisp:defun list-bots
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable account-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-bots-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/bots"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))))
                                                        "ListBots"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-bots))
(common-lisp:progn
 (common-lisp:defun list-channel-bans
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn max-results next-token
                     chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn max-results next-token chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-channel-bans-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channels/~A/bans"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-arn))))
                                                        "ListChannelBans"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-channel-bans))
(common-lisp:progn
 (common-lisp:defun list-channel-memberships
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn type max-results next-token
                     chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn type max-results next-token
     chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-channel-memberships-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channels/~A/memberships"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-arn))))
                                                        "ListChannelMemberships"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-channel-memberships))
(common-lisp:progn
 (common-lisp:defun list-channel-memberships-for-app-instance-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-user-arn max-results
                     next-token chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-user-arn max-results next-token
     chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-channel-memberships-for-app-instance-user-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/channels?scope=app-instance-user-memberships"
                                                        "ListChannelMembershipsForAppInstanceUser"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-channel-memberships-for-app-instance-user))
(common-lisp:progn
 (common-lisp:defun list-channel-messages
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn sort-order not-before
                     not-after max-results next-token chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn sort-order not-before not-after
     max-results next-token chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-channel-messages-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channels/~A/messages"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-arn))))
                                                        "ListChannelMessages"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-channel-messages))
(common-lisp:progn
 (common-lisp:defun list-channel-moderators
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn max-results next-token
                     chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn max-results next-token chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-channel-moderators-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channels/~A/moderators"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-arn))))
                                                        "ListChannelModerators"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-channel-moderators))
(common-lisp:progn
 (common-lisp:defun list-channels
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-arn privacy max-results
                     next-token chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-arn privacy max-results next-token
     chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-channels-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/channels"
                                                        "ListChannels"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-channels))
(common-lisp:progn
 (common-lisp:defun list-channels-moderated-by-app-instance-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-user-arn max-results
                     next-token chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-user-arn max-results next-token
     chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-channels-moderated-by-app-instance-user-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/channels?scope=app-instance-user-moderated-channels"
                                                        "ListChannelsModeratedByAppInstanceUser"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-channels-moderated-by-app-instance-user))
(common-lisp:progn
 (common-lisp:defun list-media-capture-pipelines
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-media-capture-pipelines-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/media-capture-pipelines"
                                                        "ListMediaCapturePipelines"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-media-capture-pipelines))
(common-lisp:progn
 (common-lisp:defun list-meeting-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key meeting-id)
   (common-lisp:declare (common-lisp:ignorable meeting-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-meeting-tags-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/meetings/~A/tags"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'meeting-id))))
                                                        "ListMeetingTags"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-meeting-tags))
(common-lisp:progn
 (common-lisp:defun list-meetings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-meetings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/meetings"
                                                        "ListMeetings"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-meetings))
(common-lisp:progn
 (common-lisp:defun list-phone-number-orders
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-phone-number-orders-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/phone-number-orders"
                                                        "ListPhoneNumberOrders"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-phone-number-orders))
(common-lisp:progn
 (common-lisp:defun list-phone-numbers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key status product-type filter-name
                     filter-value max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable status product-type filter-name filter-value
     max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-phone-numbers-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/phone-numbers"
                                                        "ListPhoneNumbers"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-phone-numbers))
(common-lisp:progn
 (common-lisp:defun list-proxy-sessions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id status next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id status next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-proxy-sessions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/voice-connectors/~A/proxy-sessions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'voice-connector-id))))
                                                        "ListProxySessions"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-proxy-sessions))
(common-lisp:progn
 (common-lisp:defun list-room-memberships
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id room-id max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable account-id room-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-room-memberships-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/rooms/~A/memberships"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'room-id))))
                                                        "ListRoomMemberships"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-room-memberships))
(common-lisp:progn
 (common-lisp:defun list-rooms
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id member-id max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable account-id member-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-rooms-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/rooms"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))))
                                                        "ListRooms"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-rooms))
(common-lisp:progn
 (common-lisp:defun list-sip-media-applications
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-sip-media-applications-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/sip-media-applications"
                                                        "ListSipMediaApplications"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-sip-media-applications))
(common-lisp:progn
 (common-lisp:defun list-sip-rules
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sip-media-application-id max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable sip-media-application-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-sip-rules-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/sip-rules"
                                                        "ListSipRules"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-sip-rules))
(common-lisp:progn
 (common-lisp:defun list-supported-phone-number-countries
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key product-type)
   (common-lisp:declare (common-lisp:ignorable product-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-supported-phone-number-countries-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/phone-number-countries"
                                                        "ListSupportedPhoneNumberCountries"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-supported-phone-number-countries))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/tags"
                                                        "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun list-users
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id user-email user-type
                     max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable account-id user-email user-type max-results
     next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-users-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/users"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))))
                                                        "ListUsers"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-users))
(common-lisp:progn
 (common-lisp:defun list-voice-connector-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-voice-connector-groups-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/voice-connector-groups"
                                                        "ListVoiceConnectorGroups"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-voice-connector-groups))
(common-lisp:progn
 (common-lisp:defun list-voice-connector-termination-credentials
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-voice-connector-termination-credentials-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/voice-connectors/~A/termination/credentials"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'voice-connector-id))))
                                                        "ListVoiceConnectorTerminationCredentials"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-voice-connector-termination-credentials))
(common-lisp:progn
 (common-lisp:defun list-voice-connectors
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-voice-connectors-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/voice-connectors"
                                                        "ListVoiceConnectors"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-voice-connectors))
(common-lisp:progn
 (common-lisp:defun logout-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id user-id)
   (common-lisp:declare (common-lisp:ignorable account-id user-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-logout-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/users/~A?operation=logout"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'user-id))))
                                                        "LogoutUser"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'logout-user))
(common-lisp:progn
 (common-lisp:defun put-app-instance-retention-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-arn
                     app-instance-retention-settings)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-arn app-instance-retention-settings))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-app-instance-retention-settings-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/app-instances/~A/retention-settings"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-instance-arn))))
                                                        "PutAppInstanceRetentionSettings"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-app-instance-retention-settings))
(common-lisp:progn
 (common-lisp:defun put-app-instance-streaming-configurations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-arn
                     app-instance-streaming-configurations)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-arn
     app-instance-streaming-configurations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-app-instance-streaming-configurations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/app-instances/~A/streaming-configurations"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-instance-arn))))
                                                        "PutAppInstanceStreamingConfigurations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-app-instance-streaming-configurations))
(common-lisp:progn
 (common-lisp:defun put-events-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id bot-id
                     outbound-events-httpsendpoint lambda-function-arn)
   (common-lisp:declare
    (common-lisp:ignorable account-id bot-id outbound-events-httpsendpoint
     lambda-function-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-events-configuration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/bots/~A/events-configuration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'bot-id))))
                                                        "PutEventsConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-events-configuration))
(common-lisp:progn
 (common-lisp:defun put-retention-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id retention-settings)
   (common-lisp:declare (common-lisp:ignorable account-id retention-settings))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-retention-settings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/retention-settings"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))))
                                                        "PutRetentionSettings"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-retention-settings))
(common-lisp:progn
 (common-lisp:defun put-sip-media-application-logging-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sip-media-application-id
                     sip-media-application-logging-configuration)
   (common-lisp:declare
    (common-lisp:ignorable sip-media-application-id
     sip-media-application-logging-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-sip-media-application-logging-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sip-media-applications/~A/logging-configuration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'sip-media-application-id))))
                                                        "PutSipMediaApplicationLoggingConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-sip-media-application-logging-configuration))
(common-lisp:progn
 (common-lisp:defun put-voice-connector-emergency-calling-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id
                     emergency-calling-configuration)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id emergency-calling-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-voice-connector-emergency-calling-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/voice-connectors/~A/emergency-calling-configuration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'voice-connector-id))))
                                                        "PutVoiceConnectorEmergencyCallingConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-voice-connector-emergency-calling-configuration))
(common-lisp:progn
 (common-lisp:defun put-voice-connector-logging-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id logging-configuration)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id logging-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-voice-connector-logging-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/voice-connectors/~A/logging-configuration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'voice-connector-id))))
                                                        "PutVoiceConnectorLoggingConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-voice-connector-logging-configuration))
(common-lisp:progn
 (common-lisp:defun put-voice-connector-origination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id origination)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id origination))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-voice-connector-origination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/voice-connectors/~A/origination"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'voice-connector-id))))
                                                        "PutVoiceConnectorOrigination"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-voice-connector-origination))
(common-lisp:progn
 (common-lisp:defun put-voice-connector-proxy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id
                     default-session-expiry-minutes phone-number-pool-countries
                     fall-back-phone-number disabled)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id default-session-expiry-minutes
     phone-number-pool-countries fall-back-phone-number disabled))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-voice-connector-proxy-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/voice-connectors/~A/programmable-numbers/proxy"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'voice-connector-id))))
                                                        "PutVoiceConnectorProxy"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-voice-connector-proxy))
(common-lisp:progn
 (common-lisp:defun put-voice-connector-streaming-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id
                     streaming-configuration)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id streaming-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-voice-connector-streaming-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/voice-connectors/~A/streaming-configuration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'voice-connector-id))))
                                                        "PutVoiceConnectorStreamingConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-voice-connector-streaming-configuration))
(common-lisp:progn
 (common-lisp:defun put-voice-connector-termination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id termination)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id termination))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-voice-connector-termination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/voice-connectors/~A/termination"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'voice-connector-id))))
                                                        "PutVoiceConnectorTermination"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-voice-connector-termination))
(common-lisp:progn
 (common-lisp:defun put-voice-connector-termination-credentials
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id credentials)
   (common-lisp:declare (common-lisp:ignorable voice-connector-id credentials))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-voice-connector-termination-credentials-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/voice-connectors/~A/termination/credentials?operation=put"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'voice-connector-id))))
                                                        "PutVoiceConnectorTerminationCredentials"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-voice-connector-termination-credentials))
(common-lisp:progn
 (common-lisp:defun redact-channel-message
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn message-id chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn message-id chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-redact-channel-message-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channels/~A/messages/~A?operation=redact"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-arn))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'message-id))))
                                                        "RedactChannelMessage"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'redact-channel-message))
(common-lisp:progn
 (common-lisp:defun redact-conversation-message
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id conversation-id message-id)
   (common-lisp:declare
    (common-lisp:ignorable account-id conversation-id message-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-redact-conversation-message-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/conversations/~A/messages/~A?operation=redact"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'conversation-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'message-id))))
                                                        "RedactConversationMessage"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'redact-conversation-message))
(common-lisp:progn
 (common-lisp:defun redact-room-message
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id room-id message-id)
   (common-lisp:declare (common-lisp:ignorable account-id room-id message-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-redact-room-message-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/rooms/~A/messages/~A?operation=redact"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'room-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'message-id))))
                                                        "RedactRoomMessage"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'redact-room-message))
(common-lisp:progn
 (common-lisp:defun regenerate-security-token
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id bot-id)
   (common-lisp:declare (common-lisp:ignorable account-id bot-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-regenerate-security-token-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/bots/~A?operation=regenerate-security-token"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'bot-id))))
                                                        "RegenerateSecurityToken"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'regenerate-security-token))
(common-lisp:progn
 (common-lisp:defun reset-personal-pin
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id user-id)
   (common-lisp:declare (common-lisp:ignorable account-id user-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-reset-personal-pinrequest
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/users/~A?operation=reset-personal-pin"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'user-id))))
                                                        "ResetPersonalPIN"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'reset-personal-pin))
(common-lisp:progn
 (common-lisp:defun restore-phone-number
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key phone-number-id)
   (common-lisp:declare (common-lisp:ignorable phone-number-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-restore-phone-number-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/phone-numbers/~A?operation=restore"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'phone-number-id))))
                                                        "RestorePhoneNumber"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'restore-phone-number))
(common-lisp:progn
 (common-lisp:defun search-available-phone-numbers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key area-code city country state
                     toll-free-prefix phone-number-type max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable area-code city country state toll-free-prefix
     phone-number-type max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-search-available-phone-numbers-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/search?type=phone-numbers"
                                                        "SearchAvailablePhoneNumbers"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'search-available-phone-numbers))
(common-lisp:progn
 (common-lisp:defun send-channel-message
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn content type persistence
                     metadata client-request-token chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn content type persistence metadata
     client-request-token chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-send-channel-message-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channels/~A/messages"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-arn))))
                                                        "SendChannelMessage"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'send-channel-message))
(common-lisp:progn
 (common-lisp:defun start-meeting-transcription
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key meeting-id transcription-configuration)
   (common-lisp:declare
    (common-lisp:ignorable meeting-id transcription-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-meeting-transcription-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/meetings/~A/transcription?operation=start"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'meeting-id))))
                                                        "StartMeetingTranscription"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'start-meeting-transcription))
(common-lisp:progn
 (common-lisp:defun stop-meeting-transcription
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key meeting-id)
   (common-lisp:declare (common-lisp:ignorable meeting-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-stop-meeting-transcription-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/meetings/~A/transcription?operation=stop"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'meeting-id))))
                                                        "StopMeetingTranscription"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'stop-meeting-transcription))
(common-lisp:progn
 (common-lisp:defun tag-attendee
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key meeting-id attendee-id tags)
   (common-lisp:declare (common-lisp:ignorable meeting-id attendee-id tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-attendee-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/meetings/~A/attendees/~A/tags?operation=add"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'meeting-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'attendee-id))))
                                                        "TagAttendee"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'tag-attendee))
(common-lisp:progn
 (common-lisp:defun tag-meeting
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key meeting-id tags)
   (common-lisp:declare (common-lisp:ignorable meeting-id tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-meeting-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/meetings/~A/tags?operation=add"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'meeting-id))))
                                                        "TagMeeting"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'tag-meeting))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/tags?operation=tag-resource"
                                                        "TagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-attendee
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key meeting-id attendee-id tag-keys)
   (common-lisp:declare
    (common-lisp:ignorable meeting-id attendee-id tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-attendee-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/meetings/~A/attendees/~A/tags?operation=delete"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'meeting-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'attendee-id))))
                                                        "UntagAttendee"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'untag-attendee))
(common-lisp:progn
 (common-lisp:defun untag-meeting
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key meeting-id tag-keys)
   (common-lisp:declare (common-lisp:ignorable meeting-id tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-meeting-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/meetings/~A/tags?operation=delete"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'meeting-id))))
                                                        "UntagMeeting"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'untag-meeting))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/tags?operation=untag-resource"
                                                        "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-account
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id name default-license)
   (common-lisp:declare
    (common-lisp:ignorable account-id name default-license))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-account-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))))
                                                        "UpdateAccount"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-account))
(common-lisp:progn
 (common-lisp:defun update-account-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id account-settings)
   (common-lisp:declare (common-lisp:ignorable account-id account-settings))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-account-settings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/settings"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))))
                                                        "UpdateAccountSettings"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-account-settings))
(common-lisp:progn
 (common-lisp:defun update-app-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-arn name metadata)
   (common-lisp:declare (common-lisp:ignorable app-instance-arn name metadata))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-app-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/app-instances/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-instance-arn))))
                                                        "UpdateAppInstance"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-app-instance))
(common-lisp:progn
 (common-lisp:defun update-app-instance-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-user-arn name metadata)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-user-arn name metadata))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-app-instance-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/app-instance-users/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-instance-user-arn))))
                                                        "UpdateAppInstanceUser"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-app-instance-user))
(common-lisp:progn
 (common-lisp:defun update-bot
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id bot-id disabled)
   (common-lisp:declare (common-lisp:ignorable account-id bot-id disabled))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-bot-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/bots/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'bot-id))))
                                                        "UpdateBot"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-bot))
(common-lisp:progn
 (common-lisp:defun update-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn name mode metadata
                     chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn name mode metadata chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channels/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-arn))))
                                                        "UpdateChannel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-channel))
(common-lisp:progn
 (common-lisp:defun update-channel-message
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn message-id content metadata
                     chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn message-id content metadata
     chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-channel-message-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channels/~A/messages/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-arn))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'message-id))))
                                                        "UpdateChannelMessage"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-channel-message))
(common-lisp:progn
 (common-lisp:defun update-channel-read-marker
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn chime-bearer)
   (common-lisp:declare (common-lisp:ignorable channel-arn chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-channel-read-marker-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channels/~A/readMarker"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-arn))))
                                                        "UpdateChannelReadMarker"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-channel-read-marker))
(common-lisp:progn
 (common-lisp:defun update-global-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key business-calling voice-connector)
   (common-lisp:declare
    (common-lisp:ignorable business-calling voice-connector))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-global-settings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" "/settings"
                                                        "UpdateGlobalSettings"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-global-settings))
(common-lisp:progn
 (common-lisp:defun update-phone-number
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key phone-number-id product-type
                     calling-name)
   (common-lisp:declare
    (common-lisp:ignorable phone-number-id product-type calling-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-phone-number-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/phone-numbers/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'phone-number-id))))
                                                        "UpdatePhoneNumber"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-phone-number))
(common-lisp:progn
 (common-lisp:defun update-phone-number-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key calling-name)
   (common-lisp:declare (common-lisp:ignorable calling-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-phone-number-settings-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        "/settings/phone-number"
                                                        "UpdatePhoneNumberSettings"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-phone-number-settings))
(common-lisp:progn
 (common-lisp:defun update-proxy-session
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id proxy-session-id
                     capabilities expiry-minutes)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id proxy-session-id capabilities
     expiry-minutes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-proxy-session-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/voice-connectors/~A/proxy-sessions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'voice-connector-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'proxy-session-id))))
                                                        "UpdateProxySession"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-proxy-session))
(common-lisp:progn
 (common-lisp:defun update-room
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id room-id name)
   (common-lisp:declare (common-lisp:ignorable account-id room-id name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-room-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/rooms/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'room-id))))
                                                        "UpdateRoom"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-room))
(common-lisp:progn
 (common-lisp:defun update-room-membership
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id room-id member-id role)
   (common-lisp:declare
    (common-lisp:ignorable account-id room-id member-id role))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-room-membership-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/rooms/~A/memberships/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'room-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'member-id))))
                                                        "UpdateRoomMembership"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-room-membership))
(common-lisp:progn
 (common-lisp:defun update-sip-media-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sip-media-application-id name endpoints)
   (common-lisp:declare
    (common-lisp:ignorable sip-media-application-id name endpoints))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-sip-media-application-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sip-media-applications/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'sip-media-application-id))))
                                                        "UpdateSipMediaApplication"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-sip-media-application))
(common-lisp:progn
 (common-lisp:defun update-sip-media-application-call
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sip-media-application-id transaction-id
                     arguments)
   (common-lisp:declare
    (common-lisp:ignorable sip-media-application-id transaction-id arguments))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-sip-media-application-call-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sip-media-applications/~A/calls/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'sip-media-application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'transaction-id))))
                                                        "UpdateSipMediaApplicationCall"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-sip-media-application-call))
(common-lisp:progn
 (common-lisp:defun update-sip-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sip-rule-id name disabled
                     target-applications)
   (common-lisp:declare
    (common-lisp:ignorable sip-rule-id name disabled target-applications))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-sip-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sip-rules/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'sip-rule-id))))
                                                        "UpdateSipRule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-sip-rule))
(common-lisp:progn
 (common-lisp:defun update-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id user-id license-type user-type
                     alexa-for-business-metadata)
   (common-lisp:declare
    (common-lisp:ignorable account-id user-id license-type user-type
     alexa-for-business-metadata))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/users/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'user-id))))
                                                        "UpdateUser"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-user))
(common-lisp:progn
 (common-lisp:defun update-user-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id user-id user-settings)
   (common-lisp:declare
    (common-lisp:ignorable account-id user-id user-settings))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-user-settings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/accounts/~A/users/~A/settings"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'account-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'user-id))))
                                                        "UpdateUserSettings"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-user-settings))
(common-lisp:progn
 (common-lisp:defun update-voice-connector
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-id name
                     require-encryption)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-id name require-encryption))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-voice-connector-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/voice-connectors/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'voice-connector-id))))
                                                        "UpdateVoiceConnector"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-voice-connector))
(common-lisp:progn
 (common-lisp:defun update-voice-connector-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key voice-connector-group-id name
                     voice-connector-items)
   (common-lisp:declare
    (common-lisp:ignorable voice-connector-group-id name
     voice-connector-items))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-voice-connector-group-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/voice-connector-groups/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'voice-connector-group-id))))
                                                        "UpdateVoiceConnectorGroup"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-voice-connector-group))
(common-lisp:progn
 (common-lisp:defun validate-e911address
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key aws-account-id street-number street-info
                     city state country postal-code)
   (common-lisp:declare
    (common-lisp:ignorable aws-account-id street-number street-info city state
     country postal-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-validate-e911address-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/emergency-calling/address"
                                                        "ValidateE911Address"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'validate-e911address))
