;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(uiop/package:define-package #:aws-sdk/services/resource-explorer-2/api (:use)
                             (:nicknames #:aws/resource-explorer-2)
                             (:import-from #:aws-sdk/generator/shape)
                             (:import-from #:aws-sdk/generator/operation)
                             (:import-from #:aws-sdk/api)
                             (:import-from #:aws-sdk/request)
                             (:import-from #:aws-sdk/json-request)
                             (:import-from #:aws-sdk/rest-json-request)
                             (:import-from #:aws-sdk/rest-xml-request)
                             (:import-from #:aws-sdk/query-request)
                             (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/resource-explorer-2/api)
(common-lisp:progn
 (common-lisp:define-condition resource-explorer-2-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'resource-explorer-2-error))
(common-lisp:progn
 (common-lisp:defclass resource-explorer-2-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "resource-explorer-2"
                        :api-version "2022-07-28" :host-prefix
                        "resource-explorer-2" :signing-name
                        "resource-explorer-2" :global-host common-lisp:nil))
 (common-lisp:export 'resource-explorer-2-request))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceQuotaExceededException" . service-quota-exceeded-exception)
    ("ThrottlingException" . throttling-exception)
    ("UnauthorizedException" . unauthorized-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:deftype awsservice-access-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (resource-explorer-2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:deftype account-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass associate-default-view-input common-lisp:nil
                       ((view-arn :initarg :view-arn :initform
                         (common-lisp:error ":view-arn is required") :type
                         (common-lisp:or
                          associate-default-view-input-view-arn-string
                          common-lisp:null)
                         :accessor
                         struct-shape-associate-default-view-input-view-arn
                         :shape "AssociateDefaultViewInputViewArnString"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-associate-default-view-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'associate-default-view-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'associate-default-view-input
                    'make-associate-default-view-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-default-view-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-default-view-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'view-arn))
      (common-lisp:list
       (common-lisp:cons "ViewArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-default-view-input))
   common-lisp:nil))
(common-lisp:deftype associate-default-view-input-view-arn-string ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass associate-default-view-output common-lisp:nil
                       ((view-arn :initarg :view-arn :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-associate-default-view-output-view-arn
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-associate-default-view-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'associate-default-view-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'associate-default-view-output
                    'make-associate-default-view-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-default-view-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-default-view-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'view-arn))
      (common-lisp:list
       (common-lisp:cons "ViewArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-default-view-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-get-view-error common-lisp:nil
                       ((error-message :initarg :error-message :initform
                         (common-lisp:error ":error-message is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-batch-get-view-error-error-message :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (view-arn :initarg :view-arn :initform
                         (common-lisp:error ":view-arn is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-batch-get-view-error-view-arn :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-get-view-error
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'batch-get-view-error
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-get-view-error 'make-batch-get-view-error))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input batch-get-view-error))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input batch-get-view-error))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "ErrorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'view-arn))
      (common-lisp:list
       (common-lisp:cons "ViewArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input batch-get-view-error))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype batch-get-view-errors ()
   '(trivial-types:proper-list batch-get-view-error))
 (common-lisp:defun make-batch-get-view-errors
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list batch-get-view-error))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass batch-get-view-input common-lisp:nil
                       ((view-arns :initarg :view-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or batch-get-view-input-view-arns-list
                                         common-lisp:null)
                         :accessor struct-shape-batch-get-view-input-view-arns
                         :shape "BatchGetViewInputViewArnsList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-get-view-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'batch-get-view-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-get-view-input 'make-batch-get-view-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input batch-get-view-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input batch-get-view-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'view-arns))
      (common-lisp:list
       (common-lisp:cons "ViewArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input batch-get-view-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype batch-get-view-input-view-arns-list ()
   '(trivial-types:proper-list string))
 (common-lisp:defun make-batch-get-view-input-view-arns-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass batch-get-view-output common-lisp:nil
                       ((errors :initarg :errors :initform common-lisp:nil
                         :type
                         (common-lisp:or batch-get-view-errors
                                         common-lisp:null)
                         :accessor struct-shape-batch-get-view-output-errors
                         :shape "BatchGetViewErrors" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (views :initarg :views :initform common-lisp:nil :type
                         (common-lisp:or view-list common-lisp:null) :accessor
                         struct-shape-batch-get-view-output-views :shape
                         "ViewList" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-get-view-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'batch-get-view-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-get-view-output 'make-batch-get-view-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-view-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-view-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'errors))
      (common-lisp:list
       (common-lisp:cons "Errors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'views))
      (common-lisp:list
       (common-lisp:cons "Views"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-view-output))
   common-lisp:nil))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (resource-explorer-2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message)))
(common-lisp:progn
 (common-lisp:defclass create-index-input common-lisp:nil
                       ((client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-index-input-client-token :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-create-index-input-tags :shape "TagMap"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-index-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-index-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-index-input 'make-create-index-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-index-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-index-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-index-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-index-output common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-index-output-arn :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor struct-shape-create-index-output-created-at
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or index-state common-lisp:null)
                         :accessor struct-shape-create-index-output-state
                         :shape "IndexState" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-index-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-index-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-index-output 'make-create-index-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-index-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-index-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-index-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-view-input common-lisp:nil
                       ((client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or create-view-input-client-token-string
                                         common-lisp:null)
                         :accessor struct-shape-create-view-input-client-token
                         :shape "CreateViewInputClientTokenString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (filters :initarg :filters :initform common-lisp:nil
                         :type (common-lisp:or search-filter common-lisp:null)
                         :accessor struct-shape-create-view-input-filters
                         :shape "SearchFilter" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (included-properties :initarg :included-properties
                         :initform common-lisp:nil :type
                         (common-lisp:or included-property-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-view-input-included-properties
                         :shape "IncludedPropertyList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (scope :initarg :scope :initform common-lisp:nil :type
                         (common-lisp:or create-view-input-scope-string
                                         common-lisp:null)
                         :accessor struct-shape-create-view-input-scope :shape
                         "CreateViewInputScopeString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-create-view-input-tags :shape "TagMap"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (view-name :initarg :view-name :initform
                         (common-lisp:error ":view-name is required") :type
                         (common-lisp:or view-name common-lisp:null) :accessor
                         struct-shape-create-view-input-view-name :shape
                         "ViewName" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-view-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-view-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-view-input 'make-create-view-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-view-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-view-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "Filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'included-properties))
      (common-lisp:list
       (common-lisp:cons "IncludedProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scope))
      (common-lisp:list
       (common-lisp:cons "Scope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'view-name))
      (common-lisp:list
       (common-lisp:cons "ViewName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-view-input))
   common-lisp:nil))
(common-lisp:deftype create-view-input-client-token-string ()
  'common-lisp:string)
(common-lisp:deftype create-view-input-scope-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass create-view-output common-lisp:nil
                       ((view :initarg :view :initform common-lisp:nil :type
                         (common-lisp:or view common-lisp:null) :accessor
                         struct-shape-create-view-output-view :shape "View"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-view-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-view-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-view-output 'make-create-view-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-view-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-view-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'view))
      (common-lisp:list
       (common-lisp:cons "View"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-view-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-index-input common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-index-input-arn :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-index-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-index-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-index-input 'make-delete-index-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-index-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-index-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-index-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-index-output common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-index-output-arn :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-updated-at :initarg :last-updated-at :initform
                         common-lisp:nil :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-index-output-last-updated-at
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or index-state common-lisp:null)
                         :accessor struct-shape-delete-index-output-state
                         :shape "IndexState" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-index-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-index-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-index-output 'make-delete-index-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-index-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-index-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-at))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-index-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-view-input common-lisp:nil
                       ((view-arn :initarg :view-arn :initform
                         (common-lisp:error ":view-arn is required") :type
                         (common-lisp:or delete-view-input-view-arn-string
                                         common-lisp:null)
                         :accessor struct-shape-delete-view-input-view-arn
                         :shape "DeleteViewInputViewArnString" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-view-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-view-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-view-input 'make-delete-view-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-view-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-view-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'view-arn))
      (common-lisp:list
       (common-lisp:cons "ViewArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-view-input))
   common-lisp:nil))
(common-lisp:deftype delete-view-input-view-arn-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass delete-view-output common-lisp:nil
                       ((view-arn :initarg :view-arn :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-delete-view-output-view-arn
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-view-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-view-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-view-output 'make-delete-view-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-view-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-view-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'view-arn))
      (common-lisp:list
       (common-lisp:cons "ViewArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-view-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-account-level-service-configuration-output
                       common-lisp:nil
                       ((org-configuration :initarg :org-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or org-configuration common-lisp:null)
                         :accessor
                         struct-shape-get-account-level-service-configuration-output-org-configuration
                         :shape "OrgConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-account-level-service-configuration-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-account-level-service-configuration-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-account-level-service-configuration-output
                    'make-get-account-level-service-configuration-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-account-level-service-configuration-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-account-level-service-configuration-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'org-configuration))
      (common-lisp:list
       (common-lisp:cons "OrgConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-account-level-service-configuration-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-default-view-output common-lisp:nil
                       ((view-arn :initarg :view-arn :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-get-default-view-output-view-arn :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-default-view-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-default-view-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-default-view-output 'make-get-default-view-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-default-view-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-default-view-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'view-arn))
      (common-lisp:list
       (common-lisp:cons "ViewArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-default-view-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-index-output common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-index-output-arn :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor struct-shape-get-index-output-created-at
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (last-updated-at :initarg :last-updated-at :initform
                         common-lisp:nil :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-index-output-last-updated-at :shape
                         "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (replicating-from :initarg :replicating-from :initform
                         common-lisp:nil :type
                         (common-lisp:or region-list common-lisp:null)
                         :accessor
                         struct-shape-get-index-output-replicating-from :shape
                         "RegionList" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (replicating-to :initarg :replicating-to :initform
                         common-lisp:nil :type
                         (common-lisp:or region-list common-lisp:null)
                         :accessor struct-shape-get-index-output-replicating-to
                         :shape "RegionList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or index-state common-lisp:null)
                         :accessor struct-shape-get-index-output-state :shape
                         "IndexState" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-get-index-output-tags :shape "TagMap"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or index-type common-lisp:null) :accessor
                         struct-shape-get-index-output-type :shape "IndexType"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-index-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-index-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-index-output 'make-get-index-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-index-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-index-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-at))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replicating-from))
      (common-lisp:list
       (common-lisp:cons "ReplicatingFrom"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replicating-to))
      (common-lisp:list
       (common-lisp:cons "ReplicatingTo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-index-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-view-input common-lisp:nil
                       ((view-arn :initarg :view-arn :initform
                         (common-lisp:error ":view-arn is required") :type
                         (common-lisp:or get-view-input-view-arn-string
                                         common-lisp:null)
                         :accessor struct-shape-get-view-input-view-arn :shape
                         "GetViewInputViewArnString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-view-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-view-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'get-view-input 'make-get-view-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-view-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-view-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'view-arn))
      (common-lisp:list
       (common-lisp:cons "ViewArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-view-input))
   common-lisp:nil))
(common-lisp:deftype get-view-input-view-arn-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass get-view-output common-lisp:nil
                       ((tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-get-view-output-tags :shape "TagMap"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (view :initarg :view :initform common-lisp:nil :type
                         (common-lisp:or view common-lisp:null) :accessor
                         struct-shape-get-view-output-view :shape "View"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-view-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-view-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'get-view-output 'make-get-view-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-view-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-view-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'view))
      (common-lisp:list
       (common-lisp:cons "View"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-view-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass included-property common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or included-property-name-string
                                         common-lisp:null)
                         :accessor struct-shape-included-property-name :shape
                         "IncludedPropertyNameString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-included-property
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'included-property
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'included-property 'make-included-property))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input included-property))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input included-property))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input included-property))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype included-property-list ()
   '(trivial-types:proper-list included-property))
 (common-lisp:defun make-included-property-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list included-property))
   aws-sdk/generator/shape::members))
(common-lisp:deftype included-property-name-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass index common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-index-arn :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (region :initarg :region :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-index-region :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or index-type common-lisp:null) :accessor
                         struct-shape-index-type :shape "IndexType" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-index
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'index
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'index 'make-index))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input index))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input index))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'region))
      (common-lisp:list
       (common-lisp:cons "Region"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input index))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype index-list () '(trivial-types:proper-list index))
 (common-lisp:defun make-index-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list index))
   aws-sdk/generator/shape::members))
(common-lisp:deftype index-state () 'common-lisp:string)
(common-lisp:deftype index-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (resource-explorer-2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message)))
(common-lisp:progn
 (common-lisp:defclass list-indexes-for-members-input common-lisp:nil
                       ((account-id-list :initarg :account-id-list :initform
                         (common-lisp:error ":account-id-list is required")
                         :type
                         (common-lisp:or
                          list-indexes-for-members-input-account-id-list-list
                          common-lisp:null)
                         :accessor
                         struct-shape-list-indexes-for-members-input-account-id-list
                         :shape "ListIndexesForMembersInputAccountIdListList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          list-indexes-for-members-input-max-results-integer
                          common-lisp:null)
                         :accessor
                         struct-shape-list-indexes-for-members-input-max-results
                         :shape "ListIndexesForMembersInputMaxResultsInteger"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          list-indexes-for-members-input-next-token-string
                          common-lisp:null)
                         :accessor
                         struct-shape-list-indexes-for-members-input-next-token
                         :shape "ListIndexesForMembersInputNextTokenString"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-indexes-for-members-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-indexes-for-members-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-indexes-for-members-input
                    'make-list-indexes-for-members-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-indexes-for-members-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-indexes-for-members-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id-list))
      (common-lisp:list
       (common-lisp:cons "AccountIdList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-indexes-for-members-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype list-indexes-for-members-input-account-id-list-list ()
   '(trivial-types:proper-list account-id))
 (common-lisp:defun make-list-indexes-for-members-input-account-id-list-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list account-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype list-indexes-for-members-input-max-results-integer ()
  'common-lisp:integer)
(common-lisp:deftype list-indexes-for-members-input-next-token-string ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass list-indexes-for-members-output common-lisp:nil
                       ((indexes :initarg :indexes :initform common-lisp:nil
                         :type
                         (common-lisp:or member-index-list common-lisp:null)
                         :accessor
                         struct-shape-list-indexes-for-members-output-indexes
                         :shape "MemberIndexList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-indexes-for-members-output-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-indexes-for-members-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-indexes-for-members-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-indexes-for-members-output
                    'make-list-indexes-for-members-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-indexes-for-members-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-indexes-for-members-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'indexes))
      (common-lisp:list
       (common-lisp:cons "Indexes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-indexes-for-members-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-indexes-input common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or list-indexes-input-max-results-integer
                                         common-lisp:null)
                         :accessor struct-shape-list-indexes-input-max-results
                         :shape "ListIndexesInputMaxResultsInteger" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or list-indexes-input-next-token-string
                                         common-lisp:null)
                         :accessor struct-shape-list-indexes-input-next-token
                         :shape "ListIndexesInputNextTokenString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (regions :initarg :regions :initform common-lisp:nil
                         :type
                         (common-lisp:or list-indexes-input-regions-list
                                         common-lisp:null)
                         :accessor struct-shape-list-indexes-input-regions
                         :shape "ListIndexesInputRegionsList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or index-type common-lisp:null) :accessor
                         struct-shape-list-indexes-input-type :shape
                         "IndexType" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-indexes-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-indexes-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-indexes-input 'make-list-indexes-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-indexes-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-indexes-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'regions))
      (common-lisp:list
       (common-lisp:cons "Regions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-indexes-input))
   common-lisp:nil))
(common-lisp:deftype list-indexes-input-max-results-integer ()
  'common-lisp:integer)
(common-lisp:deftype list-indexes-input-next-token-string ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype list-indexes-input-regions-list ()
   '(trivial-types:proper-list string))
 (common-lisp:defun make-list-indexes-input-regions-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass list-indexes-output common-lisp:nil
                       ((indexes :initarg :indexes :initform common-lisp:nil
                         :type (common-lisp:or index-list common-lisp:null)
                         :accessor struct-shape-list-indexes-output-indexes
                         :shape "IndexList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-indexes-output-next-token :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-indexes-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-indexes-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-indexes-output 'make-list-indexes-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-indexes-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-indexes-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'indexes))
      (common-lisp:list
       (common-lisp:cons "Indexes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-indexes-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-supported-resource-types-input common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          list-supported-resource-types-input-max-results-integer
                          common-lisp:null)
                         :accessor
                         struct-shape-list-supported-resource-types-input-max-results
                         :shape
                         "ListSupportedResourceTypesInputMaxResultsInteger"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-supported-resource-types-input-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-supported-resource-types-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-supported-resource-types-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-supported-resource-types-input
                    'make-list-supported-resource-types-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-supported-resource-types-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-supported-resource-types-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-supported-resource-types-input))
   common-lisp:nil))
(common-lisp:deftype list-supported-resource-types-input-max-results-integer ()
  'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass list-supported-resource-types-output common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-supported-resource-types-output-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-types :initarg :resource-types :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-type-list common-lisp:null)
                         :accessor
                         struct-shape-list-supported-resource-types-output-resource-types
                         :shape "ResourceTypeList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-supported-resource-types-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-supported-resource-types-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-supported-resource-types-output
                    'make-list-supported-resource-types-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-supported-resource-types-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-supported-resource-types-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-types))
      (common-lisp:list
       (common-lisp:cons "ResourceTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-supported-resource-types-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-input common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-input-resource-arn
                         :shape "String" :location "uri" :location-name
                         "resourceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-tags-for-resource-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-input
                    'make-list-tags-for-resource-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-output common-lisp:nil
                       ((tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-output-tags :shape
                         "TagMap" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-output
                    'make-list-tags-for-resource-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-views-input common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or list-views-input-max-results-integer
                                         common-lisp:null)
                         :accessor struct-shape-list-views-input-max-results
                         :shape "ListViewsInputMaxResultsInteger" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-views-input-next-token :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-views-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-views-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-views-input 'make-list-views-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-views-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-views-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-views-input))
   common-lisp:nil))
(common-lisp:deftype list-views-input-max-results-integer ()
  'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass list-views-output common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-views-output-next-token :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (views :initarg :views :initform common-lisp:nil :type
                         (common-lisp:or view-arn-list common-lisp:null)
                         :accessor struct-shape-list-views-output-views :shape
                         "ViewArnList" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-views-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-views-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-views-output 'make-list-views-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-views-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-views-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'views))
      (common-lisp:list
       (common-lisp:cons "Views"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-views-output))
   common-lisp:nil))
(common-lisp:deftype long () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass member-index common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-member-index-account-id :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-member-index-arn :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (region :initarg :region :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-member-index-region :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or index-type common-lisp:null) :accessor
                         struct-shape-member-index-type :shape "IndexType"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-member-index
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'member-index
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'member-index 'make-member-index))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input member-index))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input member-index))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'region))
      (common-lisp:list
       (common-lisp:cons "Region"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input member-index))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype member-index-list ()
   '(trivial-types:proper-list member-index))
 (common-lisp:defun make-member-index-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list member-index))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass org-configuration common-lisp:nil
                       ((awsservice-access-status :initarg
                         :awsservice-access-status :initform
                         (common-lisp:error
                          ":awsservice-access-status is required")
                         :type
                         (common-lisp:or awsservice-access-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-org-configuration-awsservice-access-status
                         :shape "AWSServiceAccessStatus" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (service-linked-role :initarg :service-linked-role
                         :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-org-configuration-service-linked-role
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-org-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'org-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'org-configuration 'make-org-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input org-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input org-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'awsservice-access-status))
      (common-lisp:list
       (common-lisp:cons "AWSServiceAccessStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-linked-role))
      (common-lisp:list
       (common-lisp:cons "ServiceLinkedRole"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input org-configuration))
   common-lisp:nil))
(common-lisp:deftype query-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype region-list () '(trivial-types:proper-list string))
 (common-lisp:defun make-region-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass resource common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-resource-arn :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (last-reported-at :initarg :last-reported-at :initform
                         common-lisp:nil :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor struct-shape-resource-last-reported-at
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (owning-account-id :initarg :owning-account-id
                         :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-resource-owning-account-id :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (properties :initarg :properties :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-property-list
                                         common-lisp:null)
                         :accessor struct-shape-resource-properties :shape
                         "ResourcePropertyList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (region :initarg :region :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-resource-region :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (resource-type :initarg :resource-type :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-resource-resource-type :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (service :initarg :service :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-resource-service :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-resource
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'resource
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'resource 'make-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-reported-at))
      (common-lisp:list
       (common-lisp:cons "LastReportedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owning-account-id))
      (common-lisp:list
       (common-lisp:cons "OwningAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'properties))
      (common-lisp:list
       (common-lisp:cons "Properties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'region))
      (common-lisp:list
       (common-lisp:cons "Region"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service))
      (common-lisp:list
       (common-lisp:cons "Service"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resource))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass resource-count common-lisp:nil
                       ((complete :initarg :complete :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor struct-shape-resource-count-complete :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (total-resources :initarg :total-resources :initform
                         common-lisp:nil :type
                         (common-lisp:or long common-lisp:null) :accessor
                         struct-shape-resource-count-total-resources :shape
                         "Long" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-resource-count
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'resource-count
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'resource-count 'make-resource-count))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resource-count))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resource-count))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'complete))
      (common-lisp:list
       (common-lisp:cons "Complete"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total-resources))
      (common-lisp:list
       (common-lisp:cons "TotalResources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resource-count))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype resource-list () '(trivial-types:proper-list resource))
 (common-lisp:defun make-resource-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (resource-explorer-2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:progn
 (common-lisp:defclass resource-property common-lisp:nil
                       ((last-reported-at :initarg :last-reported-at :initform
                         common-lisp:nil :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor
                         struct-shape-resource-property-last-reported-at :shape
                         "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-resource-property-name :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-resource-property
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'resource-property
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'resource-property 'make-resource-property))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resource-property))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resource-property))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-reported-at))
      (common-lisp:list
       (common-lisp:cons "LastReportedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resource-property))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype resource-property-list ()
   '(trivial-types:proper-list resource-property))
 (common-lisp:defun make-resource-property-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-property))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype resource-type-list ()
   '(trivial-types:proper-list supported-resource-type))
 (common-lisp:defun make-resource-type-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list supported-resource-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass search-filter common-lisp:nil
                       ((filter-string :initarg :filter-string :initform
                         (common-lisp:error ":filter-string is required") :type
                         (common-lisp:or search-filter-filter-string-string
                                         common-lisp:null)
                         :accessor struct-shape-search-filter-filter-string
                         :shape "SearchFilterFilterStringString" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-search-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'search-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'search-filter 'make-search-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input search-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input search-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter-string))
      (common-lisp:list
       (common-lisp:cons "FilterString"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input search-filter))
   common-lisp:nil))
(common-lisp:deftype search-filter-filter-string-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass search-input common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or search-input-max-results-integer
                                         common-lisp:null)
                         :accessor struct-shape-search-input-max-results :shape
                         "SearchInputMaxResultsInteger" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or search-input-next-token-string
                                         common-lisp:null)
                         :accessor struct-shape-search-input-next-token :shape
                         "SearchInputNextTokenString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (query-string :initarg :query-string :initform
                         (common-lisp:error ":query-string is required") :type
                         (common-lisp:or query-string common-lisp:null)
                         :accessor struct-shape-search-input-query-string
                         :shape "QueryString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (view-arn :initarg :view-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or search-input-view-arn-string
                                         common-lisp:null)
                         :accessor struct-shape-search-input-view-arn :shape
                         "SearchInputViewArnString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-search-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'search-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'search-input 'make-search-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input search-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input search-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'query-string))
      (common-lisp:list
       (common-lisp:cons "QueryString"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'view-arn))
      (common-lisp:list
       (common-lisp:cons "ViewArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input search-input))
   common-lisp:nil))
(common-lisp:deftype search-input-max-results-integer () 'common-lisp:integer)
(common-lisp:deftype search-input-next-token-string () 'common-lisp:string)
(common-lisp:deftype search-input-view-arn-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass search-output common-lisp:nil
                       ((count :initarg :count :initform common-lisp:nil :type
                         (common-lisp:or resource-count common-lisp:null)
                         :accessor struct-shape-search-output-count :shape
                         "ResourceCount" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or search-output-next-token-string
                                         common-lisp:null)
                         :accessor struct-shape-search-output-next-token :shape
                         "SearchOutputNextTokenString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (resources :initarg :resources :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-list common-lisp:null)
                         :accessor struct-shape-search-output-resources :shape
                         "ResourceList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (view-arn :initarg :view-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or search-output-view-arn-string
                                         common-lisp:null)
                         :accessor struct-shape-search-output-view-arn :shape
                         "SearchOutputViewArnString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-search-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'search-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'search-output 'make-search-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input search-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input search-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'count))
      (common-lisp:list
       (common-lisp:cons "Count"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resources))
      (common-lisp:list
       (common-lisp:cons "Resources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'view-arn))
      (common-lisp:list
       (common-lisp:cons "ViewArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input search-output))
   common-lisp:nil))
(common-lisp:deftype search-output-next-token-string () 'common-lisp:string)
(common-lisp:deftype search-output-view-arn-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition service-quota-exceeded-exception
     (resource-explorer-2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-quota-exceeded-exception-message)
      (name :initarg :name :initform common-lisp:nil :reader
       service-quota-exceeded-exception-name)
      (value :initarg :value :initform common-lisp:nil :reader
       service-quota-exceeded-exception-value)))
 (common-lisp:export
  (common-lisp:list 'service-quota-exceeded-exception
                    'service-quota-exceeded-exception-message
                    'service-quota-exceeded-exception-name
                    'service-quota-exceeded-exception-value)))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype string-list () '(trivial-types:proper-list string))
 (common-lisp:defun make-string-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass supported-resource-type common-lisp:nil
                       ((resource-type :initarg :resource-type :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-supported-resource-type-resource-type
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (service :initarg :service :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-supported-resource-type-service
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-supported-resource-type
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'supported-resource-type
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'supported-resource-type 'make-supported-resource-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          supported-resource-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          supported-resource-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service))
      (common-lisp:list
       (common-lisp:cons "Service"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          supported-resource-type))
   common-lisp:nil))
(common-lisp:deftype synthetic-timestamp-date-time () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-map () 'common-lisp:hash-table)
 (common-lisp:defun make-tag-map (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass tag-resource-input common-lisp:nil
                       ((tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-tag-resource-input-tags :shape "TagMap"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-tag-resource-input-resource-arn :shape
                         "String" :location "uri" :location-name
                         "resourceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-input 'make-tag-resource-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-output common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-output 'make-tag-resource-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (resource-explorer-2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition unauthorized-exception
     (resource-explorer-2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       unauthorized-exception-message)))
 (common-lisp:export
  (common-lisp:list 'unauthorized-exception 'unauthorized-exception-message)))
(common-lisp:progn
 (common-lisp:defclass untag-resource-input common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-untag-resource-input-resource-arn :shape
                         "String" :location "uri" :location-name "resourceArn")
                        (tag-keys :initarg :tag-keys :initform
                         (common-lisp:error ":tagkeys is required") :type
                         (common-lisp:or string-list common-lisp:null)
                         :accessor struct-shape-untag-resource-input-tag-keys
                         :shape "StringList" :location "querystring"
                         :location-name "tagKeys"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-input 'make-untag-resource-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input untag-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input untag-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input untag-resource-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-output common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-output 'make-untag-resource-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-index-type-input common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-index-type-input-arn :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (type :initarg :type :initform
                         (common-lisp:error ":type is required") :type
                         (common-lisp:or index-type common-lisp:null) :accessor
                         struct-shape-update-index-type-input-type :shape
                         "IndexType" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-index-type-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-index-type-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-index-type-input 'make-update-index-type-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-index-type-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-index-type-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-index-type-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-index-type-output common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-index-type-output-arn :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-updated-at :initarg :last-updated-at :initform
                         common-lisp:nil :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-index-type-output-last-updated-at
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or index-state common-lisp:null)
                         :accessor struct-shape-update-index-type-output-state
                         :shape "IndexState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or index-type common-lisp:null) :accessor
                         struct-shape-update-index-type-output-type :shape
                         "IndexType" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-index-type-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-index-type-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-index-type-output 'make-update-index-type-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-index-type-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-index-type-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-at))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-index-type-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-view-input common-lisp:nil
                       ((filters :initarg :filters :initform common-lisp:nil
                         :type (common-lisp:or search-filter common-lisp:null)
                         :accessor struct-shape-update-view-input-filters
                         :shape "SearchFilter" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (included-properties :initarg :included-properties
                         :initform common-lisp:nil :type
                         (common-lisp:or included-property-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-view-input-included-properties
                         :shape "IncludedPropertyList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (view-arn :initarg :view-arn :initform
                         (common-lisp:error ":view-arn is required") :type
                         (common-lisp:or update-view-input-view-arn-string
                                         common-lisp:null)
                         :accessor struct-shape-update-view-input-view-arn
                         :shape "UpdateViewInputViewArnString" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-view-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-view-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-view-input 'make-update-view-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-view-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-view-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "Filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'included-properties))
      (common-lisp:list
       (common-lisp:cons "IncludedProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'view-arn))
      (common-lisp:list
       (common-lisp:cons "ViewArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-view-input))
   common-lisp:nil))
(common-lisp:deftype update-view-input-view-arn-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass update-view-output common-lisp:nil
                       ((view :initarg :view :initform common-lisp:nil :type
                         (common-lisp:or view common-lisp:null) :accessor
                         struct-shape-update-view-output-view :shape "View"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-view-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-view-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-view-output 'make-update-view-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-view-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-view-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'view))
      (common-lisp:list
       (common-lisp:cons "View"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-view-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (resource-explorer-2-error)
     ((field-list :initarg :field-list :initform common-lisp:nil :reader
       validation-exception-field-list)
      (message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-field-list
                    'validation-exception-message)))
(common-lisp:progn
 (common-lisp:defclass validation-exception-field common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-validation-exception-field-name :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (validation-issue :initarg :validation-issue :initform
                         (common-lisp:error ":validation-issue is required")
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-validation-exception-field-validation-issue
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-validation-exception-field
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'validation-exception-field
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'validation-exception-field
                    'make-validation-exception-field))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          validation-exception-field))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          validation-exception-field))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'validation-issue))
      (common-lisp:list
       (common-lisp:cons "ValidationIssue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          validation-exception-field))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype validation-exception-field-list ()
   '(trivial-types:proper-list validation-exception-field))
 (common-lisp:defun make-validation-exception-field-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            validation-exception-field))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass view common-lisp:nil
                       ((filters :initarg :filters :initform common-lisp:nil
                         :type (common-lisp:or search-filter common-lisp:null)
                         :accessor struct-shape-view-filters :shape
                         "SearchFilter" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (included-properties :initarg :included-properties
                         :initform common-lisp:nil :type
                         (common-lisp:or included-property-list
                                         common-lisp:null)
                         :accessor struct-shape-view-included-properties :shape
                         "IncludedPropertyList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-updated-at :initarg :last-updated-at :initform
                         common-lisp:nil :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor struct-shape-view-last-updated-at :shape
                         "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (owner :initarg :owner :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-view-owner :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (scope :initarg :scope :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-view-scope :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (view-arn :initarg :view-arn :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-view-view-arn :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-view (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'view
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'view 'make-view))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input view))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input view))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "Filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'included-properties))
      (common-lisp:list
       (common-lisp:cons "IncludedProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-at))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owner))
      (common-lisp:list
       (common-lisp:cons "Owner"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scope))
      (common-lisp:list
       (common-lisp:cons "Scope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'view-arn))
      (common-lisp:list
       (common-lisp:cons "ViewArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input view))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype view-arn-list () '(trivial-types:proper-list string))
 (common-lisp:defun make-view-arn-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype view-list () '(trivial-types:proper-list view))
 (common-lisp:defun make-view-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list view))
   aws-sdk/generator/shape::members))
(common-lisp:deftype view-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun associate-default-view
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key view-arn)
   (common-lisp:declare (common-lisp:ignorable view-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-associate-default-view-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'resource-explorer-2-request aws-sdk/generator/operation::input "POST"
        "/AssociateDefaultView" "AssociateDefaultView"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'associate-default-view))
(common-lisp:progn
 (common-lisp:defun batch-get-view
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key view-arns)
   (common-lisp:declare (common-lisp:ignorable view-arns))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-get-view-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'resource-explorer-2-request aws-sdk/generator/operation::input "POST"
        "/BatchGetView" "BatchGetView"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'batch-get-view))
(common-lisp:progn
 (common-lisp:defun create-index
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token tags)
   (common-lisp:declare (common-lisp:ignorable client-token tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-index-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'resource-explorer-2-request aws-sdk/generator/operation::input "POST"
        "/CreateIndex" "CreateIndex"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-index))
(common-lisp:progn
 (common-lisp:defun create-view
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token filters included-properties
                     scope tags view-name)
   (common-lisp:declare
    (common-lisp:ignorable client-token filters included-properties scope tags
     view-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-view-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'resource-explorer-2-request aws-sdk/generator/operation::input "POST"
        "/CreateView" "CreateView"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-view))
(common-lisp:progn
 (common-lisp:defun delete-index
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-index-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'resource-explorer-2-request aws-sdk/generator/operation::input "POST"
        "/DeleteIndex" "DeleteIndex"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-index))
(common-lisp:progn
 (common-lisp:defun delete-view
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key view-arn)
   (common-lisp:declare (common-lisp:ignorable view-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-view-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'resource-explorer-2-request aws-sdk/generator/operation::input "POST"
        "/DeleteView" "DeleteView"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-view))
(common-lisp:progn
 (common-lisp:defun disassociate-default-view ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'resource-explorer-2-request :method "POST"
                                :path "/DisassociateDefaultView" :operation
                                "DisassociateDefaultView"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'disassociate-default-view))
(common-lisp:progn
 (common-lisp:defun get-account-level-service-configuration ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'resource-explorer-2-request :method "POST"
                                :path "/GetAccountLevelServiceConfiguration"
                                :operation
                                "GetAccountLevelServiceConfiguration"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-account-level-service-configuration))
(common-lisp:progn
 (common-lisp:defun get-default-view ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'resource-explorer-2-request :method "POST"
                                :path "/GetDefaultView" :operation
                                "GetDefaultView"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-default-view))
(common-lisp:progn
 (common-lisp:defun get-index ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'resource-explorer-2-request :method "POST"
                                :path "/GetIndex" :operation "GetIndex"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-index))
(common-lisp:progn
 (common-lisp:defun get-view
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key view-arn)
   (common-lisp:declare (common-lisp:ignorable view-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-view-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'resource-explorer-2-request aws-sdk/generator/operation::input "POST"
        "/GetView" "GetView"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-view))
(common-lisp:progn
 (common-lisp:defun list-indexes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token regions type)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token regions type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-indexes-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'resource-explorer-2-request aws-sdk/generator/operation::input "POST"
        "/ListIndexes" "ListIndexes"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-indexes))
(common-lisp:progn
 (common-lisp:defun list-indexes-for-members
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id-list max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable account-id-list max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-indexes-for-members-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'resource-explorer-2-request aws-sdk/generator/operation::input "POST"
        "/ListIndexesForMembers" "ListIndexesForMembers"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-indexes-for-members))
(common-lisp:progn
 (common-lisp:defun list-supported-resource-types
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-supported-resource-types-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'resource-explorer-2-request aws-sdk/generator/operation::input "POST"
        "/ListSupportedResourceTypes" "ListSupportedResourceTypes"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-supported-resource-types))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'resource-explorer-2-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun list-views
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-views-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'resource-explorer-2-request aws-sdk/generator/operation::input "POST"
        "/ListViews" "ListViews"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-views))
(common-lisp:progn
 (common-lisp:defun search
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token query-string
                     view-arn)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token query-string view-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-search-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'resource-explorer-2-request aws-sdk/generator/operation::input "POST"
        "/Search" "Search"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'search))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key tags resource-arn)
   (common-lisp:declare (common-lisp:ignorable tags resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'resource-explorer-2-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "TagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'resource-explorer-2-request aws-sdk/generator/operation::input
        "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-index-type
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn type)
   (common-lisp:declare (common-lisp:ignorable arn type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-index-type-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'resource-explorer-2-request aws-sdk/generator/operation::input "POST"
        "/UpdateIndexType" "UpdateIndexType"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-index-type))
(common-lisp:progn
 (common-lisp:defun update-view
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filters included-properties view-arn)
   (common-lisp:declare
    (common-lisp:ignorable filters included-properties view-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-view-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'resource-explorer-2-request aws-sdk/generator/operation::input "POST"
        "/UpdateView" "UpdateView"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-view))
