;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/apigatewayv2/api
  (:use)
  (:nicknames #:aws/apigatewayv2)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/json-request)
  (:import-from #:aws-sdk/rest-json-request)
  (:import-from #:aws-sdk/rest-xml-request)
  (:import-from #:aws-sdk/query-request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/apigatewayv2/api)
(common-lisp:progn
 (common-lisp:define-condition apigatewayv2-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'apigatewayv2-error))
(common-lisp:progn
 (common-lisp:defclass apigatewayv2-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "apigatewayv2" :api-version
                        "2018-11-29" :host-prefix "apigateway" :signing-name
                        "apigateway" :global-host common-lisp:nil))
 (common-lisp:export 'apigatewayv2-request))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("BadRequestException" . bad-request-exception)
    ("ConflictException" . conflict-exception)
    ("NotFoundException" . not-found-exception)
    ("TooManyRequestsException" . too-many-requests-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (apigatewayv2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:progn
 (common-lisp:defclass access-log-settings common-lisp:nil
                       ((destination-arn :initarg :destination-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-access-log-settings-destination-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         "destinationArn")
                        (format :initarg :format :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between1and1024
                                         common-lisp:null)
                         :accessor struct-shape-access-log-settings-format
                         :shape "StringWithLengthBetween1And1024" :location
                         common-lisp:nil :location-name "format"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-access-log-settings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'access-log-settings
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'access-log-settings 'make-access-log-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input access-log-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input access-log-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-arn))
      (common-lisp:list
       (common-lisp:cons "DestinationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'format))
      (common-lisp:list
       (common-lisp:cons "Format"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input access-log-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass api common-lisp:nil
                       ((api-endpoint :initarg :api-endpoint :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-api-api-endpoint :shape "__string"
                         :location common-lisp:nil :location-name
                         "apiEndpoint")
                        (api-gateway-managed :initarg :api-gateway-managed
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-api-api-gateway-managed :shape
                         "__boolean" :location common-lisp:nil :location-name
                         "apiGatewayManaged")
                        (api-id :initarg :api-id :initform common-lisp:nil
                         :type (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-api-api-id :shape "Id" :location
                         common-lisp:nil :location-name "apiId")
                        (api-key-selection-expression :initarg
                         :api-key-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-api-api-key-selection-expression :shape
                         "SelectionExpression" :location common-lisp:nil
                         :location-name "apiKeySelectionExpression")
                        (cors-configuration :initarg :cors-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or cors common-lisp:null) :accessor
                         struct-shape-api-cors-configuration :shape "Cors"
                         :location common-lisp:nil :location-name
                         "corsConfiguration")
                        (created-date :initarg :created-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor struct-shape-api-created-date :shape
                         "__timestampIso8601" :location common-lisp:nil
                         :location-name "createdDate")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor struct-shape-api-description :shape
                         "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description")
                        (disable-schema-validation :initarg
                         :disable-schema-validation :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-api-disable-schema-validation
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "disableSchemaValidation")
                        (disable-execute-api-endpoint :initarg
                         :disable-execute-api-endpoint :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-api-disable-execute-api-endpoint :shape
                         "__boolean" :location common-lisp:nil :location-name
                         "disableExecuteApiEndpoint")
                        (import-info :initarg :import-info :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-api-import-info :shape
                         "__listOf__string" :location common-lisp:nil
                         :location-name "importInfo")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-api-name :shape
                         "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "name")
                        (protocol-type :initarg :protocol-type :initform
                         (common-lisp:error ":protocol-type is required") :type
                         (common-lisp:or protocol-type common-lisp:null)
                         :accessor struct-shape-api-protocol-type :shape
                         "ProtocolType" :location common-lisp:nil
                         :location-name "protocolType")
                        (route-selection-expression :initarg
                         :route-selection-expression :initform
                         (common-lisp:error
                          ":route-selection-expression is required")
                         :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor struct-shape-api-route-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "routeSelectionExpression")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-api-tags :shape "Tags" :location
                         common-lisp:nil :location-name "tags")
                        (version :initarg :version :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor struct-shape-api-version :shape
                         "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name "version")
                        (warnings :initarg :warnings :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-api-warnings :shape
                         "__listOf__string" :location common-lisp:nil
                         :location-name "warnings"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-api (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'api
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'api 'make-api))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input api))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input api))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-endpoint))
      (common-lisp:list
       (common-lisp:cons "ApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-managed))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-id))
      (common-lisp:list
       (common-lisp:cons "ApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-key-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ApiKeySelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cors-configuration))
      (common-lisp:list
       (common-lisp:cons "CorsConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-schema-validation))
      (common-lisp:list
       (common-lisp:cons "DisableSchemaValidation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-execute-api-endpoint))
      (common-lisp:list
       (common-lisp:cons "DisableExecuteApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'import-info))
      (common-lisp:list
       (common-lisp:cons "ImportInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol-type))
      (common-lisp:list
       (common-lisp:cons "ProtocolType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'route-selection-expression))
      (common-lisp:list
       (common-lisp:cons "RouteSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warnings))
      (common-lisp:list
       (common-lisp:cons "Warnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input api))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass api-mapping common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-api-mapping-api-id :shape "Id" :location
                         common-lisp:nil :location-name "apiId")
                        (api-mapping-id :initarg :api-mapping-id :initform
                         common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-api-mapping-api-mapping-id :shape "Id"
                         :location common-lisp:nil :location-name
                         "apiMappingId")
                        (api-mapping-key :initarg :api-mapping-key :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-key common-lisp:null)
                         :accessor struct-shape-api-mapping-api-mapping-key
                         :shape "SelectionKey" :location common-lisp:nil
                         :location-name "apiMappingKey")
                        (stage :initarg :stage :initform
                         (common-lisp:error ":stage is required") :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-api-mapping-stage :shape
                         "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "stage"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-api-mapping
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'api-mapping
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'api-mapping 'make-api-mapping))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input api-mapping))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input api-mapping))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-id))
      (common-lisp:list
       (common-lisp:cons "ApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-mapping-id))
      (common-lisp:list
       (common-lisp:cons "ApiMappingId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-mapping-key))
      (common-lisp:list
       (common-lisp:cons "ApiMappingKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "Stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input api-mapping))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass api-mappings common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or |__listOfApiMapping| common-lisp:null)
                         :accessor struct-shape-api-mappings-items :shape
                         "__listOfApiMapping" :location common-lisp:nil
                         :location-name "items")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-api-mappings-next-token :shape
                         "NextToken" :location common-lisp:nil :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-api-mappings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'api-mappings
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'api-mappings 'make-api-mappings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input api-mappings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input api-mappings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input api-mappings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass apis common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or |__listOfApi| common-lisp:null)
                         :accessor struct-shape-apis-items :shape "__listOfApi"
                         :location common-lisp:nil :location-name "items")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-apis-next-token :shape "NextToken"
                         :location common-lisp:nil :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-apis (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'apis
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'apis 'make-apis))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input apis))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input apis))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input apis))
   common-lisp:nil))
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype authorization-scopes ()
   '(trivial-types:proper-list string-with-length-between1and64))
 (common-lisp:defun make-authorization-scopes
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            string-with-length-between1and64))
   aws-sdk/generator/shape::members))
(common-lisp:deftype authorization-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass authorizer common-lisp:nil
                       ((authorizer-credentials-arn :initarg
                         :authorizer-credentials-arn :initform common-lisp:nil
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-authorizer-authorizer-credentials-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         "authorizerCredentialsArn")
                        (authorizer-id :initarg :authorizer-id :initform
                         common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-authorizer-authorizer-id :shape "Id"
                         :location common-lisp:nil :location-name
                         "authorizerId")
                        (authorizer-result-ttl-in-seconds :initarg
                         :authorizer-result-ttl-in-seconds :initform
                         common-lisp:nil :type
                         (common-lisp:or integer-with-length-between0and3600
                                         common-lisp:null)
                         :accessor
                         struct-shape-authorizer-authorizer-result-ttl-in-seconds
                         :shape "IntegerWithLengthBetween0And3600" :location
                         common-lisp:nil :location-name
                         "authorizerResultTtlInSeconds")
                        (authorizer-type :initarg :authorizer-type :initform
                         common-lisp:nil :type
                         (common-lisp:or authorizer-type common-lisp:null)
                         :accessor struct-shape-authorizer-authorizer-type
                         :shape "AuthorizerType" :location common-lisp:nil
                         :location-name "authorizerType")
                        (authorizer-uri :initarg :authorizer-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or uri-with-length-between1and2048
                                         common-lisp:null)
                         :accessor struct-shape-authorizer-authorizer-uri
                         :shape "UriWithLengthBetween1And2048" :location
                         common-lisp:nil :location-name "authorizerUri")
                        (identity-source :initarg :identity-source :initform
                         common-lisp:nil :type
                         (common-lisp:or identity-source-list common-lisp:null)
                         :accessor struct-shape-authorizer-identity-source
                         :shape "IdentitySourceList" :location common-lisp:nil
                         :location-name "identitySource")
                        (identity-validation-expression :initarg
                         :identity-validation-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-authorizer-identity-validation-expression
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name
                         "identityValidationExpression")
                        (jwt-configuration :initarg :jwt-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or jwtconfiguration common-lisp:null)
                         :accessor struct-shape-authorizer-jwt-configuration
                         :shape "JWTConfiguration" :location common-lisp:nil
                         :location-name "jwtConfiguration")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-authorizer-name :shape
                         "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "name")
                        (authorizer-payload-format-version :initarg
                         :authorizer-payload-format-version :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor
                         struct-shape-authorizer-authorizer-payload-format-version
                         :shape "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name
                         "authorizerPayloadFormatVersion")
                        (enable-simple-responses :initarg
                         :enable-simple-responses :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-authorizer-enable-simple-responses :shape
                         "__boolean" :location common-lisp:nil :location-name
                         "enableSimpleResponses"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-authorizer
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'authorizer
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'authorizer 'make-authorizer))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input authorizer))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input authorizer))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-credentials-arn))
      (common-lisp:list
       (common-lisp:cons "AuthorizerCredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-id))
      (common-lisp:list
       (common-lisp:cons "AuthorizerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-result-ttl-in-seconds))
      (common-lisp:list
       (common-lisp:cons "AuthorizerResultTtlInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-type))
      (common-lisp:list
       (common-lisp:cons "AuthorizerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-uri))
      (common-lisp:list
       (common-lisp:cons "AuthorizerUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-source))
      (common-lisp:list
       (common-lisp:cons "IdentitySource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'identity-validation-expression))
      (common-lisp:list
       (common-lisp:cons "IdentityValidationExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'jwt-configuration))
      (common-lisp:list
       (common-lisp:cons "JwtConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-payload-format-version))
      (common-lisp:list
       (common-lisp:cons "AuthorizerPayloadFormatVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-simple-responses))
      (common-lisp:list
       (common-lisp:cons "EnableSimpleResponses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input authorizer))
   common-lisp:nil))
(common-lisp:deftype authorizer-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass authorizers common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or |__listOfAuthorizer| common-lisp:null)
                         :accessor struct-shape-authorizers-items :shape
                         "__listOfAuthorizer" :location common-lisp:nil
                         :location-name "items")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-authorizers-next-token :shape "NextToken"
                         :location common-lisp:nil :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-authorizers
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'authorizers
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'authorizers 'make-authorizers))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input authorizers))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input authorizers))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input authorizers))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition bad-request-exception
     (apigatewayv2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       bad-request-exception-message)))
 (common-lisp:export
  (common-lisp:list 'bad-request-exception 'bad-request-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (apigatewayv2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message)))
(common-lisp:deftype connection-type () 'common-lisp:string)
(common-lisp:deftype content-handling-strategy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass cors common-lisp:nil
                       ((allow-credentials :initarg :allow-credentials
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-cors-allow-credentials :shape
                         "__boolean" :location common-lisp:nil :location-name
                         "allowCredentials")
                        (allow-headers :initarg :allow-headers :initform
                         common-lisp:nil :type
                         (common-lisp:or cors-header-list common-lisp:null)
                         :accessor struct-shape-cors-allow-headers :shape
                         "CorsHeaderList" :location common-lisp:nil
                         :location-name "allowHeaders")
                        (allow-methods :initarg :allow-methods :initform
                         common-lisp:nil :type
                         (common-lisp:or cors-method-list common-lisp:null)
                         :accessor struct-shape-cors-allow-methods :shape
                         "CorsMethodList" :location common-lisp:nil
                         :location-name "allowMethods")
                        (allow-origins :initarg :allow-origins :initform
                         common-lisp:nil :type
                         (common-lisp:or cors-origin-list common-lisp:null)
                         :accessor struct-shape-cors-allow-origins :shape
                         "CorsOriginList" :location common-lisp:nil
                         :location-name "allowOrigins")
                        (expose-headers :initarg :expose-headers :initform
                         common-lisp:nil :type
                         (common-lisp:or cors-header-list common-lisp:null)
                         :accessor struct-shape-cors-expose-headers :shape
                         "CorsHeaderList" :location common-lisp:nil
                         :location-name "exposeHeaders")
                        (max-age :initarg :max-age :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          integer-with-length-between-minus1and86400
                          common-lisp:null)
                         :accessor struct-shape-cors-max-age :shape
                         "IntegerWithLengthBetweenMinus1And86400" :location
                         common-lisp:nil :location-name "maxAge"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-cors (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'cors
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'cors 'make-cors))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input cors))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input cors))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allow-credentials))
      (common-lisp:list
       (common-lisp:cons "AllowCredentials"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allow-headers))
      (common-lisp:list
       (common-lisp:cons "AllowHeaders"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allow-methods))
      (common-lisp:list
       (common-lisp:cons "AllowMethods"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allow-origins))
      (common-lisp:list
       (common-lisp:cons "AllowOrigins"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expose-headers))
      (common-lisp:list
       (common-lisp:cons "ExposeHeaders"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-age))
      (common-lisp:list
       (common-lisp:cons "MaxAge"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input cors))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype cors-header-list ()
   '(trivial-types:proper-list |__string|))
 (common-lisp:defun make-cors-header-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__string|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype cors-method-list ()
   '(trivial-types:proper-list string-with-length-between1and64))
 (common-lisp:defun make-cors-method-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            string-with-length-between1and64))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype cors-origin-list ()
   '(trivial-types:proper-list |__string|))
 (common-lisp:defun make-cors-origin-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__string|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass create-api-input common-lisp:nil
                       ((api-key-selection-expression :initarg
                         :api-key-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-create-api-input-api-key-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "apiKeySelectionExpression")
                        (cors-configuration :initarg :cors-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or cors common-lisp:null) :accessor
                         struct-shape-create-api-input-cors-configuration
                         :shape "Cors" :location common-lisp:nil :location-name
                         "corsConfiguration")
                        (credentials-arn :initarg :credentials-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-create-api-input-credentials-arn :shape
                         "Arn" :location common-lisp:nil :location-name
                         "credentialsArn")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor struct-shape-create-api-input-description
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description")
                        (disable-schema-validation :initarg
                         :disable-schema-validation :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-create-api-input-disable-schema-validation
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "disableSchemaValidation")
                        (disable-execute-api-endpoint :initarg
                         :disable-execute-api-endpoint :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-create-api-input-disable-execute-api-endpoint
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "disableExecuteApiEndpoint")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-create-api-input-name :shape
                         "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "name")
                        (protocol-type :initarg :protocol-type :initform
                         (common-lisp:error ":protocol-type is required") :type
                         (common-lisp:or protocol-type common-lisp:null)
                         :accessor struct-shape-create-api-input-protocol-type
                         :shape "ProtocolType" :location common-lisp:nil
                         :location-name "protocolType")
                        (route-key :initarg :route-key :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-key common-lisp:null)
                         :accessor struct-shape-create-api-input-route-key
                         :shape "SelectionKey" :location common-lisp:nil
                         :location-name "routeKey")
                        (route-selection-expression :initarg
                         :route-selection-expression :initform common-lisp:nil
                         :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-create-api-input-route-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "routeSelectionExpression")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-api-input-tags :shape "Tags"
                         :location common-lisp:nil :location-name "tags")
                        (target :initarg :target :initform common-lisp:nil
                         :type
                         (common-lisp:or uri-with-length-between1and2048
                                         common-lisp:null)
                         :accessor struct-shape-create-api-input-target :shape
                         "UriWithLengthBetween1And2048" :location
                         common-lisp:nil :location-name "target")
                        (version :initarg :version :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor struct-shape-create-api-input-version :shape
                         "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name "version"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-api-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-api-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-api-input 'make-create-api-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-api-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-api-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-key-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ApiKeySelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cors-configuration))
      (common-lisp:list
       (common-lisp:cons "CorsConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials-arn))
      (common-lisp:list
       (common-lisp:cons "CredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-schema-validation))
      (common-lisp:list
       (common-lisp:cons "DisableSchemaValidation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-execute-api-endpoint))
      (common-lisp:list
       (common-lisp:cons "DisableExecuteApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol-type))
      (common-lisp:list
       (common-lisp:cons "ProtocolType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-key))
      (common-lisp:list
       (common-lisp:cons "RouteKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'route-selection-expression))
      (common-lisp:list
       (common-lisp:cons "RouteSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target))
      (common-lisp:list
       (common-lisp:cons "Target"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-api-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-api-mapping-input common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-create-api-mapping-input-api-id :shape
                         "Id" :location common-lisp:nil :location-name "apiId")
                        (api-mapping-key :initarg :api-mapping-key :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-key common-lisp:null)
                         :accessor
                         struct-shape-create-api-mapping-input-api-mapping-key
                         :shape "SelectionKey" :location common-lisp:nil
                         :location-name "apiMappingKey")
                        (stage :initarg :stage :initform
                         (common-lisp:error ":stage is required") :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-create-api-mapping-input-stage
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "stage"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-api-mapping-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-api-mapping-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-api-mapping-input 'make-create-api-mapping-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-api-mapping-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-api-mapping-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-id))
      (common-lisp:list
       (common-lisp:cons "ApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-mapping-key))
      (common-lisp:list
       (common-lisp:cons "ApiMappingKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "Stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-api-mapping-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-api-mapping-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-create-api-mapping-request-api-id :shape
                         "Id" :location common-lisp:nil :location-name "apiId")
                        (api-mapping-key :initarg :api-mapping-key :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-key common-lisp:null)
                         :accessor
                         struct-shape-create-api-mapping-request-api-mapping-key
                         :shape "SelectionKey" :location common-lisp:nil
                         :location-name "apiMappingKey")
                        (domain-name :initarg :domain-name :initform
                         (common-lisp:error ":domain-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-api-mapping-request-domain-name
                         :shape "__string" :location "uri" :location-name
                         "domainName")
                        (stage :initarg :stage :initform
                         (common-lisp:error ":stage is required") :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-api-mapping-request-stage :shape
                         "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "stage"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-api-mapping-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-api-mapping-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-api-mapping-request
                    'make-create-api-mapping-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-api-mapping-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-api-mapping-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-id))
      (common-lisp:list
       (common-lisp:cons "ApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-mapping-key))
      (common-lisp:list
       (common-lisp:cons "ApiMappingKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "Stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-api-mapping-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-api-mapping-response common-lisp:nil
                       ((api-id :initarg :api-id :initform common-lisp:nil
                         :type (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-create-api-mapping-response-api-id :shape
                         "Id" :location common-lisp:nil :location-name "apiId")
                        (api-mapping-id :initarg :api-mapping-id :initform
                         common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-create-api-mapping-response-api-mapping-id
                         :shape "Id" :location common-lisp:nil :location-name
                         "apiMappingId")
                        (api-mapping-key :initarg :api-mapping-key :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-key common-lisp:null)
                         :accessor
                         struct-shape-create-api-mapping-response-api-mapping-key
                         :shape "SelectionKey" :location common-lisp:nil
                         :location-name "apiMappingKey")
                        (stage :initarg :stage :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-api-mapping-response-stage :shape
                         "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "stage"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-api-mapping-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-api-mapping-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-api-mapping-response
                    'make-create-api-mapping-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-api-mapping-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-api-mapping-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-id))
      (common-lisp:list
       (common-lisp:cons "ApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-mapping-id))
      (common-lisp:list
       (common-lisp:cons "ApiMappingId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-mapping-key))
      (common-lisp:list
       (common-lisp:cons "ApiMappingKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "Stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-api-mapping-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-api-request common-lisp:nil
                       ((api-key-selection-expression :initarg
                         :api-key-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-create-api-request-api-key-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "apiKeySelectionExpression")
                        (cors-configuration :initarg :cors-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or cors common-lisp:null) :accessor
                         struct-shape-create-api-request-cors-configuration
                         :shape "Cors" :location common-lisp:nil :location-name
                         "corsConfiguration")
                        (credentials-arn :initarg :credentials-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-create-api-request-credentials-arn :shape
                         "Arn" :location common-lisp:nil :location-name
                         "credentialsArn")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor struct-shape-create-api-request-description
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description")
                        (disable-schema-validation :initarg
                         :disable-schema-validation :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-create-api-request-disable-schema-validation
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "disableSchemaValidation")
                        (disable-execute-api-endpoint :initarg
                         :disable-execute-api-endpoint :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-create-api-request-disable-execute-api-endpoint
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "disableExecuteApiEndpoint")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-create-api-request-name :shape
                         "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "name")
                        (protocol-type :initarg :protocol-type :initform
                         (common-lisp:error ":protocol-type is required") :type
                         (common-lisp:or protocol-type common-lisp:null)
                         :accessor
                         struct-shape-create-api-request-protocol-type :shape
                         "ProtocolType" :location common-lisp:nil
                         :location-name "protocolType")
                        (route-key :initarg :route-key :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-key common-lisp:null)
                         :accessor struct-shape-create-api-request-route-key
                         :shape "SelectionKey" :location common-lisp:nil
                         :location-name "routeKey")
                        (route-selection-expression :initarg
                         :route-selection-expression :initform common-lisp:nil
                         :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-create-api-request-route-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "routeSelectionExpression")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-api-request-tags :shape "Tags"
                         :location common-lisp:nil :location-name "tags")
                        (target :initarg :target :initform common-lisp:nil
                         :type
                         (common-lisp:or uri-with-length-between1and2048
                                         common-lisp:null)
                         :accessor struct-shape-create-api-request-target
                         :shape "UriWithLengthBetween1And2048" :location
                         common-lisp:nil :location-name "target")
                        (version :initarg :version :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor struct-shape-create-api-request-version
                         :shape "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name "version"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-api-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-api-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-api-request 'make-create-api-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-api-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-key-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ApiKeySelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cors-configuration))
      (common-lisp:list
       (common-lisp:cons "CorsConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials-arn))
      (common-lisp:list
       (common-lisp:cons "CredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-schema-validation))
      (common-lisp:list
       (common-lisp:cons "DisableSchemaValidation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-execute-api-endpoint))
      (common-lisp:list
       (common-lisp:cons "DisableExecuteApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol-type))
      (common-lisp:list
       (common-lisp:cons "ProtocolType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-key))
      (common-lisp:list
       (common-lisp:cons "RouteKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'route-selection-expression))
      (common-lisp:list
       (common-lisp:cons "RouteSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target))
      (common-lisp:list
       (common-lisp:cons "Target"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-api-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-api-response common-lisp:nil
                       ((api-endpoint :initarg :api-endpoint :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-api-response-api-endpoint :shape
                         "__string" :location common-lisp:nil :location-name
                         "apiEndpoint")
                        (api-gateway-managed :initarg :api-gateway-managed
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-create-api-response-api-gateway-managed
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "apiGatewayManaged")
                        (api-id :initarg :api-id :initform common-lisp:nil
                         :type (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-create-api-response-api-id :shape "Id"
                         :location common-lisp:nil :location-name "apiId")
                        (api-key-selection-expression :initarg
                         :api-key-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-create-api-response-api-key-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "apiKeySelectionExpression")
                        (cors-configuration :initarg :cors-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or cors common-lisp:null) :accessor
                         struct-shape-create-api-response-cors-configuration
                         :shape "Cors" :location common-lisp:nil :location-name
                         "corsConfiguration")
                        (created-date :initarg :created-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-create-api-response-created-date :shape
                         "__timestampIso8601" :location common-lisp:nil
                         :location-name "createdDate")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor struct-shape-create-api-response-description
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description")
                        (disable-schema-validation :initarg
                         :disable-schema-validation :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-create-api-response-disable-schema-validation
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "disableSchemaValidation")
                        (disable-execute-api-endpoint :initarg
                         :disable-execute-api-endpoint :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-create-api-response-disable-execute-api-endpoint
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "disableExecuteApiEndpoint")
                        (import-info :initarg :import-info :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-create-api-response-import-info
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "importInfo")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-create-api-response-name :shape
                         "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "name")
                        (protocol-type :initarg :protocol-type :initform
                         common-lisp:nil :type
                         (common-lisp:or protocol-type common-lisp:null)
                         :accessor
                         struct-shape-create-api-response-protocol-type :shape
                         "ProtocolType" :location common-lisp:nil
                         :location-name "protocolType")
                        (route-selection-expression :initarg
                         :route-selection-expression :initform common-lisp:nil
                         :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-create-api-response-route-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "routeSelectionExpression")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-api-response-tags :shape "Tags"
                         :location common-lisp:nil :location-name "tags")
                        (version :initarg :version :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor struct-shape-create-api-response-version
                         :shape "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name "version")
                        (warnings :initarg :warnings :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-create-api-response-warnings
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "warnings"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-api-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-api-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-api-response 'make-create-api-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-api-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-api-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-endpoint))
      (common-lisp:list
       (common-lisp:cons "ApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-managed))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-id))
      (common-lisp:list
       (common-lisp:cons "ApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-key-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ApiKeySelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cors-configuration))
      (common-lisp:list
       (common-lisp:cons "CorsConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-schema-validation))
      (common-lisp:list
       (common-lisp:cons "DisableSchemaValidation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-execute-api-endpoint))
      (common-lisp:list
       (common-lisp:cons "DisableExecuteApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'import-info))
      (common-lisp:list
       (common-lisp:cons "ImportInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol-type))
      (common-lisp:list
       (common-lisp:cons "ProtocolType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'route-selection-expression))
      (common-lisp:list
       (common-lisp:cons "RouteSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warnings))
      (common-lisp:list
       (common-lisp:cons "Warnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-api-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-authorizer-input common-lisp:nil
                       ((authorizer-credentials-arn :initarg
                         :authorizer-credentials-arn :initform common-lisp:nil
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-create-authorizer-input-authorizer-credentials-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         "authorizerCredentialsArn")
                        (authorizer-result-ttl-in-seconds :initarg
                         :authorizer-result-ttl-in-seconds :initform
                         common-lisp:nil :type
                         (common-lisp:or integer-with-length-between0and3600
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-authorizer-input-authorizer-result-ttl-in-seconds
                         :shape "IntegerWithLengthBetween0And3600" :location
                         common-lisp:nil :location-name
                         "authorizerResultTtlInSeconds")
                        (authorizer-type :initarg :authorizer-type :initform
                         (common-lisp:error ":authorizer-type is required")
                         :type
                         (common-lisp:or authorizer-type common-lisp:null)
                         :accessor
                         struct-shape-create-authorizer-input-authorizer-type
                         :shape "AuthorizerType" :location common-lisp:nil
                         :location-name "authorizerType")
                        (authorizer-uri :initarg :authorizer-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or uri-with-length-between1and2048
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-authorizer-input-authorizer-uri
                         :shape "UriWithLengthBetween1And2048" :location
                         common-lisp:nil :location-name "authorizerUri")
                        (identity-source :initarg :identity-source :initform
                         (common-lisp:error ":identity-source is required")
                         :type
                         (common-lisp:or identity-source-list common-lisp:null)
                         :accessor
                         struct-shape-create-authorizer-input-identity-source
                         :shape "IdentitySourceList" :location common-lisp:nil
                         :location-name "identitySource")
                        (identity-validation-expression :initarg
                         :identity-validation-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-authorizer-input-identity-validation-expression
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name
                         "identityValidationExpression")
                        (jwt-configuration :initarg :jwt-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or jwtconfiguration common-lisp:null)
                         :accessor
                         struct-shape-create-authorizer-input-jwt-configuration
                         :shape "JWTConfiguration" :location common-lisp:nil
                         :location-name "jwtConfiguration")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-create-authorizer-input-name
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "name")
                        (authorizer-payload-format-version :initarg
                         :authorizer-payload-format-version :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-authorizer-input-authorizer-payload-format-version
                         :shape "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name
                         "authorizerPayloadFormatVersion")
                        (enable-simple-responses :initarg
                         :enable-simple-responses :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-create-authorizer-input-enable-simple-responses
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "enableSimpleResponses"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-authorizer-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-authorizer-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-authorizer-input 'make-create-authorizer-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-authorizer-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-authorizer-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-credentials-arn))
      (common-lisp:list
       (common-lisp:cons "AuthorizerCredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-result-ttl-in-seconds))
      (common-lisp:list
       (common-lisp:cons "AuthorizerResultTtlInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-type))
      (common-lisp:list
       (common-lisp:cons "AuthorizerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-uri))
      (common-lisp:list
       (common-lisp:cons "AuthorizerUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-source))
      (common-lisp:list
       (common-lisp:cons "IdentitySource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'identity-validation-expression))
      (common-lisp:list
       (common-lisp:cons "IdentityValidationExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'jwt-configuration))
      (common-lisp:list
       (common-lisp:cons "JwtConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-payload-format-version))
      (common-lisp:list
       (common-lisp:cons "AuthorizerPayloadFormatVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-simple-responses))
      (common-lisp:list
       (common-lisp:cons "EnableSimpleResponses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-authorizer-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-authorizer-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-authorizer-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId")
                        (authorizer-credentials-arn :initarg
                         :authorizer-credentials-arn :initform common-lisp:nil
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-create-authorizer-request-authorizer-credentials-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         "authorizerCredentialsArn")
                        (authorizer-result-ttl-in-seconds :initarg
                         :authorizer-result-ttl-in-seconds :initform
                         common-lisp:nil :type
                         (common-lisp:or integer-with-length-between0and3600
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-authorizer-request-authorizer-result-ttl-in-seconds
                         :shape "IntegerWithLengthBetween0And3600" :location
                         common-lisp:nil :location-name
                         "authorizerResultTtlInSeconds")
                        (authorizer-type :initarg :authorizer-type :initform
                         (common-lisp:error ":authorizer-type is required")
                         :type
                         (common-lisp:or authorizer-type common-lisp:null)
                         :accessor
                         struct-shape-create-authorizer-request-authorizer-type
                         :shape "AuthorizerType" :location common-lisp:nil
                         :location-name "authorizerType")
                        (authorizer-uri :initarg :authorizer-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or uri-with-length-between1and2048
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-authorizer-request-authorizer-uri
                         :shape "UriWithLengthBetween1And2048" :location
                         common-lisp:nil :location-name "authorizerUri")
                        (identity-source :initarg :identity-source :initform
                         (common-lisp:error ":identity-source is required")
                         :type
                         (common-lisp:or identity-source-list common-lisp:null)
                         :accessor
                         struct-shape-create-authorizer-request-identity-source
                         :shape "IdentitySourceList" :location common-lisp:nil
                         :location-name "identitySource")
                        (identity-validation-expression :initarg
                         :identity-validation-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-authorizer-request-identity-validation-expression
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name
                         "identityValidationExpression")
                        (jwt-configuration :initarg :jwt-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or jwtconfiguration common-lisp:null)
                         :accessor
                         struct-shape-create-authorizer-request-jwt-configuration
                         :shape "JWTConfiguration" :location common-lisp:nil
                         :location-name "jwtConfiguration")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-create-authorizer-request-name
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "name")
                        (authorizer-payload-format-version :initarg
                         :authorizer-payload-format-version :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-authorizer-request-authorizer-payload-format-version
                         :shape "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name
                         "authorizerPayloadFormatVersion")
                        (enable-simple-responses :initarg
                         :enable-simple-responses :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-create-authorizer-request-enable-simple-responses
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "enableSimpleResponses"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-authorizer-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-authorizer-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-authorizer-request
                    'make-create-authorizer-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-authorizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-authorizer-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-credentials-arn))
      (common-lisp:list
       (common-lisp:cons "AuthorizerCredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-result-ttl-in-seconds))
      (common-lisp:list
       (common-lisp:cons "AuthorizerResultTtlInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-type))
      (common-lisp:list
       (common-lisp:cons "AuthorizerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-uri))
      (common-lisp:list
       (common-lisp:cons "AuthorizerUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-source))
      (common-lisp:list
       (common-lisp:cons "IdentitySource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'identity-validation-expression))
      (common-lisp:list
       (common-lisp:cons "IdentityValidationExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'jwt-configuration))
      (common-lisp:list
       (common-lisp:cons "JwtConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-payload-format-version))
      (common-lisp:list
       (common-lisp:cons "AuthorizerPayloadFormatVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-simple-responses))
      (common-lisp:list
       (common-lisp:cons "EnableSimpleResponses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-authorizer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-authorizer-response common-lisp:nil
                       ((authorizer-credentials-arn :initarg
                         :authorizer-credentials-arn :initform common-lisp:nil
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-create-authorizer-response-authorizer-credentials-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         "authorizerCredentialsArn")
                        (authorizer-id :initarg :authorizer-id :initform
                         common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-create-authorizer-response-authorizer-id
                         :shape "Id" :location common-lisp:nil :location-name
                         "authorizerId")
                        (authorizer-result-ttl-in-seconds :initarg
                         :authorizer-result-ttl-in-seconds :initform
                         common-lisp:nil :type
                         (common-lisp:or integer-with-length-between0and3600
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-authorizer-response-authorizer-result-ttl-in-seconds
                         :shape "IntegerWithLengthBetween0And3600" :location
                         common-lisp:nil :location-name
                         "authorizerResultTtlInSeconds")
                        (authorizer-type :initarg :authorizer-type :initform
                         common-lisp:nil :type
                         (common-lisp:or authorizer-type common-lisp:null)
                         :accessor
                         struct-shape-create-authorizer-response-authorizer-type
                         :shape "AuthorizerType" :location common-lisp:nil
                         :location-name "authorizerType")
                        (authorizer-uri :initarg :authorizer-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or uri-with-length-between1and2048
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-authorizer-response-authorizer-uri
                         :shape "UriWithLengthBetween1And2048" :location
                         common-lisp:nil :location-name "authorizerUri")
                        (identity-source :initarg :identity-source :initform
                         common-lisp:nil :type
                         (common-lisp:or identity-source-list common-lisp:null)
                         :accessor
                         struct-shape-create-authorizer-response-identity-source
                         :shape "IdentitySourceList" :location common-lisp:nil
                         :location-name "identitySource")
                        (identity-validation-expression :initarg
                         :identity-validation-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-authorizer-response-identity-validation-expression
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name
                         "identityValidationExpression")
                        (jwt-configuration :initarg :jwt-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or jwtconfiguration common-lisp:null)
                         :accessor
                         struct-shape-create-authorizer-response-jwt-configuration
                         :shape "JWTConfiguration" :location common-lisp:nil
                         :location-name "jwtConfiguration")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-create-authorizer-response-name
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "name")
                        (authorizer-payload-format-version :initarg
                         :authorizer-payload-format-version :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-authorizer-response-authorizer-payload-format-version
                         :shape "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name
                         "authorizerPayloadFormatVersion")
                        (enable-simple-responses :initarg
                         :enable-simple-responses :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-create-authorizer-response-enable-simple-responses
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "enableSimpleResponses"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-authorizer-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-authorizer-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-authorizer-response
                    'make-create-authorizer-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-authorizer-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-authorizer-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-credentials-arn))
      (common-lisp:list
       (common-lisp:cons "AuthorizerCredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-id))
      (common-lisp:list
       (common-lisp:cons "AuthorizerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-result-ttl-in-seconds))
      (common-lisp:list
       (common-lisp:cons "AuthorizerResultTtlInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-type))
      (common-lisp:list
       (common-lisp:cons "AuthorizerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-uri))
      (common-lisp:list
       (common-lisp:cons "AuthorizerUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-source))
      (common-lisp:list
       (common-lisp:cons "IdentitySource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'identity-validation-expression))
      (common-lisp:list
       (common-lisp:cons "IdentityValidationExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'jwt-configuration))
      (common-lisp:list
       (common-lisp:cons "JwtConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-payload-format-version))
      (common-lisp:list
       (common-lisp:cons "AuthorizerPayloadFormatVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-simple-responses))
      (common-lisp:list
       (common-lisp:cons "EnableSimpleResponses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-authorizer-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-deployment-input common-lisp:nil
                       ((description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-deployment-input-description
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description")
                        (stage-name :initarg :stage-name :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-deployment-input-stage-name :shape
                         "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "stageName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-deployment-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-deployment-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-deployment-input 'make-create-deployment-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-name))
      (common-lisp:list
       (common-lisp:cons "StageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-deployment-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-deployment-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-deployment-request-description
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description")
                        (stage-name :initarg :stage-name :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-deployment-request-stage-name
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "stageName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-deployment-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-deployment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-deployment-request
                    'make-create-deployment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-name))
      (common-lisp:list
       (common-lisp:cons "StageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-deployment-response common-lisp:nil
                       ((auto-deployed :initarg :auto-deployed :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-create-deployment-response-auto-deployed
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "autoDeployed")
                        (created-date :initarg :created-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-create-deployment-response-created-date
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "createdDate")
                        (deployment-id :initarg :deployment-id :initform
                         common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-create-deployment-response-deployment-id
                         :shape "Id" :location common-lisp:nil :location-name
                         "deploymentId")
                        (deployment-status :initarg :deployment-status
                         :initform common-lisp:nil :type
                         (common-lisp:or deployment-status common-lisp:null)
                         :accessor
                         struct-shape-create-deployment-response-deployment-status
                         :shape "DeploymentStatus" :location common-lisp:nil
                         :location-name "deploymentStatus")
                        (deployment-status-message :initarg
                         :deployment-status-message :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-deployment-response-deployment-status-message
                         :shape "__string" :location common-lisp:nil
                         :location-name "deploymentStatusMessage")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-deployment-response-description
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-deployment-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-deployment-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-deployment-response
                    'make-create-deployment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-deployed))
      (common-lisp:list
       (common-lisp:cons "AutoDeployed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "DeploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-status))
      (common-lisp:list
       (common-lisp:cons "DeploymentStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'deployment-status-message))
      (common-lisp:list
       (common-lisp:cons "DeploymentStatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-domain-name-input common-lisp:nil
                       ((domain-name :initarg :domain-name :initform
                         (common-lisp:error ":domain-name is required") :type
                         (common-lisp:or string-with-length-between1and512
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-domain-name-input-domain-name
                         :shape "StringWithLengthBetween1And512" :location
                         common-lisp:nil :location-name "domainName")
                        (domain-name-configurations :initarg
                         :domain-name-configurations :initform common-lisp:nil
                         :type
                         (common-lisp:or domain-name-configurations
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-domain-name-input-domain-name-configurations
                         :shape "DomainNameConfigurations" :location
                         common-lisp:nil :location-name
                         "domainNameConfigurations")
                        (mutual-tls-authentication :initarg
                         :mutual-tls-authentication :initform common-lisp:nil
                         :type
                         (common-lisp:or mutual-tls-authentication-input
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-domain-name-input-mutual-tls-authentication
                         :shape "MutualTlsAuthenticationInput" :location
                         common-lisp:nil :location-name
                         "mutualTlsAuthentication")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-domain-name-input-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-domain-name-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-domain-name-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-domain-name-input 'make-create-domain-name-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-name-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-name-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'domain-name-configurations))
      (common-lisp:list
       (common-lisp:cons "DomainNameConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'mutual-tls-authentication))
      (common-lisp:list
       (common-lisp:cons "MutualTlsAuthentication"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-name-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-domain-name-request common-lisp:nil
                       ((domain-name :initarg :domain-name :initform
                         (common-lisp:error ":domain-name is required") :type
                         (common-lisp:or string-with-length-between1and512
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-domain-name-request-domain-name
                         :shape "StringWithLengthBetween1And512" :location
                         common-lisp:nil :location-name "domainName")
                        (domain-name-configurations :initarg
                         :domain-name-configurations :initform common-lisp:nil
                         :type
                         (common-lisp:or domain-name-configurations
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-domain-name-request-domain-name-configurations
                         :shape "DomainNameConfigurations" :location
                         common-lisp:nil :location-name
                         "domainNameConfigurations")
                        (mutual-tls-authentication :initarg
                         :mutual-tls-authentication :initform common-lisp:nil
                         :type
                         (common-lisp:or mutual-tls-authentication-input
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-domain-name-request-mutual-tls-authentication
                         :shape "MutualTlsAuthenticationInput" :location
                         common-lisp:nil :location-name
                         "mutualTlsAuthentication")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-domain-name-request-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-domain-name-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-domain-name-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-domain-name-request
                    'make-create-domain-name-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-name-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-name-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'domain-name-configurations))
      (common-lisp:list
       (common-lisp:cons "DomainNameConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'mutual-tls-authentication))
      (common-lisp:list
       (common-lisp:cons "MutualTlsAuthentication"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-name-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-domain-name-response common-lisp:nil
                       ((api-mapping-selection-expression :initarg
                         :api-mapping-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-create-domain-name-response-api-mapping-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "apiMappingSelectionExpression")
                        (domain-name :initarg :domain-name :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and512
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-domain-name-response-domain-name
                         :shape "StringWithLengthBetween1And512" :location
                         common-lisp:nil :location-name "domainName")
                        (domain-name-configurations :initarg
                         :domain-name-configurations :initform common-lisp:nil
                         :type
                         (common-lisp:or domain-name-configurations
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-domain-name-response-domain-name-configurations
                         :shape "DomainNameConfigurations" :location
                         common-lisp:nil :location-name
                         "domainNameConfigurations")
                        (mutual-tls-authentication :initarg
                         :mutual-tls-authentication :initform common-lisp:nil
                         :type
                         (common-lisp:or mutual-tls-authentication
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-domain-name-response-mutual-tls-authentication
                         :shape "MutualTlsAuthentication" :location
                         common-lisp:nil :location-name
                         "mutualTlsAuthentication")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-domain-name-response-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-domain-name-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-domain-name-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-domain-name-response
                    'make-create-domain-name-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-name-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-name-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-mapping-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ApiMappingSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'domain-name-configurations))
      (common-lisp:list
       (common-lisp:cons "DomainNameConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'mutual-tls-authentication))
      (common-lisp:list
       (common-lisp:cons "MutualTlsAuthentication"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-name-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-integration-input common-lisp:nil
                       ((connection-id :initarg :connection-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-integration-input-connection-id
                         :shape "StringWithLengthBetween1And1024" :location
                         common-lisp:nil :location-name "connectionId")
                        (connection-type :initarg :connection-type :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-type common-lisp:null)
                         :accessor
                         struct-shape-create-integration-input-connection-type
                         :shape "ConnectionType" :location common-lisp:nil
                         :location-name "connectionType")
                        (content-handling-strategy :initarg
                         :content-handling-strategy :initform common-lisp:nil
                         :type
                         (common-lisp:or content-handling-strategy
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-integration-input-content-handling-strategy
                         :shape "ContentHandlingStrategy" :location
                         common-lisp:nil :location-name
                         "contentHandlingStrategy")
                        (credentials-arn :initarg :credentials-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-create-integration-input-credentials-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         "credentialsArn")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-integration-input-description
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description")
                        (integration-method :initarg :integration-method
                         :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-integration-input-integration-method
                         :shape "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name "integrationMethod")
                        (integration-subtype :initarg :integration-subtype
                         :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-integration-input-integration-subtype
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "integrationSubtype")
                        (integration-type :initarg :integration-type :initform
                         (common-lisp:error ":integration-type is required")
                         :type
                         (common-lisp:or integration-type common-lisp:null)
                         :accessor
                         struct-shape-create-integration-input-integration-type
                         :shape "IntegrationType" :location common-lisp:nil
                         :location-name "integrationType")
                        (integration-uri :initarg :integration-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or uri-with-length-between1and2048
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-integration-input-integration-uri
                         :shape "UriWithLengthBetween1And2048" :location
                         common-lisp:nil :location-name "integrationUri")
                        (passthrough-behavior :initarg :passthrough-behavior
                         :initform common-lisp:nil :type
                         (common-lisp:or passthrough-behavior common-lisp:null)
                         :accessor
                         struct-shape-create-integration-input-passthrough-behavior
                         :shape "PassthroughBehavior" :location common-lisp:nil
                         :location-name "passthroughBehavior")
                        (payload-format-version :initarg
                         :payload-format-version :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-integration-input-payload-format-version
                         :shape "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name "payloadFormatVersion")
                        (request-parameters :initarg :request-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or integration-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-integration-input-request-parameters
                         :shape "IntegrationParameters" :location
                         common-lisp:nil :location-name "requestParameters")
                        (response-parameters :initarg :response-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or response-parameters common-lisp:null)
                         :accessor
                         struct-shape-create-integration-input-response-parameters
                         :shape "ResponseParameters" :location common-lisp:nil
                         :location-name "responseParameters")
                        (request-templates :initarg :request-templates
                         :initform common-lisp:nil :type
                         (common-lisp:or template-map common-lisp:null)
                         :accessor
                         struct-shape-create-integration-input-request-templates
                         :shape "TemplateMap" :location common-lisp:nil
                         :location-name "requestTemplates")
                        (template-selection-expression :initarg
                         :template-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-create-integration-input-template-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "templateSelectionExpression")
                        (timeout-in-millis :initarg :timeout-in-millis
                         :initform common-lisp:nil :type
                         (common-lisp:or integer-with-length-between50and30000
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-integration-input-timeout-in-millis
                         :shape "IntegerWithLengthBetween50And30000" :location
                         common-lisp:nil :location-name "timeoutInMillis")
                        (tls-config :initarg :tls-config :initform
                         common-lisp:nil :type
                         (common-lisp:or tls-config-input common-lisp:null)
                         :accessor
                         struct-shape-create-integration-input-tls-config
                         :shape "TlsConfigInput" :location common-lisp:nil
                         :location-name "tlsConfig"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-integration-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-integration-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-integration-input 'make-create-integration-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-integration-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-integration-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-id))
      (common-lisp:list
       (common-lisp:cons "ConnectionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-type))
      (common-lisp:list
       (common-lisp:cons "ConnectionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-handling-strategy))
      (common-lisp:list
       (common-lisp:cons "ContentHandlingStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials-arn))
      (common-lisp:list
       (common-lisp:cons "CredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-method))
      (common-lisp:list
       (common-lisp:cons "IntegrationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-subtype))
      (common-lisp:list
       (common-lisp:cons "IntegrationSubtype"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-type))
      (common-lisp:list
       (common-lisp:cons "IntegrationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-uri))
      (common-lisp:list
       (common-lisp:cons "IntegrationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'passthrough-behavior))
      (common-lisp:list
       (common-lisp:cons "PassthroughBehavior"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'payload-format-version))
      (common-lisp:list
       (common-lisp:cons "PayloadFormatVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "RequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-templates))
      (common-lisp:list
       (common-lisp:cons "RequestTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-selection-expression))
      (common-lisp:list
       (common-lisp:cons "TemplateSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeout-in-millis))
      (common-lisp:list
       (common-lisp:cons "TimeoutInMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tls-config))
      (common-lisp:list
       (common-lisp:cons "TlsConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-integration-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-integration-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-integration-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId")
                        (connection-id :initarg :connection-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-integration-request-connection-id
                         :shape "StringWithLengthBetween1And1024" :location
                         common-lisp:nil :location-name "connectionId")
                        (connection-type :initarg :connection-type :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-type common-lisp:null)
                         :accessor
                         struct-shape-create-integration-request-connection-type
                         :shape "ConnectionType" :location common-lisp:nil
                         :location-name "connectionType")
                        (content-handling-strategy :initarg
                         :content-handling-strategy :initform common-lisp:nil
                         :type
                         (common-lisp:or content-handling-strategy
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-integration-request-content-handling-strategy
                         :shape "ContentHandlingStrategy" :location
                         common-lisp:nil :location-name
                         "contentHandlingStrategy")
                        (credentials-arn :initarg :credentials-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-create-integration-request-credentials-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         "credentialsArn")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-integration-request-description
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description")
                        (integration-method :initarg :integration-method
                         :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-integration-request-integration-method
                         :shape "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name "integrationMethod")
                        (integration-subtype :initarg :integration-subtype
                         :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-integration-request-integration-subtype
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "integrationSubtype")
                        (integration-type :initarg :integration-type :initform
                         (common-lisp:error ":integration-type is required")
                         :type
                         (common-lisp:or integration-type common-lisp:null)
                         :accessor
                         struct-shape-create-integration-request-integration-type
                         :shape "IntegrationType" :location common-lisp:nil
                         :location-name "integrationType")
                        (integration-uri :initarg :integration-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or uri-with-length-between1and2048
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-integration-request-integration-uri
                         :shape "UriWithLengthBetween1And2048" :location
                         common-lisp:nil :location-name "integrationUri")
                        (passthrough-behavior :initarg :passthrough-behavior
                         :initform common-lisp:nil :type
                         (common-lisp:or passthrough-behavior common-lisp:null)
                         :accessor
                         struct-shape-create-integration-request-passthrough-behavior
                         :shape "PassthroughBehavior" :location common-lisp:nil
                         :location-name "passthroughBehavior")
                        (payload-format-version :initarg
                         :payload-format-version :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-integration-request-payload-format-version
                         :shape "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name "payloadFormatVersion")
                        (request-parameters :initarg :request-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or integration-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-integration-request-request-parameters
                         :shape "IntegrationParameters" :location
                         common-lisp:nil :location-name "requestParameters")
                        (response-parameters :initarg :response-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or response-parameters common-lisp:null)
                         :accessor
                         struct-shape-create-integration-request-response-parameters
                         :shape "ResponseParameters" :location common-lisp:nil
                         :location-name "responseParameters")
                        (request-templates :initarg :request-templates
                         :initform common-lisp:nil :type
                         (common-lisp:or template-map common-lisp:null)
                         :accessor
                         struct-shape-create-integration-request-request-templates
                         :shape "TemplateMap" :location common-lisp:nil
                         :location-name "requestTemplates")
                        (template-selection-expression :initarg
                         :template-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-create-integration-request-template-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "templateSelectionExpression")
                        (timeout-in-millis :initarg :timeout-in-millis
                         :initform common-lisp:nil :type
                         (common-lisp:or integer-with-length-between50and30000
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-integration-request-timeout-in-millis
                         :shape "IntegerWithLengthBetween50And30000" :location
                         common-lisp:nil :location-name "timeoutInMillis")
                        (tls-config :initarg :tls-config :initform
                         common-lisp:nil :type
                         (common-lisp:or tls-config-input common-lisp:null)
                         :accessor
                         struct-shape-create-integration-request-tls-config
                         :shape "TlsConfigInput" :location common-lisp:nil
                         :location-name "tlsConfig"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-integration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-integration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-integration-request
                    'make-create-integration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-integration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-id))
      (common-lisp:list
       (common-lisp:cons "ConnectionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-type))
      (common-lisp:list
       (common-lisp:cons "ConnectionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-handling-strategy))
      (common-lisp:list
       (common-lisp:cons "ContentHandlingStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials-arn))
      (common-lisp:list
       (common-lisp:cons "CredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-method))
      (common-lisp:list
       (common-lisp:cons "IntegrationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-subtype))
      (common-lisp:list
       (common-lisp:cons "IntegrationSubtype"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-type))
      (common-lisp:list
       (common-lisp:cons "IntegrationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-uri))
      (common-lisp:list
       (common-lisp:cons "IntegrationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'passthrough-behavior))
      (common-lisp:list
       (common-lisp:cons "PassthroughBehavior"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'payload-format-version))
      (common-lisp:list
       (common-lisp:cons "PayloadFormatVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "RequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-templates))
      (common-lisp:list
       (common-lisp:cons "RequestTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-selection-expression))
      (common-lisp:list
       (common-lisp:cons "TemplateSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeout-in-millis))
      (common-lisp:list
       (common-lisp:cons "TimeoutInMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tls-config))
      (common-lisp:list
       (common-lisp:cons "TlsConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-integration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-integration-result common-lisp:nil
                       ((api-gateway-managed :initarg :api-gateway-managed
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-create-integration-result-api-gateway-managed
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "apiGatewayManaged")
                        (connection-id :initarg :connection-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-integration-result-connection-id
                         :shape "StringWithLengthBetween1And1024" :location
                         common-lisp:nil :location-name "connectionId")
                        (connection-type :initarg :connection-type :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-type common-lisp:null)
                         :accessor
                         struct-shape-create-integration-result-connection-type
                         :shape "ConnectionType" :location common-lisp:nil
                         :location-name "connectionType")
                        (content-handling-strategy :initarg
                         :content-handling-strategy :initform common-lisp:nil
                         :type
                         (common-lisp:or content-handling-strategy
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-integration-result-content-handling-strategy
                         :shape "ContentHandlingStrategy" :location
                         common-lisp:nil :location-name
                         "contentHandlingStrategy")
                        (credentials-arn :initarg :credentials-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-create-integration-result-credentials-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         "credentialsArn")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-integration-result-description
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description")
                        (integration-id :initarg :integration-id :initform
                         common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-create-integration-result-integration-id
                         :shape "Id" :location common-lisp:nil :location-name
                         "integrationId")
                        (integration-method :initarg :integration-method
                         :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-integration-result-integration-method
                         :shape "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name "integrationMethod")
                        (integration-response-selection-expression :initarg
                         :integration-response-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-create-integration-result-integration-response-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name
                         "integrationResponseSelectionExpression")
                        (integration-subtype :initarg :integration-subtype
                         :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-integration-result-integration-subtype
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "integrationSubtype")
                        (integration-type :initarg :integration-type :initform
                         common-lisp:nil :type
                         (common-lisp:or integration-type common-lisp:null)
                         :accessor
                         struct-shape-create-integration-result-integration-type
                         :shape "IntegrationType" :location common-lisp:nil
                         :location-name "integrationType")
                        (integration-uri :initarg :integration-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or uri-with-length-between1and2048
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-integration-result-integration-uri
                         :shape "UriWithLengthBetween1And2048" :location
                         common-lisp:nil :location-name "integrationUri")
                        (passthrough-behavior :initarg :passthrough-behavior
                         :initform common-lisp:nil :type
                         (common-lisp:or passthrough-behavior common-lisp:null)
                         :accessor
                         struct-shape-create-integration-result-passthrough-behavior
                         :shape "PassthroughBehavior" :location common-lisp:nil
                         :location-name "passthroughBehavior")
                        (payload-format-version :initarg
                         :payload-format-version :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-integration-result-payload-format-version
                         :shape "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name "payloadFormatVersion")
                        (request-parameters :initarg :request-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or integration-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-integration-result-request-parameters
                         :shape "IntegrationParameters" :location
                         common-lisp:nil :location-name "requestParameters")
                        (response-parameters :initarg :response-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or response-parameters common-lisp:null)
                         :accessor
                         struct-shape-create-integration-result-response-parameters
                         :shape "ResponseParameters" :location common-lisp:nil
                         :location-name "responseParameters")
                        (request-templates :initarg :request-templates
                         :initform common-lisp:nil :type
                         (common-lisp:or template-map common-lisp:null)
                         :accessor
                         struct-shape-create-integration-result-request-templates
                         :shape "TemplateMap" :location common-lisp:nil
                         :location-name "requestTemplates")
                        (template-selection-expression :initarg
                         :template-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-create-integration-result-template-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "templateSelectionExpression")
                        (timeout-in-millis :initarg :timeout-in-millis
                         :initform common-lisp:nil :type
                         (common-lisp:or integer-with-length-between50and30000
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-integration-result-timeout-in-millis
                         :shape "IntegerWithLengthBetween50And30000" :location
                         common-lisp:nil :location-name "timeoutInMillis")
                        (tls-config :initarg :tls-config :initform
                         common-lisp:nil :type
                         (common-lisp:or tls-config common-lisp:null) :accessor
                         struct-shape-create-integration-result-tls-config
                         :shape "TlsConfig" :location common-lisp:nil
                         :location-name "tlsConfig"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-integration-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-integration-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-integration-result
                    'make-create-integration-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-integration-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-integration-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-managed))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-id))
      (common-lisp:list
       (common-lisp:cons "ConnectionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-type))
      (common-lisp:list
       (common-lisp:cons "ConnectionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-handling-strategy))
      (common-lisp:list
       (common-lisp:cons "ContentHandlingStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials-arn))
      (common-lisp:list
       (common-lisp:cons "CredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-id))
      (common-lisp:list
       (common-lisp:cons "IntegrationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-method))
      (common-lisp:list
       (common-lisp:cons "IntegrationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-response-selection-expression))
      (common-lisp:list
       (common-lisp:cons "IntegrationResponseSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-subtype))
      (common-lisp:list
       (common-lisp:cons "IntegrationSubtype"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-type))
      (common-lisp:list
       (common-lisp:cons "IntegrationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-uri))
      (common-lisp:list
       (common-lisp:cons "IntegrationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'passthrough-behavior))
      (common-lisp:list
       (common-lisp:cons "PassthroughBehavior"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'payload-format-version))
      (common-lisp:list
       (common-lisp:cons "PayloadFormatVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "RequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-templates))
      (common-lisp:list
       (common-lisp:cons "RequestTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-selection-expression))
      (common-lisp:list
       (common-lisp:cons "TemplateSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeout-in-millis))
      (common-lisp:list
       (common-lisp:cons "TimeoutInMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tls-config))
      (common-lisp:list
       (common-lisp:cons "TlsConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-integration-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-integration-response-input common-lisp:nil
                       ((content-handling-strategy :initarg
                         :content-handling-strategy :initform common-lisp:nil
                         :type
                         (common-lisp:or content-handling-strategy
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-integration-response-input-content-handling-strategy
                         :shape "ContentHandlingStrategy" :location
                         common-lisp:nil :location-name
                         "contentHandlingStrategy")
                        (integration-response-key :initarg
                         :integration-response-key :initform
                         (common-lisp:error
                          ":integration-response-key is required")
                         :type (common-lisp:or selection-key common-lisp:null)
                         :accessor
                         struct-shape-create-integration-response-input-integration-response-key
                         :shape "SelectionKey" :location common-lisp:nil
                         :location-name "integrationResponseKey")
                        (response-parameters :initarg :response-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or integration-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-integration-response-input-response-parameters
                         :shape "IntegrationParameters" :location
                         common-lisp:nil :location-name "responseParameters")
                        (response-templates :initarg :response-templates
                         :initform common-lisp:nil :type
                         (common-lisp:or template-map common-lisp:null)
                         :accessor
                         struct-shape-create-integration-response-input-response-templates
                         :shape "TemplateMap" :location common-lisp:nil
                         :location-name "responseTemplates")
                        (template-selection-expression :initarg
                         :template-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-create-integration-response-input-template-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "templateSelectionExpression"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-integration-response-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-integration-response-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-integration-response-input
                    'make-create-integration-response-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-integration-response-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-integration-response-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-handling-strategy))
      (common-lisp:list
       (common-lisp:cons "ContentHandlingStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-response-key))
      (common-lisp:list
       (common-lisp:cons "IntegrationResponseKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-templates))
      (common-lisp:list
       (common-lisp:cons "ResponseTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-selection-expression))
      (common-lisp:list
       (common-lisp:cons "TemplateSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-integration-response-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-integration-response-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-integration-response-request-api-id
                         :shape "__string" :location "uri" :location-name
                         "apiId")
                        (content-handling-strategy :initarg
                         :content-handling-strategy :initform common-lisp:nil
                         :type
                         (common-lisp:or content-handling-strategy
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-integration-response-request-content-handling-strategy
                         :shape "ContentHandlingStrategy" :location
                         common-lisp:nil :location-name
                         "contentHandlingStrategy")
                        (integration-id :initarg :integration-id :initform
                         (common-lisp:error ":integration-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-integration-response-request-integration-id
                         :shape "__string" :location "uri" :location-name
                         "integrationId")
                        (integration-response-key :initarg
                         :integration-response-key :initform
                         (common-lisp:error
                          ":integration-response-key is required")
                         :type (common-lisp:or selection-key common-lisp:null)
                         :accessor
                         struct-shape-create-integration-response-request-integration-response-key
                         :shape "SelectionKey" :location common-lisp:nil
                         :location-name "integrationResponseKey")
                        (response-parameters :initarg :response-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or integration-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-integration-response-request-response-parameters
                         :shape "IntegrationParameters" :location
                         common-lisp:nil :location-name "responseParameters")
                        (response-templates :initarg :response-templates
                         :initform common-lisp:nil :type
                         (common-lisp:or template-map common-lisp:null)
                         :accessor
                         struct-shape-create-integration-response-request-response-templates
                         :shape "TemplateMap" :location common-lisp:nil
                         :location-name "responseTemplates")
                        (template-selection-expression :initarg
                         :template-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-create-integration-response-request-template-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "templateSelectionExpression"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-integration-response-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-integration-response-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-integration-response-request
                    'make-create-integration-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-integration-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-integration-response-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-handling-strategy))
      (common-lisp:list
       (common-lisp:cons "ContentHandlingStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-response-key))
      (common-lisp:list
       (common-lisp:cons "IntegrationResponseKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-templates))
      (common-lisp:list
       (common-lisp:cons "ResponseTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-selection-expression))
      (common-lisp:list
       (common-lisp:cons "TemplateSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-integration-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-integration-response-response common-lisp:nil
                       ((content-handling-strategy :initarg
                         :content-handling-strategy :initform common-lisp:nil
                         :type
                         (common-lisp:or content-handling-strategy
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-integration-response-response-content-handling-strategy
                         :shape "ContentHandlingStrategy" :location
                         common-lisp:nil :location-name
                         "contentHandlingStrategy")
                        (integration-response-id :initarg
                         :integration-response-id :initform common-lisp:nil
                         :type (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-create-integration-response-response-integration-response-id
                         :shape "Id" :location common-lisp:nil :location-name
                         "integrationResponseId")
                        (integration-response-key :initarg
                         :integration-response-key :initform common-lisp:nil
                         :type (common-lisp:or selection-key common-lisp:null)
                         :accessor
                         struct-shape-create-integration-response-response-integration-response-key
                         :shape "SelectionKey" :location common-lisp:nil
                         :location-name "integrationResponseKey")
                        (response-parameters :initarg :response-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or integration-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-integration-response-response-response-parameters
                         :shape "IntegrationParameters" :location
                         common-lisp:nil :location-name "responseParameters")
                        (response-templates :initarg :response-templates
                         :initform common-lisp:nil :type
                         (common-lisp:or template-map common-lisp:null)
                         :accessor
                         struct-shape-create-integration-response-response-response-templates
                         :shape "TemplateMap" :location common-lisp:nil
                         :location-name "responseTemplates")
                        (template-selection-expression :initarg
                         :template-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-create-integration-response-response-template-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "templateSelectionExpression"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-integration-response-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-integration-response-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-integration-response-response
                    'make-create-integration-response-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-integration-response-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-integration-response-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-handling-strategy))
      (common-lisp:list
       (common-lisp:cons "ContentHandlingStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-response-id))
      (common-lisp:list
       (common-lisp:cons "IntegrationResponseId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-response-key))
      (common-lisp:list
       (common-lisp:cons "IntegrationResponseKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-templates))
      (common-lisp:list
       (common-lisp:cons "ResponseTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-selection-expression))
      (common-lisp:list
       (common-lisp:cons "TemplateSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-integration-response-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-model-input common-lisp:nil
                       ((content-type :initarg :content-type :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and256
                                         common-lisp:null)
                         :accessor struct-shape-create-model-input-content-type
                         :shape "StringWithLengthBetween1And256" :location
                         common-lisp:nil :location-name "contentType")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor struct-shape-create-model-input-description
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-create-model-input-name :shape
                         "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "name")
                        (schema :initarg :schema :initform
                         (common-lisp:error ":schema is required") :type
                         (common-lisp:or string-with-length-between0and32k
                                         common-lisp:null)
                         :accessor struct-shape-create-model-input-schema
                         :shape "StringWithLengthBetween0And32K" :location
                         common-lisp:nil :location-name "schema"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-model-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-model-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-model-input 'make-create-model-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-model-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-model-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:list
       (common-lisp:cons "ContentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schema))
      (common-lisp:list
       (common-lisp:cons "Schema"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-model-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-model-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-model-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId")
                        (content-type :initarg :content-type :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and256
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-model-request-content-type :shape
                         "StringWithLengthBetween1And256" :location
                         common-lisp:nil :location-name "contentType")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-model-request-description :shape
                         "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-create-model-request-name
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "name")
                        (schema :initarg :schema :initform
                         (common-lisp:error ":schema is required") :type
                         (common-lisp:or string-with-length-between0and32k
                                         common-lisp:null)
                         :accessor struct-shape-create-model-request-schema
                         :shape "StringWithLengthBetween0And32K" :location
                         common-lisp:nil :location-name "schema"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-model-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-model-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-model-request 'make-create-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-model-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:list
       (common-lisp:cons "ContentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schema))
      (common-lisp:list
       (common-lisp:cons "Schema"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-model-response common-lisp:nil
                       ((content-type :initarg :content-type :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and256
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-model-response-content-type :shape
                         "StringWithLengthBetween1And256" :location
                         common-lisp:nil :location-name "contentType")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-model-response-description :shape
                         "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description")
                        (model-id :initarg :model-id :initform common-lisp:nil
                         :type (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-create-model-response-model-id :shape
                         "Id" :location common-lisp:nil :location-name
                         "modelId")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-create-model-response-name
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "name")
                        (schema :initarg :schema :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between0and32k
                                         common-lisp:null)
                         :accessor struct-shape-create-model-response-schema
                         :shape "StringWithLengthBetween0And32K" :location
                         common-lisp:nil :location-name "schema"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-model-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-model-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-model-response 'make-create-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-model-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:list
       (common-lisp:cons "ContentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-id))
      (common-lisp:list
       (common-lisp:cons "ModelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schema))
      (common-lisp:list
       (common-lisp:cons "Schema"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-model-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-route-input common-lisp:nil
                       ((api-key-required :initarg :api-key-required :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-create-route-input-api-key-required
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "apiKeyRequired")
                        (authorization-scopes :initarg :authorization-scopes
                         :initform common-lisp:nil :type
                         (common-lisp:or authorization-scopes common-lisp:null)
                         :accessor
                         struct-shape-create-route-input-authorization-scopes
                         :shape "AuthorizationScopes" :location common-lisp:nil
                         :location-name "authorizationScopes")
                        (authorization-type :initarg :authorization-type
                         :initform common-lisp:nil :type
                         (common-lisp:or authorization-type common-lisp:null)
                         :accessor
                         struct-shape-create-route-input-authorization-type
                         :shape "AuthorizationType" :location common-lisp:nil
                         :location-name "authorizationType")
                        (authorizer-id :initarg :authorizer-id :initform
                         common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-create-route-input-authorizer-id :shape
                         "Id" :location common-lisp:nil :location-name
                         "authorizerId")
                        (model-selection-expression :initarg
                         :model-selection-expression :initform common-lisp:nil
                         :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-create-route-input-model-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "modelSelectionExpression")
                        (operation-name :initarg :operation-name :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-route-input-operation-name :shape
                         "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name "operationName")
                        (request-models :initarg :request-models :initform
                         common-lisp:nil :type
                         (common-lisp:or route-models common-lisp:null)
                         :accessor
                         struct-shape-create-route-input-request-models :shape
                         "RouteModels" :location common-lisp:nil :location-name
                         "requestModels")
                        (request-parameters :initarg :request-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or route-parameters common-lisp:null)
                         :accessor
                         struct-shape-create-route-input-request-parameters
                         :shape "RouteParameters" :location common-lisp:nil
                         :location-name "requestParameters")
                        (route-key :initarg :route-key :initform
                         (common-lisp:error ":route-key is required") :type
                         (common-lisp:or selection-key common-lisp:null)
                         :accessor struct-shape-create-route-input-route-key
                         :shape "SelectionKey" :location common-lisp:nil
                         :location-name "routeKey")
                        (route-response-selection-expression :initarg
                         :route-response-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-create-route-input-route-response-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "routeResponseSelectionExpression")
                        (target :initarg :target :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-create-route-input-target
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "target"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-route-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-route-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-route-input 'make-create-route-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-route-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-route-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-required))
      (common-lisp:list
       (common-lisp:cons "ApiKeyRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorization-scopes))
      (common-lisp:list
       (common-lisp:cons "AuthorizationScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization-type))
      (common-lisp:list
       (common-lisp:cons "AuthorizationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-id))
      (common-lisp:list
       (common-lisp:cons "AuthorizerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ModelSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-name))
      (common-lisp:list
       (common-lisp:cons "OperationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-models))
      (common-lisp:list
       (common-lisp:cons "RequestModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "RequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-key))
      (common-lisp:list
       (common-lisp:cons "RouteKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'route-response-selection-expression))
      (common-lisp:list
       (common-lisp:cons "RouteResponseSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target))
      (common-lisp:list
       (common-lisp:cons "Target"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-route-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-route-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-route-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId")
                        (api-key-required :initarg :api-key-required :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-create-route-request-api-key-required
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "apiKeyRequired")
                        (authorization-scopes :initarg :authorization-scopes
                         :initform common-lisp:nil :type
                         (common-lisp:or authorization-scopes common-lisp:null)
                         :accessor
                         struct-shape-create-route-request-authorization-scopes
                         :shape "AuthorizationScopes" :location common-lisp:nil
                         :location-name "authorizationScopes")
                        (authorization-type :initarg :authorization-type
                         :initform common-lisp:nil :type
                         (common-lisp:or authorization-type common-lisp:null)
                         :accessor
                         struct-shape-create-route-request-authorization-type
                         :shape "AuthorizationType" :location common-lisp:nil
                         :location-name "authorizationType")
                        (authorizer-id :initarg :authorizer-id :initform
                         common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-create-route-request-authorizer-id :shape
                         "Id" :location common-lisp:nil :location-name
                         "authorizerId")
                        (model-selection-expression :initarg
                         :model-selection-expression :initform common-lisp:nil
                         :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-create-route-request-model-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "modelSelectionExpression")
                        (operation-name :initarg :operation-name :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-route-request-operation-name
                         :shape "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name "operationName")
                        (request-models :initarg :request-models :initform
                         common-lisp:nil :type
                         (common-lisp:or route-models common-lisp:null)
                         :accessor
                         struct-shape-create-route-request-request-models
                         :shape "RouteModels" :location common-lisp:nil
                         :location-name "requestModels")
                        (request-parameters :initarg :request-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or route-parameters common-lisp:null)
                         :accessor
                         struct-shape-create-route-request-request-parameters
                         :shape "RouteParameters" :location common-lisp:nil
                         :location-name "requestParameters")
                        (route-key :initarg :route-key :initform
                         (common-lisp:error ":route-key is required") :type
                         (common-lisp:or selection-key common-lisp:null)
                         :accessor struct-shape-create-route-request-route-key
                         :shape "SelectionKey" :location common-lisp:nil
                         :location-name "routeKey")
                        (route-response-selection-expression :initarg
                         :route-response-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-create-route-request-route-response-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "routeResponseSelectionExpression")
                        (target :initarg :target :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-create-route-request-target
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "target"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-route-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-route-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-route-request 'make-create-route-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-route-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-route-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-required))
      (common-lisp:list
       (common-lisp:cons "ApiKeyRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorization-scopes))
      (common-lisp:list
       (common-lisp:cons "AuthorizationScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization-type))
      (common-lisp:list
       (common-lisp:cons "AuthorizationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-id))
      (common-lisp:list
       (common-lisp:cons "AuthorizerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ModelSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-name))
      (common-lisp:list
       (common-lisp:cons "OperationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-models))
      (common-lisp:list
       (common-lisp:cons "RequestModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "RequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-key))
      (common-lisp:list
       (common-lisp:cons "RouteKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'route-response-selection-expression))
      (common-lisp:list
       (common-lisp:cons "RouteResponseSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target))
      (common-lisp:list
       (common-lisp:cons "Target"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-route-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-route-result common-lisp:nil
                       ((api-gateway-managed :initarg :api-gateway-managed
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-create-route-result-api-gateway-managed
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "apiGatewayManaged")
                        (api-key-required :initarg :api-key-required :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-create-route-result-api-key-required
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "apiKeyRequired")
                        (authorization-scopes :initarg :authorization-scopes
                         :initform common-lisp:nil :type
                         (common-lisp:or authorization-scopes common-lisp:null)
                         :accessor
                         struct-shape-create-route-result-authorization-scopes
                         :shape "AuthorizationScopes" :location common-lisp:nil
                         :location-name "authorizationScopes")
                        (authorization-type :initarg :authorization-type
                         :initform common-lisp:nil :type
                         (common-lisp:or authorization-type common-lisp:null)
                         :accessor
                         struct-shape-create-route-result-authorization-type
                         :shape "AuthorizationType" :location common-lisp:nil
                         :location-name "authorizationType")
                        (authorizer-id :initarg :authorizer-id :initform
                         common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-create-route-result-authorizer-id :shape
                         "Id" :location common-lisp:nil :location-name
                         "authorizerId")
                        (model-selection-expression :initarg
                         :model-selection-expression :initform common-lisp:nil
                         :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-create-route-result-model-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "modelSelectionExpression")
                        (operation-name :initarg :operation-name :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-route-result-operation-name :shape
                         "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name "operationName")
                        (request-models :initarg :request-models :initform
                         common-lisp:nil :type
                         (common-lisp:or route-models common-lisp:null)
                         :accessor
                         struct-shape-create-route-result-request-models :shape
                         "RouteModels" :location common-lisp:nil :location-name
                         "requestModels")
                        (request-parameters :initarg :request-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or route-parameters common-lisp:null)
                         :accessor
                         struct-shape-create-route-result-request-parameters
                         :shape "RouteParameters" :location common-lisp:nil
                         :location-name "requestParameters")
                        (route-id :initarg :route-id :initform common-lisp:nil
                         :type (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-create-route-result-route-id :shape "Id"
                         :location common-lisp:nil :location-name "routeId")
                        (route-key :initarg :route-key :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-key common-lisp:null)
                         :accessor struct-shape-create-route-result-route-key
                         :shape "SelectionKey" :location common-lisp:nil
                         :location-name "routeKey")
                        (route-response-selection-expression :initarg
                         :route-response-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-create-route-result-route-response-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "routeResponseSelectionExpression")
                        (target :initarg :target :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-create-route-result-target
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "target"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-route-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-route-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-route-result 'make-create-route-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-route-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-route-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-managed))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-required))
      (common-lisp:list
       (common-lisp:cons "ApiKeyRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorization-scopes))
      (common-lisp:list
       (common-lisp:cons "AuthorizationScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization-type))
      (common-lisp:list
       (common-lisp:cons "AuthorizationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-id))
      (common-lisp:list
       (common-lisp:cons "AuthorizerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ModelSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-name))
      (common-lisp:list
       (common-lisp:cons "OperationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-models))
      (common-lisp:list
       (common-lisp:cons "RequestModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "RequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-id))
      (common-lisp:list
       (common-lisp:cons "RouteId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-key))
      (common-lisp:list
       (common-lisp:cons "RouteKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'route-response-selection-expression))
      (common-lisp:list
       (common-lisp:cons "RouteResponseSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target))
      (common-lisp:list
       (common-lisp:cons "Target"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-route-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-route-response-input common-lisp:nil
                       ((model-selection-expression :initarg
                         :model-selection-expression :initform common-lisp:nil
                         :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-create-route-response-input-model-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "modelSelectionExpression")
                        (response-models :initarg :response-models :initform
                         common-lisp:nil :type
                         (common-lisp:or route-models common-lisp:null)
                         :accessor
                         struct-shape-create-route-response-input-response-models
                         :shape "RouteModels" :location common-lisp:nil
                         :location-name "responseModels")
                        (response-parameters :initarg :response-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or route-parameters common-lisp:null)
                         :accessor
                         struct-shape-create-route-response-input-response-parameters
                         :shape "RouteParameters" :location common-lisp:nil
                         :location-name "responseParameters")
                        (route-response-key :initarg :route-response-key
                         :initform
                         (common-lisp:error ":route-response-key is required")
                         :type (common-lisp:or selection-key common-lisp:null)
                         :accessor
                         struct-shape-create-route-response-input-route-response-key
                         :shape "SelectionKey" :location common-lisp:nil
                         :location-name "routeResponseKey"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-route-response-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-route-response-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-route-response-input
                    'make-create-route-response-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-route-response-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-route-response-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ModelSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-models))
      (common-lisp:list
       (common-lisp:cons "ResponseModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-response-key))
      (common-lisp:list
       (common-lisp:cons "RouteResponseKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-route-response-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-route-response-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-route-response-request-api-id
                         :shape "__string" :location "uri" :location-name
                         "apiId")
                        (model-selection-expression :initarg
                         :model-selection-expression :initform common-lisp:nil
                         :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-create-route-response-request-model-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "modelSelectionExpression")
                        (response-models :initarg :response-models :initform
                         common-lisp:nil :type
                         (common-lisp:or route-models common-lisp:null)
                         :accessor
                         struct-shape-create-route-response-request-response-models
                         :shape "RouteModels" :location common-lisp:nil
                         :location-name "responseModels")
                        (response-parameters :initarg :response-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or route-parameters common-lisp:null)
                         :accessor
                         struct-shape-create-route-response-request-response-parameters
                         :shape "RouteParameters" :location common-lisp:nil
                         :location-name "responseParameters")
                        (route-id :initarg :route-id :initform
                         (common-lisp:error ":route-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-route-response-request-route-id
                         :shape "__string" :location "uri" :location-name
                         "routeId")
                        (route-response-key :initarg :route-response-key
                         :initform
                         (common-lisp:error ":route-response-key is required")
                         :type (common-lisp:or selection-key common-lisp:null)
                         :accessor
                         struct-shape-create-route-response-request-route-response-key
                         :shape "SelectionKey" :location common-lisp:nil
                         :location-name "routeResponseKey"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-route-response-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-route-response-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-route-response-request
                    'make-create-route-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-route-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-route-response-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ModelSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-models))
      (common-lisp:list
       (common-lisp:cons "ResponseModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-response-key))
      (common-lisp:list
       (common-lisp:cons "RouteResponseKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-route-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-route-response-response common-lisp:nil
                       ((model-selection-expression :initarg
                         :model-selection-expression :initform common-lisp:nil
                         :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-create-route-response-response-model-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "modelSelectionExpression")
                        (response-models :initarg :response-models :initform
                         common-lisp:nil :type
                         (common-lisp:or route-models common-lisp:null)
                         :accessor
                         struct-shape-create-route-response-response-response-models
                         :shape "RouteModels" :location common-lisp:nil
                         :location-name "responseModels")
                        (response-parameters :initarg :response-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or route-parameters common-lisp:null)
                         :accessor
                         struct-shape-create-route-response-response-response-parameters
                         :shape "RouteParameters" :location common-lisp:nil
                         :location-name "responseParameters")
                        (route-response-id :initarg :route-response-id
                         :initform common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-create-route-response-response-route-response-id
                         :shape "Id" :location common-lisp:nil :location-name
                         "routeResponseId")
                        (route-response-key :initarg :route-response-key
                         :initform common-lisp:nil :type
                         (common-lisp:or selection-key common-lisp:null)
                         :accessor
                         struct-shape-create-route-response-response-route-response-key
                         :shape "SelectionKey" :location common-lisp:nil
                         :location-name "routeResponseKey"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-route-response-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-route-response-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-route-response-response
                    'make-create-route-response-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-route-response-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-route-response-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ModelSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-models))
      (common-lisp:list
       (common-lisp:cons "ResponseModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-response-id))
      (common-lisp:list
       (common-lisp:cons "RouteResponseId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-response-key))
      (common-lisp:list
       (common-lisp:cons "RouteResponseKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-route-response-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-stage-input common-lisp:nil
                       ((access-log-settings :initarg :access-log-settings
                         :initform common-lisp:nil :type
                         (common-lisp:or access-log-settings common-lisp:null)
                         :accessor
                         struct-shape-create-stage-input-access-log-settings
                         :shape "AccessLogSettings" :location common-lisp:nil
                         :location-name "accessLogSettings")
                        (auto-deploy :initarg :auto-deploy :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-create-stage-input-auto-deploy
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "autoDeploy")
                        (client-certificate-id :initarg :client-certificate-id
                         :initform common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-create-stage-input-client-certificate-id
                         :shape "Id" :location common-lisp:nil :location-name
                         "clientCertificateId")
                        (default-route-settings :initarg
                         :default-route-settings :initform common-lisp:nil
                         :type (common-lisp:or route-settings common-lisp:null)
                         :accessor
                         struct-shape-create-stage-input-default-route-settings
                         :shape "RouteSettings" :location common-lisp:nil
                         :location-name "defaultRouteSettings")
                        (deployment-id :initarg :deployment-id :initform
                         common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-create-stage-input-deployment-id :shape
                         "Id" :location common-lisp:nil :location-name
                         "deploymentId")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor struct-shape-create-stage-input-description
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description")
                        (route-settings :initarg :route-settings :initform
                         common-lisp:nil :type
                         (common-lisp:or route-settings-map common-lisp:null)
                         :accessor
                         struct-shape-create-stage-input-route-settings :shape
                         "RouteSettingsMap" :location common-lisp:nil
                         :location-name "routeSettings")
                        (stage-name :initarg :stage-name :initform
                         (common-lisp:error ":stage-name is required") :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-create-stage-input-stage-name
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "stageName")
                        (stage-variables :initarg :stage-variables :initform
                         common-lisp:nil :type
                         (common-lisp:or stage-variables-map common-lisp:null)
                         :accessor
                         struct-shape-create-stage-input-stage-variables :shape
                         "StageVariablesMap" :location common-lisp:nil
                         :location-name "stageVariables")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-stage-input-tags :shape "Tags"
                         :location common-lisp:nil :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-stage-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-stage-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-stage-input 'make-create-stage-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-stage-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-stage-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-log-settings))
      (common-lisp:list
       (common-lisp:cons "AccessLogSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-deploy))
      (common-lisp:list
       (common-lisp:cons "AutoDeploy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-certificate-id))
      (common-lisp:list
       (common-lisp:cons "ClientCertificateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-route-settings))
      (common-lisp:list
       (common-lisp:cons "DefaultRouteSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "DeploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-settings))
      (common-lisp:list
       (common-lisp:cons "RouteSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-name))
      (common-lisp:list
       (common-lisp:cons "StageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-variables))
      (common-lisp:list
       (common-lisp:cons "StageVariables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-stage-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-stage-request common-lisp:nil
                       ((access-log-settings :initarg :access-log-settings
                         :initform common-lisp:nil :type
                         (common-lisp:or access-log-settings common-lisp:null)
                         :accessor
                         struct-shape-create-stage-request-access-log-settings
                         :shape "AccessLogSettings" :location common-lisp:nil
                         :location-name "accessLogSettings")
                        (api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-stage-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId")
                        (auto-deploy :initarg :auto-deploy :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-create-stage-request-auto-deploy :shape
                         "__boolean" :location common-lisp:nil :location-name
                         "autoDeploy")
                        (client-certificate-id :initarg :client-certificate-id
                         :initform common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-create-stage-request-client-certificate-id
                         :shape "Id" :location common-lisp:nil :location-name
                         "clientCertificateId")
                        (default-route-settings :initarg
                         :default-route-settings :initform common-lisp:nil
                         :type (common-lisp:or route-settings common-lisp:null)
                         :accessor
                         struct-shape-create-stage-request-default-route-settings
                         :shape "RouteSettings" :location common-lisp:nil
                         :location-name "defaultRouteSettings")
                        (deployment-id :initarg :deployment-id :initform
                         common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-create-stage-request-deployment-id :shape
                         "Id" :location common-lisp:nil :location-name
                         "deploymentId")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-stage-request-description :shape
                         "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description")
                        (route-settings :initarg :route-settings :initform
                         common-lisp:nil :type
                         (common-lisp:or route-settings-map common-lisp:null)
                         :accessor
                         struct-shape-create-stage-request-route-settings
                         :shape "RouteSettingsMap" :location common-lisp:nil
                         :location-name "routeSettings")
                        (stage-name :initarg :stage-name :initform
                         (common-lisp:error ":stage-name is required") :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-create-stage-request-stage-name
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "stageName")
                        (stage-variables :initarg :stage-variables :initform
                         common-lisp:nil :type
                         (common-lisp:or stage-variables-map common-lisp:null)
                         :accessor
                         struct-shape-create-stage-request-stage-variables
                         :shape "StageVariablesMap" :location common-lisp:nil
                         :location-name "stageVariables")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-stage-request-tags :shape "Tags"
                         :location common-lisp:nil :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-stage-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-stage-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-stage-request 'make-create-stage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-stage-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-log-settings))
      (common-lisp:list
       (common-lisp:cons "AccessLogSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-deploy))
      (common-lisp:list
       (common-lisp:cons "AutoDeploy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-certificate-id))
      (common-lisp:list
       (common-lisp:cons "ClientCertificateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-route-settings))
      (common-lisp:list
       (common-lisp:cons "DefaultRouteSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "DeploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-settings))
      (common-lisp:list
       (common-lisp:cons "RouteSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-name))
      (common-lisp:list
       (common-lisp:cons "StageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-variables))
      (common-lisp:list
       (common-lisp:cons "StageVariables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-stage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-stage-response common-lisp:nil
                       ((access-log-settings :initarg :access-log-settings
                         :initform common-lisp:nil :type
                         (common-lisp:or access-log-settings common-lisp:null)
                         :accessor
                         struct-shape-create-stage-response-access-log-settings
                         :shape "AccessLogSettings" :location common-lisp:nil
                         :location-name "accessLogSettings")
                        (api-gateway-managed :initarg :api-gateway-managed
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-create-stage-response-api-gateway-managed
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "apiGatewayManaged")
                        (auto-deploy :initarg :auto-deploy :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-create-stage-response-auto-deploy :shape
                         "__boolean" :location common-lisp:nil :location-name
                         "autoDeploy")
                        (client-certificate-id :initarg :client-certificate-id
                         :initform common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-create-stage-response-client-certificate-id
                         :shape "Id" :location common-lisp:nil :location-name
                         "clientCertificateId")
                        (created-date :initarg :created-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-create-stage-response-created-date :shape
                         "__timestampIso8601" :location common-lisp:nil
                         :location-name "createdDate")
                        (default-route-settings :initarg
                         :default-route-settings :initform common-lisp:nil
                         :type (common-lisp:or route-settings common-lisp:null)
                         :accessor
                         struct-shape-create-stage-response-default-route-settings
                         :shape "RouteSettings" :location common-lisp:nil
                         :location-name "defaultRouteSettings")
                        (deployment-id :initarg :deployment-id :initform
                         common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-create-stage-response-deployment-id
                         :shape "Id" :location common-lisp:nil :location-name
                         "deploymentId")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-stage-response-description :shape
                         "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description")
                        (last-deployment-status-message :initarg
                         :last-deployment-status-message :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-stage-response-last-deployment-status-message
                         :shape "__string" :location common-lisp:nil
                         :location-name "lastDeploymentStatusMessage")
                        (last-updated-date :initarg :last-updated-date
                         :initform common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-create-stage-response-last-updated-date
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "lastUpdatedDate")
                        (route-settings :initarg :route-settings :initform
                         common-lisp:nil :type
                         (common-lisp:or route-settings-map common-lisp:null)
                         :accessor
                         struct-shape-create-stage-response-route-settings
                         :shape "RouteSettingsMap" :location common-lisp:nil
                         :location-name "routeSettings")
                        (stage-name :initarg :stage-name :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-stage-response-stage-name :shape
                         "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "stageName")
                        (stage-variables :initarg :stage-variables :initform
                         common-lisp:nil :type
                         (common-lisp:or stage-variables-map common-lisp:null)
                         :accessor
                         struct-shape-create-stage-response-stage-variables
                         :shape "StageVariablesMap" :location common-lisp:nil
                         :location-name "stageVariables")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-stage-response-tags :shape "Tags"
                         :location common-lisp:nil :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-stage-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-stage-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-stage-response 'make-create-stage-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-stage-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-stage-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-log-settings))
      (common-lisp:list
       (common-lisp:cons "AccessLogSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-managed))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-deploy))
      (common-lisp:list
       (common-lisp:cons "AutoDeploy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-certificate-id))
      (common-lisp:list
       (common-lisp:cons "ClientCertificateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-route-settings))
      (common-lisp:list
       (common-lisp:cons "DefaultRouteSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "DeploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-deployment-status-message))
      (common-lisp:list
       (common-lisp:cons "LastDeploymentStatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-date))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-settings))
      (common-lisp:list
       (common-lisp:cons "RouteSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-name))
      (common-lisp:list
       (common-lisp:cons "StageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-variables))
      (common-lisp:list
       (common-lisp:cons "StageVariables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-stage-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-vpc-link-input common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-create-vpc-link-input-name
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "name")
                        (security-group-ids :initarg :security-group-ids
                         :initform common-lisp:nil :type
                         (common-lisp:or security-group-id-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-vpc-link-input-security-group-ids
                         :shape "SecurityGroupIdList" :location common-lisp:nil
                         :location-name "securityGroupIds")
                        (subnet-ids :initarg :subnet-ids :initform
                         (common-lisp:error ":subnet-ids is required") :type
                         (common-lisp:or subnet-id-list common-lisp:null)
                         :accessor
                         struct-shape-create-vpc-link-input-subnet-ids :shape
                         "SubnetIdList" :location common-lisp:nil
                         :location-name "subnetIds")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-vpc-link-input-tags :shape "Tags"
                         :location common-lisp:nil :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-vpc-link-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-vpc-link-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-vpc-link-input 'make-create-vpc-link-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-link-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-link-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-ids))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-ids))
      (common-lisp:list
       (common-lisp:cons "SubnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-link-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-vpc-link-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-create-vpc-link-request-name
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "name")
                        (security-group-ids :initarg :security-group-ids
                         :initform common-lisp:nil :type
                         (common-lisp:or security-group-id-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-vpc-link-request-security-group-ids
                         :shape "SecurityGroupIdList" :location common-lisp:nil
                         :location-name "securityGroupIds")
                        (subnet-ids :initarg :subnet-ids :initform
                         (common-lisp:error ":subnet-ids is required") :type
                         (common-lisp:or subnet-id-list common-lisp:null)
                         :accessor
                         struct-shape-create-vpc-link-request-subnet-ids :shape
                         "SubnetIdList" :location common-lisp:nil
                         :location-name "subnetIds")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-vpc-link-request-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-vpc-link-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-vpc-link-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-vpc-link-request 'make-create-vpc-link-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-link-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-link-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-ids))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-ids))
      (common-lisp:list
       (common-lisp:cons "SubnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-link-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-vpc-link-response common-lisp:nil
                       ((created-date :initarg :created-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-create-vpc-link-response-created-date
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "createdDate")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-create-vpc-link-response-name
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "name")
                        (security-group-ids :initarg :security-group-ids
                         :initform common-lisp:nil :type
                         (common-lisp:or security-group-id-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-vpc-link-response-security-group-ids
                         :shape "SecurityGroupIdList" :location common-lisp:nil
                         :location-name "securityGroupIds")
                        (subnet-ids :initarg :subnet-ids :initform
                         common-lisp:nil :type
                         (common-lisp:or subnet-id-list common-lisp:null)
                         :accessor
                         struct-shape-create-vpc-link-response-subnet-ids
                         :shape "SubnetIdList" :location common-lisp:nil
                         :location-name "subnetIds")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-vpc-link-response-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         "tags")
                        (vpc-link-id :initarg :vpc-link-id :initform
                         common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-create-vpc-link-response-vpc-link-id
                         :shape "Id" :location common-lisp:nil :location-name
                         "vpcLinkId")
                        (vpc-link-status :initarg :vpc-link-status :initform
                         common-lisp:nil :type
                         (common-lisp:or vpc-link-status common-lisp:null)
                         :accessor
                         struct-shape-create-vpc-link-response-vpc-link-status
                         :shape "VpcLinkStatus" :location common-lisp:nil
                         :location-name "vpcLinkStatus")
                        (vpc-link-status-message :initarg
                         :vpc-link-status-message :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-vpc-link-response-vpc-link-status-message
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "vpcLinkStatusMessage")
                        (vpc-link-version :initarg :vpc-link-version :initform
                         common-lisp:nil :type
                         (common-lisp:or vpc-link-version common-lisp:null)
                         :accessor
                         struct-shape-create-vpc-link-response-vpc-link-version
                         :shape "VpcLinkVersion" :location common-lisp:nil
                         :location-name "vpcLinkVersion"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-vpc-link-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-vpc-link-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-vpc-link-response 'make-create-vpc-link-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-link-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-link-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-ids))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-ids))
      (common-lisp:list
       (common-lisp:cons "SubnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-link-id))
      (common-lisp:list
       (common-lisp:cons "VpcLinkId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-link-status))
      (common-lisp:list
       (common-lisp:cons "VpcLinkStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vpc-link-status-message))
      (common-lisp:list
       (common-lisp:cons "VpcLinkStatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-link-version))
      (common-lisp:list
       (common-lisp:cons "VpcLinkVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-link-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-access-log-settings-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-access-log-settings-request-api-id
                         :shape "__string" :location "uri" :location-name
                         "apiId")
                        (stage-name :initarg :stage-name :initform
                         (common-lisp:error ":stage-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-access-log-settings-request-stage-name
                         :shape "__string" :location "uri" :location-name
                         "stageName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-access-log-settings-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-access-log-settings-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-access-log-settings-request
                    'make-delete-access-log-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-access-log-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-access-log-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-access-log-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-api-mapping-request common-lisp:nil
                       ((api-mapping-id :initarg :api-mapping-id :initform
                         (common-lisp:error ":api-mapping-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-api-mapping-request-api-mapping-id
                         :shape "__string" :location "uri" :location-name
                         "apiMappingId")
                        (domain-name :initarg :domain-name :initform
                         (common-lisp:error ":domain-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-api-mapping-request-domain-name
                         :shape "__string" :location "uri" :location-name
                         "domainName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-api-mapping-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-api-mapping-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-api-mapping-request
                    'make-delete-api-mapping-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-api-mapping-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-api-mapping-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-api-mapping-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-api-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-api-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-api-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-api-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-api-request 'make-delete-api-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-api-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-authorizer-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-authorizer-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId")
                        (authorizer-id :initarg :authorizer-id :initform
                         (common-lisp:error ":authorizer-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-authorizer-request-authorizer-id
                         :shape "__string" :location "uri" :location-name
                         "authorizerId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-authorizer-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-authorizer-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-authorizer-request
                    'make-delete-authorizer-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-authorizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-authorizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-authorizer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-cors-configuration-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-cors-configuration-request-api-id
                         :shape "__string" :location "uri" :location-name
                         "apiId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-cors-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-cors-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-cors-configuration-request
                    'make-delete-cors-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-cors-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-cors-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-cors-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-deployment-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-deployment-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId")
                        (deployment-id :initarg :deployment-id :initform
                         (common-lisp:error ":deployment-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-deployment-request-deployment-id
                         :shape "__string" :location "uri" :location-name
                         "deploymentId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-deployment-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-deployment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-deployment-request
                    'make-delete-deployment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-deployment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-domain-name-request common-lisp:nil
                       ((domain-name :initarg :domain-name :initform
                         (common-lisp:error ":domain-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-domain-name-request-domain-name
                         :shape "__string" :location "uri" :location-name
                         "domainName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-domain-name-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-domain-name-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-domain-name-request
                    'make-delete-domain-name-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-domain-name-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-domain-name-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-domain-name-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-integration-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-integration-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId")
                        (integration-id :initarg :integration-id :initform
                         (common-lisp:error ":integration-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-integration-request-integration-id
                         :shape "__string" :location "uri" :location-name
                         "integrationId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-integration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-integration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-integration-request
                    'make-delete-integration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-integration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-integration-response-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-integration-response-request-api-id
                         :shape "__string" :location "uri" :location-name
                         "apiId")
                        (integration-id :initarg :integration-id :initform
                         (common-lisp:error ":integration-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-integration-response-request-integration-id
                         :shape "__string" :location "uri" :location-name
                         "integrationId")
                        (integration-response-id :initarg
                         :integration-response-id :initform
                         (common-lisp:error
                          ":integration-response-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-integration-response-request-integration-response-id
                         :shape "__string" :location "uri" :location-name
                         "integrationResponseId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-integration-response-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-integration-response-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-integration-response-request
                    'make-delete-integration-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-integration-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-integration-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-integration-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-model-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-model-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId")
                        (model-id :initarg :model-id :initform
                         (common-lisp:error ":model-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-model-request-model-id :shape
                         "__string" :location "uri" :location-name "modelId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-model-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-model-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-model-request 'make-delete-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-route-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-route-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId")
                        (route-id :initarg :route-id :initform
                         (common-lisp:error ":route-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-route-request-route-id :shape
                         "__string" :location "uri" :location-name "routeId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-route-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-route-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-route-request 'make-delete-route-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-route-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-route-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-route-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-route-request-parameter-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-route-request-parameter-request-api-id
                         :shape "__string" :location "uri" :location-name
                         "apiId")
                        (request-parameter-key :initarg :request-parameter-key
                         :initform
                         (common-lisp:error
                          ":request-parameter-key is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-route-request-parameter-request-request-parameter-key
                         :shape "__string" :location "uri" :location-name
                         "requestParameterKey")
                        (route-id :initarg :route-id :initform
                         (common-lisp:error ":route-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-route-request-parameter-request-route-id
                         :shape "__string" :location "uri" :location-name
                         "routeId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-route-request-parameter-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-route-request-parameter-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-route-request-parameter-request
                    'make-delete-route-request-parameter-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-route-request-parameter-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-route-request-parameter-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-route-request-parameter-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-route-response-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-route-response-request-api-id
                         :shape "__string" :location "uri" :location-name
                         "apiId")
                        (route-id :initarg :route-id :initform
                         (common-lisp:error ":route-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-route-response-request-route-id
                         :shape "__string" :location "uri" :location-name
                         "routeId")
                        (route-response-id :initarg :route-response-id
                         :initform
                         (common-lisp:error ":route-response-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-route-response-request-route-response-id
                         :shape "__string" :location "uri" :location-name
                         "routeResponseId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-route-response-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-route-response-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-route-response-request
                    'make-delete-route-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-route-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-route-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-route-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-route-settings-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-route-settings-request-api-id
                         :shape "__string" :location "uri" :location-name
                         "apiId")
                        (route-key :initarg :route-key :initform
                         (common-lisp:error ":route-key is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-route-settings-request-route-key
                         :shape "__string" :location "uri" :location-name
                         "routeKey")
                        (stage-name :initarg :stage-name :initform
                         (common-lisp:error ":stage-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-route-settings-request-stage-name
                         :shape "__string" :location "uri" :location-name
                         "stageName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-route-settings-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-route-settings-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-route-settings-request
                    'make-delete-route-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-route-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-route-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-route-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-stage-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-stage-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId")
                        (stage-name :initarg :stage-name :initform
                         (common-lisp:error ":stage-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-stage-request-stage-name :shape
                         "__string" :location "uri" :location-name
                         "stageName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-stage-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-stage-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-stage-request 'make-delete-stage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-stage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-vpc-link-request common-lisp:nil
                       ((vpc-link-id :initarg :vpc-link-id :initform
                         (common-lisp:error ":vpc-link-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-vpc-link-request-vpc-link-id
                         :shape "__string" :location "uri" :location-name
                         "vpcLinkId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-vpc-link-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-vpc-link-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-vpc-link-request 'make-delete-vpc-link-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-link-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-link-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-link-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-vpc-link-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-vpc-link-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-vpc-link-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-vpc-link-response 'make-delete-vpc-link-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-link-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-link-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-link-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass deployment common-lisp:nil
                       ((auto-deployed :initarg :auto-deployed :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-deployment-auto-deployed :shape
                         "__boolean" :location common-lisp:nil :location-name
                         "autoDeployed")
                        (created-date :initarg :created-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor struct-shape-deployment-created-date :shape
                         "__timestampIso8601" :location common-lisp:nil
                         :location-name "createdDate")
                        (deployment-id :initarg :deployment-id :initform
                         common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-deployment-deployment-id :shape "Id"
                         :location common-lisp:nil :location-name
                         "deploymentId")
                        (deployment-status :initarg :deployment-status
                         :initform common-lisp:nil :type
                         (common-lisp:or deployment-status common-lisp:null)
                         :accessor struct-shape-deployment-deployment-status
                         :shape "DeploymentStatus" :location common-lisp:nil
                         :location-name "deploymentStatus")
                        (deployment-status-message :initarg
                         :deployment-status-message :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-deployment-deployment-status-message
                         :shape "__string" :location common-lisp:nil
                         :location-name "deploymentStatusMessage")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor struct-shape-deployment-description :shape
                         "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-deployment
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'deployment
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'deployment 'make-deployment))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input deployment))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input deployment))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-deployed))
      (common-lisp:list
       (common-lisp:cons "AutoDeployed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "DeploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-status))
      (common-lisp:list
       (common-lisp:cons "DeploymentStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'deployment-status-message))
      (common-lisp:list
       (common-lisp:cons "DeploymentStatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input deployment))
   common-lisp:nil))
(common-lisp:deftype deployment-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass deployments common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or |__listOfDeployment| common-lisp:null)
                         :accessor struct-shape-deployments-items :shape
                         "__listOfDeployment" :location common-lisp:nil
                         :location-name "items")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-deployments-next-token :shape "NextToken"
                         :location common-lisp:nil :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-deployments
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'deployments
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'deployments 'make-deployments))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input deployments))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input deployments))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input deployments))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass domain-name common-lisp:nil
                       ((api-mapping-selection-expression :initarg
                         :api-mapping-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-domain-name-api-mapping-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "apiMappingSelectionExpression")
                        (domain-name :initarg :domain-name :initform
                         (common-lisp:error ":domain-name is required") :type
                         (common-lisp:or string-with-length-between1and512
                                         common-lisp:null)
                         :accessor struct-shape-domain-name-domain-name :shape
                         "StringWithLengthBetween1And512" :location
                         common-lisp:nil :location-name "domainName")
                        (domain-name-configurations :initarg
                         :domain-name-configurations :initform common-lisp:nil
                         :type
                         (common-lisp:or domain-name-configurations
                                         common-lisp:null)
                         :accessor
                         struct-shape-domain-name-domain-name-configurations
                         :shape "DomainNameConfigurations" :location
                         common-lisp:nil :location-name
                         "domainNameConfigurations")
                        (mutual-tls-authentication :initarg
                         :mutual-tls-authentication :initform common-lisp:nil
                         :type
                         (common-lisp:or mutual-tls-authentication
                                         common-lisp:null)
                         :accessor
                         struct-shape-domain-name-mutual-tls-authentication
                         :shape "MutualTlsAuthentication" :location
                         common-lisp:nil :location-name
                         "mutualTlsAuthentication")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-domain-name-tags :shape "Tags" :location
                         common-lisp:nil :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-domain-name
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'domain-name
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'domain-name 'make-domain-name))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input domain-name))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input domain-name))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-mapping-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ApiMappingSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'domain-name-configurations))
      (common-lisp:list
       (common-lisp:cons "DomainNameConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'mutual-tls-authentication))
      (common-lisp:list
       (common-lisp:cons "MutualTlsAuthentication"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input domain-name))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass domain-name-configuration common-lisp:nil
                       ((api-gateway-domain-name :initarg
                         :api-gateway-domain-name :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-domain-name-configuration-api-gateway-domain-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "apiGatewayDomainName")
                        (certificate-arn :initarg :certificate-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-domain-name-configuration-certificate-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         "certificateArn")
                        (certificate-name :initarg :certificate-name :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor
                         struct-shape-domain-name-configuration-certificate-name
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "certificateName")
                        (certificate-upload-date :initarg
                         :certificate-upload-date :initform common-lisp:nil
                         :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-domain-name-configuration-certificate-upload-date
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "certificateUploadDate")
                        (domain-name-status :initarg :domain-name-status
                         :initform common-lisp:nil :type
                         (common-lisp:or domain-name-status common-lisp:null)
                         :accessor
                         struct-shape-domain-name-configuration-domain-name-status
                         :shape "DomainNameStatus" :location common-lisp:nil
                         :location-name "domainNameStatus")
                        (domain-name-status-message :initarg
                         :domain-name-status-message :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-domain-name-configuration-domain-name-status-message
                         :shape "__string" :location common-lisp:nil
                         :location-name "domainNameStatusMessage")
                        (endpoint-type :initarg :endpoint-type :initform
                         common-lisp:nil :type
                         (common-lisp:or endpoint-type common-lisp:null)
                         :accessor
                         struct-shape-domain-name-configuration-endpoint-type
                         :shape "EndpointType" :location common-lisp:nil
                         :location-name "endpointType")
                        (hosted-zone-id :initarg :hosted-zone-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-domain-name-configuration-hosted-zone-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "hostedZoneId")
                        (security-policy :initarg :security-policy :initform
                         common-lisp:nil :type
                         (common-lisp:or security-policy common-lisp:null)
                         :accessor
                         struct-shape-domain-name-configuration-security-policy
                         :shape "SecurityPolicy" :location common-lisp:nil
                         :location-name "securityPolicy")
                        (ownership-verification-certificate-arn :initarg
                         :ownership-verification-certificate-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-domain-name-configuration-ownership-verification-certificate-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         "ownershipVerificationCertificateArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-domain-name-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'domain-name-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'domain-name-configuration
                    'make-domain-name-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          domain-name-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          domain-name-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-gateway-domain-name))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayDomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate-arn))
      (common-lisp:list
       (common-lisp:cons "CertificateArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate-name))
      (common-lisp:list
       (common-lisp:cons "CertificateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'certificate-upload-date))
      (common-lisp:list
       (common-lisp:cons "CertificateUploadDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name-status))
      (common-lisp:list
       (common-lisp:cons "DomainNameStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'domain-name-status-message))
      (common-lisp:list
       (common-lisp:cons "DomainNameStatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-type))
      (common-lisp:list
       (common-lisp:cons "EndpointType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hosted-zone-id))
      (common-lisp:list
       (common-lisp:cons "HostedZoneId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-policy))
      (common-lisp:list
       (common-lisp:cons "SecurityPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ownership-verification-certificate-arn))
      (common-lisp:list
       (common-lisp:cons "OwnershipVerificationCertificateArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          domain-name-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype domain-name-configurations ()
   '(trivial-types:proper-list domain-name-configuration))
 (common-lisp:defun make-domain-name-configurations
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            domain-name-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:deftype domain-name-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass domain-names common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or |__listOfDomainName| common-lisp:null)
                         :accessor struct-shape-domain-names-items :shape
                         "__listOfDomainName" :location common-lisp:nil
                         :location-name "items")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-domain-names-next-token :shape
                         "NextToken" :location common-lisp:nil :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-domain-names
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'domain-names
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'domain-names 'make-domain-names))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input domain-names))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input domain-names))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input domain-names))
   common-lisp:nil))
(common-lisp:deftype endpoint-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass export-api-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-export-api-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId")
                        (export-version :initarg :export-version :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-export-api-request-export-version :shape
                         "__string" :location "querystring" :location-name
                         "exportVersion")
                        (include-extensions :initarg :include-extensions
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-export-api-request-include-extensions
                         :shape "__boolean" :location "querystring"
                         :location-name "includeExtensions")
                        (output-type :initarg :output-type :initform
                         (common-lisp:error ":output-type is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-export-api-request-output-type :shape
                         "__string" :location "querystring" :location-name
                         "outputType")
                        (specification :initarg :specification :initform
                         (common-lisp:error ":specification is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-export-api-request-specification :shape
                         "__string" :location "uri" :location-name
                         "specification")
                        (stage-name :initarg :stage-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-export-api-request-stage-name :shape
                         "__string" :location "querystring" :location-name
                         "stageName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-export-api-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'export-api-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'export-api-request 'make-export-api-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input export-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input export-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input export-api-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass export-api-response common-lisp:nil
                       ((body :initarg :body :initform common-lisp:nil :type
                         (common-lisp:or exported-api common-lisp:null)
                         :accessor struct-shape-export-api-response-body :shape
                         "ExportedApi" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-export-api-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'export-api-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'export-api-response 'make-export-api-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input export-api-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input export-api-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input export-api-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        ((aws-sdk/generator/shape::input export-api-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:deftype exported-api ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:progn
 (common-lisp:defclass reset-authorizers-cache-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-reset-authorizers-cache-request-api-id
                         :shape "__string" :location "uri" :location-name
                         "apiId")
                        (stage-name :initarg :stage-name :initform
                         (common-lisp:error ":stage-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-reset-authorizers-cache-request-stage-name
                         :shape "__string" :location "uri" :location-name
                         "stageName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-reset-authorizers-cache-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'reset-authorizers-cache-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'reset-authorizers-cache-request
                    'make-reset-authorizers-cache-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reset-authorizers-cache-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reset-authorizers-cache-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reset-authorizers-cache-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-api-mapping-request common-lisp:nil
                       ((api-mapping-id :initarg :api-mapping-id :initform
                         (common-lisp:error ":api-mapping-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-api-mapping-request-api-mapping-id
                         :shape "__string" :location "uri" :location-name
                         "apiMappingId")
                        (domain-name :initarg :domain-name :initform
                         (common-lisp:error ":domain-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-api-mapping-request-domain-name
                         :shape "__string" :location "uri" :location-name
                         "domainName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-api-mapping-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-api-mapping-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-api-mapping-request 'make-get-api-mapping-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-api-mapping-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-api-mapping-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-api-mapping-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-api-mapping-response common-lisp:nil
                       ((api-id :initarg :api-id :initform common-lisp:nil
                         :type (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-get-api-mapping-response-api-id :shape
                         "Id" :location common-lisp:nil :location-name "apiId")
                        (api-mapping-id :initarg :api-mapping-id :initform
                         common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-get-api-mapping-response-api-mapping-id
                         :shape "Id" :location common-lisp:nil :location-name
                         "apiMappingId")
                        (api-mapping-key :initarg :api-mapping-key :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-key common-lisp:null)
                         :accessor
                         struct-shape-get-api-mapping-response-api-mapping-key
                         :shape "SelectionKey" :location common-lisp:nil
                         :location-name "apiMappingKey")
                        (stage :initarg :stage :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-get-api-mapping-response-stage
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "stage"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-api-mapping-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-api-mapping-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-api-mapping-response 'make-get-api-mapping-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-api-mapping-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-api-mapping-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-id))
      (common-lisp:list
       (common-lisp:cons "ApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-mapping-id))
      (common-lisp:list
       (common-lisp:cons "ApiMappingId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-mapping-key))
      (common-lisp:list
       (common-lisp:cons "ApiMappingKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "Stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-api-mapping-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-api-mappings-request common-lisp:nil
                       ((domain-name :initarg :domain-name :initform
                         (common-lisp:error ":domain-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-api-mappings-request-domain-name
                         :shape "__string" :location "uri" :location-name
                         "domainName")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-api-mappings-request-max-results
                         :shape "__string" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-api-mappings-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-api-mappings-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-api-mappings-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-api-mappings-request 'make-get-api-mappings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-api-mappings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-api-mappings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-api-mappings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-api-mappings-response common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or |__listOfApiMapping| common-lisp:null)
                         :accessor struct-shape-get-api-mappings-response-items
                         :shape "__listOfApiMapping" :location common-lisp:nil
                         :location-name "items")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-get-api-mappings-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-api-mappings-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-api-mappings-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-api-mappings-response
                    'make-get-api-mappings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-api-mappings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-api-mappings-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-api-mappings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-api-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-api-request-api-id :shape "__string"
                         :location "uri" :location-name "apiId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-api-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-api-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'get-api-request 'make-get-api-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-api-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-api-response common-lisp:nil
                       ((api-endpoint :initarg :api-endpoint :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-api-response-api-endpoint :shape
                         "__string" :location common-lisp:nil :location-name
                         "apiEndpoint")
                        (api-gateway-managed :initarg :api-gateway-managed
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-get-api-response-api-gateway-managed
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "apiGatewayManaged")
                        (api-id :initarg :api-id :initform common-lisp:nil
                         :type (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-get-api-response-api-id :shape "Id"
                         :location common-lisp:nil :location-name "apiId")
                        (api-key-selection-expression :initarg
                         :api-key-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-get-api-response-api-key-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "apiKeySelectionExpression")
                        (cors-configuration :initarg :cors-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or cors common-lisp:null) :accessor
                         struct-shape-get-api-response-cors-configuration
                         :shape "Cors" :location common-lisp:nil :location-name
                         "corsConfiguration")
                        (created-date :initarg :created-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor struct-shape-get-api-response-created-date
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "createdDate")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor struct-shape-get-api-response-description
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description")
                        (disable-schema-validation :initarg
                         :disable-schema-validation :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-get-api-response-disable-schema-validation
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "disableSchemaValidation")
                        (disable-execute-api-endpoint :initarg
                         :disable-execute-api-endpoint :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-get-api-response-disable-execute-api-endpoint
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "disableExecuteApiEndpoint")
                        (import-info :initarg :import-info :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-get-api-response-import-info
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "importInfo")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-get-api-response-name :shape
                         "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "name")
                        (protocol-type :initarg :protocol-type :initform
                         common-lisp:nil :type
                         (common-lisp:or protocol-type common-lisp:null)
                         :accessor struct-shape-get-api-response-protocol-type
                         :shape "ProtocolType" :location common-lisp:nil
                         :location-name "protocolType")
                        (route-selection-expression :initarg
                         :route-selection-expression :initform common-lisp:nil
                         :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-get-api-response-route-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "routeSelectionExpression")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-get-api-response-tags :shape "Tags"
                         :location common-lisp:nil :location-name "tags")
                        (version :initarg :version :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor struct-shape-get-api-response-version :shape
                         "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name "version")
                        (warnings :initarg :warnings :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-get-api-response-warnings
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "warnings"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-api-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-api-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-api-response 'make-get-api-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-api-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-api-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-endpoint))
      (common-lisp:list
       (common-lisp:cons "ApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-managed))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-id))
      (common-lisp:list
       (common-lisp:cons "ApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-key-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ApiKeySelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cors-configuration))
      (common-lisp:list
       (common-lisp:cons "CorsConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-schema-validation))
      (common-lisp:list
       (common-lisp:cons "DisableSchemaValidation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-execute-api-endpoint))
      (common-lisp:list
       (common-lisp:cons "DisableExecuteApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'import-info))
      (common-lisp:list
       (common-lisp:cons "ImportInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol-type))
      (common-lisp:list
       (common-lisp:cons "ProtocolType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'route-selection-expression))
      (common-lisp:list
       (common-lisp:cons "RouteSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warnings))
      (common-lisp:list
       (common-lisp:cons "Warnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-api-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-apis-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-apis-request-max-results :shape
                         "__string" :location "querystring" :location-name
                         "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-apis-request-next-token :shape
                         "__string" :location "querystring" :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-apis-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-apis-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-apis-request 'make-get-apis-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-apis-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-apis-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-apis-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-apis-response common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or |__listOfApi| common-lisp:null)
                         :accessor struct-shape-get-apis-response-items :shape
                         "__listOfApi" :location common-lisp:nil :location-name
                         "items")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-get-apis-response-next-token :shape
                         "NextToken" :location common-lisp:nil :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-apis-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-apis-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-apis-response 'make-get-apis-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-apis-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-apis-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-apis-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-authorizer-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-authorizer-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId")
                        (authorizer-id :initarg :authorizer-id :initform
                         (common-lisp:error ":authorizer-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-authorizer-request-authorizer-id
                         :shape "__string" :location "uri" :location-name
                         "authorizerId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-authorizer-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-authorizer-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-authorizer-request 'make-get-authorizer-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-authorizer-response common-lisp:nil
                       ((authorizer-credentials-arn :initarg
                         :authorizer-credentials-arn :initform common-lisp:nil
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-get-authorizer-response-authorizer-credentials-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         "authorizerCredentialsArn")
                        (authorizer-id :initarg :authorizer-id :initform
                         common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-get-authorizer-response-authorizer-id
                         :shape "Id" :location common-lisp:nil :location-name
                         "authorizerId")
                        (authorizer-result-ttl-in-seconds :initarg
                         :authorizer-result-ttl-in-seconds :initform
                         common-lisp:nil :type
                         (common-lisp:or integer-with-length-between0and3600
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-authorizer-response-authorizer-result-ttl-in-seconds
                         :shape "IntegerWithLengthBetween0And3600" :location
                         common-lisp:nil :location-name
                         "authorizerResultTtlInSeconds")
                        (authorizer-type :initarg :authorizer-type :initform
                         common-lisp:nil :type
                         (common-lisp:or authorizer-type common-lisp:null)
                         :accessor
                         struct-shape-get-authorizer-response-authorizer-type
                         :shape "AuthorizerType" :location common-lisp:nil
                         :location-name "authorizerType")
                        (authorizer-uri :initarg :authorizer-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or uri-with-length-between1and2048
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-authorizer-response-authorizer-uri
                         :shape "UriWithLengthBetween1And2048" :location
                         common-lisp:nil :location-name "authorizerUri")
                        (identity-source :initarg :identity-source :initform
                         common-lisp:nil :type
                         (common-lisp:or identity-source-list common-lisp:null)
                         :accessor
                         struct-shape-get-authorizer-response-identity-source
                         :shape "IdentitySourceList" :location common-lisp:nil
                         :location-name "identitySource")
                        (identity-validation-expression :initarg
                         :identity-validation-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-authorizer-response-identity-validation-expression
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name
                         "identityValidationExpression")
                        (jwt-configuration :initarg :jwt-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or jwtconfiguration common-lisp:null)
                         :accessor
                         struct-shape-get-authorizer-response-jwt-configuration
                         :shape "JWTConfiguration" :location common-lisp:nil
                         :location-name "jwtConfiguration")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-get-authorizer-response-name
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "name")
                        (authorizer-payload-format-version :initarg
                         :authorizer-payload-format-version :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-authorizer-response-authorizer-payload-format-version
                         :shape "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name
                         "authorizerPayloadFormatVersion")
                        (enable-simple-responses :initarg
                         :enable-simple-responses :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-get-authorizer-response-enable-simple-responses
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "enableSimpleResponses"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-authorizer-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-authorizer-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-authorizer-response 'make-get-authorizer-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizer-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizer-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-credentials-arn))
      (common-lisp:list
       (common-lisp:cons "AuthorizerCredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-id))
      (common-lisp:list
       (common-lisp:cons "AuthorizerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-result-ttl-in-seconds))
      (common-lisp:list
       (common-lisp:cons "AuthorizerResultTtlInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-type))
      (common-lisp:list
       (common-lisp:cons "AuthorizerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-uri))
      (common-lisp:list
       (common-lisp:cons "AuthorizerUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-source))
      (common-lisp:list
       (common-lisp:cons "IdentitySource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'identity-validation-expression))
      (common-lisp:list
       (common-lisp:cons "IdentityValidationExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'jwt-configuration))
      (common-lisp:list
       (common-lisp:cons "JwtConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-payload-format-version))
      (common-lisp:list
       (common-lisp:cons "AuthorizerPayloadFormatVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-simple-responses))
      (common-lisp:list
       (common-lisp:cons "EnableSimpleResponses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizer-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-authorizers-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-authorizers-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-authorizers-request-max-results
                         :shape "__string" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-authorizers-request-next-token :shape
                         "__string" :location "querystring" :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-authorizers-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-authorizers-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-authorizers-request 'make-get-authorizers-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizers-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-authorizers-response common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or |__listOfAuthorizer| common-lisp:null)
                         :accessor struct-shape-get-authorizers-response-items
                         :shape "__listOfAuthorizer" :location common-lisp:nil
                         :location-name "items")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-get-authorizers-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-authorizers-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-authorizers-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-authorizers-response 'make-get-authorizers-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizers-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizers-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizers-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-deployment-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-deployment-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId")
                        (deployment-id :initarg :deployment-id :initform
                         (common-lisp:error ":deployment-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-deployment-request-deployment-id
                         :shape "__string" :location "uri" :location-name
                         "deploymentId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-deployment-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-deployment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-deployment-request 'make-get-deployment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-deployment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-deployment-response common-lisp:nil
                       ((auto-deployed :initarg :auto-deployed :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-get-deployment-response-auto-deployed
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "autoDeployed")
                        (created-date :initarg :created-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-get-deployment-response-created-date
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "createdDate")
                        (deployment-id :initarg :deployment-id :initform
                         common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-get-deployment-response-deployment-id
                         :shape "Id" :location common-lisp:nil :location-name
                         "deploymentId")
                        (deployment-status :initarg :deployment-status
                         :initform common-lisp:nil :type
                         (common-lisp:or deployment-status common-lisp:null)
                         :accessor
                         struct-shape-get-deployment-response-deployment-status
                         :shape "DeploymentStatus" :location common-lisp:nil
                         :location-name "deploymentStatus")
                        (deployment-status-message :initarg
                         :deployment-status-message :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-deployment-response-deployment-status-message
                         :shape "__string" :location common-lisp:nil
                         :location-name "deploymentStatusMessage")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-deployment-response-description
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-deployment-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-deployment-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-deployment-response 'make-get-deployment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-deployment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-deployment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-deployed))
      (common-lisp:list
       (common-lisp:cons "AutoDeployed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "DeploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-status))
      (common-lisp:list
       (common-lisp:cons "DeploymentStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'deployment-status-message))
      (common-lisp:list
       (common-lisp:cons "DeploymentStatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-deployment-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-deployments-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-deployments-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-deployments-request-max-results
                         :shape "__string" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-deployments-request-next-token :shape
                         "__string" :location "querystring" :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-deployments-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-deployments-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-deployments-request 'make-get-deployments-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-deployments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-deployments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-deployments-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-deployments-response common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or |__listOfDeployment| common-lisp:null)
                         :accessor struct-shape-get-deployments-response-items
                         :shape "__listOfDeployment" :location common-lisp:nil
                         :location-name "items")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-get-deployments-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-deployments-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-deployments-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-deployments-response 'make-get-deployments-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-deployments-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-deployments-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-deployments-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-domain-name-request common-lisp:nil
                       ((domain-name :initarg :domain-name :initform
                         (common-lisp:error ":domain-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-domain-name-request-domain-name
                         :shape "__string" :location "uri" :location-name
                         "domainName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-domain-name-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-domain-name-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-domain-name-request 'make-get-domain-name-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-name-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-name-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-name-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-domain-name-response common-lisp:nil
                       ((api-mapping-selection-expression :initarg
                         :api-mapping-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-get-domain-name-response-api-mapping-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "apiMappingSelectionExpression")
                        (domain-name :initarg :domain-name :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and512
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-domain-name-response-domain-name
                         :shape "StringWithLengthBetween1And512" :location
                         common-lisp:nil :location-name "domainName")
                        (domain-name-configurations :initarg
                         :domain-name-configurations :initform common-lisp:nil
                         :type
                         (common-lisp:or domain-name-configurations
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-domain-name-response-domain-name-configurations
                         :shape "DomainNameConfigurations" :location
                         common-lisp:nil :location-name
                         "domainNameConfigurations")
                        (mutual-tls-authentication :initarg
                         :mutual-tls-authentication :initform common-lisp:nil
                         :type
                         (common-lisp:or mutual-tls-authentication
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-domain-name-response-mutual-tls-authentication
                         :shape "MutualTlsAuthentication" :location
                         common-lisp:nil :location-name
                         "mutualTlsAuthentication")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-get-domain-name-response-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-domain-name-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-domain-name-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-domain-name-response 'make-get-domain-name-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-name-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-name-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-mapping-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ApiMappingSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'domain-name-configurations))
      (common-lisp:list
       (common-lisp:cons "DomainNameConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'mutual-tls-authentication))
      (common-lisp:list
       (common-lisp:cons "MutualTlsAuthentication"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-name-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-domain-names-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-domain-names-request-max-results
                         :shape "__string" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-domain-names-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-domain-names-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-domain-names-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-domain-names-request 'make-get-domain-names-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-names-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-names-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-names-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-domain-names-response common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or |__listOfDomainName| common-lisp:null)
                         :accessor struct-shape-get-domain-names-response-items
                         :shape "__listOfDomainName" :location common-lisp:nil
                         :location-name "items")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-get-domain-names-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-domain-names-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-domain-names-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-domain-names-response
                    'make-get-domain-names-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-names-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-names-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-names-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-integration-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-integration-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId")
                        (integration-id :initarg :integration-id :initform
                         (common-lisp:error ":integration-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-integration-request-integration-id
                         :shape "__string" :location "uri" :location-name
                         "integrationId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-integration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-integration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-integration-request 'make-get-integration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-integration-result common-lisp:nil
                       ((api-gateway-managed :initarg :api-gateway-managed
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-get-integration-result-api-gateway-managed
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "apiGatewayManaged")
                        (connection-id :initarg :connection-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-integration-result-connection-id
                         :shape "StringWithLengthBetween1And1024" :location
                         common-lisp:nil :location-name "connectionId")
                        (connection-type :initarg :connection-type :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-type common-lisp:null)
                         :accessor
                         struct-shape-get-integration-result-connection-type
                         :shape "ConnectionType" :location common-lisp:nil
                         :location-name "connectionType")
                        (content-handling-strategy :initarg
                         :content-handling-strategy :initform common-lisp:nil
                         :type
                         (common-lisp:or content-handling-strategy
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-integration-result-content-handling-strategy
                         :shape "ContentHandlingStrategy" :location
                         common-lisp:nil :location-name
                         "contentHandlingStrategy")
                        (credentials-arn :initarg :credentials-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-get-integration-result-credentials-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         "credentialsArn")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-integration-result-description :shape
                         "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description")
                        (integration-id :initarg :integration-id :initform
                         common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-get-integration-result-integration-id
                         :shape "Id" :location common-lisp:nil :location-name
                         "integrationId")
                        (integration-method :initarg :integration-method
                         :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-integration-result-integration-method
                         :shape "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name "integrationMethod")
                        (integration-response-selection-expression :initarg
                         :integration-response-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-get-integration-result-integration-response-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name
                         "integrationResponseSelectionExpression")
                        (integration-subtype :initarg :integration-subtype
                         :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-integration-result-integration-subtype
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "integrationSubtype")
                        (integration-type :initarg :integration-type :initform
                         common-lisp:nil :type
                         (common-lisp:or integration-type common-lisp:null)
                         :accessor
                         struct-shape-get-integration-result-integration-type
                         :shape "IntegrationType" :location common-lisp:nil
                         :location-name "integrationType")
                        (integration-uri :initarg :integration-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or uri-with-length-between1and2048
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-integration-result-integration-uri
                         :shape "UriWithLengthBetween1And2048" :location
                         common-lisp:nil :location-name "integrationUri")
                        (passthrough-behavior :initarg :passthrough-behavior
                         :initform common-lisp:nil :type
                         (common-lisp:or passthrough-behavior common-lisp:null)
                         :accessor
                         struct-shape-get-integration-result-passthrough-behavior
                         :shape "PassthroughBehavior" :location common-lisp:nil
                         :location-name "passthroughBehavior")
                        (payload-format-version :initarg
                         :payload-format-version :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-integration-result-payload-format-version
                         :shape "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name "payloadFormatVersion")
                        (request-parameters :initarg :request-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or integration-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-integration-result-request-parameters
                         :shape "IntegrationParameters" :location
                         common-lisp:nil :location-name "requestParameters")
                        (response-parameters :initarg :response-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or response-parameters common-lisp:null)
                         :accessor
                         struct-shape-get-integration-result-response-parameters
                         :shape "ResponseParameters" :location common-lisp:nil
                         :location-name "responseParameters")
                        (request-templates :initarg :request-templates
                         :initform common-lisp:nil :type
                         (common-lisp:or template-map common-lisp:null)
                         :accessor
                         struct-shape-get-integration-result-request-templates
                         :shape "TemplateMap" :location common-lisp:nil
                         :location-name "requestTemplates")
                        (template-selection-expression :initarg
                         :template-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-get-integration-result-template-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "templateSelectionExpression")
                        (timeout-in-millis :initarg :timeout-in-millis
                         :initform common-lisp:nil :type
                         (common-lisp:or integer-with-length-between50and30000
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-integration-result-timeout-in-millis
                         :shape "IntegerWithLengthBetween50And30000" :location
                         common-lisp:nil :location-name "timeoutInMillis")
                        (tls-config :initarg :tls-config :initform
                         common-lisp:nil :type
                         (common-lisp:or tls-config common-lisp:null) :accessor
                         struct-shape-get-integration-result-tls-config :shape
                         "TlsConfig" :location common-lisp:nil :location-name
                         "tlsConfig"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-integration-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-integration-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-integration-result 'make-get-integration-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-managed))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-id))
      (common-lisp:list
       (common-lisp:cons "ConnectionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-type))
      (common-lisp:list
       (common-lisp:cons "ConnectionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-handling-strategy))
      (common-lisp:list
       (common-lisp:cons "ContentHandlingStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials-arn))
      (common-lisp:list
       (common-lisp:cons "CredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-id))
      (common-lisp:list
       (common-lisp:cons "IntegrationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-method))
      (common-lisp:list
       (common-lisp:cons "IntegrationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-response-selection-expression))
      (common-lisp:list
       (common-lisp:cons "IntegrationResponseSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-subtype))
      (common-lisp:list
       (common-lisp:cons "IntegrationSubtype"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-type))
      (common-lisp:list
       (common-lisp:cons "IntegrationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-uri))
      (common-lisp:list
       (common-lisp:cons "IntegrationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'passthrough-behavior))
      (common-lisp:list
       (common-lisp:cons "PassthroughBehavior"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'payload-format-version))
      (common-lisp:list
       (common-lisp:cons "PayloadFormatVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "RequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-templates))
      (common-lisp:list
       (common-lisp:cons "RequestTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-selection-expression))
      (common-lisp:list
       (common-lisp:cons "TemplateSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeout-in-millis))
      (common-lisp:list
       (common-lisp:cons "TimeoutInMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tls-config))
      (common-lisp:list
       (common-lisp:cons "TlsConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-integration-response-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-integration-response-request-api-id
                         :shape "__string" :location "uri" :location-name
                         "apiId")
                        (integration-id :initarg :integration-id :initform
                         (common-lisp:error ":integration-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-integration-response-request-integration-id
                         :shape "__string" :location "uri" :location-name
                         "integrationId")
                        (integration-response-id :initarg
                         :integration-response-id :initform
                         (common-lisp:error
                          ":integration-response-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-integration-response-request-integration-response-id
                         :shape "__string" :location "uri" :location-name
                         "integrationResponseId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-integration-response-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-integration-response-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-integration-response-request
                    'make-get-integration-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-integration-response-response common-lisp:nil
                       ((content-handling-strategy :initarg
                         :content-handling-strategy :initform common-lisp:nil
                         :type
                         (common-lisp:or content-handling-strategy
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-integration-response-response-content-handling-strategy
                         :shape "ContentHandlingStrategy" :location
                         common-lisp:nil :location-name
                         "contentHandlingStrategy")
                        (integration-response-id :initarg
                         :integration-response-id :initform common-lisp:nil
                         :type (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-get-integration-response-response-integration-response-id
                         :shape "Id" :location common-lisp:nil :location-name
                         "integrationResponseId")
                        (integration-response-key :initarg
                         :integration-response-key :initform common-lisp:nil
                         :type (common-lisp:or selection-key common-lisp:null)
                         :accessor
                         struct-shape-get-integration-response-response-integration-response-key
                         :shape "SelectionKey" :location common-lisp:nil
                         :location-name "integrationResponseKey")
                        (response-parameters :initarg :response-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or integration-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-integration-response-response-response-parameters
                         :shape "IntegrationParameters" :location
                         common-lisp:nil :location-name "responseParameters")
                        (response-templates :initarg :response-templates
                         :initform common-lisp:nil :type
                         (common-lisp:or template-map common-lisp:null)
                         :accessor
                         struct-shape-get-integration-response-response-response-templates
                         :shape "TemplateMap" :location common-lisp:nil
                         :location-name "responseTemplates")
                        (template-selection-expression :initarg
                         :template-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-get-integration-response-response-template-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "templateSelectionExpression"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-integration-response-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-integration-response-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-integration-response-response
                    'make-get-integration-response-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-response-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-response-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-handling-strategy))
      (common-lisp:list
       (common-lisp:cons "ContentHandlingStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-response-id))
      (common-lisp:list
       (common-lisp:cons "IntegrationResponseId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-response-key))
      (common-lisp:list
       (common-lisp:cons "IntegrationResponseKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-templates))
      (common-lisp:list
       (common-lisp:cons "ResponseTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-selection-expression))
      (common-lisp:list
       (common-lisp:cons "TemplateSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-response-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-integration-responses-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-integration-responses-request-api-id
                         :shape "__string" :location "uri" :location-name
                         "apiId")
                        (integration-id :initarg :integration-id :initform
                         (common-lisp:error ":integration-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-integration-responses-request-integration-id
                         :shape "__string" :location "uri" :location-name
                         "integrationId")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-integration-responses-request-max-results
                         :shape "__string" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-integration-responses-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-integration-responses-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-integration-responses-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-integration-responses-request
                    'make-get-integration-responses-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-responses-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-responses-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-responses-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-integration-responses-response common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or |__listOfIntegrationResponse|
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-integration-responses-response-items
                         :shape "__listOfIntegrationResponse" :location
                         common-lisp:nil :location-name "items")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-get-integration-responses-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-integration-responses-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-integration-responses-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-integration-responses-response
                    'make-get-integration-responses-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-responses-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-responses-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-responses-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-integrations-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-integrations-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-integrations-request-max-results
                         :shape "__string" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-integrations-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-integrations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-integrations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-integrations-request 'make-get-integrations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-integrations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-integrations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-integrations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-integrations-response common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or |__listOfIntegration|
                                         common-lisp:null)
                         :accessor struct-shape-get-integrations-response-items
                         :shape "__listOfIntegration" :location common-lisp:nil
                         :location-name "items")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-get-integrations-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-integrations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-integrations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-integrations-response
                    'make-get-integrations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-integrations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-integrations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-integrations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-model-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-model-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId")
                        (model-id :initarg :model-id :initform
                         (common-lisp:error ":model-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-model-request-model-id :shape
                         "__string" :location "uri" :location-name "modelId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-model-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-model-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-model-request 'make-get-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-model-response common-lisp:nil
                       ((content-type :initarg :content-type :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and256
                                         common-lisp:null)
                         :accessor struct-shape-get-model-response-content-type
                         :shape "StringWithLengthBetween1And256" :location
                         common-lisp:nil :location-name "contentType")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor struct-shape-get-model-response-description
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description")
                        (model-id :initarg :model-id :initform common-lisp:nil
                         :type (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-get-model-response-model-id :shape "Id"
                         :location common-lisp:nil :location-name "modelId")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-get-model-response-name :shape
                         "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "name")
                        (schema :initarg :schema :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between0and32k
                                         common-lisp:null)
                         :accessor struct-shape-get-model-response-schema
                         :shape "StringWithLengthBetween0And32K" :location
                         common-lisp:nil :location-name "schema"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-model-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-model-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-model-response 'make-get-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-model-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:list
       (common-lisp:cons "ContentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-id))
      (common-lisp:list
       (common-lisp:cons "ModelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schema))
      (common-lisp:list
       (common-lisp:cons "Schema"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-model-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-model-template-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-model-template-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId")
                        (model-id :initarg :model-id :initform
                         (common-lisp:error ":model-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-model-template-request-model-id
                         :shape "__string" :location "uri" :location-name
                         "modelId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-model-template-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-model-template-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-model-template-request
                    'make-get-model-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-model-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-model-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-model-template-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-model-template-response common-lisp:nil
                       ((value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-model-template-response-value :shape
                         "__string" :location common-lisp:nil :location-name
                         "value"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-model-template-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-model-template-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-model-template-response
                    'make-get-model-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-model-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-model-template-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-model-template-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-models-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-models-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-models-request-max-results :shape
                         "__string" :location "querystring" :location-name
                         "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-models-request-next-token :shape
                         "__string" :location "querystring" :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-models-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-models-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-models-request 'make-get-models-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-models-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-models-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-models-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-models-response common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or |__listOfModel| common-lisp:null)
                         :accessor struct-shape-get-models-response-items
                         :shape "__listOfModel" :location common-lisp:nil
                         :location-name "items")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-get-models-response-next-token :shape
                         "NextToken" :location common-lisp:nil :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-models-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-models-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-models-response 'make-get-models-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-models-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-models-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-models-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-route-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-route-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId")
                        (route-id :initarg :route-id :initform
                         (common-lisp:error ":route-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-route-request-route-id :shape
                         "__string" :location "uri" :location-name "routeId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-route-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-route-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-route-request 'make-get-route-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-route-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-route-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-route-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-route-result common-lisp:nil
                       ((api-gateway-managed :initarg :api-gateway-managed
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-get-route-result-api-gateway-managed
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "apiGatewayManaged")
                        (api-key-required :initarg :api-key-required :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-get-route-result-api-key-required :shape
                         "__boolean" :location common-lisp:nil :location-name
                         "apiKeyRequired")
                        (authorization-scopes :initarg :authorization-scopes
                         :initform common-lisp:nil :type
                         (common-lisp:or authorization-scopes common-lisp:null)
                         :accessor
                         struct-shape-get-route-result-authorization-scopes
                         :shape "AuthorizationScopes" :location common-lisp:nil
                         :location-name "authorizationScopes")
                        (authorization-type :initarg :authorization-type
                         :initform common-lisp:nil :type
                         (common-lisp:or authorization-type common-lisp:null)
                         :accessor
                         struct-shape-get-route-result-authorization-type
                         :shape "AuthorizationType" :location common-lisp:nil
                         :location-name "authorizationType")
                        (authorizer-id :initarg :authorizer-id :initform
                         common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-get-route-result-authorizer-id :shape
                         "Id" :location common-lisp:nil :location-name
                         "authorizerId")
                        (model-selection-expression :initarg
                         :model-selection-expression :initform common-lisp:nil
                         :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-get-route-result-model-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "modelSelectionExpression")
                        (operation-name :initarg :operation-name :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor struct-shape-get-route-result-operation-name
                         :shape "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name "operationName")
                        (request-models :initarg :request-models :initform
                         common-lisp:nil :type
                         (common-lisp:or route-models common-lisp:null)
                         :accessor struct-shape-get-route-result-request-models
                         :shape "RouteModels" :location common-lisp:nil
                         :location-name "requestModels")
                        (request-parameters :initarg :request-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or route-parameters common-lisp:null)
                         :accessor
                         struct-shape-get-route-result-request-parameters
                         :shape "RouteParameters" :location common-lisp:nil
                         :location-name "requestParameters")
                        (route-id :initarg :route-id :initform common-lisp:nil
                         :type (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-get-route-result-route-id :shape "Id"
                         :location common-lisp:nil :location-name "routeId")
                        (route-key :initarg :route-key :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-key common-lisp:null)
                         :accessor struct-shape-get-route-result-route-key
                         :shape "SelectionKey" :location common-lisp:nil
                         :location-name "routeKey")
                        (route-response-selection-expression :initarg
                         :route-response-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-get-route-result-route-response-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "routeResponseSelectionExpression")
                        (target :initarg :target :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-get-route-result-target :shape
                         "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "target"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-route-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-route-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-route-result 'make-get-route-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-route-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-route-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-managed))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-required))
      (common-lisp:list
       (common-lisp:cons "ApiKeyRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorization-scopes))
      (common-lisp:list
       (common-lisp:cons "AuthorizationScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization-type))
      (common-lisp:list
       (common-lisp:cons "AuthorizationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-id))
      (common-lisp:list
       (common-lisp:cons "AuthorizerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ModelSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-name))
      (common-lisp:list
       (common-lisp:cons "OperationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-models))
      (common-lisp:list
       (common-lisp:cons "RequestModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "RequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-id))
      (common-lisp:list
       (common-lisp:cons "RouteId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-key))
      (common-lisp:list
       (common-lisp:cons "RouteKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'route-response-selection-expression))
      (common-lisp:list
       (common-lisp:cons "RouteResponseSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target))
      (common-lisp:list
       (common-lisp:cons "Target"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-route-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-route-response-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-route-response-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId")
                        (route-id :initarg :route-id :initform
                         (common-lisp:error ":route-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-route-response-request-route-id
                         :shape "__string" :location "uri" :location-name
                         "routeId")
                        (route-response-id :initarg :route-response-id
                         :initform
                         (common-lisp:error ":route-response-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-route-response-request-route-response-id
                         :shape "__string" :location "uri" :location-name
                         "routeResponseId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-route-response-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-route-response-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-route-response-request
                    'make-get-route-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-route-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-route-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-route-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-route-response-response common-lisp:nil
                       ((model-selection-expression :initarg
                         :model-selection-expression :initform common-lisp:nil
                         :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-get-route-response-response-model-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "modelSelectionExpression")
                        (response-models :initarg :response-models :initform
                         common-lisp:nil :type
                         (common-lisp:or route-models common-lisp:null)
                         :accessor
                         struct-shape-get-route-response-response-response-models
                         :shape "RouteModels" :location common-lisp:nil
                         :location-name "responseModels")
                        (response-parameters :initarg :response-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or route-parameters common-lisp:null)
                         :accessor
                         struct-shape-get-route-response-response-response-parameters
                         :shape "RouteParameters" :location common-lisp:nil
                         :location-name "responseParameters")
                        (route-response-id :initarg :route-response-id
                         :initform common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-get-route-response-response-route-response-id
                         :shape "Id" :location common-lisp:nil :location-name
                         "routeResponseId")
                        (route-response-key :initarg :route-response-key
                         :initform common-lisp:nil :type
                         (common-lisp:or selection-key common-lisp:null)
                         :accessor
                         struct-shape-get-route-response-response-route-response-key
                         :shape "SelectionKey" :location common-lisp:nil
                         :location-name "routeResponseKey"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-route-response-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-route-response-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-route-response-response
                    'make-get-route-response-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-route-response-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-route-response-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ModelSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-models))
      (common-lisp:list
       (common-lisp:cons "ResponseModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-response-id))
      (common-lisp:list
       (common-lisp:cons "RouteResponseId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-response-key))
      (common-lisp:list
       (common-lisp:cons "RouteResponseKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-route-response-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-route-responses-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-route-responses-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-route-responses-request-max-results
                         :shape "__string" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-route-responses-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "nextToken")
                        (route-id :initarg :route-id :initform
                         (common-lisp:error ":route-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-route-responses-request-route-id
                         :shape "__string" :location "uri" :location-name
                         "routeId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-route-responses-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-route-responses-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-route-responses-request
                    'make-get-route-responses-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-route-responses-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-route-responses-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-route-responses-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-route-responses-response common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or |__listOfRouteResponse|
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-route-responses-response-items :shape
                         "__listOfRouteResponse" :location common-lisp:nil
                         :location-name "items")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-get-route-responses-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-route-responses-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-route-responses-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-route-responses-response
                    'make-get-route-responses-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-route-responses-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-route-responses-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-route-responses-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-routes-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-routes-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-routes-request-max-results :shape
                         "__string" :location "querystring" :location-name
                         "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-routes-request-next-token :shape
                         "__string" :location "querystring" :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-routes-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-routes-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-routes-request 'make-get-routes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-routes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-routes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-routes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-routes-response common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or |__listOfRoute| common-lisp:null)
                         :accessor struct-shape-get-routes-response-items
                         :shape "__listOfRoute" :location common-lisp:nil
                         :location-name "items")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-get-routes-response-next-token :shape
                         "NextToken" :location common-lisp:nil :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-routes-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-routes-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-routes-response 'make-get-routes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-routes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-routes-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-routes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-stage-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-stage-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId")
                        (stage-name :initarg :stage-name :initform
                         (common-lisp:error ":stage-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-stage-request-stage-name :shape
                         "__string" :location "uri" :location-name
                         "stageName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-stage-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-stage-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-stage-request 'make-get-stage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-stage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-stage-response common-lisp:nil
                       ((access-log-settings :initarg :access-log-settings
                         :initform common-lisp:nil :type
                         (common-lisp:or access-log-settings common-lisp:null)
                         :accessor
                         struct-shape-get-stage-response-access-log-settings
                         :shape "AccessLogSettings" :location common-lisp:nil
                         :location-name "accessLogSettings")
                        (api-gateway-managed :initarg :api-gateway-managed
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-get-stage-response-api-gateway-managed
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "apiGatewayManaged")
                        (auto-deploy :initarg :auto-deploy :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-get-stage-response-auto-deploy
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "autoDeploy")
                        (client-certificate-id :initarg :client-certificate-id
                         :initform common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-get-stage-response-client-certificate-id
                         :shape "Id" :location common-lisp:nil :location-name
                         "clientCertificateId")
                        (created-date :initarg :created-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor struct-shape-get-stage-response-created-date
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "createdDate")
                        (default-route-settings :initarg
                         :default-route-settings :initform common-lisp:nil
                         :type (common-lisp:or route-settings common-lisp:null)
                         :accessor
                         struct-shape-get-stage-response-default-route-settings
                         :shape "RouteSettings" :location common-lisp:nil
                         :location-name "defaultRouteSettings")
                        (deployment-id :initarg :deployment-id :initform
                         common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-get-stage-response-deployment-id :shape
                         "Id" :location common-lisp:nil :location-name
                         "deploymentId")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor struct-shape-get-stage-response-description
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description")
                        (last-deployment-status-message :initarg
                         :last-deployment-status-message :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-stage-response-last-deployment-status-message
                         :shape "__string" :location common-lisp:nil
                         :location-name "lastDeploymentStatusMessage")
                        (last-updated-date :initarg :last-updated-date
                         :initform common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-get-stage-response-last-updated-date
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "lastUpdatedDate")
                        (route-settings :initarg :route-settings :initform
                         common-lisp:nil :type
                         (common-lisp:or route-settings-map common-lisp:null)
                         :accessor
                         struct-shape-get-stage-response-route-settings :shape
                         "RouteSettingsMap" :location common-lisp:nil
                         :location-name "routeSettings")
                        (stage-name :initarg :stage-name :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-get-stage-response-stage-name
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "stageName")
                        (stage-variables :initarg :stage-variables :initform
                         common-lisp:nil :type
                         (common-lisp:or stage-variables-map common-lisp:null)
                         :accessor
                         struct-shape-get-stage-response-stage-variables :shape
                         "StageVariablesMap" :location common-lisp:nil
                         :location-name "stageVariables")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-get-stage-response-tags :shape "Tags"
                         :location common-lisp:nil :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-stage-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-stage-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-stage-response 'make-get-stage-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-stage-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-stage-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-log-settings))
      (common-lisp:list
       (common-lisp:cons "AccessLogSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-managed))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-deploy))
      (common-lisp:list
       (common-lisp:cons "AutoDeploy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-certificate-id))
      (common-lisp:list
       (common-lisp:cons "ClientCertificateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-route-settings))
      (common-lisp:list
       (common-lisp:cons "DefaultRouteSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "DeploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-deployment-status-message))
      (common-lisp:list
       (common-lisp:cons "LastDeploymentStatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-date))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-settings))
      (common-lisp:list
       (common-lisp:cons "RouteSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-name))
      (common-lisp:list
       (common-lisp:cons "StageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-variables))
      (common-lisp:list
       (common-lisp:cons "StageVariables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-stage-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-stages-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-stages-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-stages-request-max-results :shape
                         "__string" :location "querystring" :location-name
                         "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-stages-request-next-token :shape
                         "__string" :location "querystring" :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-stages-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-stages-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-stages-request 'make-get-stages-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-stages-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-stages-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-stages-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-stages-response common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or |__listOfStage| common-lisp:null)
                         :accessor struct-shape-get-stages-response-items
                         :shape "__listOfStage" :location common-lisp:nil
                         :location-name "items")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-get-stages-response-next-token :shape
                         "NextToken" :location common-lisp:nil :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-stages-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-stages-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-stages-response 'make-get-stages-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-stages-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-stages-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-stages-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-tags-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-tags-request-resource-arn :shape
                         "__string" :location "uri" :location-name
                         "resource-arn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-tags-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-tags-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-tags-request 'make-get-tags-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-tags-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-tags-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-tags-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-tags-response common-lisp:nil
                       ((tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-get-tags-response-tags :shape "Tags"
                         :location common-lisp:nil :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-tags-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-tags-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-tags-response 'make-get-tags-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-tags-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-tags-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-tags-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-vpc-link-request common-lisp:nil
                       ((vpc-link-id :initarg :vpc-link-id :initform
                         (common-lisp:error ":vpc-link-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-vpc-link-request-vpc-link-id :shape
                         "__string" :location "uri" :location-name
                         "vpcLinkId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-vpc-link-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-vpc-link-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-vpc-link-request 'make-get-vpc-link-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-vpc-link-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-vpc-link-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-vpc-link-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-vpc-link-response common-lisp:nil
                       ((created-date :initarg :created-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-get-vpc-link-response-created-date :shape
                         "__timestampIso8601" :location common-lisp:nil
                         :location-name "createdDate")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-get-vpc-link-response-name
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "name")
                        (security-group-ids :initarg :security-group-ids
                         :initform common-lisp:nil :type
                         (common-lisp:or security-group-id-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-vpc-link-response-security-group-ids
                         :shape "SecurityGroupIdList" :location common-lisp:nil
                         :location-name "securityGroupIds")
                        (subnet-ids :initarg :subnet-ids :initform
                         common-lisp:nil :type
                         (common-lisp:or subnet-id-list common-lisp:null)
                         :accessor
                         struct-shape-get-vpc-link-response-subnet-ids :shape
                         "SubnetIdList" :location common-lisp:nil
                         :location-name "subnetIds")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-get-vpc-link-response-tags :shape "Tags"
                         :location common-lisp:nil :location-name "tags")
                        (vpc-link-id :initarg :vpc-link-id :initform
                         common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-get-vpc-link-response-vpc-link-id :shape
                         "Id" :location common-lisp:nil :location-name
                         "vpcLinkId")
                        (vpc-link-status :initarg :vpc-link-status :initform
                         common-lisp:nil :type
                         (common-lisp:or vpc-link-status common-lisp:null)
                         :accessor
                         struct-shape-get-vpc-link-response-vpc-link-status
                         :shape "VpcLinkStatus" :location common-lisp:nil
                         :location-name "vpcLinkStatus")
                        (vpc-link-status-message :initarg
                         :vpc-link-status-message :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-vpc-link-response-vpc-link-status-message
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "vpcLinkStatusMessage")
                        (vpc-link-version :initarg :vpc-link-version :initform
                         common-lisp:nil :type
                         (common-lisp:or vpc-link-version common-lisp:null)
                         :accessor
                         struct-shape-get-vpc-link-response-vpc-link-version
                         :shape "VpcLinkVersion" :location common-lisp:nil
                         :location-name "vpcLinkVersion"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-vpc-link-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-vpc-link-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-vpc-link-response 'make-get-vpc-link-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-vpc-link-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-vpc-link-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-ids))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-ids))
      (common-lisp:list
       (common-lisp:cons "SubnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-link-id))
      (common-lisp:list
       (common-lisp:cons "VpcLinkId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-link-status))
      (common-lisp:list
       (common-lisp:cons "VpcLinkStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vpc-link-status-message))
      (common-lisp:list
       (common-lisp:cons "VpcLinkStatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-link-version))
      (common-lisp:list
       (common-lisp:cons "VpcLinkVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-vpc-link-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-vpc-links-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-vpc-links-request-max-results :shape
                         "__string" :location "querystring" :location-name
                         "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-vpc-links-request-next-token :shape
                         "__string" :location "querystring" :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-vpc-links-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-vpc-links-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-vpc-links-request 'make-get-vpc-links-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-vpc-links-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-vpc-links-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-vpc-links-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-vpc-links-response common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or |__listOfVpcLink| common-lisp:null)
                         :accessor struct-shape-get-vpc-links-response-items
                         :shape "__listOfVpcLink" :location common-lisp:nil
                         :location-name "items")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-get-vpc-links-response-next-token :shape
                         "NextToken" :location common-lisp:nil :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-vpc-links-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-vpc-links-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-vpc-links-response 'make-get-vpc-links-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-vpc-links-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-vpc-links-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-vpc-links-response))
   common-lisp:nil))
(common-lisp:deftype id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype identity-source-list ()
   '(trivial-types:proper-list |__string|))
 (common-lisp:defun make-identity-source-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__string|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass import-api-input common-lisp:nil
                       ((body :initarg :body :initform
                         (common-lisp:error ":body is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-import-api-input-body :shape "__string"
                         :location common-lisp:nil :location-name "body"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-import-api-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'import-api-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'import-api-input 'make-import-api-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input import-api-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input import-api-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input import-api-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass import-api-request common-lisp:nil
                       ((basepath :initarg :basepath :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-import-api-request-basepath
                         :shape "__string" :location "querystring"
                         :location-name "basepath")
                        (body :initarg :body :initform
                         (common-lisp:error ":body is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-import-api-request-body :shape "__string"
                         :location common-lisp:nil :location-name "body")
                        (fail-on-warnings :initarg :fail-on-warnings :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-import-api-request-fail-on-warnings
                         :shape "__boolean" :location "querystring"
                         :location-name "failOnWarnings"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-import-api-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'import-api-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'import-api-request 'make-import-api-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input import-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input import-api-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input import-api-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass import-api-response common-lisp:nil
                       ((api-endpoint :initarg :api-endpoint :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-import-api-response-api-endpoint :shape
                         "__string" :location common-lisp:nil :location-name
                         "apiEndpoint")
                        (api-gateway-managed :initarg :api-gateway-managed
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-import-api-response-api-gateway-managed
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "apiGatewayManaged")
                        (api-id :initarg :api-id :initform common-lisp:nil
                         :type (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-import-api-response-api-id :shape "Id"
                         :location common-lisp:nil :location-name "apiId")
                        (api-key-selection-expression :initarg
                         :api-key-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-import-api-response-api-key-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "apiKeySelectionExpression")
                        (cors-configuration :initarg :cors-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or cors common-lisp:null) :accessor
                         struct-shape-import-api-response-cors-configuration
                         :shape "Cors" :location common-lisp:nil :location-name
                         "corsConfiguration")
                        (created-date :initarg :created-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-import-api-response-created-date :shape
                         "__timestampIso8601" :location common-lisp:nil
                         :location-name "createdDate")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor struct-shape-import-api-response-description
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description")
                        (disable-schema-validation :initarg
                         :disable-schema-validation :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-import-api-response-disable-schema-validation
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "disableSchemaValidation")
                        (disable-execute-api-endpoint :initarg
                         :disable-execute-api-endpoint :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-import-api-response-disable-execute-api-endpoint
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "disableExecuteApiEndpoint")
                        (import-info :initarg :import-info :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-import-api-response-import-info
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "importInfo")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-import-api-response-name :shape
                         "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "name")
                        (protocol-type :initarg :protocol-type :initform
                         common-lisp:nil :type
                         (common-lisp:or protocol-type common-lisp:null)
                         :accessor
                         struct-shape-import-api-response-protocol-type :shape
                         "ProtocolType" :location common-lisp:nil
                         :location-name "protocolType")
                        (route-selection-expression :initarg
                         :route-selection-expression :initform common-lisp:nil
                         :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-import-api-response-route-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "routeSelectionExpression")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-import-api-response-tags :shape "Tags"
                         :location common-lisp:nil :location-name "tags")
                        (version :initarg :version :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor struct-shape-import-api-response-version
                         :shape "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name "version")
                        (warnings :initarg :warnings :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-import-api-response-warnings
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "warnings"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-import-api-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'import-api-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'import-api-response 'make-import-api-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input import-api-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input import-api-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-endpoint))
      (common-lisp:list
       (common-lisp:cons "ApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-managed))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-id))
      (common-lisp:list
       (common-lisp:cons "ApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-key-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ApiKeySelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cors-configuration))
      (common-lisp:list
       (common-lisp:cons "CorsConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-schema-validation))
      (common-lisp:list
       (common-lisp:cons "DisableSchemaValidation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-execute-api-endpoint))
      (common-lisp:list
       (common-lisp:cons "DisableExecuteApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'import-info))
      (common-lisp:list
       (common-lisp:cons "ImportInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol-type))
      (common-lisp:list
       (common-lisp:cons "ProtocolType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'route-selection-expression))
      (common-lisp:list
       (common-lisp:cons "RouteSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warnings))
      (common-lisp:list
       (common-lisp:cons "Warnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input import-api-response))
   common-lisp:nil))
(common-lisp:deftype integer-with-length-between0and3600 ()
  'common-lisp:integer)
(common-lisp:deftype integer-with-length-between50and30000 ()
  'common-lisp:integer)
(common-lisp:deftype integer-with-length-between-minus1and86400 ()
  'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass integration common-lisp:nil
                       ((api-gateway-managed :initarg :api-gateway-managed
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-integration-api-gateway-managed
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "apiGatewayManaged")
                        (connection-id :initarg :connection-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and1024
                                         common-lisp:null)
                         :accessor struct-shape-integration-connection-id
                         :shape "StringWithLengthBetween1And1024" :location
                         common-lisp:nil :location-name "connectionId")
                        (connection-type :initarg :connection-type :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-type common-lisp:null)
                         :accessor struct-shape-integration-connection-type
                         :shape "ConnectionType" :location common-lisp:nil
                         :location-name "connectionType")
                        (content-handling-strategy :initarg
                         :content-handling-strategy :initform common-lisp:nil
                         :type
                         (common-lisp:or content-handling-strategy
                                         common-lisp:null)
                         :accessor
                         struct-shape-integration-content-handling-strategy
                         :shape "ContentHandlingStrategy" :location
                         common-lisp:nil :location-name
                         "contentHandlingStrategy")
                        (credentials-arn :initarg :credentials-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-integration-credentials-arn :shape "Arn"
                         :location common-lisp:nil :location-name
                         "credentialsArn")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor struct-shape-integration-description :shape
                         "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description")
                        (integration-id :initarg :integration-id :initform
                         common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-integration-integration-id :shape "Id"
                         :location common-lisp:nil :location-name
                         "integrationId")
                        (integration-method :initarg :integration-method
                         :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor struct-shape-integration-integration-method
                         :shape "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name "integrationMethod")
                        (integration-response-selection-expression :initarg
                         :integration-response-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-integration-integration-response-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name
                         "integrationResponseSelectionExpression")
                        (integration-subtype :initarg :integration-subtype
                         :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-integration-integration-subtype
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "integrationSubtype")
                        (integration-type :initarg :integration-type :initform
                         common-lisp:nil :type
                         (common-lisp:or integration-type common-lisp:null)
                         :accessor struct-shape-integration-integration-type
                         :shape "IntegrationType" :location common-lisp:nil
                         :location-name "integrationType")
                        (integration-uri :initarg :integration-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or uri-with-length-between1and2048
                                         common-lisp:null)
                         :accessor struct-shape-integration-integration-uri
                         :shape "UriWithLengthBetween1And2048" :location
                         common-lisp:nil :location-name "integrationUri")
                        (passthrough-behavior :initarg :passthrough-behavior
                         :initform common-lisp:nil :type
                         (common-lisp:or passthrough-behavior common-lisp:null)
                         :accessor
                         struct-shape-integration-passthrough-behavior :shape
                         "PassthroughBehavior" :location common-lisp:nil
                         :location-name "passthroughBehavior")
                        (payload-format-version :initarg
                         :payload-format-version :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor
                         struct-shape-integration-payload-format-version :shape
                         "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name "payloadFormatVersion")
                        (request-parameters :initarg :request-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or integration-parameters
                                         common-lisp:null)
                         :accessor struct-shape-integration-request-parameters
                         :shape "IntegrationParameters" :location
                         common-lisp:nil :location-name "requestParameters")
                        (response-parameters :initarg :response-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or response-parameters common-lisp:null)
                         :accessor struct-shape-integration-response-parameters
                         :shape "ResponseParameters" :location common-lisp:nil
                         :location-name "responseParameters")
                        (request-templates :initarg :request-templates
                         :initform common-lisp:nil :type
                         (common-lisp:or template-map common-lisp:null)
                         :accessor struct-shape-integration-request-templates
                         :shape "TemplateMap" :location common-lisp:nil
                         :location-name "requestTemplates")
                        (template-selection-expression :initarg
                         :template-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-integration-template-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "templateSelectionExpression")
                        (timeout-in-millis :initarg :timeout-in-millis
                         :initform common-lisp:nil :type
                         (common-lisp:or integer-with-length-between50and30000
                                         common-lisp:null)
                         :accessor struct-shape-integration-timeout-in-millis
                         :shape "IntegerWithLengthBetween50And30000" :location
                         common-lisp:nil :location-name "timeoutInMillis")
                        (tls-config :initarg :tls-config :initform
                         common-lisp:nil :type
                         (common-lisp:or tls-config common-lisp:null) :accessor
                         struct-shape-integration-tls-config :shape "TlsConfig"
                         :location common-lisp:nil :location-name "tlsConfig"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-integration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'integration
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'integration 'make-integration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input integration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input integration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-managed))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-id))
      (common-lisp:list
       (common-lisp:cons "ConnectionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-type))
      (common-lisp:list
       (common-lisp:cons "ConnectionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-handling-strategy))
      (common-lisp:list
       (common-lisp:cons "ContentHandlingStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials-arn))
      (common-lisp:list
       (common-lisp:cons "CredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-id))
      (common-lisp:list
       (common-lisp:cons "IntegrationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-method))
      (common-lisp:list
       (common-lisp:cons "IntegrationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-response-selection-expression))
      (common-lisp:list
       (common-lisp:cons "IntegrationResponseSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-subtype))
      (common-lisp:list
       (common-lisp:cons "IntegrationSubtype"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-type))
      (common-lisp:list
       (common-lisp:cons "IntegrationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-uri))
      (common-lisp:list
       (common-lisp:cons "IntegrationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'passthrough-behavior))
      (common-lisp:list
       (common-lisp:cons "PassthroughBehavior"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'payload-format-version))
      (common-lisp:list
       (common-lisp:cons "PayloadFormatVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "RequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-templates))
      (common-lisp:list
       (common-lisp:cons "RequestTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-selection-expression))
      (common-lisp:list
       (common-lisp:cons "TemplateSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeout-in-millis))
      (common-lisp:list
       (common-lisp:cons "TimeoutInMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tls-config))
      (common-lisp:list
       (common-lisp:cons "TlsConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input integration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype integration-parameters () 'common-lisp:hash-table)
 (common-lisp:defun make-integration-parameters
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype response-parameters () 'common-lisp:hash-table)
 (common-lisp:defun make-response-parameters
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass integration-response common-lisp:nil
                       ((content-handling-strategy :initarg
                         :content-handling-strategy :initform common-lisp:nil
                         :type
                         (common-lisp:or content-handling-strategy
                                         common-lisp:null)
                         :accessor
                         struct-shape-integration-response-content-handling-strategy
                         :shape "ContentHandlingStrategy" :location
                         common-lisp:nil :location-name
                         "contentHandlingStrategy")
                        (integration-response-id :initarg
                         :integration-response-id :initform common-lisp:nil
                         :type (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-integration-response-integration-response-id
                         :shape "Id" :location common-lisp:nil :location-name
                         "integrationResponseId")
                        (integration-response-key :initarg
                         :integration-response-key :initform
                         (common-lisp:error
                          ":integration-response-key is required")
                         :type (common-lisp:or selection-key common-lisp:null)
                         :accessor
                         struct-shape-integration-response-integration-response-key
                         :shape "SelectionKey" :location common-lisp:nil
                         :location-name "integrationResponseKey")
                        (response-parameters :initarg :response-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or integration-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-integration-response-response-parameters
                         :shape "IntegrationParameters" :location
                         common-lisp:nil :location-name "responseParameters")
                        (response-templates :initarg :response-templates
                         :initform common-lisp:nil :type
                         (common-lisp:or template-map common-lisp:null)
                         :accessor
                         struct-shape-integration-response-response-templates
                         :shape "TemplateMap" :location common-lisp:nil
                         :location-name "responseTemplates")
                        (template-selection-expression :initarg
                         :template-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-integration-response-template-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "templateSelectionExpression"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-integration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'integration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'integration-response 'make-integration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input integration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input integration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-handling-strategy))
      (common-lisp:list
       (common-lisp:cons "ContentHandlingStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-response-id))
      (common-lisp:list
       (common-lisp:cons "IntegrationResponseId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-response-key))
      (common-lisp:list
       (common-lisp:cons "IntegrationResponseKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-templates))
      (common-lisp:list
       (common-lisp:cons "ResponseTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-selection-expression))
      (common-lisp:list
       (common-lisp:cons "TemplateSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input integration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass integration-responses common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or |__listOfIntegrationResponse|
                                         common-lisp:null)
                         :accessor struct-shape-integration-responses-items
                         :shape "__listOfIntegrationResponse" :location
                         common-lisp:nil :location-name "items")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-integration-responses-next-token :shape
                         "NextToken" :location common-lisp:nil :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-integration-responses
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'integration-responses
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'integration-responses 'make-integration-responses))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          integration-responses))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          integration-responses))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          integration-responses))
   common-lisp:nil))
(common-lisp:deftype integration-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass integrations common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or |__listOfIntegration|
                                         common-lisp:null)
                         :accessor struct-shape-integrations-items :shape
                         "__listOfIntegration" :location common-lisp:nil
                         :location-name "items")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-integrations-next-token :shape
                         "NextToken" :location common-lisp:nil :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-integrations
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'integrations
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'integrations 'make-integrations))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input integrations))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input integrations))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input integrations))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass jwtconfiguration common-lisp:nil
                       ((audience :initarg :audience :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-jwtconfiguration-audience
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "audience")
                        (issuer :initarg :issuer :initform common-lisp:nil
                         :type
                         (common-lisp:or uri-with-length-between1and2048
                                         common-lisp:null)
                         :accessor struct-shape-jwtconfiguration-issuer :shape
                         "UriWithLengthBetween1And2048" :location
                         common-lisp:nil :location-name "issuer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-jwtconfiguration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'jwtconfiguration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'jwtconfiguration 'make-jwtconfiguration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input jwtconfiguration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input jwtconfiguration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audience))
      (common-lisp:list
       (common-lisp:cons "Audience"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'issuer))
      (common-lisp:list
       (common-lisp:cons "Issuer"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input jwtconfiguration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass limit-exceeded-exception common-lisp:nil
                       ((limit-type :initarg :limit-type :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-limit-exceeded-exception-limit-type
                         :shape "__string" :location common-lisp:nil
                         :location-name "limitType")
                        (message :initarg :message :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-limit-exceeded-exception-message :shape
                         "__string" :location common-lisp:nil :location-name
                         "message"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-limit-exceeded-exception
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'limit-exceeded-exception
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception 'make-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          limit-exceeded-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          limit-exceeded-exception))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit-type))
      (common-lisp:list
       (common-lisp:cons "LimitType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          limit-exceeded-exception))
   common-lisp:nil))
(common-lisp:deftype logging-level () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass model common-lisp:nil
                       ((content-type :initarg :content-type :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and256
                                         common-lisp:null)
                         :accessor struct-shape-model-content-type :shape
                         "StringWithLengthBetween1And256" :location
                         common-lisp:nil :location-name "contentType")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor struct-shape-model-description :shape
                         "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description")
                        (model-id :initarg :model-id :initform common-lisp:nil
                         :type (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-model-model-id :shape "Id" :location
                         common-lisp:nil :location-name "modelId")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-model-name :shape
                         "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "name")
                        (schema :initarg :schema :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between0and32k
                                         common-lisp:null)
                         :accessor struct-shape-model-schema :shape
                         "StringWithLengthBetween0And32K" :location
                         common-lisp:nil :location-name "schema"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-model
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'model
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'model 'make-model))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input model))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input model))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:list
       (common-lisp:cons "ContentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-id))
      (common-lisp:list
       (common-lisp:cons "ModelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schema))
      (common-lisp:list
       (common-lisp:cons "Schema"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input model))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass models common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or |__listOfModel| common-lisp:null)
                         :accessor struct-shape-models-items :shape
                         "__listOfModel" :location common-lisp:nil
                         :location-name "items")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-models-next-token :shape "NextToken"
                         :location common-lisp:nil :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-models
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'models
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'models 'make-models))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input models))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input models))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input models))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass mutual-tls-authentication common-lisp:nil
                       ((truststore-uri :initarg :truststore-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or uri-with-length-between1and2048
                                         common-lisp:null)
                         :accessor
                         struct-shape-mutual-tls-authentication-truststore-uri
                         :shape "UriWithLengthBetween1And2048" :location
                         common-lisp:nil :location-name "truststoreUri")
                        (truststore-version :initarg :truststore-version
                         :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor
                         struct-shape-mutual-tls-authentication-truststore-version
                         :shape "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name "truststoreVersion")
                        (truststore-warnings :initarg :truststore-warnings
                         :initform common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-mutual-tls-authentication-truststore-warnings
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "truststoreWarnings"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-mutual-tls-authentication
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'mutual-tls-authentication
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'mutual-tls-authentication
                    'make-mutual-tls-authentication))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          mutual-tls-authentication))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          mutual-tls-authentication))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'truststore-uri))
      (common-lisp:list
       (common-lisp:cons "TruststoreUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'truststore-version))
      (common-lisp:list
       (common-lisp:cons "TruststoreVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'truststore-warnings))
      (common-lisp:list
       (common-lisp:cons "TruststoreWarnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          mutual-tls-authentication))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass mutual-tls-authentication-input common-lisp:nil
                       ((truststore-uri :initarg :truststore-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or uri-with-length-between1and2048
                                         common-lisp:null)
                         :accessor
                         struct-shape-mutual-tls-authentication-input-truststore-uri
                         :shape "UriWithLengthBetween1And2048" :location
                         common-lisp:nil :location-name "truststoreUri")
                        (truststore-version :initarg :truststore-version
                         :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor
                         struct-shape-mutual-tls-authentication-input-truststore-version
                         :shape "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name "truststoreVersion"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-mutual-tls-authentication-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'mutual-tls-authentication-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'mutual-tls-authentication-input
                    'make-mutual-tls-authentication-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          mutual-tls-authentication-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          mutual-tls-authentication-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'truststore-uri))
      (common-lisp:list
       (common-lisp:cons "TruststoreUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'truststore-version))
      (common-lisp:list
       (common-lisp:cons "TruststoreVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          mutual-tls-authentication-input))
   common-lisp:nil))
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition not-found-exception
     (apigatewayv2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       not-found-exception-message)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       not-found-exception-resource-type)))
 (common-lisp:export
  (common-lisp:list 'not-found-exception 'not-found-exception-message
                    'not-found-exception-resource-type)))
(common-lisp:progn
 (common-lisp:defclass parameter-constraints common-lisp:nil
                       ((required :initarg :required :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-parameter-constraints-required
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "required"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-parameter-constraints
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'parameter-constraints
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'parameter-constraints 'make-parameter-constraints))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          parameter-constraints))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          parameter-constraints))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'required))
      (common-lisp:list
       (common-lisp:cons "Required"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          parameter-constraints))
   common-lisp:nil))
(common-lisp:deftype passthrough-behavior () 'common-lisp:string)
(common-lisp:deftype protocol-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass reimport-api-input common-lisp:nil
                       ((body :initarg :body :initform
                         (common-lisp:error ":body is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-reimport-api-input-body :shape "__string"
                         :location common-lisp:nil :location-name "body"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-reimport-api-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'reimport-api-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'reimport-api-input 'make-reimport-api-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input reimport-api-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input reimport-api-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input reimport-api-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass reimport-api-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-reimport-api-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId")
                        (basepath :initarg :basepath :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-reimport-api-request-basepath
                         :shape "__string" :location "querystring"
                         :location-name "basepath")
                        (body :initarg :body :initform
                         (common-lisp:error ":body is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-reimport-api-request-body :shape
                         "__string" :location common-lisp:nil :location-name
                         "body")
                        (fail-on-warnings :initarg :fail-on-warnings :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-reimport-api-request-fail-on-warnings
                         :shape "__boolean" :location "querystring"
                         :location-name "failOnWarnings"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-reimport-api-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'reimport-api-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'reimport-api-request 'make-reimport-api-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input reimport-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input reimport-api-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input reimport-api-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass reimport-api-response common-lisp:nil
                       ((api-endpoint :initarg :api-endpoint :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-reimport-api-response-api-endpoint :shape
                         "__string" :location common-lisp:nil :location-name
                         "apiEndpoint")
                        (api-gateway-managed :initarg :api-gateway-managed
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-reimport-api-response-api-gateway-managed
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "apiGatewayManaged")
                        (api-id :initarg :api-id :initform common-lisp:nil
                         :type (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-reimport-api-response-api-id :shape "Id"
                         :location common-lisp:nil :location-name "apiId")
                        (api-key-selection-expression :initarg
                         :api-key-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-reimport-api-response-api-key-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "apiKeySelectionExpression")
                        (cors-configuration :initarg :cors-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or cors common-lisp:null) :accessor
                         struct-shape-reimport-api-response-cors-configuration
                         :shape "Cors" :location common-lisp:nil :location-name
                         "corsConfiguration")
                        (created-date :initarg :created-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-reimport-api-response-created-date :shape
                         "__timestampIso8601" :location common-lisp:nil
                         :location-name "createdDate")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-reimport-api-response-description :shape
                         "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description")
                        (disable-schema-validation :initarg
                         :disable-schema-validation :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-reimport-api-response-disable-schema-validation
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "disableSchemaValidation")
                        (disable-execute-api-endpoint :initarg
                         :disable-execute-api-endpoint :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-reimport-api-response-disable-execute-api-endpoint
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "disableExecuteApiEndpoint")
                        (import-info :initarg :import-info :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-reimport-api-response-import-info :shape
                         "__listOf__string" :location common-lisp:nil
                         :location-name "importInfo")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-reimport-api-response-name
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "name")
                        (protocol-type :initarg :protocol-type :initform
                         common-lisp:nil :type
                         (common-lisp:or protocol-type common-lisp:null)
                         :accessor
                         struct-shape-reimport-api-response-protocol-type
                         :shape "ProtocolType" :location common-lisp:nil
                         :location-name "protocolType")
                        (route-selection-expression :initarg
                         :route-selection-expression :initform common-lisp:nil
                         :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-reimport-api-response-route-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "routeSelectionExpression")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-reimport-api-response-tags :shape "Tags"
                         :location common-lisp:nil :location-name "tags")
                        (version :initarg :version :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor struct-shape-reimport-api-response-version
                         :shape "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name "version")
                        (warnings :initarg :warnings :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-reimport-api-response-warnings
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "warnings"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-reimport-api-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'reimport-api-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'reimport-api-response 'make-reimport-api-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reimport-api-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reimport-api-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-endpoint))
      (common-lisp:list
       (common-lisp:cons "ApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-managed))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-id))
      (common-lisp:list
       (common-lisp:cons "ApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-key-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ApiKeySelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cors-configuration))
      (common-lisp:list
       (common-lisp:cons "CorsConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-schema-validation))
      (common-lisp:list
       (common-lisp:cons "DisableSchemaValidation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-execute-api-endpoint))
      (common-lisp:list
       (common-lisp:cons "DisableExecuteApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'import-info))
      (common-lisp:list
       (common-lisp:cons "ImportInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol-type))
      (common-lisp:list
       (common-lisp:cons "ProtocolType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'route-selection-expression))
      (common-lisp:list
       (common-lisp:cons "RouteSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warnings))
      (common-lisp:list
       (common-lisp:cons "Warnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reimport-api-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass route common-lisp:nil
                       ((api-gateway-managed :initarg :api-gateway-managed
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-route-api-gateway-managed
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "apiGatewayManaged")
                        (api-key-required :initarg :api-key-required :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-route-api-key-required :shape
                         "__boolean" :location common-lisp:nil :location-name
                         "apiKeyRequired")
                        (authorization-scopes :initarg :authorization-scopes
                         :initform common-lisp:nil :type
                         (common-lisp:or authorization-scopes common-lisp:null)
                         :accessor struct-shape-route-authorization-scopes
                         :shape "AuthorizationScopes" :location common-lisp:nil
                         :location-name "authorizationScopes")
                        (authorization-type :initarg :authorization-type
                         :initform common-lisp:nil :type
                         (common-lisp:or authorization-type common-lisp:null)
                         :accessor struct-shape-route-authorization-type :shape
                         "AuthorizationType" :location common-lisp:nil
                         :location-name "authorizationType")
                        (authorizer-id :initarg :authorizer-id :initform
                         common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-route-authorizer-id :shape "Id" :location
                         common-lisp:nil :location-name "authorizerId")
                        (model-selection-expression :initarg
                         :model-selection-expression :initform common-lisp:nil
                         :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-route-model-selection-expression :shape
                         "SelectionExpression" :location common-lisp:nil
                         :location-name "modelSelectionExpression")
                        (operation-name :initarg :operation-name :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor struct-shape-route-operation-name :shape
                         "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name "operationName")
                        (request-models :initarg :request-models :initform
                         common-lisp:nil :type
                         (common-lisp:or route-models common-lisp:null)
                         :accessor struct-shape-route-request-models :shape
                         "RouteModels" :location common-lisp:nil :location-name
                         "requestModels")
                        (request-parameters :initarg :request-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or route-parameters common-lisp:null)
                         :accessor struct-shape-route-request-parameters :shape
                         "RouteParameters" :location common-lisp:nil
                         :location-name "requestParameters")
                        (route-id :initarg :route-id :initform common-lisp:nil
                         :type (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-route-route-id :shape "Id" :location
                         common-lisp:nil :location-name "routeId")
                        (route-key :initarg :route-key :initform
                         (common-lisp:error ":route-key is required") :type
                         (common-lisp:or selection-key common-lisp:null)
                         :accessor struct-shape-route-route-key :shape
                         "SelectionKey" :location common-lisp:nil
                         :location-name "routeKey")
                        (route-response-selection-expression :initarg
                         :route-response-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-route-route-response-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "routeResponseSelectionExpression")
                        (target :initarg :target :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-route-target :shape
                         "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "target"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-route
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'route
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'route 'make-route))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input route))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input route))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-managed))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-required))
      (common-lisp:list
       (common-lisp:cons "ApiKeyRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorization-scopes))
      (common-lisp:list
       (common-lisp:cons "AuthorizationScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization-type))
      (common-lisp:list
       (common-lisp:cons "AuthorizationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-id))
      (common-lisp:list
       (common-lisp:cons "AuthorizerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ModelSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-name))
      (common-lisp:list
       (common-lisp:cons "OperationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-models))
      (common-lisp:list
       (common-lisp:cons "RequestModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "RequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-id))
      (common-lisp:list
       (common-lisp:cons "RouteId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-key))
      (common-lisp:list
       (common-lisp:cons "RouteKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'route-response-selection-expression))
      (common-lisp:list
       (common-lisp:cons "RouteResponseSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target))
      (common-lisp:list
       (common-lisp:cons "Target"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input route))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype route-models () 'common-lisp:hash-table)
 (common-lisp:defun make-route-models (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype route-parameters () 'common-lisp:hash-table)
 (common-lisp:defun make-route-parameters (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass route-response common-lisp:nil
                       ((model-selection-expression :initarg
                         :model-selection-expression :initform common-lisp:nil
                         :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-route-response-model-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "modelSelectionExpression")
                        (response-models :initarg :response-models :initform
                         common-lisp:nil :type
                         (common-lisp:or route-models common-lisp:null)
                         :accessor struct-shape-route-response-response-models
                         :shape "RouteModels" :location common-lisp:nil
                         :location-name "responseModels")
                        (response-parameters :initarg :response-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or route-parameters common-lisp:null)
                         :accessor
                         struct-shape-route-response-response-parameters :shape
                         "RouteParameters" :location common-lisp:nil
                         :location-name "responseParameters")
                        (route-response-id :initarg :route-response-id
                         :initform common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-route-response-route-response-id :shape
                         "Id" :location common-lisp:nil :location-name
                         "routeResponseId")
                        (route-response-key :initarg :route-response-key
                         :initform
                         (common-lisp:error ":route-response-key is required")
                         :type (common-lisp:or selection-key common-lisp:null)
                         :accessor
                         struct-shape-route-response-route-response-key :shape
                         "SelectionKey" :location common-lisp:nil
                         :location-name "routeResponseKey"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-route-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'route-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'route-response 'make-route-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input route-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input route-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ModelSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-models))
      (common-lisp:list
       (common-lisp:cons "ResponseModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-response-id))
      (common-lisp:list
       (common-lisp:cons "RouteResponseId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-response-key))
      (common-lisp:list
       (common-lisp:cons "RouteResponseKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input route-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass route-responses common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or |__listOfRouteResponse|
                                         common-lisp:null)
                         :accessor struct-shape-route-responses-items :shape
                         "__listOfRouteResponse" :location common-lisp:nil
                         :location-name "items")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-route-responses-next-token :shape
                         "NextToken" :location common-lisp:nil :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-route-responses
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'route-responses
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'route-responses 'make-route-responses))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input route-responses))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input route-responses))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input route-responses))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass route-settings common-lisp:nil
                       ((data-trace-enabled :initarg :data-trace-enabled
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-route-settings-data-trace-enabled :shape
                         "__boolean" :location common-lisp:nil :location-name
                         "dataTraceEnabled")
                        (detailed-metrics-enabled :initarg
                         :detailed-metrics-enabled :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-route-settings-detailed-metrics-enabled
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "detailedMetricsEnabled")
                        (logging-level :initarg :logging-level :initform
                         common-lisp:nil :type
                         (common-lisp:or logging-level common-lisp:null)
                         :accessor struct-shape-route-settings-logging-level
                         :shape "LoggingLevel" :location common-lisp:nil
                         :location-name "loggingLevel")
                        (throttling-burst-limit :initarg
                         :throttling-burst-limit :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-route-settings-throttling-burst-limit
                         :shape "__integer" :location common-lisp:nil
                         :location-name "throttlingBurstLimit")
                        (throttling-rate-limit :initarg :throttling-rate-limit
                         :initform common-lisp:nil :type
                         (common-lisp:or |__double| common-lisp:null) :accessor
                         struct-shape-route-settings-throttling-rate-limit
                         :shape "__double" :location common-lisp:nil
                         :location-name "throttlingRateLimit"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-route-settings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'route-settings
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'route-settings 'make-route-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input route-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input route-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-trace-enabled))
      (common-lisp:list
       (common-lisp:cons "DataTraceEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detailed-metrics-enabled))
      (common-lisp:list
       (common-lisp:cons "DetailedMetricsEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logging-level))
      (common-lisp:list
       (common-lisp:cons "LoggingLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'throttling-burst-limit))
      (common-lisp:list
       (common-lisp:cons "ThrottlingBurstLimit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'throttling-rate-limit))
      (common-lisp:list
       (common-lisp:cons "ThrottlingRateLimit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input route-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype route-settings-map () 'common-lisp:hash-table)
 (common-lisp:defun make-route-settings-map
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass routes common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or |__listOfRoute| common-lisp:null)
                         :accessor struct-shape-routes-items :shape
                         "__listOfRoute" :location common-lisp:nil
                         :location-name "items")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-routes-next-token :shape "NextToken"
                         :location common-lisp:nil :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-routes
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'routes
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'routes 'make-routes))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input routes))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input routes))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input routes))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype security-group-id-list ()
   '(trivial-types:proper-list |__string|))
 (common-lisp:defun make-security-group-id-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__string|))
   aws-sdk/generator/shape::members))
(common-lisp:deftype security-policy () 'common-lisp:string)
(common-lisp:deftype selection-expression () 'common-lisp:string)
(common-lisp:deftype selection-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass stage common-lisp:nil
                       ((access-log-settings :initarg :access-log-settings
                         :initform common-lisp:nil :type
                         (common-lisp:or access-log-settings common-lisp:null)
                         :accessor struct-shape-stage-access-log-settings
                         :shape "AccessLogSettings" :location common-lisp:nil
                         :location-name "accessLogSettings")
                        (api-gateway-managed :initarg :api-gateway-managed
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-stage-api-gateway-managed
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "apiGatewayManaged")
                        (auto-deploy :initarg :auto-deploy :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-stage-auto-deploy :shape
                         "__boolean" :location common-lisp:nil :location-name
                         "autoDeploy")
                        (client-certificate-id :initarg :client-certificate-id
                         :initform common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-stage-client-certificate-id :shape "Id"
                         :location common-lisp:nil :location-name
                         "clientCertificateId")
                        (created-date :initarg :created-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor struct-shape-stage-created-date :shape
                         "__timestampIso8601" :location common-lisp:nil
                         :location-name "createdDate")
                        (default-route-settings :initarg
                         :default-route-settings :initform common-lisp:nil
                         :type (common-lisp:or route-settings common-lisp:null)
                         :accessor struct-shape-stage-default-route-settings
                         :shape "RouteSettings" :location common-lisp:nil
                         :location-name "defaultRouteSettings")
                        (deployment-id :initarg :deployment-id :initform
                         common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-stage-deployment-id :shape "Id" :location
                         common-lisp:nil :location-name "deploymentId")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor struct-shape-stage-description :shape
                         "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description")
                        (last-deployment-status-message :initarg
                         :last-deployment-status-message :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-stage-last-deployment-status-message
                         :shape "__string" :location common-lisp:nil
                         :location-name "lastDeploymentStatusMessage")
                        (last-updated-date :initarg :last-updated-date
                         :initform common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor struct-shape-stage-last-updated-date :shape
                         "__timestampIso8601" :location common-lisp:nil
                         :location-name "lastUpdatedDate")
                        (route-settings :initarg :route-settings :initform
                         common-lisp:nil :type
                         (common-lisp:or route-settings-map common-lisp:null)
                         :accessor struct-shape-stage-route-settings :shape
                         "RouteSettingsMap" :location common-lisp:nil
                         :location-name "routeSettings")
                        (stage-name :initarg :stage-name :initform
                         (common-lisp:error ":stage-name is required") :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-stage-stage-name :shape
                         "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "stageName")
                        (stage-variables :initarg :stage-variables :initform
                         common-lisp:nil :type
                         (common-lisp:or stage-variables-map common-lisp:null)
                         :accessor struct-shape-stage-stage-variables :shape
                         "StageVariablesMap" :location common-lisp:nil
                         :location-name "stageVariables")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-stage-tags :shape "Tags" :location
                         common-lisp:nil :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stage
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'stage
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'stage 'make-stage))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stage))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stage))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-log-settings))
      (common-lisp:list
       (common-lisp:cons "AccessLogSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-managed))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-deploy))
      (common-lisp:list
       (common-lisp:cons "AutoDeploy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-certificate-id))
      (common-lisp:list
       (common-lisp:cons "ClientCertificateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-route-settings))
      (common-lisp:list
       (common-lisp:cons "DefaultRouteSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "DeploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-deployment-status-message))
      (common-lisp:list
       (common-lisp:cons "LastDeploymentStatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-date))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-settings))
      (common-lisp:list
       (common-lisp:cons "RouteSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-name))
      (common-lisp:list
       (common-lisp:cons "StageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-variables))
      (common-lisp:list
       (common-lisp:cons "StageVariables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stage))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype stage-variables-map () 'common-lisp:hash-table)
 (common-lisp:defun make-stage-variables-map
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass stages common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or |__listOfStage| common-lisp:null)
                         :accessor struct-shape-stages-items :shape
                         "__listOfStage" :location common-lisp:nil
                         :location-name "items")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-stages-next-token :shape "NextToken"
                         :location common-lisp:nil :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stages
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'stages
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'stages 'make-stages))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stages))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stages))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stages))
   common-lisp:nil))
(common-lisp:deftype string-with-length-between0and1024 () 'common-lisp:string)
(common-lisp:deftype string-with-length-between0and2048 () 'common-lisp:string)
(common-lisp:deftype string-with-length-between0and32k () 'common-lisp:string)
(common-lisp:deftype string-with-length-between1and1024 () 'common-lisp:string)
(common-lisp:deftype string-with-length-between1and128 () 'common-lisp:string)
(common-lisp:deftype string-with-length-between1and1600 () 'common-lisp:string)
(common-lisp:deftype string-with-length-between1and256 () 'common-lisp:string)
(common-lisp:deftype string-with-length-between1and512 () 'common-lisp:string)
(common-lisp:deftype string-with-length-between1and64 () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype subnet-id-list ()
   '(trivial-types:proper-list |__string|))
 (common-lisp:defun make-subnet-id-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__string|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass tag-resource-input common-lisp:nil
                       ((tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-tag-resource-input-tags :shape "Tags"
                         :location common-lisp:nil :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-input 'make-tag-resource-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-tag-resource-request-resource-arn :shape
                         "__string" :location "uri" :location-name
                         "resource-arn")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-tag-resource-request-tags :shape "Tags"
                         :location common-lisp:nil :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype tags () 'common-lisp:hash-table)
 (common-lisp:defun make-tags (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass template common-lisp:nil
                       ((value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-template-value :shape "__string"
                         :location common-lisp:nil :location-name "value"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-template
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'template
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'template 'make-template))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input template))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input template))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input template))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype template-map () 'common-lisp:hash-table)
 (common-lisp:defun make-template-map (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass tls-config common-lisp:nil
                       ((server-name-to-verify :initarg :server-name-to-verify
                         :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and512
                                         common-lisp:null)
                         :accessor
                         struct-shape-tls-config-server-name-to-verify :shape
                         "StringWithLengthBetween1And512" :location
                         common-lisp:nil :location-name "serverNameToVerify"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tls-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tls-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'tls-config 'make-tls-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tls-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tls-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'server-name-to-verify))
      (common-lisp:list
       (common-lisp:cons "ServerNameToVerify"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tls-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tls-config-input common-lisp:nil
                       ((server-name-to-verify :initarg :server-name-to-verify
                         :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and512
                                         common-lisp:null)
                         :accessor
                         struct-shape-tls-config-input-server-name-to-verify
                         :shape "StringWithLengthBetween1And512" :location
                         common-lisp:nil :location-name "serverNameToVerify"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tls-config-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tls-config-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tls-config-input 'make-tls-config-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tls-config-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tls-config-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'server-name-to-verify))
      (common-lisp:list
       (common-lisp:cons "ServerNameToVerify"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tls-config-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition too-many-requests-exception
     (apigatewayv2-error)
     ((limit-type :initarg :limit-type :initform common-lisp:nil :reader
       too-many-requests-exception-limit-type)
      (message :initarg :message :initform common-lisp:nil :reader
       too-many-requests-exception-message)))
 (common-lisp:export
  (common-lisp:list 'too-many-requests-exception
                    'too-many-requests-exception-limit-type
                    'too-many-requests-exception-message)))
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-untag-resource-request-resource-arn
                         :shape "__string" :location "uri" :location-name
                         "resource-arn")
                        (tag-keys :initarg :tag-keys :initform
                         (common-lisp:error ":tag-keys is required") :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-untag-resource-request-tag-keys
                         :shape "__listOf__string" :location "querystring"
                         :location-name "tagKeys"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-api-input common-lisp:nil
                       ((api-key-selection-expression :initarg
                         :api-key-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-update-api-input-api-key-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "apiKeySelectionExpression")
                        (cors-configuration :initarg :cors-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or cors common-lisp:null) :accessor
                         struct-shape-update-api-input-cors-configuration
                         :shape "Cors" :location common-lisp:nil :location-name
                         "corsConfiguration")
                        (credentials-arn :initarg :credentials-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-update-api-input-credentials-arn :shape
                         "Arn" :location common-lisp:nil :location-name
                         "credentialsArn")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor struct-shape-update-api-input-description
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description")
                        (disable-schema-validation :initarg
                         :disable-schema-validation :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-update-api-input-disable-schema-validation
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "disableSchemaValidation")
                        (disable-execute-api-endpoint :initarg
                         :disable-execute-api-endpoint :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-update-api-input-disable-execute-api-endpoint
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "disableExecuteApiEndpoint")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-update-api-input-name :shape
                         "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "name")
                        (route-key :initarg :route-key :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-key common-lisp:null)
                         :accessor struct-shape-update-api-input-route-key
                         :shape "SelectionKey" :location common-lisp:nil
                         :location-name "routeKey")
                        (route-selection-expression :initarg
                         :route-selection-expression :initform common-lisp:nil
                         :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-update-api-input-route-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "routeSelectionExpression")
                        (target :initarg :target :initform common-lisp:nil
                         :type
                         (common-lisp:or uri-with-length-between1and2048
                                         common-lisp:null)
                         :accessor struct-shape-update-api-input-target :shape
                         "UriWithLengthBetween1And2048" :location
                         common-lisp:nil :location-name "target")
                        (version :initarg :version :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor struct-shape-update-api-input-version :shape
                         "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name "version"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-api-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-api-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-api-input 'make-update-api-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-api-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-api-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-key-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ApiKeySelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cors-configuration))
      (common-lisp:list
       (common-lisp:cons "CorsConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials-arn))
      (common-lisp:list
       (common-lisp:cons "CredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-schema-validation))
      (common-lisp:list
       (common-lisp:cons "DisableSchemaValidation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-execute-api-endpoint))
      (common-lisp:list
       (common-lisp:cons "DisableExecuteApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-key))
      (common-lisp:list
       (common-lisp:cons "RouteKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'route-selection-expression))
      (common-lisp:list
       (common-lisp:cons "RouteSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target))
      (common-lisp:list
       (common-lisp:cons "Target"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-api-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-api-mapping-input common-lisp:nil
                       ((api-id :initarg :api-id :initform common-lisp:nil
                         :type (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-update-api-mapping-input-api-id :shape
                         "Id" :location common-lisp:nil :location-name "apiId")
                        (api-mapping-key :initarg :api-mapping-key :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-key common-lisp:null)
                         :accessor
                         struct-shape-update-api-mapping-input-api-mapping-key
                         :shape "SelectionKey" :location common-lisp:nil
                         :location-name "apiMappingKey")
                        (stage :initarg :stage :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-update-api-mapping-input-stage
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "stage"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-api-mapping-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-api-mapping-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-api-mapping-input 'make-update-api-mapping-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-api-mapping-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-api-mapping-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-id))
      (common-lisp:list
       (common-lisp:cons "ApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-mapping-key))
      (common-lisp:list
       (common-lisp:cons "ApiMappingKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "Stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-api-mapping-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-api-mapping-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-update-api-mapping-request-api-id :shape
                         "Id" :location common-lisp:nil :location-name "apiId")
                        (api-mapping-id :initarg :api-mapping-id :initform
                         (common-lisp:error ":api-mapping-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-api-mapping-request-api-mapping-id
                         :shape "__string" :location "uri" :location-name
                         "apiMappingId")
                        (api-mapping-key :initarg :api-mapping-key :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-key common-lisp:null)
                         :accessor
                         struct-shape-update-api-mapping-request-api-mapping-key
                         :shape "SelectionKey" :location common-lisp:nil
                         :location-name "apiMappingKey")
                        (domain-name :initarg :domain-name :initform
                         (common-lisp:error ":domain-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-api-mapping-request-domain-name
                         :shape "__string" :location "uri" :location-name
                         "domainName")
                        (stage :initarg :stage :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-api-mapping-request-stage :shape
                         "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "stage"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-api-mapping-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-api-mapping-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-api-mapping-request
                    'make-update-api-mapping-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-api-mapping-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-api-mapping-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-id))
      (common-lisp:list
       (common-lisp:cons "ApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-mapping-key))
      (common-lisp:list
       (common-lisp:cons "ApiMappingKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "Stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-api-mapping-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-api-mapping-response common-lisp:nil
                       ((api-id :initarg :api-id :initform common-lisp:nil
                         :type (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-update-api-mapping-response-api-id :shape
                         "Id" :location common-lisp:nil :location-name "apiId")
                        (api-mapping-id :initarg :api-mapping-id :initform
                         common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-update-api-mapping-response-api-mapping-id
                         :shape "Id" :location common-lisp:nil :location-name
                         "apiMappingId")
                        (api-mapping-key :initarg :api-mapping-key :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-key common-lisp:null)
                         :accessor
                         struct-shape-update-api-mapping-response-api-mapping-key
                         :shape "SelectionKey" :location common-lisp:nil
                         :location-name "apiMappingKey")
                        (stage :initarg :stage :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-api-mapping-response-stage :shape
                         "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "stage"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-api-mapping-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-api-mapping-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-api-mapping-response
                    'make-update-api-mapping-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-api-mapping-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-api-mapping-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-id))
      (common-lisp:list
       (common-lisp:cons "ApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-mapping-id))
      (common-lisp:list
       (common-lisp:cons "ApiMappingId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-mapping-key))
      (common-lisp:list
       (common-lisp:cons "ApiMappingKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "Stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-api-mapping-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-api-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-api-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId")
                        (api-key-selection-expression :initarg
                         :api-key-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-update-api-request-api-key-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "apiKeySelectionExpression")
                        (cors-configuration :initarg :cors-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or cors common-lisp:null) :accessor
                         struct-shape-update-api-request-cors-configuration
                         :shape "Cors" :location common-lisp:nil :location-name
                         "corsConfiguration")
                        (credentials-arn :initarg :credentials-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-update-api-request-credentials-arn :shape
                         "Arn" :location common-lisp:nil :location-name
                         "credentialsArn")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor struct-shape-update-api-request-description
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description")
                        (disable-schema-validation :initarg
                         :disable-schema-validation :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-update-api-request-disable-schema-validation
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "disableSchemaValidation")
                        (disable-execute-api-endpoint :initarg
                         :disable-execute-api-endpoint :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-update-api-request-disable-execute-api-endpoint
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "disableExecuteApiEndpoint")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-update-api-request-name :shape
                         "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "name")
                        (route-key :initarg :route-key :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-key common-lisp:null)
                         :accessor struct-shape-update-api-request-route-key
                         :shape "SelectionKey" :location common-lisp:nil
                         :location-name "routeKey")
                        (route-selection-expression :initarg
                         :route-selection-expression :initform common-lisp:nil
                         :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-update-api-request-route-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "routeSelectionExpression")
                        (target :initarg :target :initform common-lisp:nil
                         :type
                         (common-lisp:or uri-with-length-between1and2048
                                         common-lisp:null)
                         :accessor struct-shape-update-api-request-target
                         :shape "UriWithLengthBetween1And2048" :location
                         common-lisp:nil :location-name "target")
                        (version :initarg :version :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor struct-shape-update-api-request-version
                         :shape "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name "version"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-api-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-api-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-api-request 'make-update-api-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-api-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-key-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ApiKeySelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cors-configuration))
      (common-lisp:list
       (common-lisp:cons "CorsConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials-arn))
      (common-lisp:list
       (common-lisp:cons "CredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-schema-validation))
      (common-lisp:list
       (common-lisp:cons "DisableSchemaValidation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-execute-api-endpoint))
      (common-lisp:list
       (common-lisp:cons "DisableExecuteApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-key))
      (common-lisp:list
       (common-lisp:cons "RouteKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'route-selection-expression))
      (common-lisp:list
       (common-lisp:cons "RouteSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target))
      (common-lisp:list
       (common-lisp:cons "Target"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-api-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-api-response common-lisp:nil
                       ((api-endpoint :initarg :api-endpoint :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-api-response-api-endpoint :shape
                         "__string" :location common-lisp:nil :location-name
                         "apiEndpoint")
                        (api-gateway-managed :initarg :api-gateway-managed
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-update-api-response-api-gateway-managed
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "apiGatewayManaged")
                        (api-id :initarg :api-id :initform common-lisp:nil
                         :type (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-update-api-response-api-id :shape "Id"
                         :location common-lisp:nil :location-name "apiId")
                        (api-key-selection-expression :initarg
                         :api-key-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-update-api-response-api-key-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "apiKeySelectionExpression")
                        (cors-configuration :initarg :cors-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or cors common-lisp:null) :accessor
                         struct-shape-update-api-response-cors-configuration
                         :shape "Cors" :location common-lisp:nil :location-name
                         "corsConfiguration")
                        (created-date :initarg :created-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-update-api-response-created-date :shape
                         "__timestampIso8601" :location common-lisp:nil
                         :location-name "createdDate")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor struct-shape-update-api-response-description
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description")
                        (disable-schema-validation :initarg
                         :disable-schema-validation :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-update-api-response-disable-schema-validation
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "disableSchemaValidation")
                        (disable-execute-api-endpoint :initarg
                         :disable-execute-api-endpoint :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-update-api-response-disable-execute-api-endpoint
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "disableExecuteApiEndpoint")
                        (import-info :initarg :import-info :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-update-api-response-import-info
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "importInfo")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-update-api-response-name :shape
                         "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "name")
                        (protocol-type :initarg :protocol-type :initform
                         common-lisp:nil :type
                         (common-lisp:or protocol-type common-lisp:null)
                         :accessor
                         struct-shape-update-api-response-protocol-type :shape
                         "ProtocolType" :location common-lisp:nil
                         :location-name "protocolType")
                        (route-selection-expression :initarg
                         :route-selection-expression :initform common-lisp:nil
                         :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-update-api-response-route-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "routeSelectionExpression")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-update-api-response-tags :shape "Tags"
                         :location common-lisp:nil :location-name "tags")
                        (version :initarg :version :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor struct-shape-update-api-response-version
                         :shape "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name "version")
                        (warnings :initarg :warnings :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-update-api-response-warnings
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "warnings"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-api-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-api-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-api-response 'make-update-api-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-api-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-api-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-endpoint))
      (common-lisp:list
       (common-lisp:cons "ApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-managed))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-id))
      (common-lisp:list
       (common-lisp:cons "ApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-key-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ApiKeySelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cors-configuration))
      (common-lisp:list
       (common-lisp:cons "CorsConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-schema-validation))
      (common-lisp:list
       (common-lisp:cons "DisableSchemaValidation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-execute-api-endpoint))
      (common-lisp:list
       (common-lisp:cons "DisableExecuteApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'import-info))
      (common-lisp:list
       (common-lisp:cons "ImportInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol-type))
      (common-lisp:list
       (common-lisp:cons "ProtocolType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'route-selection-expression))
      (common-lisp:list
       (common-lisp:cons "RouteSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warnings))
      (common-lisp:list
       (common-lisp:cons "Warnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-api-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-authorizer-input common-lisp:nil
                       ((authorizer-credentials-arn :initarg
                         :authorizer-credentials-arn :initform common-lisp:nil
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-update-authorizer-input-authorizer-credentials-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         "authorizerCredentialsArn")
                        (authorizer-result-ttl-in-seconds :initarg
                         :authorizer-result-ttl-in-seconds :initform
                         common-lisp:nil :type
                         (common-lisp:or integer-with-length-between0and3600
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-authorizer-input-authorizer-result-ttl-in-seconds
                         :shape "IntegerWithLengthBetween0And3600" :location
                         common-lisp:nil :location-name
                         "authorizerResultTtlInSeconds")
                        (authorizer-type :initarg :authorizer-type :initform
                         common-lisp:nil :type
                         (common-lisp:or authorizer-type common-lisp:null)
                         :accessor
                         struct-shape-update-authorizer-input-authorizer-type
                         :shape "AuthorizerType" :location common-lisp:nil
                         :location-name "authorizerType")
                        (authorizer-uri :initarg :authorizer-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or uri-with-length-between1and2048
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-authorizer-input-authorizer-uri
                         :shape "UriWithLengthBetween1And2048" :location
                         common-lisp:nil :location-name "authorizerUri")
                        (identity-source :initarg :identity-source :initform
                         common-lisp:nil :type
                         (common-lisp:or identity-source-list common-lisp:null)
                         :accessor
                         struct-shape-update-authorizer-input-identity-source
                         :shape "IdentitySourceList" :location common-lisp:nil
                         :location-name "identitySource")
                        (identity-validation-expression :initarg
                         :identity-validation-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-authorizer-input-identity-validation-expression
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name
                         "identityValidationExpression")
                        (jwt-configuration :initarg :jwt-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or jwtconfiguration common-lisp:null)
                         :accessor
                         struct-shape-update-authorizer-input-jwt-configuration
                         :shape "JWTConfiguration" :location common-lisp:nil
                         :location-name "jwtConfiguration")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-update-authorizer-input-name
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "name")
                        (authorizer-payload-format-version :initarg
                         :authorizer-payload-format-version :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-authorizer-input-authorizer-payload-format-version
                         :shape "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name
                         "authorizerPayloadFormatVersion")
                        (enable-simple-responses :initarg
                         :enable-simple-responses :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-update-authorizer-input-enable-simple-responses
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "enableSimpleResponses"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-authorizer-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-authorizer-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-authorizer-input 'make-update-authorizer-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-authorizer-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-authorizer-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-credentials-arn))
      (common-lisp:list
       (common-lisp:cons "AuthorizerCredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-result-ttl-in-seconds))
      (common-lisp:list
       (common-lisp:cons "AuthorizerResultTtlInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-type))
      (common-lisp:list
       (common-lisp:cons "AuthorizerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-uri))
      (common-lisp:list
       (common-lisp:cons "AuthorizerUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-source))
      (common-lisp:list
       (common-lisp:cons "IdentitySource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'identity-validation-expression))
      (common-lisp:list
       (common-lisp:cons "IdentityValidationExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'jwt-configuration))
      (common-lisp:list
       (common-lisp:cons "JwtConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-payload-format-version))
      (common-lisp:list
       (common-lisp:cons "AuthorizerPayloadFormatVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-simple-responses))
      (common-lisp:list
       (common-lisp:cons "EnableSimpleResponses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-authorizer-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-authorizer-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-authorizer-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId")
                        (authorizer-credentials-arn :initarg
                         :authorizer-credentials-arn :initform common-lisp:nil
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-update-authorizer-request-authorizer-credentials-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         "authorizerCredentialsArn")
                        (authorizer-id :initarg :authorizer-id :initform
                         (common-lisp:error ":authorizer-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-authorizer-request-authorizer-id
                         :shape "__string" :location "uri" :location-name
                         "authorizerId")
                        (authorizer-result-ttl-in-seconds :initarg
                         :authorizer-result-ttl-in-seconds :initform
                         common-lisp:nil :type
                         (common-lisp:or integer-with-length-between0and3600
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-authorizer-request-authorizer-result-ttl-in-seconds
                         :shape "IntegerWithLengthBetween0And3600" :location
                         common-lisp:nil :location-name
                         "authorizerResultTtlInSeconds")
                        (authorizer-type :initarg :authorizer-type :initform
                         common-lisp:nil :type
                         (common-lisp:or authorizer-type common-lisp:null)
                         :accessor
                         struct-shape-update-authorizer-request-authorizer-type
                         :shape "AuthorizerType" :location common-lisp:nil
                         :location-name "authorizerType")
                        (authorizer-uri :initarg :authorizer-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or uri-with-length-between1and2048
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-authorizer-request-authorizer-uri
                         :shape "UriWithLengthBetween1And2048" :location
                         common-lisp:nil :location-name "authorizerUri")
                        (identity-source :initarg :identity-source :initform
                         common-lisp:nil :type
                         (common-lisp:or identity-source-list common-lisp:null)
                         :accessor
                         struct-shape-update-authorizer-request-identity-source
                         :shape "IdentitySourceList" :location common-lisp:nil
                         :location-name "identitySource")
                        (identity-validation-expression :initarg
                         :identity-validation-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-authorizer-request-identity-validation-expression
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name
                         "identityValidationExpression")
                        (jwt-configuration :initarg :jwt-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or jwtconfiguration common-lisp:null)
                         :accessor
                         struct-shape-update-authorizer-request-jwt-configuration
                         :shape "JWTConfiguration" :location common-lisp:nil
                         :location-name "jwtConfiguration")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-update-authorizer-request-name
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "name")
                        (authorizer-payload-format-version :initarg
                         :authorizer-payload-format-version :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-authorizer-request-authorizer-payload-format-version
                         :shape "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name
                         "authorizerPayloadFormatVersion")
                        (enable-simple-responses :initarg
                         :enable-simple-responses :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-update-authorizer-request-enable-simple-responses
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "enableSimpleResponses"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-authorizer-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-authorizer-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-authorizer-request
                    'make-update-authorizer-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-authorizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-authorizer-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-credentials-arn))
      (common-lisp:list
       (common-lisp:cons "AuthorizerCredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-result-ttl-in-seconds))
      (common-lisp:list
       (common-lisp:cons "AuthorizerResultTtlInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-type))
      (common-lisp:list
       (common-lisp:cons "AuthorizerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-uri))
      (common-lisp:list
       (common-lisp:cons "AuthorizerUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-source))
      (common-lisp:list
       (common-lisp:cons "IdentitySource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'identity-validation-expression))
      (common-lisp:list
       (common-lisp:cons "IdentityValidationExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'jwt-configuration))
      (common-lisp:list
       (common-lisp:cons "JwtConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-payload-format-version))
      (common-lisp:list
       (common-lisp:cons "AuthorizerPayloadFormatVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-simple-responses))
      (common-lisp:list
       (common-lisp:cons "EnableSimpleResponses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-authorizer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-authorizer-response common-lisp:nil
                       ((authorizer-credentials-arn :initarg
                         :authorizer-credentials-arn :initform common-lisp:nil
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-update-authorizer-response-authorizer-credentials-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         "authorizerCredentialsArn")
                        (authorizer-id :initarg :authorizer-id :initform
                         common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-update-authorizer-response-authorizer-id
                         :shape "Id" :location common-lisp:nil :location-name
                         "authorizerId")
                        (authorizer-result-ttl-in-seconds :initarg
                         :authorizer-result-ttl-in-seconds :initform
                         common-lisp:nil :type
                         (common-lisp:or integer-with-length-between0and3600
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-authorizer-response-authorizer-result-ttl-in-seconds
                         :shape "IntegerWithLengthBetween0And3600" :location
                         common-lisp:nil :location-name
                         "authorizerResultTtlInSeconds")
                        (authorizer-type :initarg :authorizer-type :initform
                         common-lisp:nil :type
                         (common-lisp:or authorizer-type common-lisp:null)
                         :accessor
                         struct-shape-update-authorizer-response-authorizer-type
                         :shape "AuthorizerType" :location common-lisp:nil
                         :location-name "authorizerType")
                        (authorizer-uri :initarg :authorizer-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or uri-with-length-between1and2048
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-authorizer-response-authorizer-uri
                         :shape "UriWithLengthBetween1And2048" :location
                         common-lisp:nil :location-name "authorizerUri")
                        (identity-source :initarg :identity-source :initform
                         common-lisp:nil :type
                         (common-lisp:or identity-source-list common-lisp:null)
                         :accessor
                         struct-shape-update-authorizer-response-identity-source
                         :shape "IdentitySourceList" :location common-lisp:nil
                         :location-name "identitySource")
                        (identity-validation-expression :initarg
                         :identity-validation-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-authorizer-response-identity-validation-expression
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name
                         "identityValidationExpression")
                        (jwt-configuration :initarg :jwt-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or jwtconfiguration common-lisp:null)
                         :accessor
                         struct-shape-update-authorizer-response-jwt-configuration
                         :shape "JWTConfiguration" :location common-lisp:nil
                         :location-name "jwtConfiguration")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-update-authorizer-response-name
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "name")
                        (authorizer-payload-format-version :initarg
                         :authorizer-payload-format-version :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-authorizer-response-authorizer-payload-format-version
                         :shape "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name
                         "authorizerPayloadFormatVersion")
                        (enable-simple-responses :initarg
                         :enable-simple-responses :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-update-authorizer-response-enable-simple-responses
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "enableSimpleResponses"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-authorizer-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-authorizer-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-authorizer-response
                    'make-update-authorizer-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-authorizer-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-authorizer-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-credentials-arn))
      (common-lisp:list
       (common-lisp:cons "AuthorizerCredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-id))
      (common-lisp:list
       (common-lisp:cons "AuthorizerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-result-ttl-in-seconds))
      (common-lisp:list
       (common-lisp:cons "AuthorizerResultTtlInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-type))
      (common-lisp:list
       (common-lisp:cons "AuthorizerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-uri))
      (common-lisp:list
       (common-lisp:cons "AuthorizerUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-source))
      (common-lisp:list
       (common-lisp:cons "IdentitySource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'identity-validation-expression))
      (common-lisp:list
       (common-lisp:cons "IdentityValidationExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'jwt-configuration))
      (common-lisp:list
       (common-lisp:cons "JwtConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-payload-format-version))
      (common-lisp:list
       (common-lisp:cons "AuthorizerPayloadFormatVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-simple-responses))
      (common-lisp:list
       (common-lisp:cons "EnableSimpleResponses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-authorizer-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-deployment-input common-lisp:nil
                       ((description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-deployment-input-description
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-deployment-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-deployment-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-deployment-input 'make-update-deployment-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-deployment-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-deployment-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-deployment-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-deployment-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-deployment-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId")
                        (deployment-id :initarg :deployment-id :initform
                         (common-lisp:error ":deployment-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-deployment-request-deployment-id
                         :shape "__string" :location "uri" :location-name
                         "deploymentId")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-deployment-request-description
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-deployment-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-deployment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-deployment-request
                    'make-update-deployment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-deployment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-deployment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-deployment-response common-lisp:nil
                       ((auto-deployed :initarg :auto-deployed :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-update-deployment-response-auto-deployed
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "autoDeployed")
                        (created-date :initarg :created-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-update-deployment-response-created-date
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "createdDate")
                        (deployment-id :initarg :deployment-id :initform
                         common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-update-deployment-response-deployment-id
                         :shape "Id" :location common-lisp:nil :location-name
                         "deploymentId")
                        (deployment-status :initarg :deployment-status
                         :initform common-lisp:nil :type
                         (common-lisp:or deployment-status common-lisp:null)
                         :accessor
                         struct-shape-update-deployment-response-deployment-status
                         :shape "DeploymentStatus" :location common-lisp:nil
                         :location-name "deploymentStatus")
                        (deployment-status-message :initarg
                         :deployment-status-message :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-deployment-response-deployment-status-message
                         :shape "__string" :location common-lisp:nil
                         :location-name "deploymentStatusMessage")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-deployment-response-description
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-deployment-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-deployment-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-deployment-response
                    'make-update-deployment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-deployment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-deployment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-deployed))
      (common-lisp:list
       (common-lisp:cons "AutoDeployed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "DeploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-status))
      (common-lisp:list
       (common-lisp:cons "DeploymentStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'deployment-status-message))
      (common-lisp:list
       (common-lisp:cons "DeploymentStatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-deployment-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-domain-name-input common-lisp:nil
                       ((domain-name-configurations :initarg
                         :domain-name-configurations :initform common-lisp:nil
                         :type
                         (common-lisp:or domain-name-configurations
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-domain-name-input-domain-name-configurations
                         :shape "DomainNameConfigurations" :location
                         common-lisp:nil :location-name
                         "domainNameConfigurations")
                        (mutual-tls-authentication :initarg
                         :mutual-tls-authentication :initform common-lisp:nil
                         :type
                         (common-lisp:or mutual-tls-authentication-input
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-domain-name-input-mutual-tls-authentication
                         :shape "MutualTlsAuthenticationInput" :location
                         common-lisp:nil :location-name
                         "mutualTlsAuthentication"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-domain-name-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-domain-name-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-domain-name-input 'make-update-domain-name-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-name-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-name-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'domain-name-configurations))
      (common-lisp:list
       (common-lisp:cons "DomainNameConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'mutual-tls-authentication))
      (common-lisp:list
       (common-lisp:cons "MutualTlsAuthentication"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-name-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-domain-name-request common-lisp:nil
                       ((domain-name :initarg :domain-name :initform
                         (common-lisp:error ":domain-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-domain-name-request-domain-name
                         :shape "__string" :location "uri" :location-name
                         "domainName")
                        (domain-name-configurations :initarg
                         :domain-name-configurations :initform common-lisp:nil
                         :type
                         (common-lisp:or domain-name-configurations
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-domain-name-request-domain-name-configurations
                         :shape "DomainNameConfigurations" :location
                         common-lisp:nil :location-name
                         "domainNameConfigurations")
                        (mutual-tls-authentication :initarg
                         :mutual-tls-authentication :initform common-lisp:nil
                         :type
                         (common-lisp:or mutual-tls-authentication-input
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-domain-name-request-mutual-tls-authentication
                         :shape "MutualTlsAuthenticationInput" :location
                         common-lisp:nil :location-name
                         "mutualTlsAuthentication"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-domain-name-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-domain-name-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-domain-name-request
                    'make-update-domain-name-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-name-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-name-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'domain-name-configurations))
      (common-lisp:list
       (common-lisp:cons "DomainNameConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'mutual-tls-authentication))
      (common-lisp:list
       (common-lisp:cons "MutualTlsAuthentication"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-name-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-domain-name-response common-lisp:nil
                       ((api-mapping-selection-expression :initarg
                         :api-mapping-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-update-domain-name-response-api-mapping-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "apiMappingSelectionExpression")
                        (domain-name :initarg :domain-name :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and512
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-domain-name-response-domain-name
                         :shape "StringWithLengthBetween1And512" :location
                         common-lisp:nil :location-name "domainName")
                        (domain-name-configurations :initarg
                         :domain-name-configurations :initform common-lisp:nil
                         :type
                         (common-lisp:or domain-name-configurations
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-domain-name-response-domain-name-configurations
                         :shape "DomainNameConfigurations" :location
                         common-lisp:nil :location-name
                         "domainNameConfigurations")
                        (mutual-tls-authentication :initarg
                         :mutual-tls-authentication :initform common-lisp:nil
                         :type
                         (common-lisp:or mutual-tls-authentication
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-domain-name-response-mutual-tls-authentication
                         :shape "MutualTlsAuthentication" :location
                         common-lisp:nil :location-name
                         "mutualTlsAuthentication")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-update-domain-name-response-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-domain-name-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-domain-name-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-domain-name-response
                    'make-update-domain-name-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-name-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-name-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-mapping-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ApiMappingSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'domain-name-configurations))
      (common-lisp:list
       (common-lisp:cons "DomainNameConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'mutual-tls-authentication))
      (common-lisp:list
       (common-lisp:cons "MutualTlsAuthentication"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-name-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-integration-input common-lisp:nil
                       ((connection-id :initarg :connection-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-integration-input-connection-id
                         :shape "StringWithLengthBetween1And1024" :location
                         common-lisp:nil :location-name "connectionId")
                        (connection-type :initarg :connection-type :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-type common-lisp:null)
                         :accessor
                         struct-shape-update-integration-input-connection-type
                         :shape "ConnectionType" :location common-lisp:nil
                         :location-name "connectionType")
                        (content-handling-strategy :initarg
                         :content-handling-strategy :initform common-lisp:nil
                         :type
                         (common-lisp:or content-handling-strategy
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-integration-input-content-handling-strategy
                         :shape "ContentHandlingStrategy" :location
                         common-lisp:nil :location-name
                         "contentHandlingStrategy")
                        (credentials-arn :initarg :credentials-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-update-integration-input-credentials-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         "credentialsArn")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-integration-input-description
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description")
                        (integration-method :initarg :integration-method
                         :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-integration-input-integration-method
                         :shape "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name "integrationMethod")
                        (integration-subtype :initarg :integration-subtype
                         :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-integration-input-integration-subtype
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "integrationSubtype")
                        (integration-type :initarg :integration-type :initform
                         common-lisp:nil :type
                         (common-lisp:or integration-type common-lisp:null)
                         :accessor
                         struct-shape-update-integration-input-integration-type
                         :shape "IntegrationType" :location common-lisp:nil
                         :location-name "integrationType")
                        (integration-uri :initarg :integration-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or uri-with-length-between1and2048
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-integration-input-integration-uri
                         :shape "UriWithLengthBetween1And2048" :location
                         common-lisp:nil :location-name "integrationUri")
                        (passthrough-behavior :initarg :passthrough-behavior
                         :initform common-lisp:nil :type
                         (common-lisp:or passthrough-behavior common-lisp:null)
                         :accessor
                         struct-shape-update-integration-input-passthrough-behavior
                         :shape "PassthroughBehavior" :location common-lisp:nil
                         :location-name "passthroughBehavior")
                        (payload-format-version :initarg
                         :payload-format-version :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-integration-input-payload-format-version
                         :shape "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name "payloadFormatVersion")
                        (request-parameters :initarg :request-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or integration-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-integration-input-request-parameters
                         :shape "IntegrationParameters" :location
                         common-lisp:nil :location-name "requestParameters")
                        (response-parameters :initarg :response-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or response-parameters common-lisp:null)
                         :accessor
                         struct-shape-update-integration-input-response-parameters
                         :shape "ResponseParameters" :location common-lisp:nil
                         :location-name "responseParameters")
                        (request-templates :initarg :request-templates
                         :initform common-lisp:nil :type
                         (common-lisp:or template-map common-lisp:null)
                         :accessor
                         struct-shape-update-integration-input-request-templates
                         :shape "TemplateMap" :location common-lisp:nil
                         :location-name "requestTemplates")
                        (template-selection-expression :initarg
                         :template-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-update-integration-input-template-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "templateSelectionExpression")
                        (timeout-in-millis :initarg :timeout-in-millis
                         :initform common-lisp:nil :type
                         (common-lisp:or integer-with-length-between50and30000
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-integration-input-timeout-in-millis
                         :shape "IntegerWithLengthBetween50And30000" :location
                         common-lisp:nil :location-name "timeoutInMillis")
                        (tls-config :initarg :tls-config :initform
                         common-lisp:nil :type
                         (common-lisp:or tls-config-input common-lisp:null)
                         :accessor
                         struct-shape-update-integration-input-tls-config
                         :shape "TlsConfigInput" :location common-lisp:nil
                         :location-name "tlsConfig"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-integration-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-integration-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-integration-input 'make-update-integration-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-id))
      (common-lisp:list
       (common-lisp:cons "ConnectionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-type))
      (common-lisp:list
       (common-lisp:cons "ConnectionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-handling-strategy))
      (common-lisp:list
       (common-lisp:cons "ContentHandlingStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials-arn))
      (common-lisp:list
       (common-lisp:cons "CredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-method))
      (common-lisp:list
       (common-lisp:cons "IntegrationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-subtype))
      (common-lisp:list
       (common-lisp:cons "IntegrationSubtype"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-type))
      (common-lisp:list
       (common-lisp:cons "IntegrationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-uri))
      (common-lisp:list
       (common-lisp:cons "IntegrationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'passthrough-behavior))
      (common-lisp:list
       (common-lisp:cons "PassthroughBehavior"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'payload-format-version))
      (common-lisp:list
       (common-lisp:cons "PayloadFormatVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "RequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-templates))
      (common-lisp:list
       (common-lisp:cons "RequestTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-selection-expression))
      (common-lisp:list
       (common-lisp:cons "TemplateSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeout-in-millis))
      (common-lisp:list
       (common-lisp:cons "TimeoutInMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tls-config))
      (common-lisp:list
       (common-lisp:cons "TlsConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-integration-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-integration-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId")
                        (connection-id :initarg :connection-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-integration-request-connection-id
                         :shape "StringWithLengthBetween1And1024" :location
                         common-lisp:nil :location-name "connectionId")
                        (connection-type :initarg :connection-type :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-type common-lisp:null)
                         :accessor
                         struct-shape-update-integration-request-connection-type
                         :shape "ConnectionType" :location common-lisp:nil
                         :location-name "connectionType")
                        (content-handling-strategy :initarg
                         :content-handling-strategy :initform common-lisp:nil
                         :type
                         (common-lisp:or content-handling-strategy
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-integration-request-content-handling-strategy
                         :shape "ContentHandlingStrategy" :location
                         common-lisp:nil :location-name
                         "contentHandlingStrategy")
                        (credentials-arn :initarg :credentials-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-update-integration-request-credentials-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         "credentialsArn")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-integration-request-description
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description")
                        (integration-id :initarg :integration-id :initform
                         (common-lisp:error ":integration-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-integration-request-integration-id
                         :shape "__string" :location "uri" :location-name
                         "integrationId")
                        (integration-method :initarg :integration-method
                         :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-integration-request-integration-method
                         :shape "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name "integrationMethod")
                        (integration-subtype :initarg :integration-subtype
                         :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-integration-request-integration-subtype
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "integrationSubtype")
                        (integration-type :initarg :integration-type :initform
                         common-lisp:nil :type
                         (common-lisp:or integration-type common-lisp:null)
                         :accessor
                         struct-shape-update-integration-request-integration-type
                         :shape "IntegrationType" :location common-lisp:nil
                         :location-name "integrationType")
                        (integration-uri :initarg :integration-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or uri-with-length-between1and2048
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-integration-request-integration-uri
                         :shape "UriWithLengthBetween1And2048" :location
                         common-lisp:nil :location-name "integrationUri")
                        (passthrough-behavior :initarg :passthrough-behavior
                         :initform common-lisp:nil :type
                         (common-lisp:or passthrough-behavior common-lisp:null)
                         :accessor
                         struct-shape-update-integration-request-passthrough-behavior
                         :shape "PassthroughBehavior" :location common-lisp:nil
                         :location-name "passthroughBehavior")
                        (payload-format-version :initarg
                         :payload-format-version :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-integration-request-payload-format-version
                         :shape "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name "payloadFormatVersion")
                        (request-parameters :initarg :request-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or integration-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-integration-request-request-parameters
                         :shape "IntegrationParameters" :location
                         common-lisp:nil :location-name "requestParameters")
                        (response-parameters :initarg :response-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or response-parameters common-lisp:null)
                         :accessor
                         struct-shape-update-integration-request-response-parameters
                         :shape "ResponseParameters" :location common-lisp:nil
                         :location-name "responseParameters")
                        (request-templates :initarg :request-templates
                         :initform common-lisp:nil :type
                         (common-lisp:or template-map common-lisp:null)
                         :accessor
                         struct-shape-update-integration-request-request-templates
                         :shape "TemplateMap" :location common-lisp:nil
                         :location-name "requestTemplates")
                        (template-selection-expression :initarg
                         :template-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-update-integration-request-template-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "templateSelectionExpression")
                        (timeout-in-millis :initarg :timeout-in-millis
                         :initform common-lisp:nil :type
                         (common-lisp:or integer-with-length-between50and30000
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-integration-request-timeout-in-millis
                         :shape "IntegerWithLengthBetween50And30000" :location
                         common-lisp:nil :location-name "timeoutInMillis")
                        (tls-config :initarg :tls-config :initform
                         common-lisp:nil :type
                         (common-lisp:or tls-config-input common-lisp:null)
                         :accessor
                         struct-shape-update-integration-request-tls-config
                         :shape "TlsConfigInput" :location common-lisp:nil
                         :location-name "tlsConfig"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-integration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-integration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-integration-request
                    'make-update-integration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-id))
      (common-lisp:list
       (common-lisp:cons "ConnectionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-type))
      (common-lisp:list
       (common-lisp:cons "ConnectionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-handling-strategy))
      (common-lisp:list
       (common-lisp:cons "ContentHandlingStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials-arn))
      (common-lisp:list
       (common-lisp:cons "CredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-method))
      (common-lisp:list
       (common-lisp:cons "IntegrationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-subtype))
      (common-lisp:list
       (common-lisp:cons "IntegrationSubtype"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-type))
      (common-lisp:list
       (common-lisp:cons "IntegrationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-uri))
      (common-lisp:list
       (common-lisp:cons "IntegrationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'passthrough-behavior))
      (common-lisp:list
       (common-lisp:cons "PassthroughBehavior"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'payload-format-version))
      (common-lisp:list
       (common-lisp:cons "PayloadFormatVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "RequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-templates))
      (common-lisp:list
       (common-lisp:cons "RequestTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-selection-expression))
      (common-lisp:list
       (common-lisp:cons "TemplateSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeout-in-millis))
      (common-lisp:list
       (common-lisp:cons "TimeoutInMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tls-config))
      (common-lisp:list
       (common-lisp:cons "TlsConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-integration-result common-lisp:nil
                       ((api-gateway-managed :initarg :api-gateway-managed
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-update-integration-result-api-gateway-managed
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "apiGatewayManaged")
                        (connection-id :initarg :connection-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-integration-result-connection-id
                         :shape "StringWithLengthBetween1And1024" :location
                         common-lisp:nil :location-name "connectionId")
                        (connection-type :initarg :connection-type :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-type common-lisp:null)
                         :accessor
                         struct-shape-update-integration-result-connection-type
                         :shape "ConnectionType" :location common-lisp:nil
                         :location-name "connectionType")
                        (content-handling-strategy :initarg
                         :content-handling-strategy :initform common-lisp:nil
                         :type
                         (common-lisp:or content-handling-strategy
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-integration-result-content-handling-strategy
                         :shape "ContentHandlingStrategy" :location
                         common-lisp:nil :location-name
                         "contentHandlingStrategy")
                        (credentials-arn :initarg :credentials-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-update-integration-result-credentials-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         "credentialsArn")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-integration-result-description
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description")
                        (integration-id :initarg :integration-id :initform
                         common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-update-integration-result-integration-id
                         :shape "Id" :location common-lisp:nil :location-name
                         "integrationId")
                        (integration-method :initarg :integration-method
                         :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-integration-result-integration-method
                         :shape "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name "integrationMethod")
                        (integration-response-selection-expression :initarg
                         :integration-response-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-update-integration-result-integration-response-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name
                         "integrationResponseSelectionExpression")
                        (integration-subtype :initarg :integration-subtype
                         :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-integration-result-integration-subtype
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "integrationSubtype")
                        (integration-type :initarg :integration-type :initform
                         common-lisp:nil :type
                         (common-lisp:or integration-type common-lisp:null)
                         :accessor
                         struct-shape-update-integration-result-integration-type
                         :shape "IntegrationType" :location common-lisp:nil
                         :location-name "integrationType")
                        (integration-uri :initarg :integration-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or uri-with-length-between1and2048
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-integration-result-integration-uri
                         :shape "UriWithLengthBetween1And2048" :location
                         common-lisp:nil :location-name "integrationUri")
                        (passthrough-behavior :initarg :passthrough-behavior
                         :initform common-lisp:nil :type
                         (common-lisp:or passthrough-behavior common-lisp:null)
                         :accessor
                         struct-shape-update-integration-result-passthrough-behavior
                         :shape "PassthroughBehavior" :location common-lisp:nil
                         :location-name "passthroughBehavior")
                        (payload-format-version :initarg
                         :payload-format-version :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-integration-result-payload-format-version
                         :shape "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name "payloadFormatVersion")
                        (request-parameters :initarg :request-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or integration-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-integration-result-request-parameters
                         :shape "IntegrationParameters" :location
                         common-lisp:nil :location-name "requestParameters")
                        (response-parameters :initarg :response-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or response-parameters common-lisp:null)
                         :accessor
                         struct-shape-update-integration-result-response-parameters
                         :shape "ResponseParameters" :location common-lisp:nil
                         :location-name "responseParameters")
                        (request-templates :initarg :request-templates
                         :initform common-lisp:nil :type
                         (common-lisp:or template-map common-lisp:null)
                         :accessor
                         struct-shape-update-integration-result-request-templates
                         :shape "TemplateMap" :location common-lisp:nil
                         :location-name "requestTemplates")
                        (template-selection-expression :initarg
                         :template-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-update-integration-result-template-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "templateSelectionExpression")
                        (timeout-in-millis :initarg :timeout-in-millis
                         :initform common-lisp:nil :type
                         (common-lisp:or integer-with-length-between50and30000
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-integration-result-timeout-in-millis
                         :shape "IntegerWithLengthBetween50And30000" :location
                         common-lisp:nil :location-name "timeoutInMillis")
                        (tls-config :initarg :tls-config :initform
                         common-lisp:nil :type
                         (common-lisp:or tls-config common-lisp:null) :accessor
                         struct-shape-update-integration-result-tls-config
                         :shape "TlsConfig" :location common-lisp:nil
                         :location-name "tlsConfig"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-integration-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-integration-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-integration-result
                    'make-update-integration-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-managed))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-id))
      (common-lisp:list
       (common-lisp:cons "ConnectionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-type))
      (common-lisp:list
       (common-lisp:cons "ConnectionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-handling-strategy))
      (common-lisp:list
       (common-lisp:cons "ContentHandlingStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials-arn))
      (common-lisp:list
       (common-lisp:cons "CredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-id))
      (common-lisp:list
       (common-lisp:cons "IntegrationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-method))
      (common-lisp:list
       (common-lisp:cons "IntegrationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-response-selection-expression))
      (common-lisp:list
       (common-lisp:cons "IntegrationResponseSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-subtype))
      (common-lisp:list
       (common-lisp:cons "IntegrationSubtype"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-type))
      (common-lisp:list
       (common-lisp:cons "IntegrationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-uri))
      (common-lisp:list
       (common-lisp:cons "IntegrationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'passthrough-behavior))
      (common-lisp:list
       (common-lisp:cons "PassthroughBehavior"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'payload-format-version))
      (common-lisp:list
       (common-lisp:cons "PayloadFormatVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "RequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-templates))
      (common-lisp:list
       (common-lisp:cons "RequestTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-selection-expression))
      (common-lisp:list
       (common-lisp:cons "TemplateSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeout-in-millis))
      (common-lisp:list
       (common-lisp:cons "TimeoutInMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tls-config))
      (common-lisp:list
       (common-lisp:cons "TlsConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-integration-response-input common-lisp:nil
                       ((content-handling-strategy :initarg
                         :content-handling-strategy :initform common-lisp:nil
                         :type
                         (common-lisp:or content-handling-strategy
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-integration-response-input-content-handling-strategy
                         :shape "ContentHandlingStrategy" :location
                         common-lisp:nil :location-name
                         "contentHandlingStrategy")
                        (integration-response-key :initarg
                         :integration-response-key :initform common-lisp:nil
                         :type (common-lisp:or selection-key common-lisp:null)
                         :accessor
                         struct-shape-update-integration-response-input-integration-response-key
                         :shape "SelectionKey" :location common-lisp:nil
                         :location-name "integrationResponseKey")
                        (response-parameters :initarg :response-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or integration-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-integration-response-input-response-parameters
                         :shape "IntegrationParameters" :location
                         common-lisp:nil :location-name "responseParameters")
                        (response-templates :initarg :response-templates
                         :initform common-lisp:nil :type
                         (common-lisp:or template-map common-lisp:null)
                         :accessor
                         struct-shape-update-integration-response-input-response-templates
                         :shape "TemplateMap" :location common-lisp:nil
                         :location-name "responseTemplates")
                        (template-selection-expression :initarg
                         :template-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-update-integration-response-input-template-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "templateSelectionExpression"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-integration-response-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-integration-response-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-integration-response-input
                    'make-update-integration-response-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-response-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-response-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-handling-strategy))
      (common-lisp:list
       (common-lisp:cons "ContentHandlingStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-response-key))
      (common-lisp:list
       (common-lisp:cons "IntegrationResponseKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-templates))
      (common-lisp:list
       (common-lisp:cons "ResponseTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-selection-expression))
      (common-lisp:list
       (common-lisp:cons "TemplateSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-response-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-integration-response-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-integration-response-request-api-id
                         :shape "__string" :location "uri" :location-name
                         "apiId")
                        (content-handling-strategy :initarg
                         :content-handling-strategy :initform common-lisp:nil
                         :type
                         (common-lisp:or content-handling-strategy
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-integration-response-request-content-handling-strategy
                         :shape "ContentHandlingStrategy" :location
                         common-lisp:nil :location-name
                         "contentHandlingStrategy")
                        (integration-id :initarg :integration-id :initform
                         (common-lisp:error ":integration-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-integration-response-request-integration-id
                         :shape "__string" :location "uri" :location-name
                         "integrationId")
                        (integration-response-id :initarg
                         :integration-response-id :initform
                         (common-lisp:error
                          ":integration-response-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-integration-response-request-integration-response-id
                         :shape "__string" :location "uri" :location-name
                         "integrationResponseId")
                        (integration-response-key :initarg
                         :integration-response-key :initform common-lisp:nil
                         :type (common-lisp:or selection-key common-lisp:null)
                         :accessor
                         struct-shape-update-integration-response-request-integration-response-key
                         :shape "SelectionKey" :location common-lisp:nil
                         :location-name "integrationResponseKey")
                        (response-parameters :initarg :response-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or integration-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-integration-response-request-response-parameters
                         :shape "IntegrationParameters" :location
                         common-lisp:nil :location-name "responseParameters")
                        (response-templates :initarg :response-templates
                         :initform common-lisp:nil :type
                         (common-lisp:or template-map common-lisp:null)
                         :accessor
                         struct-shape-update-integration-response-request-response-templates
                         :shape "TemplateMap" :location common-lisp:nil
                         :location-name "responseTemplates")
                        (template-selection-expression :initarg
                         :template-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-update-integration-response-request-template-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "templateSelectionExpression"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-integration-response-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-integration-response-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-integration-response-request
                    'make-update-integration-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-response-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-handling-strategy))
      (common-lisp:list
       (common-lisp:cons "ContentHandlingStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-response-key))
      (common-lisp:list
       (common-lisp:cons "IntegrationResponseKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-templates))
      (common-lisp:list
       (common-lisp:cons "ResponseTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-selection-expression))
      (common-lisp:list
       (common-lisp:cons "TemplateSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-integration-response-response common-lisp:nil
                       ((content-handling-strategy :initarg
                         :content-handling-strategy :initform common-lisp:nil
                         :type
                         (common-lisp:or content-handling-strategy
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-integration-response-response-content-handling-strategy
                         :shape "ContentHandlingStrategy" :location
                         common-lisp:nil :location-name
                         "contentHandlingStrategy")
                        (integration-response-id :initarg
                         :integration-response-id :initform common-lisp:nil
                         :type (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-update-integration-response-response-integration-response-id
                         :shape "Id" :location common-lisp:nil :location-name
                         "integrationResponseId")
                        (integration-response-key :initarg
                         :integration-response-key :initform common-lisp:nil
                         :type (common-lisp:or selection-key common-lisp:null)
                         :accessor
                         struct-shape-update-integration-response-response-integration-response-key
                         :shape "SelectionKey" :location common-lisp:nil
                         :location-name "integrationResponseKey")
                        (response-parameters :initarg :response-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or integration-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-integration-response-response-response-parameters
                         :shape "IntegrationParameters" :location
                         common-lisp:nil :location-name "responseParameters")
                        (response-templates :initarg :response-templates
                         :initform common-lisp:nil :type
                         (common-lisp:or template-map common-lisp:null)
                         :accessor
                         struct-shape-update-integration-response-response-response-templates
                         :shape "TemplateMap" :location common-lisp:nil
                         :location-name "responseTemplates")
                        (template-selection-expression :initarg
                         :template-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-update-integration-response-response-template-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "templateSelectionExpression"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-integration-response-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-integration-response-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-integration-response-response
                    'make-update-integration-response-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-response-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-response-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-handling-strategy))
      (common-lisp:list
       (common-lisp:cons "ContentHandlingStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-response-id))
      (common-lisp:list
       (common-lisp:cons "IntegrationResponseId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-response-key))
      (common-lisp:list
       (common-lisp:cons "IntegrationResponseKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-templates))
      (common-lisp:list
       (common-lisp:cons "ResponseTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-selection-expression))
      (common-lisp:list
       (common-lisp:cons "TemplateSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-response-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-model-input common-lisp:nil
                       ((content-type :initarg :content-type :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and256
                                         common-lisp:null)
                         :accessor struct-shape-update-model-input-content-type
                         :shape "StringWithLengthBetween1And256" :location
                         common-lisp:nil :location-name "contentType")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor struct-shape-update-model-input-description
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-update-model-input-name :shape
                         "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "name")
                        (schema :initarg :schema :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between0and32k
                                         common-lisp:null)
                         :accessor struct-shape-update-model-input-schema
                         :shape "StringWithLengthBetween0And32K" :location
                         common-lisp:nil :location-name "schema"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-model-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-model-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-model-input 'make-update-model-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-model-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-model-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:list
       (common-lisp:cons "ContentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schema))
      (common-lisp:list
       (common-lisp:cons "Schema"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-model-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-model-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-model-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId")
                        (content-type :initarg :content-type :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and256
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-model-request-content-type :shape
                         "StringWithLengthBetween1And256" :location
                         common-lisp:nil :location-name "contentType")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-model-request-description :shape
                         "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description")
                        (model-id :initarg :model-id :initform
                         (common-lisp:error ":model-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-model-request-model-id :shape
                         "__string" :location "uri" :location-name "modelId")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-update-model-request-name
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "name")
                        (schema :initarg :schema :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between0and32k
                                         common-lisp:null)
                         :accessor struct-shape-update-model-request-schema
                         :shape "StringWithLengthBetween0And32K" :location
                         common-lisp:nil :location-name "schema"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-model-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-model-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-model-request 'make-update-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-model-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:list
       (common-lisp:cons "ContentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schema))
      (common-lisp:list
       (common-lisp:cons "Schema"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-model-response common-lisp:nil
                       ((content-type :initarg :content-type :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and256
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-model-response-content-type :shape
                         "StringWithLengthBetween1And256" :location
                         common-lisp:nil :location-name "contentType")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-model-response-description :shape
                         "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description")
                        (model-id :initarg :model-id :initform common-lisp:nil
                         :type (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-update-model-response-model-id :shape
                         "Id" :location common-lisp:nil :location-name
                         "modelId")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-update-model-response-name
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "name")
                        (schema :initarg :schema :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between0and32k
                                         common-lisp:null)
                         :accessor struct-shape-update-model-response-schema
                         :shape "StringWithLengthBetween0And32K" :location
                         common-lisp:nil :location-name "schema"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-model-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-model-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-model-response 'make-update-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-model-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:list
       (common-lisp:cons "ContentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-id))
      (common-lisp:list
       (common-lisp:cons "ModelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schema))
      (common-lisp:list
       (common-lisp:cons "Schema"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-model-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-route-input common-lisp:nil
                       ((api-key-required :initarg :api-key-required :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-update-route-input-api-key-required
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "apiKeyRequired")
                        (authorization-scopes :initarg :authorization-scopes
                         :initform common-lisp:nil :type
                         (common-lisp:or authorization-scopes common-lisp:null)
                         :accessor
                         struct-shape-update-route-input-authorization-scopes
                         :shape "AuthorizationScopes" :location common-lisp:nil
                         :location-name "authorizationScopes")
                        (authorization-type :initarg :authorization-type
                         :initform common-lisp:nil :type
                         (common-lisp:or authorization-type common-lisp:null)
                         :accessor
                         struct-shape-update-route-input-authorization-type
                         :shape "AuthorizationType" :location common-lisp:nil
                         :location-name "authorizationType")
                        (authorizer-id :initarg :authorizer-id :initform
                         common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-update-route-input-authorizer-id :shape
                         "Id" :location common-lisp:nil :location-name
                         "authorizerId")
                        (model-selection-expression :initarg
                         :model-selection-expression :initform common-lisp:nil
                         :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-update-route-input-model-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "modelSelectionExpression")
                        (operation-name :initarg :operation-name :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-route-input-operation-name :shape
                         "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name "operationName")
                        (request-models :initarg :request-models :initform
                         common-lisp:nil :type
                         (common-lisp:or route-models common-lisp:null)
                         :accessor
                         struct-shape-update-route-input-request-models :shape
                         "RouteModels" :location common-lisp:nil :location-name
                         "requestModels")
                        (request-parameters :initarg :request-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or route-parameters common-lisp:null)
                         :accessor
                         struct-shape-update-route-input-request-parameters
                         :shape "RouteParameters" :location common-lisp:nil
                         :location-name "requestParameters")
                        (route-key :initarg :route-key :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-key common-lisp:null)
                         :accessor struct-shape-update-route-input-route-key
                         :shape "SelectionKey" :location common-lisp:nil
                         :location-name "routeKey")
                        (route-response-selection-expression :initarg
                         :route-response-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-update-route-input-route-response-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "routeResponseSelectionExpression")
                        (target :initarg :target :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-update-route-input-target
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "target"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-route-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-route-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-route-input 'make-update-route-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-route-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-route-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-required))
      (common-lisp:list
       (common-lisp:cons "ApiKeyRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorization-scopes))
      (common-lisp:list
       (common-lisp:cons "AuthorizationScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization-type))
      (common-lisp:list
       (common-lisp:cons "AuthorizationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-id))
      (common-lisp:list
       (common-lisp:cons "AuthorizerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ModelSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-name))
      (common-lisp:list
       (common-lisp:cons "OperationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-models))
      (common-lisp:list
       (common-lisp:cons "RequestModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "RequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-key))
      (common-lisp:list
       (common-lisp:cons "RouteKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'route-response-selection-expression))
      (common-lisp:list
       (common-lisp:cons "RouteResponseSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target))
      (common-lisp:list
       (common-lisp:cons "Target"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-route-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-route-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-route-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId")
                        (api-key-required :initarg :api-key-required :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-update-route-request-api-key-required
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "apiKeyRequired")
                        (authorization-scopes :initarg :authorization-scopes
                         :initform common-lisp:nil :type
                         (common-lisp:or authorization-scopes common-lisp:null)
                         :accessor
                         struct-shape-update-route-request-authorization-scopes
                         :shape "AuthorizationScopes" :location common-lisp:nil
                         :location-name "authorizationScopes")
                        (authorization-type :initarg :authorization-type
                         :initform common-lisp:nil :type
                         (common-lisp:or authorization-type common-lisp:null)
                         :accessor
                         struct-shape-update-route-request-authorization-type
                         :shape "AuthorizationType" :location common-lisp:nil
                         :location-name "authorizationType")
                        (authorizer-id :initarg :authorizer-id :initform
                         common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-update-route-request-authorizer-id :shape
                         "Id" :location common-lisp:nil :location-name
                         "authorizerId")
                        (model-selection-expression :initarg
                         :model-selection-expression :initform common-lisp:nil
                         :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-update-route-request-model-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "modelSelectionExpression")
                        (operation-name :initarg :operation-name :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-route-request-operation-name
                         :shape "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name "operationName")
                        (request-models :initarg :request-models :initform
                         common-lisp:nil :type
                         (common-lisp:or route-models common-lisp:null)
                         :accessor
                         struct-shape-update-route-request-request-models
                         :shape "RouteModels" :location common-lisp:nil
                         :location-name "requestModels")
                        (request-parameters :initarg :request-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or route-parameters common-lisp:null)
                         :accessor
                         struct-shape-update-route-request-request-parameters
                         :shape "RouteParameters" :location common-lisp:nil
                         :location-name "requestParameters")
                        (route-id :initarg :route-id :initform
                         (common-lisp:error ":route-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-route-request-route-id :shape
                         "__string" :location "uri" :location-name "routeId")
                        (route-key :initarg :route-key :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-key common-lisp:null)
                         :accessor struct-shape-update-route-request-route-key
                         :shape "SelectionKey" :location common-lisp:nil
                         :location-name "routeKey")
                        (route-response-selection-expression :initarg
                         :route-response-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-update-route-request-route-response-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "routeResponseSelectionExpression")
                        (target :initarg :target :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-update-route-request-target
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "target"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-route-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-route-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-route-request 'make-update-route-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-route-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-route-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-required))
      (common-lisp:list
       (common-lisp:cons "ApiKeyRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorization-scopes))
      (common-lisp:list
       (common-lisp:cons "AuthorizationScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization-type))
      (common-lisp:list
       (common-lisp:cons "AuthorizationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-id))
      (common-lisp:list
       (common-lisp:cons "AuthorizerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ModelSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-name))
      (common-lisp:list
       (common-lisp:cons "OperationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-models))
      (common-lisp:list
       (common-lisp:cons "RequestModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "RequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-key))
      (common-lisp:list
       (common-lisp:cons "RouteKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'route-response-selection-expression))
      (common-lisp:list
       (common-lisp:cons "RouteResponseSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target))
      (common-lisp:list
       (common-lisp:cons "Target"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-route-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-route-result common-lisp:nil
                       ((api-gateway-managed :initarg :api-gateway-managed
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-update-route-result-api-gateway-managed
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "apiGatewayManaged")
                        (api-key-required :initarg :api-key-required :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-update-route-result-api-key-required
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "apiKeyRequired")
                        (authorization-scopes :initarg :authorization-scopes
                         :initform common-lisp:nil :type
                         (common-lisp:or authorization-scopes common-lisp:null)
                         :accessor
                         struct-shape-update-route-result-authorization-scopes
                         :shape "AuthorizationScopes" :location common-lisp:nil
                         :location-name "authorizationScopes")
                        (authorization-type :initarg :authorization-type
                         :initform common-lisp:nil :type
                         (common-lisp:or authorization-type common-lisp:null)
                         :accessor
                         struct-shape-update-route-result-authorization-type
                         :shape "AuthorizationType" :location common-lisp:nil
                         :location-name "authorizationType")
                        (authorizer-id :initarg :authorizer-id :initform
                         common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-update-route-result-authorizer-id :shape
                         "Id" :location common-lisp:nil :location-name
                         "authorizerId")
                        (model-selection-expression :initarg
                         :model-selection-expression :initform common-lisp:nil
                         :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-update-route-result-model-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "modelSelectionExpression")
                        (operation-name :initarg :operation-name :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and64
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-route-result-operation-name :shape
                         "StringWithLengthBetween1And64" :location
                         common-lisp:nil :location-name "operationName")
                        (request-models :initarg :request-models :initform
                         common-lisp:nil :type
                         (common-lisp:or route-models common-lisp:null)
                         :accessor
                         struct-shape-update-route-result-request-models :shape
                         "RouteModels" :location common-lisp:nil :location-name
                         "requestModels")
                        (request-parameters :initarg :request-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or route-parameters common-lisp:null)
                         :accessor
                         struct-shape-update-route-result-request-parameters
                         :shape "RouteParameters" :location common-lisp:nil
                         :location-name "requestParameters")
                        (route-id :initarg :route-id :initform common-lisp:nil
                         :type (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-update-route-result-route-id :shape "Id"
                         :location common-lisp:nil :location-name "routeId")
                        (route-key :initarg :route-key :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-key common-lisp:null)
                         :accessor struct-shape-update-route-result-route-key
                         :shape "SelectionKey" :location common-lisp:nil
                         :location-name "routeKey")
                        (route-response-selection-expression :initarg
                         :route-response-selection-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-update-route-result-route-response-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "routeResponseSelectionExpression")
                        (target :initarg :target :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-update-route-result-target
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "target"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-route-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-route-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-route-result 'make-update-route-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-route-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-route-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-managed))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-required))
      (common-lisp:list
       (common-lisp:cons "ApiKeyRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorization-scopes))
      (common-lisp:list
       (common-lisp:cons "AuthorizationScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization-type))
      (common-lisp:list
       (common-lisp:cons "AuthorizationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-id))
      (common-lisp:list
       (common-lisp:cons "AuthorizerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ModelSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-name))
      (common-lisp:list
       (common-lisp:cons "OperationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-models))
      (common-lisp:list
       (common-lisp:cons "RequestModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "RequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-id))
      (common-lisp:list
       (common-lisp:cons "RouteId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-key))
      (common-lisp:list
       (common-lisp:cons "RouteKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'route-response-selection-expression))
      (common-lisp:list
       (common-lisp:cons "RouteResponseSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target))
      (common-lisp:list
       (common-lisp:cons "Target"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-route-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-route-response-input common-lisp:nil
                       ((model-selection-expression :initarg
                         :model-selection-expression :initform common-lisp:nil
                         :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-update-route-response-input-model-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "modelSelectionExpression")
                        (response-models :initarg :response-models :initform
                         common-lisp:nil :type
                         (common-lisp:or route-models common-lisp:null)
                         :accessor
                         struct-shape-update-route-response-input-response-models
                         :shape "RouteModels" :location common-lisp:nil
                         :location-name "responseModels")
                        (response-parameters :initarg :response-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or route-parameters common-lisp:null)
                         :accessor
                         struct-shape-update-route-response-input-response-parameters
                         :shape "RouteParameters" :location common-lisp:nil
                         :location-name "responseParameters")
                        (route-response-key :initarg :route-response-key
                         :initform common-lisp:nil :type
                         (common-lisp:or selection-key common-lisp:null)
                         :accessor
                         struct-shape-update-route-response-input-route-response-key
                         :shape "SelectionKey" :location common-lisp:nil
                         :location-name "routeResponseKey"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-route-response-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-route-response-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-route-response-input
                    'make-update-route-response-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-route-response-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-route-response-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ModelSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-models))
      (common-lisp:list
       (common-lisp:cons "ResponseModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-response-key))
      (common-lisp:list
       (common-lisp:cons "RouteResponseKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-route-response-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-route-response-request common-lisp:nil
                       ((api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-route-response-request-api-id
                         :shape "__string" :location "uri" :location-name
                         "apiId")
                        (model-selection-expression :initarg
                         :model-selection-expression :initform common-lisp:nil
                         :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-update-route-response-request-model-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "modelSelectionExpression")
                        (response-models :initarg :response-models :initform
                         common-lisp:nil :type
                         (common-lisp:or route-models common-lisp:null)
                         :accessor
                         struct-shape-update-route-response-request-response-models
                         :shape "RouteModels" :location common-lisp:nil
                         :location-name "responseModels")
                        (response-parameters :initarg :response-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or route-parameters common-lisp:null)
                         :accessor
                         struct-shape-update-route-response-request-response-parameters
                         :shape "RouteParameters" :location common-lisp:nil
                         :location-name "responseParameters")
                        (route-id :initarg :route-id :initform
                         (common-lisp:error ":route-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-route-response-request-route-id
                         :shape "__string" :location "uri" :location-name
                         "routeId")
                        (route-response-id :initarg :route-response-id
                         :initform
                         (common-lisp:error ":route-response-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-route-response-request-route-response-id
                         :shape "__string" :location "uri" :location-name
                         "routeResponseId")
                        (route-response-key :initarg :route-response-key
                         :initform common-lisp:nil :type
                         (common-lisp:or selection-key common-lisp:null)
                         :accessor
                         struct-shape-update-route-response-request-route-response-key
                         :shape "SelectionKey" :location common-lisp:nil
                         :location-name "routeResponseKey"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-route-response-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-route-response-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-route-response-request
                    'make-update-route-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-route-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-route-response-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ModelSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-models))
      (common-lisp:list
       (common-lisp:cons "ResponseModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-response-key))
      (common-lisp:list
       (common-lisp:cons "RouteResponseKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-route-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-route-response-response common-lisp:nil
                       ((model-selection-expression :initarg
                         :model-selection-expression :initform common-lisp:nil
                         :type
                         (common-lisp:or selection-expression common-lisp:null)
                         :accessor
                         struct-shape-update-route-response-response-model-selection-expression
                         :shape "SelectionExpression" :location common-lisp:nil
                         :location-name "modelSelectionExpression")
                        (response-models :initarg :response-models :initform
                         common-lisp:nil :type
                         (common-lisp:or route-models common-lisp:null)
                         :accessor
                         struct-shape-update-route-response-response-response-models
                         :shape "RouteModels" :location common-lisp:nil
                         :location-name "responseModels")
                        (response-parameters :initarg :response-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or route-parameters common-lisp:null)
                         :accessor
                         struct-shape-update-route-response-response-response-parameters
                         :shape "RouteParameters" :location common-lisp:nil
                         :location-name "responseParameters")
                        (route-response-id :initarg :route-response-id
                         :initform common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-update-route-response-response-route-response-id
                         :shape "Id" :location common-lisp:nil :location-name
                         "routeResponseId")
                        (route-response-key :initarg :route-response-key
                         :initform common-lisp:nil :type
                         (common-lisp:or selection-key common-lisp:null)
                         :accessor
                         struct-shape-update-route-response-response-route-response-key
                         :shape "SelectionKey" :location common-lisp:nil
                         :location-name "routeResponseKey"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-route-response-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-route-response-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-route-response-response
                    'make-update-route-response-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-route-response-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-route-response-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ModelSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-models))
      (common-lisp:list
       (common-lisp:cons "ResponseModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-response-id))
      (common-lisp:list
       (common-lisp:cons "RouteResponseId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-response-key))
      (common-lisp:list
       (common-lisp:cons "RouteResponseKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-route-response-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-stage-input common-lisp:nil
                       ((access-log-settings :initarg :access-log-settings
                         :initform common-lisp:nil :type
                         (common-lisp:or access-log-settings common-lisp:null)
                         :accessor
                         struct-shape-update-stage-input-access-log-settings
                         :shape "AccessLogSettings" :location common-lisp:nil
                         :location-name "accessLogSettings")
                        (auto-deploy :initarg :auto-deploy :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-update-stage-input-auto-deploy
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "autoDeploy")
                        (client-certificate-id :initarg :client-certificate-id
                         :initform common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-update-stage-input-client-certificate-id
                         :shape "Id" :location common-lisp:nil :location-name
                         "clientCertificateId")
                        (default-route-settings :initarg
                         :default-route-settings :initform common-lisp:nil
                         :type (common-lisp:or route-settings common-lisp:null)
                         :accessor
                         struct-shape-update-stage-input-default-route-settings
                         :shape "RouteSettings" :location common-lisp:nil
                         :location-name "defaultRouteSettings")
                        (deployment-id :initarg :deployment-id :initform
                         common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-update-stage-input-deployment-id :shape
                         "Id" :location common-lisp:nil :location-name
                         "deploymentId")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor struct-shape-update-stage-input-description
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description")
                        (route-settings :initarg :route-settings :initform
                         common-lisp:nil :type
                         (common-lisp:or route-settings-map common-lisp:null)
                         :accessor
                         struct-shape-update-stage-input-route-settings :shape
                         "RouteSettingsMap" :location common-lisp:nil
                         :location-name "routeSettings")
                        (stage-variables :initarg :stage-variables :initform
                         common-lisp:nil :type
                         (common-lisp:or stage-variables-map common-lisp:null)
                         :accessor
                         struct-shape-update-stage-input-stage-variables :shape
                         "StageVariablesMap" :location common-lisp:nil
                         :location-name "stageVariables"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-stage-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-stage-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-stage-input 'make-update-stage-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-stage-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-stage-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-log-settings))
      (common-lisp:list
       (common-lisp:cons "AccessLogSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-deploy))
      (common-lisp:list
       (common-lisp:cons "AutoDeploy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-certificate-id))
      (common-lisp:list
       (common-lisp:cons "ClientCertificateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-route-settings))
      (common-lisp:list
       (common-lisp:cons "DefaultRouteSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "DeploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-settings))
      (common-lisp:list
       (common-lisp:cons "RouteSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-variables))
      (common-lisp:list
       (common-lisp:cons "StageVariables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-stage-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-stage-request common-lisp:nil
                       ((access-log-settings :initarg :access-log-settings
                         :initform common-lisp:nil :type
                         (common-lisp:or access-log-settings common-lisp:null)
                         :accessor
                         struct-shape-update-stage-request-access-log-settings
                         :shape "AccessLogSettings" :location common-lisp:nil
                         :location-name "accessLogSettings")
                        (api-id :initarg :api-id :initform
                         (common-lisp:error ":api-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-stage-request-api-id :shape
                         "__string" :location "uri" :location-name "apiId")
                        (auto-deploy :initarg :auto-deploy :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-update-stage-request-auto-deploy :shape
                         "__boolean" :location common-lisp:nil :location-name
                         "autoDeploy")
                        (client-certificate-id :initarg :client-certificate-id
                         :initform common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-update-stage-request-client-certificate-id
                         :shape "Id" :location common-lisp:nil :location-name
                         "clientCertificateId")
                        (default-route-settings :initarg
                         :default-route-settings :initform common-lisp:nil
                         :type (common-lisp:or route-settings common-lisp:null)
                         :accessor
                         struct-shape-update-stage-request-default-route-settings
                         :shape "RouteSettings" :location common-lisp:nil
                         :location-name "defaultRouteSettings")
                        (deployment-id :initarg :deployment-id :initform
                         common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-update-stage-request-deployment-id :shape
                         "Id" :location common-lisp:nil :location-name
                         "deploymentId")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-stage-request-description :shape
                         "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description")
                        (route-settings :initarg :route-settings :initform
                         common-lisp:nil :type
                         (common-lisp:or route-settings-map common-lisp:null)
                         :accessor
                         struct-shape-update-stage-request-route-settings
                         :shape "RouteSettingsMap" :location common-lisp:nil
                         :location-name "routeSettings")
                        (stage-name :initarg :stage-name :initform
                         (common-lisp:error ":stage-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-stage-request-stage-name :shape
                         "__string" :location "uri" :location-name "stageName")
                        (stage-variables :initarg :stage-variables :initform
                         common-lisp:nil :type
                         (common-lisp:or stage-variables-map common-lisp:null)
                         :accessor
                         struct-shape-update-stage-request-stage-variables
                         :shape "StageVariablesMap" :location common-lisp:nil
                         :location-name "stageVariables"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-stage-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-stage-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-stage-request 'make-update-stage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-stage-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-log-settings))
      (common-lisp:list
       (common-lisp:cons "AccessLogSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-deploy))
      (common-lisp:list
       (common-lisp:cons "AutoDeploy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-certificate-id))
      (common-lisp:list
       (common-lisp:cons "ClientCertificateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-route-settings))
      (common-lisp:list
       (common-lisp:cons "DefaultRouteSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "DeploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-settings))
      (common-lisp:list
       (common-lisp:cons "RouteSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-variables))
      (common-lisp:list
       (common-lisp:cons "StageVariables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-stage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-stage-response common-lisp:nil
                       ((access-log-settings :initarg :access-log-settings
                         :initform common-lisp:nil :type
                         (common-lisp:or access-log-settings common-lisp:null)
                         :accessor
                         struct-shape-update-stage-response-access-log-settings
                         :shape "AccessLogSettings" :location common-lisp:nil
                         :location-name "accessLogSettings")
                        (api-gateway-managed :initarg :api-gateway-managed
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-update-stage-response-api-gateway-managed
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "apiGatewayManaged")
                        (auto-deploy :initarg :auto-deploy :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-update-stage-response-auto-deploy :shape
                         "__boolean" :location common-lisp:nil :location-name
                         "autoDeploy")
                        (client-certificate-id :initarg :client-certificate-id
                         :initform common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-update-stage-response-client-certificate-id
                         :shape "Id" :location common-lisp:nil :location-name
                         "clientCertificateId")
                        (created-date :initarg :created-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-update-stage-response-created-date :shape
                         "__timestampIso8601" :location common-lisp:nil
                         :location-name "createdDate")
                        (default-route-settings :initarg
                         :default-route-settings :initform common-lisp:nil
                         :type (common-lisp:or route-settings common-lisp:null)
                         :accessor
                         struct-shape-update-stage-response-default-route-settings
                         :shape "RouteSettings" :location common-lisp:nil
                         :location-name "defaultRouteSettings")
                        (deployment-id :initarg :deployment-id :initform
                         common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-update-stage-response-deployment-id
                         :shape "Id" :location common-lisp:nil :location-name
                         "deploymentId")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-stage-response-description :shape
                         "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "description")
                        (last-deployment-status-message :initarg
                         :last-deployment-status-message :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-stage-response-last-deployment-status-message
                         :shape "__string" :location common-lisp:nil
                         :location-name "lastDeploymentStatusMessage")
                        (last-updated-date :initarg :last-updated-date
                         :initform common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-update-stage-response-last-updated-date
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "lastUpdatedDate")
                        (route-settings :initarg :route-settings :initform
                         common-lisp:nil :type
                         (common-lisp:or route-settings-map common-lisp:null)
                         :accessor
                         struct-shape-update-stage-response-route-settings
                         :shape "RouteSettingsMap" :location common-lisp:nil
                         :location-name "routeSettings")
                        (stage-name :initarg :stage-name :initform
                         common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-stage-response-stage-name :shape
                         "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "stageName")
                        (stage-variables :initarg :stage-variables :initform
                         common-lisp:nil :type
                         (common-lisp:or stage-variables-map common-lisp:null)
                         :accessor
                         struct-shape-update-stage-response-stage-variables
                         :shape "StageVariablesMap" :location common-lisp:nil
                         :location-name "stageVariables")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-update-stage-response-tags :shape "Tags"
                         :location common-lisp:nil :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-stage-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-stage-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-stage-response 'make-update-stage-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-stage-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-stage-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-log-settings))
      (common-lisp:list
       (common-lisp:cons "AccessLogSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-managed))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-deploy))
      (common-lisp:list
       (common-lisp:cons "AutoDeploy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-certificate-id))
      (common-lisp:list
       (common-lisp:cons "ClientCertificateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-route-settings))
      (common-lisp:list
       (common-lisp:cons "DefaultRouteSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "DeploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-deployment-status-message))
      (common-lisp:list
       (common-lisp:cons "LastDeploymentStatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-date))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-settings))
      (common-lisp:list
       (common-lisp:cons "RouteSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-name))
      (common-lisp:list
       (common-lisp:cons "StageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-variables))
      (common-lisp:list
       (common-lisp:cons "StageVariables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-stage-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-vpc-link-input common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-update-vpc-link-input-name
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "name"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-vpc-link-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-vpc-link-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-vpc-link-input 'make-update-vpc-link-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-link-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-link-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-link-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-vpc-link-request common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-update-vpc-link-request-name
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "name")
                        (vpc-link-id :initarg :vpc-link-id :initform
                         (common-lisp:error ":vpc-link-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-vpc-link-request-vpc-link-id
                         :shape "__string" :location "uri" :location-name
                         "vpcLinkId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-vpc-link-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-vpc-link-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-vpc-link-request 'make-update-vpc-link-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-link-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-link-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-link-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-vpc-link-response common-lisp:nil
                       ((created-date :initarg :created-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-update-vpc-link-response-created-date
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "createdDate")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-update-vpc-link-response-name
                         :shape "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "name")
                        (security-group-ids :initarg :security-group-ids
                         :initform common-lisp:nil :type
                         (common-lisp:or security-group-id-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-vpc-link-response-security-group-ids
                         :shape "SecurityGroupIdList" :location common-lisp:nil
                         :location-name "securityGroupIds")
                        (subnet-ids :initarg :subnet-ids :initform
                         common-lisp:nil :type
                         (common-lisp:or subnet-id-list common-lisp:null)
                         :accessor
                         struct-shape-update-vpc-link-response-subnet-ids
                         :shape "SubnetIdList" :location common-lisp:nil
                         :location-name "subnetIds")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-update-vpc-link-response-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         "tags")
                        (vpc-link-id :initarg :vpc-link-id :initform
                         common-lisp:nil :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-update-vpc-link-response-vpc-link-id
                         :shape "Id" :location common-lisp:nil :location-name
                         "vpcLinkId")
                        (vpc-link-status :initarg :vpc-link-status :initform
                         common-lisp:nil :type
                         (common-lisp:or vpc-link-status common-lisp:null)
                         :accessor
                         struct-shape-update-vpc-link-response-vpc-link-status
                         :shape "VpcLinkStatus" :location common-lisp:nil
                         :location-name "vpcLinkStatus")
                        (vpc-link-status-message :initarg
                         :vpc-link-status-message :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-vpc-link-response-vpc-link-status-message
                         :shape "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "vpcLinkStatusMessage")
                        (vpc-link-version :initarg :vpc-link-version :initform
                         common-lisp:nil :type
                         (common-lisp:or vpc-link-version common-lisp:null)
                         :accessor
                         struct-shape-update-vpc-link-response-vpc-link-version
                         :shape "VpcLinkVersion" :location common-lisp:nil
                         :location-name "vpcLinkVersion"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-vpc-link-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-vpc-link-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-vpc-link-response 'make-update-vpc-link-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-link-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-link-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-ids))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-ids))
      (common-lisp:list
       (common-lisp:cons "SubnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-link-id))
      (common-lisp:list
       (common-lisp:cons "VpcLinkId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-link-status))
      (common-lisp:list
       (common-lisp:cons "VpcLinkStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vpc-link-status-message))
      (common-lisp:list
       (common-lisp:cons "VpcLinkStatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-link-version))
      (common-lisp:list
       (common-lisp:cons "VpcLinkVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-link-response))
   common-lisp:nil))
(common-lisp:deftype uri-with-length-between1and2048 () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass vpc-link common-lisp:nil
                       ((created-date :initarg :created-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor struct-shape-vpc-link-created-date :shape
                         "__timestampIso8601" :location common-lisp:nil
                         :location-name "createdDate")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or string-with-length-between1and128
                                         common-lisp:null)
                         :accessor struct-shape-vpc-link-name :shape
                         "StringWithLengthBetween1And128" :location
                         common-lisp:nil :location-name "name")
                        (security-group-ids :initarg :security-group-ids
                         :initform
                         (common-lisp:error ":security-group-ids is required")
                         :type
                         (common-lisp:or security-group-id-list
                                         common-lisp:null)
                         :accessor struct-shape-vpc-link-security-group-ids
                         :shape "SecurityGroupIdList" :location common-lisp:nil
                         :location-name "securityGroupIds")
                        (subnet-ids :initarg :subnet-ids :initform
                         (common-lisp:error ":subnet-ids is required") :type
                         (common-lisp:or subnet-id-list common-lisp:null)
                         :accessor struct-shape-vpc-link-subnet-ids :shape
                         "SubnetIdList" :location common-lisp:nil
                         :location-name "subnetIds")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-vpc-link-tags :shape "Tags" :location
                         common-lisp:nil :location-name "tags")
                        (vpc-link-id :initarg :vpc-link-id :initform
                         (common-lisp:error ":vpc-link-id is required") :type
                         (common-lisp:or id common-lisp:null) :accessor
                         struct-shape-vpc-link-vpc-link-id :shape "Id"
                         :location common-lisp:nil :location-name "vpcLinkId")
                        (vpc-link-status :initarg :vpc-link-status :initform
                         common-lisp:nil :type
                         (common-lisp:or vpc-link-status common-lisp:null)
                         :accessor struct-shape-vpc-link-vpc-link-status :shape
                         "VpcLinkStatus" :location common-lisp:nil
                         :location-name "vpcLinkStatus")
                        (vpc-link-status-message :initarg
                         :vpc-link-status-message :initform common-lisp:nil
                         :type
                         (common-lisp:or string-with-length-between0and1024
                                         common-lisp:null)
                         :accessor
                         struct-shape-vpc-link-vpc-link-status-message :shape
                         "StringWithLengthBetween0And1024" :location
                         common-lisp:nil :location-name "vpcLinkStatusMessage")
                        (vpc-link-version :initarg :vpc-link-version :initform
                         common-lisp:nil :type
                         (common-lisp:or vpc-link-version common-lisp:null)
                         :accessor struct-shape-vpc-link-vpc-link-version
                         :shape "VpcLinkVersion" :location common-lisp:nil
                         :location-name "vpcLinkVersion"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-vpc-link
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'vpc-link
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'vpc-link 'make-vpc-link))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vpc-link))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vpc-link))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-ids))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-ids))
      (common-lisp:list
       (common-lisp:cons "SubnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-link-id))
      (common-lisp:list
       (common-lisp:cons "VpcLinkId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-link-status))
      (common-lisp:list
       (common-lisp:cons "VpcLinkStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vpc-link-status-message))
      (common-lisp:list
       (common-lisp:cons "VpcLinkStatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-link-version))
      (common-lisp:list
       (common-lisp:cons "VpcLinkVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vpc-link))
   common-lisp:nil))
(common-lisp:deftype vpc-link-status () 'common-lisp:string)
(common-lisp:deftype vpc-link-version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass vpc-links common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or |__listOfVpcLink| common-lisp:null)
                         :accessor struct-shape-vpc-links-items :shape
                         "__listOfVpcLink" :location common-lisp:nil
                         :location-name "items")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-vpc-links-next-token :shape "NextToken"
                         :location common-lisp:nil :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-vpc-links
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'vpc-links
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'vpc-links 'make-vpc-links))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vpc-links))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vpc-links))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vpc-links))
   common-lisp:nil))
(common-lisp:deftype |__boolean| () 'common-lisp:boolean)
(common-lisp:deftype |__double| () 'common-lisp:double-float)
(common-lisp:deftype |__integer| () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype |__listOfApi| () '(trivial-types:proper-list api))
 (common-lisp:defun make-__listofapi
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list api))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfApiMapping| ()
   '(trivial-types:proper-list api-mapping))
 (common-lisp:defun make-__listofapimapping
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list api-mapping))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfAuthorizer| ()
   '(trivial-types:proper-list authorizer))
 (common-lisp:defun make-__listofauthorizer
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list authorizer))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfDeployment| ()
   '(trivial-types:proper-list deployment))
 (common-lisp:defun make-__listofdeployment
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list deployment))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfDomainName| ()
   '(trivial-types:proper-list domain-name))
 (common-lisp:defun make-__listofdomainname
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list domain-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfIntegration| ()
   '(trivial-types:proper-list integration))
 (common-lisp:defun make-__listofintegration
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list integration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfIntegrationResponse| ()
   '(trivial-types:proper-list integration-response))
 (common-lisp:defun make-__listofintegrationresponse
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list integration-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfModel| () '(trivial-types:proper-list model))
 (common-lisp:defun make-__listofmodel
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list model))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfRoute| () '(trivial-types:proper-list route))
 (common-lisp:defun make-__listofroute
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list route))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfRouteResponse| ()
   '(trivial-types:proper-list route-response))
 (common-lisp:defun make-__listofrouteresponse
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list route-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfStage| () '(trivial-types:proper-list stage))
 (common-lisp:defun make-__listofstage
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list stage))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfVpcLink| ()
   '(trivial-types:proper-list vpc-link))
 (common-lisp:defun make-__listofvpclink
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list vpc-link))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOf__string| ()
   '(trivial-types:proper-list |__string|))
 (common-lisp:defun make-__listof__string
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__string|))
   aws-sdk/generator/shape::members))
(common-lisp:deftype |__long| () 'common-lisp:integer)
(common-lisp:deftype |__string| () 'common-lisp:string)
(common-lisp:deftype |__timestampIso8601| () 'common-lisp:string)
(common-lisp:deftype |__timestampUnix| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun create-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-key-selection-expression
                     cors-configuration credentials-arn description
                     disable-schema-validation disable-execute-api-endpoint
                     name protocol-type route-key route-selection-expression
                     tags target version)
   (common-lisp:declare
    (common-lisp:ignorable api-key-selection-expression cors-configuration
     credentials-arn description disable-schema-validation
     disable-execute-api-endpoint name protocol-type route-key
     route-selection-expression tags target version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/v2/apis"
                                                        "CreateApi"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-api))
(common-lisp:progn
 (common-lisp:defun create-api-mapping
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id api-mapping-key domain-name stage)
   (common-lisp:declare
    (common-lisp:ignorable api-id api-mapping-key domain-name stage))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-api-mapping-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/domainnames/~A/apimappings"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))))
                                                        "CreateApiMapping"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-api-mapping))
(common-lisp:progn
 (common-lisp:defun create-authorizer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id authorizer-credentials-arn
                     authorizer-result-ttl-in-seconds authorizer-type
                     authorizer-uri identity-source
                     identity-validation-expression jwt-configuration name
                     authorizer-payload-format-version enable-simple-responses)
   (common-lisp:declare
    (common-lisp:ignorable api-id authorizer-credentials-arn
     authorizer-result-ttl-in-seconds authorizer-type authorizer-uri
     identity-source identity-validation-expression jwt-configuration name
     authorizer-payload-format-version enable-simple-responses))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-authorizer-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/authorizers"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))))
                                                        "CreateAuthorizer"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-authorizer))
(common-lisp:progn
 (common-lisp:defun create-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id description stage-name)
   (common-lisp:declare (common-lisp:ignorable api-id description stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-deployment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/deployments"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))))
                                                        "CreateDeployment"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-deployment))
(common-lisp:progn
 (common-lisp:defun create-domain-name
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name domain-name-configurations
                     mutual-tls-authentication tags)
   (common-lisp:declare
    (common-lisp:ignorable domain-name domain-name-configurations
     mutual-tls-authentication tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-domain-name-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/v2/domainnames"
                                                        "CreateDomainName"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-domain-name))
(common-lisp:progn
 (common-lisp:defun create-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id connection-id connection-type
                     content-handling-strategy credentials-arn description
                     integration-method integration-subtype integration-type
                     integration-uri passthrough-behavior
                     payload-format-version request-parameters
                     response-parameters request-templates
                     template-selection-expression timeout-in-millis
                     tls-config)
   (common-lisp:declare
    (common-lisp:ignorable api-id connection-id connection-type
     content-handling-strategy credentials-arn description integration-method
     integration-subtype integration-type integration-uri passthrough-behavior
     payload-format-version request-parameters response-parameters
     request-templates template-selection-expression timeout-in-millis
     tls-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/integrations"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))))
                                                        "CreateIntegration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-integration))
(common-lisp:progn
 (common-lisp:defun create-integration-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id content-handling-strategy
                     integration-id integration-response-key
                     response-parameters response-templates
                     template-selection-expression)
   (common-lisp:declare
    (common-lisp:ignorable api-id content-handling-strategy integration-id
     integration-response-key response-parameters response-templates
     template-selection-expression))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-integration-response-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/integrations/~A/integrationresponses"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'integration-id))))
                                                        "CreateIntegrationResponse"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-integration-response))
(common-lisp:progn
 (common-lisp:defun create-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id content-type description name
                     schema)
   (common-lisp:declare
    (common-lisp:ignorable api-id content-type description name schema))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/models"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))))
                                                        "CreateModel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-model))
(common-lisp:progn
 (common-lisp:defun create-route
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id api-key-required
                     authorization-scopes authorization-type authorizer-id
                     model-selection-expression operation-name request-models
                     request-parameters route-key
                     route-response-selection-expression target)
   (common-lisp:declare
    (common-lisp:ignorable api-id api-key-required authorization-scopes
     authorization-type authorizer-id model-selection-expression operation-name
     request-models request-parameters route-key
     route-response-selection-expression target))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-route-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/routes"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))))
                                                        "CreateRoute"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-route))
(common-lisp:progn
 (common-lisp:defun create-route-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id model-selection-expression
                     response-models response-parameters route-id
                     route-response-key)
   (common-lisp:declare
    (common-lisp:ignorable api-id model-selection-expression response-models
     response-parameters route-id route-response-key))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-route-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/routes/~A/routeresponses"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'route-id))))
                                                        "CreateRouteResponse"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-route-response))
(common-lisp:progn
 (common-lisp:defun create-stage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key access-log-settings api-id auto-deploy
                     client-certificate-id default-route-settings deployment-id
                     description route-settings stage-name stage-variables
                     tags)
   (common-lisp:declare
    (common-lisp:ignorable access-log-settings api-id auto-deploy
     client-certificate-id default-route-settings deployment-id description
     route-settings stage-name stage-variables tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-stage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/stages"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))))
                                                        "CreateStage"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-stage))
(common-lisp:progn
 (common-lisp:defun create-vpc-link
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name security-group-ids subnet-ids tags)
   (common-lisp:declare
    (common-lisp:ignorable name security-group-ids subnet-ids tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-vpc-link-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/v2/vpclinks"
                                                        "CreateVpcLink"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-vpc-link))
(common-lisp:progn
 (common-lisp:defun delete-access-log-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id stage-name)
   (common-lisp:declare (common-lisp:ignorable api-id stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-access-log-settings-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/stages/~A/accesslogsettings"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "DeleteAccessLogSettings"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-access-log-settings))
(common-lisp:progn
 (common-lisp:defun delete-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id)
   (common-lisp:declare (common-lisp:ignorable api-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))))
                                                        "DeleteApi"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-api))
(common-lisp:progn
 (common-lisp:defun delete-api-mapping
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-mapping-id domain-name)
   (common-lisp:declare (common-lisp:ignorable api-mapping-id domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-api-mapping-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/domainnames/~A/apimappings/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-mapping-id))))
                                                        "DeleteApiMapping"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-api-mapping))
(common-lisp:progn
 (common-lisp:defun delete-authorizer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id authorizer-id)
   (common-lisp:declare (common-lisp:ignorable api-id authorizer-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-authorizer-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/authorizers/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'authorizer-id))))
                                                        "DeleteAuthorizer"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-authorizer))
(common-lisp:progn
 (common-lisp:defun delete-cors-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id)
   (common-lisp:declare (common-lisp:ignorable api-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-cors-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/cors"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))))
                                                        "DeleteCorsConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-cors-configuration))
(common-lisp:progn
 (common-lisp:defun delete-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id deployment-id)
   (common-lisp:declare (common-lisp:ignorable api-id deployment-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-deployment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/deployments/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'deployment-id))))
                                                        "DeleteDeployment"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-deployment))
(common-lisp:progn
 (common-lisp:defun delete-domain-name
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-domain-name-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/domainnames/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))))
                                                        "DeleteDomainName"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-domain-name))
(common-lisp:progn
 (common-lisp:defun delete-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id integration-id)
   (common-lisp:declare (common-lisp:ignorable api-id integration-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/integrations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'integration-id))))
                                                        "DeleteIntegration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-integration))
(common-lisp:progn
 (common-lisp:defun delete-integration-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id integration-id
                     integration-response-id)
   (common-lisp:declare
    (common-lisp:ignorable api-id integration-id integration-response-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-integration-response-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/integrations/~A/integrationresponses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'integration-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'integration-response-id))))
                                                        "DeleteIntegrationResponse"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-integration-response))
(common-lisp:progn
 (common-lisp:defun delete-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id model-id)
   (common-lisp:declare (common-lisp:ignorable api-id model-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/models/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'model-id))))
                                                        "DeleteModel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-model))
(common-lisp:progn
 (common-lisp:defun delete-route
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id route-id)
   (common-lisp:declare (common-lisp:ignorable api-id route-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-route-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/routes/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'route-id))))
                                                        "DeleteRoute"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-route))
(common-lisp:progn
 (common-lisp:defun delete-route-request-parameter
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id request-parameter-key route-id)
   (common-lisp:declare
    (common-lisp:ignorable api-id request-parameter-key route-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-route-request-parameter-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/routes/~A/requestparameters/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'route-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'request-parameter-key))))
                                                        "DeleteRouteRequestParameter"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-route-request-parameter))
(common-lisp:progn
 (common-lisp:defun delete-route-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id route-id route-response-id)
   (common-lisp:declare
    (common-lisp:ignorable api-id route-id route-response-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-route-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/routes/~A/routeresponses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'route-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'route-response-id))))
                                                        "DeleteRouteResponse"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-route-response))
(common-lisp:progn
 (common-lisp:defun delete-route-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id route-key stage-name)
   (common-lisp:declare (common-lisp:ignorable api-id route-key stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-route-settings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/stages/~A/routesettings/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'route-key))))
                                                        "DeleteRouteSettings"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-route-settings))
(common-lisp:progn
 (common-lisp:defun delete-stage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id stage-name)
   (common-lisp:declare (common-lisp:ignorable api-id stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-stage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/stages/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "DeleteStage"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-stage))
(common-lisp:progn
 (common-lisp:defun delete-vpc-link
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key vpc-link-id)
   (common-lisp:declare (common-lisp:ignorable vpc-link-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-vpc-link-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/vpclinks/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vpc-link-id))))
                                                        "DeleteVpcLink"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-vpc-link))
(common-lisp:progn
 (common-lisp:defun export-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id export-version include-extensions
                     output-type specification stage-name)
   (common-lisp:declare
    (common-lisp:ignorable api-id export-version include-extensions output-type
     specification stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-export-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/exports/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'specification))))
                                                        "ExportApi")
       :want-stream common-lisp:t)
      "blob" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'export-api))
(common-lisp:progn
 (common-lisp:defun reset-authorizers-cache
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id stage-name)
   (common-lisp:declare (common-lisp:ignorable api-id stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-reset-authorizers-cache-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/stages/~A/cache/authorizers"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "ResetAuthorizersCache"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'reset-authorizers-cache))
(common-lisp:progn
 (common-lisp:defun get-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id)
   (common-lisp:declare (common-lisp:ignorable api-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))))
                                                        "GetApi"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-api))
(common-lisp:progn
 (common-lisp:defun get-api-mapping
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-mapping-id domain-name)
   (common-lisp:declare (common-lisp:ignorable api-mapping-id domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-api-mapping-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/domainnames/~A/apimappings/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-mapping-id))))
                                                        "GetApiMapping"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-api-mapping))
(common-lisp:progn
 (common-lisp:defun get-api-mappings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable domain-name max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-api-mappings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/domainnames/~A/apimappings"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))))
                                                        "GetApiMappings"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-api-mappings))
(common-lisp:progn
 (common-lisp:defun get-apis
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-apis-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/v2/apis"
                                                        "GetApis"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-apis))
(common-lisp:progn
 (common-lisp:defun get-authorizer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id authorizer-id)
   (common-lisp:declare (common-lisp:ignorable api-id authorizer-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-authorizer-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/authorizers/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'authorizer-id))))
                                                        "GetAuthorizer"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-authorizer))
(common-lisp:progn
 (common-lisp:defun get-authorizers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id max-results next-token)
   (common-lisp:declare (common-lisp:ignorable api-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-authorizers-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/authorizers"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))))
                                                        "GetAuthorizers"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-authorizers))
(common-lisp:progn
 (common-lisp:defun get-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id deployment-id)
   (common-lisp:declare (common-lisp:ignorable api-id deployment-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-deployment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/deployments/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'deployment-id))))
                                                        "GetDeployment"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-deployment))
(common-lisp:progn
 (common-lisp:defun get-deployments
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id max-results next-token)
   (common-lisp:declare (common-lisp:ignorable api-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-deployments-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/deployments"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))))
                                                        "GetDeployments"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-deployments))
(common-lisp:progn
 (common-lisp:defun get-domain-name
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-domain-name-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/domainnames/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))))
                                                        "GetDomainName"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-domain-name))
(common-lisp:progn
 (common-lisp:defun get-domain-names
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-domain-names-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/v2/domainnames"
                                                        "GetDomainNames"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-domain-names))
(common-lisp:progn
 (common-lisp:defun get-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id integration-id)
   (common-lisp:declare (common-lisp:ignorable api-id integration-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/integrations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'integration-id))))
                                                        "GetIntegration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-integration))
(common-lisp:progn
 (common-lisp:defun get-integration-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id integration-id
                     integration-response-id)
   (common-lisp:declare
    (common-lisp:ignorable api-id integration-id integration-response-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-integration-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/integrations/~A/integrationresponses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'integration-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'integration-response-id))))
                                                        "GetIntegrationResponse"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-integration-response))
(common-lisp:progn
 (common-lisp:defun get-integration-responses
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id integration-id max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable api-id integration-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-integration-responses-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/integrations/~A/integrationresponses"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'integration-id))))
                                                        "GetIntegrationResponses"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-integration-responses))
(common-lisp:progn
 (common-lisp:defun get-integrations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id max-results next-token)
   (common-lisp:declare (common-lisp:ignorable api-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-integrations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/integrations"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))))
                                                        "GetIntegrations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-integrations))
(common-lisp:progn
 (common-lisp:defun get-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id model-id)
   (common-lisp:declare (common-lisp:ignorable api-id model-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/models/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'model-id))))
                                                        "GetModel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-model))
(common-lisp:progn
 (common-lisp:defun get-model-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id model-id)
   (common-lisp:declare (common-lisp:ignorable api-id model-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-model-template-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/models/~A/template"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'model-id))))
                                                        "GetModelTemplate"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-model-template))
(common-lisp:progn
 (common-lisp:defun get-models
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id max-results next-token)
   (common-lisp:declare (common-lisp:ignorable api-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-models-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/models"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))))
                                                        "GetModels"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-models))
(common-lisp:progn
 (common-lisp:defun get-route
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id route-id)
   (common-lisp:declare (common-lisp:ignorable api-id route-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-route-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/routes/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'route-id))))
                                                        "GetRoute"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-route))
(common-lisp:progn
 (common-lisp:defun get-route-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id route-id route-response-id)
   (common-lisp:declare
    (common-lisp:ignorable api-id route-id route-response-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-route-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/routes/~A/routeresponses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'route-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'route-response-id))))
                                                        "GetRouteResponse"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-route-response))
(common-lisp:progn
 (common-lisp:defun get-route-responses
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id max-results next-token route-id)
   (common-lisp:declare
    (common-lisp:ignorable api-id max-results next-token route-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-route-responses-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/routes/~A/routeresponses"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'route-id))))
                                                        "GetRouteResponses"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-route-responses))
(common-lisp:progn
 (common-lisp:defun get-routes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id max-results next-token)
   (common-lisp:declare (common-lisp:ignorable api-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-routes-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/routes"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))))
                                                        "GetRoutes"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-routes))
(common-lisp:progn
 (common-lisp:defun get-stage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id stage-name)
   (common-lisp:declare (common-lisp:ignorable api-id stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-stage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/stages/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "GetStage"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-stage))
(common-lisp:progn
 (common-lisp:defun get-stages
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id max-results next-token)
   (common-lisp:declare (common-lisp:ignorable api-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-stages-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/stages"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))))
                                                        "GetStages"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-stages))
(common-lisp:progn
 (common-lisp:defun get-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-tags-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "GetTags"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-tags))
(common-lisp:progn
 (common-lisp:defun get-vpc-link
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key vpc-link-id)
   (common-lisp:declare (common-lisp:ignorable vpc-link-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-vpc-link-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/vpclinks/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vpc-link-id))))
                                                        "GetVpcLink"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-vpc-link))
(common-lisp:progn
 (common-lisp:defun get-vpc-links
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-vpc-links-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/v2/vpclinks"
                                                        "GetVpcLinks"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-vpc-links))
(common-lisp:progn
 (common-lisp:defun import-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key basepath body fail-on-warnings)
   (common-lisp:declare (common-lisp:ignorable basepath body fail-on-warnings))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-import-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" "/v2/apis"
                                                        "ImportApi"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'import-api))
(common-lisp:progn
 (common-lisp:defun reimport-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id basepath body fail-on-warnings)
   (common-lisp:declare
    (common-lisp:ignorable api-id basepath body fail-on-warnings))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-reimport-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))))
                                                        "ReimportApi"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'reimport-api))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "TagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id api-key-selection-expression
                     cors-configuration credentials-arn description
                     disable-schema-validation disable-execute-api-endpoint
                     name route-key route-selection-expression target version)
   (common-lisp:declare
    (common-lisp:ignorable api-id api-key-selection-expression
     cors-configuration credentials-arn description disable-schema-validation
     disable-execute-api-endpoint name route-key route-selection-expression
     target version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))))
                                                        "UpdateApi"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-api))
(common-lisp:progn
 (common-lisp:defun update-api-mapping
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id api-mapping-id api-mapping-key
                     domain-name stage)
   (common-lisp:declare
    (common-lisp:ignorable api-id api-mapping-id api-mapping-key domain-name
     stage))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-api-mapping-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/domainnames/~A/apimappings/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-mapping-id))))
                                                        "UpdateApiMapping"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-api-mapping))
(common-lisp:progn
 (common-lisp:defun update-authorizer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id authorizer-credentials-arn
                     authorizer-id authorizer-result-ttl-in-seconds
                     authorizer-type authorizer-uri identity-source
                     identity-validation-expression jwt-configuration name
                     authorizer-payload-format-version enable-simple-responses)
   (common-lisp:declare
    (common-lisp:ignorable api-id authorizer-credentials-arn authorizer-id
     authorizer-result-ttl-in-seconds authorizer-type authorizer-uri
     identity-source identity-validation-expression jwt-configuration name
     authorizer-payload-format-version enable-simple-responses))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-authorizer-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/authorizers/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'authorizer-id))))
                                                        "UpdateAuthorizer"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-authorizer))
(common-lisp:progn
 (common-lisp:defun update-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id deployment-id description)
   (common-lisp:declare
    (common-lisp:ignorable api-id deployment-id description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-deployment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/deployments/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'deployment-id))))
                                                        "UpdateDeployment"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-deployment))
(common-lisp:progn
 (common-lisp:defun update-domain-name
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name domain-name-configurations
                     mutual-tls-authentication)
   (common-lisp:declare
    (common-lisp:ignorable domain-name domain-name-configurations
     mutual-tls-authentication))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-domain-name-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/domainnames/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))))
                                                        "UpdateDomainName"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-domain-name))
(common-lisp:progn
 (common-lisp:defun update-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id connection-id connection-type
                     content-handling-strategy credentials-arn description
                     integration-id integration-method integration-subtype
                     integration-type integration-uri passthrough-behavior
                     payload-format-version request-parameters
                     response-parameters request-templates
                     template-selection-expression timeout-in-millis
                     tls-config)
   (common-lisp:declare
    (common-lisp:ignorable api-id connection-id connection-type
     content-handling-strategy credentials-arn description integration-id
     integration-method integration-subtype integration-type integration-uri
     passthrough-behavior payload-format-version request-parameters
     response-parameters request-templates template-selection-expression
     timeout-in-millis tls-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/integrations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'integration-id))))
                                                        "UpdateIntegration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-integration))
(common-lisp:progn
 (common-lisp:defun update-integration-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id content-handling-strategy
                     integration-id integration-response-id
                     integration-response-key response-parameters
                     response-templates template-selection-expression)
   (common-lisp:declare
    (common-lisp:ignorable api-id content-handling-strategy integration-id
     integration-response-id integration-response-key response-parameters
     response-templates template-selection-expression))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-integration-response-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/integrations/~A/integrationresponses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'integration-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'integration-response-id))))
                                                        "UpdateIntegrationResponse"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-integration-response))
(common-lisp:progn
 (common-lisp:defun update-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id content-type description model-id
                     name schema)
   (common-lisp:declare
    (common-lisp:ignorable api-id content-type description model-id name
     schema))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/models/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'model-id))))
                                                        "UpdateModel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-model))
(common-lisp:progn
 (common-lisp:defun update-route
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id api-key-required
                     authorization-scopes authorization-type authorizer-id
                     model-selection-expression operation-name request-models
                     request-parameters route-id route-key
                     route-response-selection-expression target)
   (common-lisp:declare
    (common-lisp:ignorable api-id api-key-required authorization-scopes
     authorization-type authorizer-id model-selection-expression operation-name
     request-models request-parameters route-id route-key
     route-response-selection-expression target))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-route-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/routes/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'route-id))))
                                                        "UpdateRoute"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-route))
(common-lisp:progn
 (common-lisp:defun update-route-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id model-selection-expression
                     response-models response-parameters route-id
                     route-response-id route-response-key)
   (common-lisp:declare
    (common-lisp:ignorable api-id model-selection-expression response-models
     response-parameters route-id route-response-id route-response-key))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-route-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/routes/~A/routeresponses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'route-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'route-response-id))))
                                                        "UpdateRouteResponse"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-route-response))
(common-lisp:progn
 (common-lisp:defun update-stage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key access-log-settings api-id auto-deploy
                     client-certificate-id default-route-settings deployment-id
                     description route-settings stage-name stage-variables)
   (common-lisp:declare
    (common-lisp:ignorable access-log-settings api-id auto-deploy
     client-certificate-id default-route-settings deployment-id description
     route-settings stage-name stage-variables))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-stage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/stages/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "UpdateStage"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-stage))
(common-lisp:progn
 (common-lisp:defun update-vpc-link
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name vpc-link-id)
   (common-lisp:declare (common-lisp:ignorable name vpc-link-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-vpc-link-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/vpclinks/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vpc-link-id))))
                                                        "UpdateVpcLink"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-vpc-link))
