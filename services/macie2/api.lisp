;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/macie2/api
  (:use)
  (:nicknames #:aws/macie2)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/json-request)
  (:import-from #:aws-sdk/rest-json-request)
  (:import-from #:aws-sdk/rest-xml-request)
  (:import-from #:aws-sdk/query-request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/macie2/api)
(common-lisp:progn
 (common-lisp:define-condition macie2-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'macie2-error))
(common-lisp:progn
 (common-lisp:defclass macie2-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "macie2" :api-version
                        "2020-01-01" :host-prefix "macie2" :signing-name
                        "macie2" :global-host common-lisp:nil))
 (common-lisp:export 'macie2-request))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceQuotaExceededException" . service-quota-exceeded-exception)
    ("ThrottlingException" . throttling-exception)
    ("UnprocessableEntityException" . unprocessable-entity-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:defclass accept-invitation-request common-lisp:nil
                       ((administrator-account-id :initarg
                         :administrator-account-id :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-accept-invitation-request-administrator-account-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "administratorAccountId")
                        (invitation-id :initarg :invitation-id :initform
                         (common-lisp:error ":invitationid is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-accept-invitation-request-invitation-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "invitationId")
                        (master-account :initarg :master-account :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-accept-invitation-request-master-account
                         :shape "__string" :location common-lisp:nil
                         :location-name "masterAccount"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-accept-invitation-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'accept-invitation-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'accept-invitation-request
                    'make-accept-invitation-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          accept-invitation-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          accept-invitation-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'administrator-account-id))
      (common-lisp:list
       (common-lisp:cons "administratorAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'invitation-id))
      (common-lisp:list
       (common-lisp:cons "invitationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'master-account))
      (common-lisp:list
       (common-lisp:cons "masterAccount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          accept-invitation-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass accept-invitation-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-accept-invitation-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'accept-invitation-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'accept-invitation-response
                    'make-accept-invitation-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          accept-invitation-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          accept-invitation-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          accept-invitation-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass access-control-list common-lisp:nil
                       ((allows-public-read-access :initarg
                         :allows-public-read-access :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-access-control-list-allows-public-read-access
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "allowsPublicReadAccess")
                        (allows-public-write-access :initarg
                         :allows-public-write-access :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-access-control-list-allows-public-write-access
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "allowsPublicWriteAccess"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-access-control-list
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'access-control-list
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'access-control-list 'make-access-control-list))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input access-control-list))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input access-control-list))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'allows-public-read-access))
      (common-lisp:list
       (common-lisp:cons "allowsPublicReadAccess"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'allows-public-write-access))
      (common-lisp:list
       (common-lisp:cons "allowsPublicWriteAccess"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input access-control-list))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (macie2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:progn
 (common-lisp:defclass account-detail common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":accountid is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-account-detail-account-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "accountId")
                        (email :initarg :email :initform
                         (common-lisp:error ":email is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-account-detail-email :shape "__string"
                         :location common-lisp:nil :location-name "email"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-account-detail
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'account-detail
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'account-detail 'make-account-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input account-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input account-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email))
      (common-lisp:list
       (common-lisp:cons "email"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input account-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass account-level-permissions common-lisp:nil
                       ((block-public-access :initarg :block-public-access
                         :initform common-lisp:nil :type
                         (common-lisp:or block-public-access common-lisp:null)
                         :accessor
                         struct-shape-account-level-permissions-block-public-access
                         :shape "BlockPublicAccess" :location common-lisp:nil
                         :location-name "blockPublicAccess"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-account-level-permissions
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'account-level-permissions
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'account-level-permissions
                    'make-account-level-permissions))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          account-level-permissions))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          account-level-permissions))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'block-public-access))
      (common-lisp:list
       (common-lisp:cons "blockPublicAccess"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          account-level-permissions))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass admin-account common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-admin-account-account-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "accountId")
                        (status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or admin-status common-lisp:null)
                         :accessor struct-shape-admin-account-status :shape
                         "AdminStatus" :location common-lisp:nil :location-name
                         "status"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-admin-account
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'admin-account
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'admin-account 'make-admin-account))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input admin-account))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input admin-account))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input admin-account))
   common-lisp:nil))
(common-lisp:deftype admin-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass allow-list-criteria common-lisp:nil
                       ((regex :initarg :regex :initform common-lisp:nil :type
                         (common-lisp:or |__stringMin1Max512PatternSS|
                                         common-lisp:null)
                         :accessor struct-shape-allow-list-criteria-regex
                         :shape "__stringMin1Max512PatternSS" :location
                         common-lisp:nil :location-name "regex")
                        (s3words-list :initarg :s3words-list :initform
                         common-lisp:nil :type
                         (common-lisp:or s3words-list common-lisp:null)
                         :accessor
                         struct-shape-allow-list-criteria-s3words-list :shape
                         "S3WordsList" :location common-lisp:nil :location-name
                         "s3WordsList"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-allow-list-criteria
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'allow-list-criteria
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'allow-list-criteria 'make-allow-list-criteria))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input allow-list-criteria))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input allow-list-criteria))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'regex))
      (common-lisp:list
       (common-lisp:cons "regex"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3words-list))
      (common-lisp:list
       (common-lisp:cons "s3WordsList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input allow-list-criteria))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass allow-list-status common-lisp:nil
                       ((code :initarg :code :initform
                         (common-lisp:error ":code is required") :type
                         (common-lisp:or allow-list-status-code
                                         common-lisp:null)
                         :accessor struct-shape-allow-list-status-code :shape
                         "AllowListStatusCode" :location common-lisp:nil
                         :location-name "code")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__stringMin1Max1024PatternSS|
                                         common-lisp:null)
                         :accessor struct-shape-allow-list-status-description
                         :shape "__stringMin1Max1024PatternSS" :location
                         common-lisp:nil :location-name "description"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-allow-list-status
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'allow-list-status
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'allow-list-status 'make-allow-list-status))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input allow-list-status))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input allow-list-status))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'code))
      (common-lisp:list
       (common-lisp:cons "code"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input allow-list-status))
   common-lisp:nil))
(common-lisp:deftype allow-list-status-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass allow-list-summary common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or
                          |__stringMin71Max89PatternArnAwsAwsCnAwsUsGovMacie2AZ19920D12AllowListAZ0922|
                          common-lisp:null)
                         :accessor struct-shape-allow-list-summary-arn :shape
                         "__stringMin71Max89PatternArnAwsAwsCnAwsUsGovMacie2AZ19920D12AllowListAZ0922"
                         :location common-lisp:nil :location-name "arn")
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor struct-shape-allow-list-summary-created-at
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "createdAt")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__stringMin1Max512PatternSS|
                                         common-lisp:null)
                         :accessor struct-shape-allow-list-summary-description
                         :shape "__stringMin1Max512PatternSS" :location
                         common-lisp:nil :location-name "description")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__stringMin22Max22PatternAZ0922|
                                         common-lisp:null)
                         :accessor struct-shape-allow-list-summary-id :shape
                         "__stringMin22Max22PatternAZ0922" :location
                         common-lisp:nil :location-name "id")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__stringMin1Max128Pattern|
                                         common-lisp:null)
                         :accessor struct-shape-allow-list-summary-name :shape
                         "__stringMin1Max128Pattern" :location common-lisp:nil
                         :location-name "name")
                        (updated-at :initarg :updated-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor struct-shape-allow-list-summary-updated-at
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "updatedAt"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-allow-list-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'allow-list-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'allow-list-summary 'make-allow-list-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input allow-list-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input allow-list-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input allow-list-summary))
   common-lisp:nil))
(common-lisp:deftype allows-unencrypted-object-uploads () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass api-call-details common-lisp:nil
                       ((api :initarg :api :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-api-call-details-api :shape "__string"
                         :location common-lisp:nil :location-name "api")
                        (api-service-name :initarg :api-service-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-api-call-details-api-service-name :shape
                         "__string" :location common-lisp:nil :location-name
                         "apiServiceName")
                        (first-seen :initarg :first-seen :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor struct-shape-api-call-details-first-seen
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "firstSeen")
                        (last-seen :initarg :last-seen :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor struct-shape-api-call-details-last-seen
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "lastSeen"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-api-call-details
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'api-call-details
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'api-call-details 'make-api-call-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input api-call-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input api-call-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api))
      (common-lisp:list
       (common-lisp:cons "api"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-service-name))
      (common-lisp:list
       (common-lisp:cons "apiServiceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'first-seen))
      (common-lisp:list
       (common-lisp:cons "firstSeen"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-seen))
      (common-lisp:list
       (common-lisp:cons "lastSeen"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input api-call-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass assumed-role common-lisp:nil
                       ((access-key-id :initarg :access-key-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-assumed-role-access-key-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "accessKeyId")
                        (account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-assumed-role-account-id :shape "__string"
                         :location common-lisp:nil :location-name "accountId")
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-assumed-role-arn :shape "__string"
                         :location common-lisp:nil :location-name "arn")
                        (principal-id :initarg :principal-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-assumed-role-principal-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "principalId")
                        (session-context :initarg :session-context :initform
                         common-lisp:nil :type
                         (common-lisp:or session-context common-lisp:null)
                         :accessor struct-shape-assumed-role-session-context
                         :shape "SessionContext" :location common-lisp:nil
                         :location-name "sessionContext"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-assumed-role
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'assumed-role
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'assumed-role 'make-assumed-role))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input assumed-role))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input assumed-role))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-key-id))
      (common-lisp:list
       (common-lisp:cons "accessKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-id))
      (common-lisp:list
       (common-lisp:cons "principalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'session-context))
      (common-lisp:list
       (common-lisp:cons "sessionContext"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input assumed-role))
   common-lisp:nil))
(common-lisp:deftype automated-discovery-status () 'common-lisp:string)
(common-lisp:deftype availability-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass aws-account common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-aws-account-account-id :shape "__string"
                         :location common-lisp:nil :location-name "accountId")
                        (principal-id :initarg :principal-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-aws-account-principal-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "principalId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-aws-account
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'aws-account
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'aws-account 'make-aws-account))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input aws-account))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input aws-account))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-id))
      (common-lisp:list
       (common-lisp:cons "principalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input aws-account))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass aws-service common-lisp:nil
                       ((invoked-by :initarg :invoked-by :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-aws-service-invoked-by :shape "__string"
                         :location common-lisp:nil :location-name "invokedBy"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-aws-service
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'aws-service
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'aws-service 'make-aws-service))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input aws-service))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input aws-service))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'invoked-by))
      (common-lisp:list
       (common-lisp:cons "invokedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input aws-service))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-get-custom-data-identifier-summary common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-batch-get-custom-data-identifier-summary-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name "arn")
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-batch-get-custom-data-identifier-summary-created-at
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "createdAt")
                        (deleted :initarg :deleted :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-batch-get-custom-data-identifier-summary-deleted
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "deleted")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-batch-get-custom-data-identifier-summary-description
                         :shape "__string" :location common-lisp:nil
                         :location-name "description")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-batch-get-custom-data-identifier-summary-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "id")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-batch-get-custom-data-identifier-summary-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "name"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-get-custom-data-identifier-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-get-custom-data-identifier-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-get-custom-data-identifier-summary
                    'make-batch-get-custom-data-identifier-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-custom-data-identifier-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-custom-data-identifier-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deleted))
      (common-lisp:list
       (common-lisp:cons "deleted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-custom-data-identifier-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-get-custom-data-identifiers-request
                       common-lisp:nil
                       ((ids :initarg :ids :initform common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-batch-get-custom-data-identifiers-request-ids
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "ids"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-get-custom-data-identifiers-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-get-custom-data-identifiers-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-get-custom-data-identifiers-request
                    'make-batch-get-custom-data-identifiers-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-custom-data-identifiers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-custom-data-identifiers-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ids))
      (common-lisp:list
       (common-lisp:cons "ids"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-custom-data-identifiers-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-get-custom-data-identifiers-response
                       common-lisp:nil
                       ((custom-data-identifiers :initarg
                         :custom-data-identifiers :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          |__listOfBatchGetCustomDataIdentifierSummary|
                          common-lisp:null)
                         :accessor
                         struct-shape-batch-get-custom-data-identifiers-response-custom-data-identifiers
                         :shape "__listOfBatchGetCustomDataIdentifierSummary"
                         :location common-lisp:nil :location-name
                         "customDataIdentifiers")
                        (not-found-identifier-ids :initarg
                         :not-found-identifier-ids :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-batch-get-custom-data-identifiers-response-not-found-identifier-ids
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "notFoundIdentifierIds"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-get-custom-data-identifiers-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-get-custom-data-identifiers-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-get-custom-data-identifiers-response
                    'make-batch-get-custom-data-identifiers-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-custom-data-identifiers-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-custom-data-identifiers-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'custom-data-identifiers))
      (common-lisp:list
       (common-lisp:cons "customDataIdentifiers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'not-found-identifier-ids))
      (common-lisp:list
       (common-lisp:cons "notFoundIdentifierIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-custom-data-identifiers-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass block-public-access common-lisp:nil
                       ((block-public-acls :initarg :block-public-acls
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-block-public-access-block-public-acls
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "blockPublicAcls")
                        (block-public-policy :initarg :block-public-policy
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-block-public-access-block-public-policy
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "blockPublicPolicy")
                        (ignore-public-acls :initarg :ignore-public-acls
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-block-public-access-ignore-public-acls
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "ignorePublicAcls")
                        (restrict-public-buckets :initarg
                         :restrict-public-buckets :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-block-public-access-restrict-public-buckets
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "restrictPublicBuckets"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-block-public-access
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'block-public-access
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'block-public-access 'make-block-public-access))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input block-public-access))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input block-public-access))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'block-public-acls))
      (common-lisp:list
       (common-lisp:cons "blockPublicAcls"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'block-public-policy))
      (common-lisp:list
       (common-lisp:cons "blockPublicPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ignore-public-acls))
      (common-lisp:list
       (common-lisp:cons "ignorePublicAcls"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'restrict-public-buckets))
      (common-lisp:list
       (common-lisp:cons "restrictPublicBuckets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input block-public-access))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass bucket-count-by-effective-permission common-lisp:nil
                       ((publicly-accessible :initarg :publicly-accessible
                         :initform common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-bucket-count-by-effective-permission-publicly-accessible
                         :shape "__long" :location common-lisp:nil
                         :location-name "publiclyAccessible")
                        (publicly-readable :initarg :publicly-readable
                         :initform common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-bucket-count-by-effective-permission-publicly-readable
                         :shape "__long" :location common-lisp:nil
                         :location-name "publiclyReadable")
                        (publicly-writable :initarg :publicly-writable
                         :initform common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-bucket-count-by-effective-permission-publicly-writable
                         :shape "__long" :location common-lisp:nil
                         :location-name "publiclyWritable")
                        (unknown :initarg :unknown :initform common-lisp:nil
                         :type (common-lisp:or |__long| common-lisp:null)
                         :accessor
                         struct-shape-bucket-count-by-effective-permission-unknown
                         :shape "__long" :location common-lisp:nil
                         :location-name "unknown"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-bucket-count-by-effective-permission
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'bucket-count-by-effective-permission
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'bucket-count-by-effective-permission
                    'make-bucket-count-by-effective-permission))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          bucket-count-by-effective-permission))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          bucket-count-by-effective-permission))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'publicly-accessible))
      (common-lisp:list
       (common-lisp:cons "publiclyAccessible"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'publicly-readable))
      (common-lisp:list
       (common-lisp:cons "publiclyReadable"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'publicly-writable))
      (common-lisp:list
       (common-lisp:cons "publiclyWritable"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'unknown))
      (common-lisp:list
       (common-lisp:cons "unknown"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          bucket-count-by-effective-permission))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass bucket-count-by-encryption-type common-lisp:nil
                       ((kms-managed :initarg :kms-managed :initform
                         common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-bucket-count-by-encryption-type-kms-managed
                         :shape "__long" :location common-lisp:nil
                         :location-name "kmsManaged")
                        (s3managed :initarg :s3managed :initform
                         common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-bucket-count-by-encryption-type-s3managed
                         :shape "__long" :location common-lisp:nil
                         :location-name "s3Managed")
                        (unencrypted :initarg :unencrypted :initform
                         common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-bucket-count-by-encryption-type-unencrypted
                         :shape "__long" :location common-lisp:nil
                         :location-name "unencrypted")
                        (unknown :initarg :unknown :initform common-lisp:nil
                         :type (common-lisp:or |__long| common-lisp:null)
                         :accessor
                         struct-shape-bucket-count-by-encryption-type-unknown
                         :shape "__long" :location common-lisp:nil
                         :location-name "unknown"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-bucket-count-by-encryption-type
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'bucket-count-by-encryption-type
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'bucket-count-by-encryption-type
                    'make-bucket-count-by-encryption-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          bucket-count-by-encryption-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          bucket-count-by-encryption-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-managed))
      (common-lisp:list
       (common-lisp:cons "kmsManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3managed))
      (common-lisp:list
       (common-lisp:cons "s3Managed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'unencrypted))
      (common-lisp:list
       (common-lisp:cons "unencrypted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'unknown))
      (common-lisp:list
       (common-lisp:cons "unknown"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          bucket-count-by-encryption-type))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass bucket-count-by-shared-access-type common-lisp:nil
                       ((external :initarg :external :initform common-lisp:nil
                         :type (common-lisp:or |__long| common-lisp:null)
                         :accessor
                         struct-shape-bucket-count-by-shared-access-type-external
                         :shape "__long" :location common-lisp:nil
                         :location-name "external")
                        (internal :initarg :internal :initform common-lisp:nil
                         :type (common-lisp:or |__long| common-lisp:null)
                         :accessor
                         struct-shape-bucket-count-by-shared-access-type-internal
                         :shape "__long" :location common-lisp:nil
                         :location-name "internal")
                        (not-shared :initarg :not-shared :initform
                         common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-bucket-count-by-shared-access-type-not-shared
                         :shape "__long" :location common-lisp:nil
                         :location-name "notShared")
                        (unknown :initarg :unknown :initform common-lisp:nil
                         :type (common-lisp:or |__long| common-lisp:null)
                         :accessor
                         struct-shape-bucket-count-by-shared-access-type-unknown
                         :shape "__long" :location common-lisp:nil
                         :location-name "unknown"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-bucket-count-by-shared-access-type
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'bucket-count-by-shared-access-type
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'bucket-count-by-shared-access-type
                    'make-bucket-count-by-shared-access-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          bucket-count-by-shared-access-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          bucket-count-by-shared-access-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'external))
      (common-lisp:list
       (common-lisp:cons "external"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'internal))
      (common-lisp:list
       (common-lisp:cons "internal"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'not-shared))
      (common-lisp:list
       (common-lisp:cons "notShared"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'unknown))
      (common-lisp:list
       (common-lisp:cons "unknown"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          bucket-count-by-shared-access-type))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass bucket-count-policy-allows-unencrypted-object-uploads
                       common-lisp:nil
                       ((allows-unencrypted-object-uploads :initarg
                         :allows-unencrypted-object-uploads :initform
                         common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-bucket-count-policy-allows-unencrypted-object-uploads-allows-unencrypted-object-uploads
                         :shape "__long" :location common-lisp:nil
                         :location-name "allowsUnencryptedObjectUploads")
                        (denies-unencrypted-object-uploads :initarg
                         :denies-unencrypted-object-uploads :initform
                         common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-bucket-count-policy-allows-unencrypted-object-uploads-denies-unencrypted-object-uploads
                         :shape "__long" :location common-lisp:nil
                         :location-name "deniesUnencryptedObjectUploads")
                        (unknown :initarg :unknown :initform common-lisp:nil
                         :type (common-lisp:or |__long| common-lisp:null)
                         :accessor
                         struct-shape-bucket-count-policy-allows-unencrypted-object-uploads-unknown
                         :shape "__long" :location common-lisp:nil
                         :location-name "unknown"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-bucket-count-policy-allows-unencrypted-object-uploads
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'bucket-count-policy-allows-unencrypted-object-uploads
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'bucket-count-policy-allows-unencrypted-object-uploads
                    'make-bucket-count-policy-allows-unencrypted-object-uploads))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          bucket-count-policy-allows-unencrypted-object-uploads))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          bucket-count-policy-allows-unencrypted-object-uploads))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'allows-unencrypted-object-uploads))
      (common-lisp:list
       (common-lisp:cons "allowsUnencryptedObjectUploads"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'denies-unencrypted-object-uploads))
      (common-lisp:list
       (common-lisp:cons "deniesUnencryptedObjectUploads"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'unknown))
      (common-lisp:list
       (common-lisp:cons "unknown"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          bucket-count-policy-allows-unencrypted-object-uploads))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype bucket-criteria () 'common-lisp:hash-table)
 (common-lisp:defun make-bucket-criteria (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass bucket-criteria-additional-properties common-lisp:nil
                       ((eq :initarg :eq :initform common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-bucket-criteria-additional-properties-eq
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "eq")
                        (gt :initarg :gt :initform common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-bucket-criteria-additional-properties-gt
                         :shape "__long" :location common-lisp:nil
                         :location-name "gt")
                        (gte :initarg :gte :initform common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-bucket-criteria-additional-properties-gte
                         :shape "__long" :location common-lisp:nil
                         :location-name "gte")
                        (lt :initarg :lt :initform common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-bucket-criteria-additional-properties-lt
                         :shape "__long" :location common-lisp:nil
                         :location-name "lt")
                        (lte :initarg :lte :initform common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-bucket-criteria-additional-properties-lte
                         :shape "__long" :location common-lisp:nil
                         :location-name "lte")
                        (neq :initarg :neq :initform common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-bucket-criteria-additional-properties-neq
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "neq")
                        (prefix :initarg :prefix :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-bucket-criteria-additional-properties-prefix
                         :shape "__string" :location common-lisp:nil
                         :location-name "prefix"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-bucket-criteria-additional-properties
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'bucket-criteria-additional-properties
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'bucket-criteria-additional-properties
                    'make-bucket-criteria-additional-properties))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          bucket-criteria-additional-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          bucket-criteria-additional-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'eq))
      (common-lisp:list
       (common-lisp:cons "eq"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gt))
      (common-lisp:list
       (common-lisp:cons "gt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gte))
      (common-lisp:list
       (common-lisp:cons "gte"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lt))
      (common-lisp:list
       (common-lisp:cons "lt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lte))
      (common-lisp:list
       (common-lisp:cons "lte"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'neq))
      (common-lisp:list
       (common-lisp:cons "neq"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'prefix))
      (common-lisp:list
       (common-lisp:cons "prefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          bucket-criteria-additional-properties))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass bucket-level-permissions common-lisp:nil
                       ((access-control-list :initarg :access-control-list
                         :initform common-lisp:nil :type
                         (common-lisp:or access-control-list common-lisp:null)
                         :accessor
                         struct-shape-bucket-level-permissions-access-control-list
                         :shape "AccessControlList" :location common-lisp:nil
                         :location-name "accessControlList")
                        (block-public-access :initarg :block-public-access
                         :initform common-lisp:nil :type
                         (common-lisp:or block-public-access common-lisp:null)
                         :accessor
                         struct-shape-bucket-level-permissions-block-public-access
                         :shape "BlockPublicAccess" :location common-lisp:nil
                         :location-name "blockPublicAccess")
                        (bucket-policy :initarg :bucket-policy :initform
                         common-lisp:nil :type
                         (common-lisp:or bucket-policy common-lisp:null)
                         :accessor
                         struct-shape-bucket-level-permissions-bucket-policy
                         :shape "BucketPolicy" :location common-lisp:nil
                         :location-name "bucketPolicy"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-bucket-level-permissions
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'bucket-level-permissions
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'bucket-level-permissions 'make-bucket-level-permissions))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          bucket-level-permissions))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          bucket-level-permissions))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-control-list))
      (common-lisp:list
       (common-lisp:cons "accessControlList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'block-public-access))
      (common-lisp:list
       (common-lisp:cons "blockPublicAccess"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-policy))
      (common-lisp:list
       (common-lisp:cons "bucketPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          bucket-level-permissions))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass bucket-metadata common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-bucket-metadata-account-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "accountId")
                        (allows-unencrypted-object-uploads :initarg
                         :allows-unencrypted-object-uploads :initform
                         common-lisp:nil :type
                         (common-lisp:or allows-unencrypted-object-uploads
                                         common-lisp:null)
                         :accessor
                         struct-shape-bucket-metadata-allows-unencrypted-object-uploads
                         :shape "AllowsUnencryptedObjectUploads" :location
                         common-lisp:nil :location-name
                         "allowsUnencryptedObjectUploads")
                        (bucket-arn :initarg :bucket-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-bucket-metadata-bucket-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         "bucketArn")
                        (bucket-created-at :initarg :bucket-created-at
                         :initform common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-bucket-metadata-bucket-created-at :shape
                         "__timestampIso8601" :location common-lisp:nil
                         :location-name "bucketCreatedAt")
                        (bucket-name :initarg :bucket-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-bucket-metadata-bucket-name :shape
                         "__string" :location common-lisp:nil :location-name
                         "bucketName")
                        (classifiable-object-count :initarg
                         :classifiable-object-count :initform common-lisp:nil
                         :type (common-lisp:or |__long| common-lisp:null)
                         :accessor
                         struct-shape-bucket-metadata-classifiable-object-count
                         :shape "__long" :location common-lisp:nil
                         :location-name "classifiableObjectCount")
                        (classifiable-size-in-bytes :initarg
                         :classifiable-size-in-bytes :initform common-lisp:nil
                         :type (common-lisp:or |__long| common-lisp:null)
                         :accessor
                         struct-shape-bucket-metadata-classifiable-size-in-bytes
                         :shape "__long" :location common-lisp:nil
                         :location-name "classifiableSizeInBytes")
                        (error-code :initarg :error-code :initform
                         common-lisp:nil :type
                         (common-lisp:or bucket-metadata-error-code
                                         common-lisp:null)
                         :accessor struct-shape-bucket-metadata-error-code
                         :shape "BucketMetadataErrorCode" :location
                         common-lisp:nil :location-name "errorCode")
                        (error-message :initarg :error-message :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-bucket-metadata-error-message :shape
                         "__string" :location common-lisp:nil :location-name
                         "errorMessage")
                        (job-details :initarg :job-details :initform
                         common-lisp:nil :type
                         (common-lisp:or job-details common-lisp:null)
                         :accessor struct-shape-bucket-metadata-job-details
                         :shape "JobDetails" :location common-lisp:nil
                         :location-name "jobDetails")
                        (last-automated-discovery-time :initarg
                         :last-automated-discovery-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-bucket-metadata-last-automated-discovery-time
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "lastAutomatedDiscoveryTime")
                        (last-updated :initarg :last-updated :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor struct-shape-bucket-metadata-last-updated
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "lastUpdated")
                        (object-count :initarg :object-count :initform
                         common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-bucket-metadata-object-count :shape
                         "__long" :location common-lisp:nil :location-name
                         "objectCount")
                        (object-count-by-encryption-type :initarg
                         :object-count-by-encryption-type :initform
                         common-lisp:nil :type
                         (common-lisp:or object-count-by-encryption-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-bucket-metadata-object-count-by-encryption-type
                         :shape "ObjectCountByEncryptionType" :location
                         common-lisp:nil :location-name
                         "objectCountByEncryptionType")
                        (public-access :initarg :public-access :initform
                         common-lisp:nil :type
                         (common-lisp:or bucket-public-access common-lisp:null)
                         :accessor struct-shape-bucket-metadata-public-access
                         :shape "BucketPublicAccess" :location common-lisp:nil
                         :location-name "publicAccess")
                        (region :initarg :region :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-bucket-metadata-region :shape
                         "__string" :location common-lisp:nil :location-name
                         "region")
                        (replication-details :initarg :replication-details
                         :initform common-lisp:nil :type
                         (common-lisp:or replication-details common-lisp:null)
                         :accessor
                         struct-shape-bucket-metadata-replication-details
                         :shape "ReplicationDetails" :location common-lisp:nil
                         :location-name "replicationDetails")
                        (sensitivity-score :initarg :sensitivity-score
                         :initform common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-bucket-metadata-sensitivity-score :shape
                         "__integer" :location common-lisp:nil :location-name
                         "sensitivityScore")
                        (server-side-encryption :initarg
                         :server-side-encryption :initform common-lisp:nil
                         :type
                         (common-lisp:or bucket-server-side-encryption
                                         common-lisp:null)
                         :accessor
                         struct-shape-bucket-metadata-server-side-encryption
                         :shape "BucketServerSideEncryption" :location
                         common-lisp:nil :location-name "serverSideEncryption")
                        (shared-access :initarg :shared-access :initform
                         common-lisp:nil :type
                         (common-lisp:or shared-access common-lisp:null)
                         :accessor struct-shape-bucket-metadata-shared-access
                         :shape "SharedAccess" :location common-lisp:nil
                         :location-name "sharedAccess")
                        (size-in-bytes :initarg :size-in-bytes :initform
                         common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-bucket-metadata-size-in-bytes :shape
                         "__long" :location common-lisp:nil :location-name
                         "sizeInBytes")
                        (size-in-bytes-compressed :initarg
                         :size-in-bytes-compressed :initform common-lisp:nil
                         :type (common-lisp:or |__long| common-lisp:null)
                         :accessor
                         struct-shape-bucket-metadata-size-in-bytes-compressed
                         :shape "__long" :location common-lisp:nil
                         :location-name "sizeInBytesCompressed")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__listOfKeyValuePair|
                                         common-lisp:null)
                         :accessor struct-shape-bucket-metadata-tags :shape
                         "__listOfKeyValuePair" :location common-lisp:nil
                         :location-name "tags")
                        (unclassifiable-object-count :initarg
                         :unclassifiable-object-count :initform common-lisp:nil
                         :type
                         (common-lisp:or object-level-statistics
                                         common-lisp:null)
                         :accessor
                         struct-shape-bucket-metadata-unclassifiable-object-count
                         :shape "ObjectLevelStatistics" :location
                         common-lisp:nil :location-name
                         "unclassifiableObjectCount")
                        (unclassifiable-object-size-in-bytes :initarg
                         :unclassifiable-object-size-in-bytes :initform
                         common-lisp:nil :type
                         (common-lisp:or object-level-statistics
                                         common-lisp:null)
                         :accessor
                         struct-shape-bucket-metadata-unclassifiable-object-size-in-bytes
                         :shape "ObjectLevelStatistics" :location
                         common-lisp:nil :location-name
                         "unclassifiableObjectSizeInBytes")
                        (versioning :initarg :versioning :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-bucket-metadata-versioning
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "versioning"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-bucket-metadata
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'bucket-metadata
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'bucket-metadata 'make-bucket-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input bucket-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input bucket-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'allows-unencrypted-object-uploads))
      (common-lisp:list
       (common-lisp:cons "allowsUnencryptedObjectUploads"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-arn))
      (common-lisp:list
       (common-lisp:cons "bucketArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-created-at))
      (common-lisp:list
       (common-lisp:cons "bucketCreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-name))
      (common-lisp:list
       (common-lisp:cons "bucketName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'classifiable-object-count))
      (common-lisp:list
       (common-lisp:cons "classifiableObjectCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'classifiable-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "classifiableSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "errorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "errorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-details))
      (common-lisp:list
       (common-lisp:cons "jobDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-automated-discovery-time))
      (common-lisp:list
       (common-lisp:cons "lastAutomatedDiscoveryTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated))
      (common-lisp:list
       (common-lisp:cons "lastUpdated"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'object-count))
      (common-lisp:list
       (common-lisp:cons "objectCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'object-count-by-encryption-type))
      (common-lisp:list
       (common-lisp:cons "objectCountByEncryptionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'public-access))
      (common-lisp:list
       (common-lisp:cons "publicAccess"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'region))
      (common-lisp:list
       (common-lisp:cons "region"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replication-details))
      (common-lisp:list
       (common-lisp:cons "replicationDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sensitivity-score))
      (common-lisp:list
       (common-lisp:cons "sensitivityScore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'server-side-encryption))
      (common-lisp:list
       (common-lisp:cons "serverSideEncryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'shared-access))
      (common-lisp:list
       (common-lisp:cons "sharedAccess"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "sizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'size-in-bytes-compressed))
      (common-lisp:list
       (common-lisp:cons "sizeInBytesCompressed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'unclassifiable-object-count))
      (common-lisp:list
       (common-lisp:cons "unclassifiableObjectCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'unclassifiable-object-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "unclassifiableObjectSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'versioning))
      (common-lisp:list
       (common-lisp:cons "versioning"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input bucket-metadata))
   common-lisp:nil))
(common-lisp:deftype bucket-metadata-error-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass bucket-permission-configuration common-lisp:nil
                       ((account-level-permissions :initarg
                         :account-level-permissions :initform common-lisp:nil
                         :type
                         (common-lisp:or account-level-permissions
                                         common-lisp:null)
                         :accessor
                         struct-shape-bucket-permission-configuration-account-level-permissions
                         :shape "AccountLevelPermissions" :location
                         common-lisp:nil :location-name
                         "accountLevelPermissions")
                        (bucket-level-permissions :initarg
                         :bucket-level-permissions :initform common-lisp:nil
                         :type
                         (common-lisp:or bucket-level-permissions
                                         common-lisp:null)
                         :accessor
                         struct-shape-bucket-permission-configuration-bucket-level-permissions
                         :shape "BucketLevelPermissions" :location
                         common-lisp:nil :location-name
                         "bucketLevelPermissions"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-bucket-permission-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'bucket-permission-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'bucket-permission-configuration
                    'make-bucket-permission-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          bucket-permission-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          bucket-permission-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'account-level-permissions))
      (common-lisp:list
       (common-lisp:cons "accountLevelPermissions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'bucket-level-permissions))
      (common-lisp:list
       (common-lisp:cons "bucketLevelPermissions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          bucket-permission-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass bucket-policy common-lisp:nil
                       ((allows-public-read-access :initarg
                         :allows-public-read-access :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-bucket-policy-allows-public-read-access
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "allowsPublicReadAccess")
                        (allows-public-write-access :initarg
                         :allows-public-write-access :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-bucket-policy-allows-public-write-access
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "allowsPublicWriteAccess"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-bucket-policy
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'bucket-policy
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'bucket-policy 'make-bucket-policy))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input bucket-policy))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input bucket-policy))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'allows-public-read-access))
      (common-lisp:list
       (common-lisp:cons "allowsPublicReadAccess"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'allows-public-write-access))
      (common-lisp:list
       (common-lisp:cons "allowsPublicWriteAccess"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input bucket-policy))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass bucket-public-access common-lisp:nil
                       ((effective-permission :initarg :effective-permission
                         :initform common-lisp:nil :type
                         (common-lisp:or effective-permission common-lisp:null)
                         :accessor
                         struct-shape-bucket-public-access-effective-permission
                         :shape "EffectivePermission" :location common-lisp:nil
                         :location-name "effectivePermission")
                        (permission-configuration :initarg
                         :permission-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or bucket-permission-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-bucket-public-access-permission-configuration
                         :shape "BucketPermissionConfiguration" :location
                         common-lisp:nil :location-name
                         "permissionConfiguration"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-bucket-public-access
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'bucket-public-access
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'bucket-public-access 'make-bucket-public-access))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input bucket-public-access))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input bucket-public-access))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'effective-permission))
      (common-lisp:list
       (common-lisp:cons "effectivePermission"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'permission-configuration))
      (common-lisp:list
       (common-lisp:cons "permissionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input bucket-public-access))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass bucket-server-side-encryption common-lisp:nil
                       ((kms-master-key-id :initarg :kms-master-key-id
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-bucket-server-side-encryption-kms-master-key-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "kmsMasterKeyId")
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or type common-lisp:null) :accessor
                         struct-shape-bucket-server-side-encryption-type :shape
                         "Type" :location common-lisp:nil :location-name
                         "type"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-bucket-server-side-encryption
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'bucket-server-side-encryption
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'bucket-server-side-encryption
                    'make-bucket-server-side-encryption))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          bucket-server-side-encryption))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          bucket-server-side-encryption))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-master-key-id))
      (common-lisp:list
       (common-lisp:cons "kmsMasterKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          bucket-server-side-encryption))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass bucket-sort-criteria common-lisp:nil
                       ((attribute-name :initarg :attribute-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-bucket-sort-criteria-attribute-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "attributeName")
                        (order-by :initarg :order-by :initform common-lisp:nil
                         :type (common-lisp:or order-by common-lisp:null)
                         :accessor struct-shape-bucket-sort-criteria-order-by
                         :shape "OrderBy" :location common-lisp:nil
                         :location-name "orderBy"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-bucket-sort-criteria
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'bucket-sort-criteria
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'bucket-sort-criteria 'make-bucket-sort-criteria))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input bucket-sort-criteria))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input bucket-sort-criteria))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-name))
      (common-lisp:list
       (common-lisp:cons "attributeName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'order-by))
      (common-lisp:list
       (common-lisp:cons "orderBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input bucket-sort-criteria))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass bucket-statistics-by-sensitivity common-lisp:nil
                       ((classification-error :initarg :classification-error
                         :initform common-lisp:nil :type
                         (common-lisp:or sensitivity-aggregations
                                         common-lisp:null)
                         :accessor
                         struct-shape-bucket-statistics-by-sensitivity-classification-error
                         :shape "SensitivityAggregations" :location
                         common-lisp:nil :location-name "classificationError")
                        (not-classified :initarg :not-classified :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitivity-aggregations
                                         common-lisp:null)
                         :accessor
                         struct-shape-bucket-statistics-by-sensitivity-not-classified
                         :shape "SensitivityAggregations" :location
                         common-lisp:nil :location-name "notClassified")
                        (not-sensitive :initarg :not-sensitive :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitivity-aggregations
                                         common-lisp:null)
                         :accessor
                         struct-shape-bucket-statistics-by-sensitivity-not-sensitive
                         :shape "SensitivityAggregations" :location
                         common-lisp:nil :location-name "notSensitive")
                        (sensitive :initarg :sensitive :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitivity-aggregations
                                         common-lisp:null)
                         :accessor
                         struct-shape-bucket-statistics-by-sensitivity-sensitive
                         :shape "SensitivityAggregations" :location
                         common-lisp:nil :location-name "sensitive"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-bucket-statistics-by-sensitivity
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'bucket-statistics-by-sensitivity
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'bucket-statistics-by-sensitivity
                    'make-bucket-statistics-by-sensitivity))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          bucket-statistics-by-sensitivity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          bucket-statistics-by-sensitivity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'classification-error))
      (common-lisp:list
       (common-lisp:cons "classificationError"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'not-classified))
      (common-lisp:list
       (common-lisp:cons "notClassified"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'not-sensitive))
      (common-lisp:list
       (common-lisp:cons "notSensitive"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sensitive))
      (common-lisp:list
       (common-lisp:cons "sensitive"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          bucket-statistics-by-sensitivity))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass cell common-lisp:nil
                       ((cell-reference :initarg :cell-reference :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-cell-cell-reference :shape "__string"
                         :location common-lisp:nil :location-name
                         "cellReference")
                        (column :initarg :column :initform common-lisp:nil
                         :type (common-lisp:or |__long| common-lisp:null)
                         :accessor struct-shape-cell-column :shape "__long"
                         :location common-lisp:nil :location-name "column")
                        (column-name :initarg :column-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-cell-column-name :shape "__string"
                         :location common-lisp:nil :location-name "columnName")
                        (row :initarg :row :initform common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-cell-row :shape "__long" :location
                         common-lisp:nil :location-name "row"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-cell (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'cell
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'cell 'make-cell))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input cell))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input cell))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cell-reference))
      (common-lisp:list
       (common-lisp:cons "cellReference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'column))
      (common-lisp:list
       (common-lisp:cons "column"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'column-name))
      (common-lisp:list
       (common-lisp:cons "columnName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'row))
      (common-lisp:list
       (common-lisp:cons "row"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input cell))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype cells () '(trivial-types:proper-list cell))
 (common-lisp:defun make-cells
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list cell))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass classification-details common-lisp:nil
                       ((detailed-results-location :initarg
                         :detailed-results-location :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-classification-details-detailed-results-location
                         :shape "__string" :location common-lisp:nil
                         :location-name "detailedResultsLocation")
                        (job-arn :initarg :job-arn :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-classification-details-job-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name "jobArn")
                        (job-id :initarg :job-id :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-classification-details-job-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "jobId")
                        (origin-type :initarg :origin-type :initform
                         common-lisp:nil :type
                         (common-lisp:or origin-type common-lisp:null)
                         :accessor
                         struct-shape-classification-details-origin-type :shape
                         "OriginType" :location common-lisp:nil :location-name
                         "originType")
                        (result :initarg :result :initform common-lisp:nil
                         :type
                         (common-lisp:or classification-result
                                         common-lisp:null)
                         :accessor struct-shape-classification-details-result
                         :shape "ClassificationResult" :location
                         common-lisp:nil :location-name "result"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-classification-details
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'classification-details
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'classification-details 'make-classification-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          classification-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          classification-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detailed-results-location))
      (common-lisp:list
       (common-lisp:cons "detailedResultsLocation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "jobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "jobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origin-type))
      (common-lisp:list
       (common-lisp:cons "originType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'result))
      (common-lisp:list
       (common-lisp:cons "result"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          classification-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass classification-export-configuration common-lisp:nil
                       ((s3destination :initarg :s3destination :initform
                         common-lisp:nil :type
                         (common-lisp:or s3destination common-lisp:null)
                         :accessor
                         struct-shape-classification-export-configuration-s3destination
                         :shape "S3Destination" :location common-lisp:nil
                         :location-name "s3Destination"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-classification-export-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'classification-export-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'classification-export-configuration
                    'make-classification-export-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          classification-export-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          classification-export-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3destination))
      (common-lisp:list
       (common-lisp:cons "s3Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          classification-export-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass classification-result common-lisp:nil
                       ((additional-occurrences :initarg
                         :additional-occurrences :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-classification-result-additional-occurrences
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "additionalOccurrences")
                        (custom-data-identifiers :initarg
                         :custom-data-identifiers :initform common-lisp:nil
                         :type
                         (common-lisp:or custom-data-identifiers
                                         common-lisp:null)
                         :accessor
                         struct-shape-classification-result-custom-data-identifiers
                         :shape "CustomDataIdentifiers" :location
                         common-lisp:nil :location-name
                         "customDataIdentifiers")
                        (mime-type :initarg :mime-type :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-classification-result-mime-type :shape
                         "__string" :location common-lisp:nil :location-name
                         "mimeType")
                        (sensitive-data :initarg :sensitive-data :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitive-data common-lisp:null)
                         :accessor
                         struct-shape-classification-result-sensitive-data
                         :shape "SensitiveData" :location common-lisp:nil
                         :location-name "sensitiveData")
                        (size-classified :initarg :size-classified :initform
                         common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-classification-result-size-classified
                         :shape "__long" :location common-lisp:nil
                         :location-name "sizeClassified")
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or classification-result-status
                                         common-lisp:null)
                         :accessor struct-shape-classification-result-status
                         :shape "ClassificationResultStatus" :location
                         common-lisp:nil :location-name "status"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-classification-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'classification-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'classification-result 'make-classification-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          classification-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          classification-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-occurrences))
      (common-lisp:list
       (common-lisp:cons "additionalOccurrences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'custom-data-identifiers))
      (common-lisp:list
       (common-lisp:cons "customDataIdentifiers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mime-type))
      (common-lisp:list
       (common-lisp:cons "mimeType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sensitive-data))
      (common-lisp:list
       (common-lisp:cons "sensitiveData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'size-classified))
      (common-lisp:list
       (common-lisp:cons "sizeClassified"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          classification-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass classification-result-status common-lisp:nil
                       ((code :initarg :code :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-classification-result-status-code :shape
                         "__string" :location common-lisp:nil :location-name
                         "code")
                        (reason :initarg :reason :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-classification-result-status-reason
                         :shape "__string" :location common-lisp:nil
                         :location-name "reason"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-classification-result-status
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'classification-result-status
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'classification-result-status
                    'make-classification-result-status))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          classification-result-status))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          classification-result-status))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'code))
      (common-lisp:list
       (common-lisp:cons "code"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reason))
      (common-lisp:list
       (common-lisp:cons "reason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          classification-result-status))
   common-lisp:nil))
(common-lisp:deftype classification-scope-id () 'common-lisp:string)
(common-lisp:deftype classification-scope-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass classification-scope-summary common-lisp:nil
                       ((id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or classification-scope-id
                                         common-lisp:null)
                         :accessor struct-shape-classification-scope-summary-id
                         :shape "ClassificationScopeId" :location
                         common-lisp:nil :location-name "id")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or classification-scope-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-classification-scope-summary-name :shape
                         "ClassificationScopeName" :location common-lisp:nil
                         :location-name "name"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-classification-scope-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'classification-scope-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'classification-scope-summary
                    'make-classification-scope-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          classification-scope-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          classification-scope-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          classification-scope-summary))
   common-lisp:nil))
(common-lisp:deftype classification-scope-update-operation ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (macie2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message)))
(common-lisp:progn
 (common-lisp:defclass create-allow-list-request common-lisp:nil
                       ((client-token :initarg :client-token :initform
                         (common-lisp:error ":clienttoken is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-allow-list-request-client-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "clientToken")
                        (criteria :initarg :criteria :initform
                         (common-lisp:error ":criteria is required") :type
                         (common-lisp:or allow-list-criteria common-lisp:null)
                         :accessor
                         struct-shape-create-allow-list-request-criteria :shape
                         "AllowListCriteria" :location common-lisp:nil
                         :location-name "criteria")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__stringMin1Max512PatternSS|
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-allow-list-request-description
                         :shape "__stringMin1Max512PatternSS" :location
                         common-lisp:nil :location-name "description")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or |__stringMin1Max128Pattern|
                                         common-lisp:null)
                         :accessor struct-shape-create-allow-list-request-name
                         :shape "__stringMin1Max128Pattern" :location
                         common-lisp:nil :location-name "name")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-create-allow-list-request-tags :shape
                         "TagMap" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-allow-list-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-allow-list-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-allow-list-request
                    'make-create-allow-list-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-allow-list-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-allow-list-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'criteria))
      (common-lisp:list
       (common-lisp:cons "criteria"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-allow-list-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-allow-list-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or
                          |__stringMin71Max89PatternArnAwsAwsCnAwsUsGovMacie2AZ19920D12AllowListAZ0922|
                          common-lisp:null)
                         :accessor struct-shape-create-allow-list-response-arn
                         :shape
                         "__stringMin71Max89PatternArnAwsAwsCnAwsUsGovMacie2AZ19920D12AllowListAZ0922"
                         :location common-lisp:nil :location-name "arn")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__stringMin22Max22PatternAZ0922|
                                         common-lisp:null)
                         :accessor struct-shape-create-allow-list-response-id
                         :shape "__stringMin22Max22PatternAZ0922" :location
                         common-lisp:nil :location-name "id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-allow-list-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-allow-list-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-allow-list-response
                    'make-create-allow-list-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-allow-list-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-allow-list-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-allow-list-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-classification-job-request common-lisp:nil
                       ((allow-list-ids :initarg :allow-list-ids :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-create-classification-job-request-allow-list-ids
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "allowListIds")
                        (client-token :initarg :client-token :initform
                         (common-lisp:error ":clienttoken is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-classification-job-request-client-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "clientToken")
                        (custom-data-identifier-ids :initarg
                         :custom-data-identifier-ids :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-create-classification-job-request-custom-data-identifier-ids
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "customDataIdentifierIds")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-classification-job-request-description
                         :shape "__string" :location common-lisp:nil
                         :location-name "description")
                        (initial-run :initarg :initial-run :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-create-classification-job-request-initial-run
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "initialRun")
                        (job-type :initarg :job-type :initform
                         (common-lisp:error ":jobtype is required") :type
                         (common-lisp:or job-type common-lisp:null) :accessor
                         struct-shape-create-classification-job-request-job-type
                         :shape "JobType" :location common-lisp:nil
                         :location-name "jobType")
                        (managed-data-identifier-ids :initarg
                         :managed-data-identifier-ids :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-create-classification-job-request-managed-data-identifier-ids
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "managedDataIdentifierIds")
                        (managed-data-identifier-selector :initarg
                         :managed-data-identifier-selector :initform
                         common-lisp:nil :type
                         (common-lisp:or managed-data-identifier-selector
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-classification-job-request-managed-data-identifier-selector
                         :shape "ManagedDataIdentifierSelector" :location
                         common-lisp:nil :location-name
                         "managedDataIdentifierSelector")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-classification-job-request-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "name")
                        (s3job-definition :initarg :s3job-definition :initform
                         (common-lisp:error ":s3jobdefinition is required")
                         :type
                         (common-lisp:or s3job-definition common-lisp:null)
                         :accessor
                         struct-shape-create-classification-job-request-s3job-definition
                         :shape "S3JobDefinition" :location common-lisp:nil
                         :location-name "s3JobDefinition")
                        (sampling-percentage :initarg :sampling-percentage
                         :initform common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-create-classification-job-request-sampling-percentage
                         :shape "__integer" :location common-lisp:nil
                         :location-name "samplingPercentage")
                        (schedule-frequency :initarg :schedule-frequency
                         :initform common-lisp:nil :type
                         (common-lisp:or job-schedule-frequency
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-classification-job-request-schedule-frequency
                         :shape "JobScheduleFrequency" :location
                         common-lisp:nil :location-name "scheduleFrequency")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-create-classification-job-request-tags
                         :shape "TagMap" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-classification-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-classification-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-classification-job-request
                    'make-create-classification-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-classification-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-classification-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allow-list-ids))
      (common-lisp:list
       (common-lisp:cons "allowListIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'custom-data-identifier-ids))
      (common-lisp:list
       (common-lisp:cons "customDataIdentifierIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'initial-run))
      (common-lisp:list
       (common-lisp:cons "initialRun"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-type))
      (common-lisp:list
       (common-lisp:cons "jobType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'managed-data-identifier-ids))
      (common-lisp:list
       (common-lisp:cons "managedDataIdentifierIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'managed-data-identifier-selector))
      (common-lisp:list
       (common-lisp:cons "managedDataIdentifierSelector"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3job-definition))
      (common-lisp:list
       (common-lisp:cons "s3JobDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sampling-percentage))
      (common-lisp:list
       (common-lisp:cons "samplingPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule-frequency))
      (common-lisp:list
       (common-lisp:cons "scheduleFrequency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-classification-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-classification-job-response common-lisp:nil
                       ((job-arn :initarg :job-arn :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-classification-job-response-job-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name "jobArn")
                        (job-id :initarg :job-id :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-classification-job-response-job-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "jobId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-classification-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-classification-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-classification-job-response
                    'make-create-classification-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-classification-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-classification-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "jobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "jobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-classification-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-custom-data-identifier-request common-lisp:nil
                       ((client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-custom-data-identifier-request-client-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "clientToken")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-custom-data-identifier-request-description
                         :shape "__string" :location common-lisp:nil
                         :location-name "description")
                        (ignore-words :initarg :ignore-words :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-create-custom-data-identifier-request-ignore-words
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "ignoreWords")
                        (keywords :initarg :keywords :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-create-custom-data-identifier-request-keywords
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "keywords")
                        (maximum-match-distance :initarg
                         :maximum-match-distance :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-create-custom-data-identifier-request-maximum-match-distance
                         :shape "__integer" :location common-lisp:nil
                         :location-name "maximumMatchDistance")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-custom-data-identifier-request-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "name")
                        (regex :initarg :regex :initform
                         (common-lisp:error ":regex is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-custom-data-identifier-request-regex
                         :shape "__string" :location common-lisp:nil
                         :location-name "regex")
                        (severity-levels :initarg :severity-levels :initform
                         common-lisp:nil :type
                         (common-lisp:or severity-level-list common-lisp:null)
                         :accessor
                         struct-shape-create-custom-data-identifier-request-severity-levels
                         :shape "SeverityLevelList" :location common-lisp:nil
                         :location-name "severityLevels")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-create-custom-data-identifier-request-tags
                         :shape "TagMap" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-custom-data-identifier-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-custom-data-identifier-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-custom-data-identifier-request
                    'make-create-custom-data-identifier-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-custom-data-identifier-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-custom-data-identifier-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ignore-words))
      (common-lisp:list
       (common-lisp:cons "ignoreWords"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'keywords))
      (common-lisp:list
       (common-lisp:cons "keywords"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'maximum-match-distance))
      (common-lisp:list
       (common-lisp:cons "maximumMatchDistance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'regex))
      (common-lisp:list
       (common-lisp:cons "regex"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'severity-levels))
      (common-lisp:list
       (common-lisp:cons "severityLevels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-custom-data-identifier-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-custom-data-identifier-response common-lisp:nil
                       ((custom-data-identifier-id :initarg
                         :custom-data-identifier-id :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-custom-data-identifier-response-custom-data-identifier-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "customDataIdentifierId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-custom-data-identifier-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-custom-data-identifier-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-custom-data-identifier-response
                    'make-create-custom-data-identifier-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-custom-data-identifier-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-custom-data-identifier-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'custom-data-identifier-id))
      (common-lisp:list
       (common-lisp:cons "customDataIdentifierId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-custom-data-identifier-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-findings-filter-request common-lisp:nil
                       ((action :initarg :action :initform
                         (common-lisp:error ":action is required") :type
                         (common-lisp:or findings-filter-action
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-findings-filter-request-action
                         :shape "FindingsFilterAction" :location
                         common-lisp:nil :location-name "action")
                        (client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-findings-filter-request-client-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "clientToken")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-findings-filter-request-description
                         :shape "__string" :location common-lisp:nil
                         :location-name "description")
                        (finding-criteria :initarg :finding-criteria :initform
                         (common-lisp:error ":findingcriteria is required")
                         :type
                         (common-lisp:or finding-criteria common-lisp:null)
                         :accessor
                         struct-shape-create-findings-filter-request-finding-criteria
                         :shape "FindingCriteria" :location common-lisp:nil
                         :location-name "findingCriteria")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-findings-filter-request-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "name")
                        (position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-create-findings-filter-request-position
                         :shape "__integer" :location common-lisp:nil
                         :location-name "position")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-create-findings-filter-request-tags
                         :shape "TagMap" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-findings-filter-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-findings-filter-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-findings-filter-request
                    'make-create-findings-filter-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-findings-filter-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-findings-filter-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'finding-criteria))
      (common-lisp:list
       (common-lisp:cons "findingCriteria"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-findings-filter-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-findings-filter-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-findings-filter-response-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name "arn")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-findings-filter-response-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-findings-filter-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-findings-filter-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-findings-filter-response
                    'make-create-findings-filter-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-findings-filter-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-findings-filter-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-findings-filter-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-invitations-request common-lisp:nil
                       ((account-ids :initarg :account-ids :initform
                         (common-lisp:error ":accountids is required") :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-create-invitations-request-account-ids
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "accountIds")
                        (disable-email-notification :initarg
                         :disable-email-notification :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-create-invitations-request-disable-email-notification
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "disableEmailNotification")
                        (message :initarg :message :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-invitations-request-message :shape
                         "__string" :location common-lisp:nil :location-name
                         "message"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-invitations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-invitations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-invitations-request
                    'make-create-invitations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-invitations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-invitations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-email-notification))
      (common-lisp:list
       (common-lisp:cons "disableEmailNotification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-invitations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-invitations-response common-lisp:nil
                       ((unprocessed-accounts :initarg :unprocessed-accounts
                         :initform common-lisp:nil :type
                         (common-lisp:or |__listOfUnprocessedAccount|
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-invitations-response-unprocessed-accounts
                         :shape "__listOfUnprocessedAccount" :location
                         common-lisp:nil :location-name "unprocessedAccounts"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-invitations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-invitations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-invitations-response
                    'make-create-invitations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-invitations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-invitations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'unprocessed-accounts))
      (common-lisp:list
       (common-lisp:cons "unprocessedAccounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-invitations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-member-request common-lisp:nil
                       ((account :initarg :account :initform
                         (common-lisp:error ":account is required") :type
                         (common-lisp:or account-detail common-lisp:null)
                         :accessor struct-shape-create-member-request-account
                         :shape "AccountDetail" :location common-lisp:nil
                         :location-name "account")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-create-member-request-tags :shape
                         "TagMap" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-member-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-member-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-member-request 'make-create-member-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-member-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-member-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account))
      (common-lisp:list
       (common-lisp:cons "account"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-member-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-member-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-member-response-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         "arn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-member-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-member-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-member-response 'make-create-member-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-member-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-member-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-member-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-sample-findings-request common-lisp:nil
                       ((finding-types :initarg :finding-types :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfFindingType|
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-sample-findings-request-finding-types
                         :shape "__listOfFindingType" :location common-lisp:nil
                         :location-name "findingTypes"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-sample-findings-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-sample-findings-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-sample-findings-request
                    'make-create-sample-findings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-sample-findings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-sample-findings-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'finding-types))
      (common-lisp:list
       (common-lisp:cons "findingTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-sample-findings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-sample-findings-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-sample-findings-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-sample-findings-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-sample-findings-response
                    'make-create-sample-findings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-sample-findings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-sample-findings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-sample-findings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass criteria-block-for-job common-lisp:nil
                       ((and :initarg :and :initform common-lisp:nil :type
                         (common-lisp:or |__listOfCriteriaForJob|
                                         common-lisp:null)
                         :accessor struct-shape-criteria-block-for-job-and
                         :shape "__listOfCriteriaForJob" :location
                         common-lisp:nil :location-name "and"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-criteria-block-for-job
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'criteria-block-for-job
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'criteria-block-for-job 'make-criteria-block-for-job))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          criteria-block-for-job))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          criteria-block-for-job))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'and))
      (common-lisp:list
       (common-lisp:cons "and"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          criteria-block-for-job))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass criteria-for-job common-lisp:nil
                       ((simple-criterion :initarg :simple-criterion :initform
                         common-lisp:nil :type
                         (common-lisp:or simple-criterion-for-job
                                         common-lisp:null)
                         :accessor
                         struct-shape-criteria-for-job-simple-criterion :shape
                         "SimpleCriterionForJob" :location common-lisp:nil
                         :location-name "simpleCriterion")
                        (tag-criterion :initarg :tag-criterion :initform
                         common-lisp:nil :type
                         (common-lisp:or tag-criterion-for-job
                                         common-lisp:null)
                         :accessor struct-shape-criteria-for-job-tag-criterion
                         :shape "TagCriterionForJob" :location common-lisp:nil
                         :location-name "tagCriterion"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-criteria-for-job
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'criteria-for-job
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'criteria-for-job 'make-criteria-for-job))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input criteria-for-job))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input criteria-for-job))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'simple-criterion))
      (common-lisp:list
       (common-lisp:cons "simpleCriterion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-criterion))
      (common-lisp:list
       (common-lisp:cons "tagCriterion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input criteria-for-job))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype criterion () 'common-lisp:hash-table)
 (common-lisp:defun make-criterion (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass criterion-additional-properties common-lisp:nil
                       ((eq :initarg :eq :initform common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-criterion-additional-properties-eq :shape
                         "__listOf__string" :location common-lisp:nil
                         :location-name "eq")
                        (eq-exact-match :initarg :eq-exact-match :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-criterion-additional-properties-eq-exact-match
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "eqExactMatch")
                        (gt :initarg :gt :initform common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-criterion-additional-properties-gt :shape
                         "__long" :location common-lisp:nil :location-name
                         "gt")
                        (gte :initarg :gte :initform common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-criterion-additional-properties-gte
                         :shape "__long" :location common-lisp:nil
                         :location-name "gte")
                        (lt :initarg :lt :initform common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-criterion-additional-properties-lt :shape
                         "__long" :location common-lisp:nil :location-name
                         "lt")
                        (lte :initarg :lte :initform common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-criterion-additional-properties-lte
                         :shape "__long" :location common-lisp:nil
                         :location-name "lte")
                        (neq :initarg :neq :initform common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-criterion-additional-properties-neq
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "neq"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-criterion-additional-properties
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'criterion-additional-properties
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'criterion-additional-properties
                    'make-criterion-additional-properties))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          criterion-additional-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          criterion-additional-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'eq))
      (common-lisp:list
       (common-lisp:cons "eq"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'eq-exact-match))
      (common-lisp:list
       (common-lisp:cons "eqExactMatch"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gt))
      (common-lisp:list
       (common-lisp:cons "gt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gte))
      (common-lisp:list
       (common-lisp:cons "gte"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lt))
      (common-lisp:list
       (common-lisp:cons "lt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lte))
      (common-lisp:list
       (common-lisp:cons "lte"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'neq))
      (common-lisp:list
       (common-lisp:cons "neq"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          criterion-additional-properties))
   common-lisp:nil))
(common-lisp:deftype currency () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass custom-data-identifier-summary common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-custom-data-identifier-summary-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         "arn")
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-custom-data-identifier-summary-created-at
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "createdAt")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-custom-data-identifier-summary-description
                         :shape "__string" :location common-lisp:nil
                         :location-name "description")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-custom-data-identifier-summary-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "id")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-custom-data-identifier-summary-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "name"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-custom-data-identifier-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'custom-data-identifier-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'custom-data-identifier-summary
                    'make-custom-data-identifier-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          custom-data-identifier-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          custom-data-identifier-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          custom-data-identifier-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass custom-data-identifiers common-lisp:nil
                       ((detections :initarg :detections :initform
                         common-lisp:nil :type
                         (common-lisp:or custom-detections common-lisp:null)
                         :accessor
                         struct-shape-custom-data-identifiers-detections :shape
                         "CustomDetections" :location common-lisp:nil
                         :location-name "detections")
                        (total-count :initarg :total-count :initform
                         common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-custom-data-identifiers-total-count
                         :shape "__long" :location common-lisp:nil
                         :location-name "totalCount"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-custom-data-identifiers
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'custom-data-identifiers
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'custom-data-identifiers 'make-custom-data-identifiers))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          custom-data-identifiers))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          custom-data-identifiers))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'detections))
      (common-lisp:list
       (common-lisp:cons "detections"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total-count))
      (common-lisp:list
       (common-lisp:cons "totalCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          custom-data-identifiers))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass custom-detection common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-custom-detection-arn :shape "__string"
                         :location common-lisp:nil :location-name "arn")
                        (count :initarg :count :initform common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-custom-detection-count :shape "__long"
                         :location common-lisp:nil :location-name "count")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-custom-detection-name :shape "__string"
                         :location common-lisp:nil :location-name "name")
                        (occurrences :initarg :occurrences :initform
                         common-lisp:nil :type
                         (common-lisp:or occurrences common-lisp:null)
                         :accessor struct-shape-custom-detection-occurrences
                         :shape "Occurrences" :location common-lisp:nil
                         :location-name "occurrences"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-custom-detection
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'custom-detection
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'custom-detection 'make-custom-detection))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input custom-detection))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input custom-detection))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'count))
      (common-lisp:list
       (common-lisp:cons "count"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'occurrences))
      (common-lisp:list
       (common-lisp:cons "occurrences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input custom-detection))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype custom-detections ()
   '(trivial-types:proper-list custom-detection))
 (common-lisp:defun make-custom-detections
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list custom-detection))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass daily-schedule common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-daily-schedule
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'daily-schedule
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'daily-schedule 'make-daily-schedule))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input daily-schedule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input daily-schedule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input daily-schedule))
   common-lisp:nil))
(common-lisp:deftype data-identifier-severity () 'common-lisp:string)
(common-lisp:deftype data-identifier-type () 'common-lisp:string)
(common-lisp:deftype day-of-week () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass decline-invitations-request common-lisp:nil
                       ((account-ids :initarg :account-ids :initform
                         (common-lisp:error ":accountids is required") :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-decline-invitations-request-account-ids
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "accountIds"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-decline-invitations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'decline-invitations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'decline-invitations-request
                    'make-decline-invitations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          decline-invitations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          decline-invitations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          decline-invitations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass decline-invitations-response common-lisp:nil
                       ((unprocessed-accounts :initarg :unprocessed-accounts
                         :initform common-lisp:nil :type
                         (common-lisp:or |__listOfUnprocessedAccount|
                                         common-lisp:null)
                         :accessor
                         struct-shape-decline-invitations-response-unprocessed-accounts
                         :shape "__listOfUnprocessedAccount" :location
                         common-lisp:nil :location-name "unprocessedAccounts"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-decline-invitations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'decline-invitations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'decline-invitations-response
                    'make-decline-invitations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          decline-invitations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          decline-invitations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'unprocessed-accounts))
      (common-lisp:list
       (common-lisp:cons "unprocessedAccounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          decline-invitations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass default-detection common-lisp:nil
                       ((count :initarg :count :initform common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-default-detection-count :shape "__long"
                         :location common-lisp:nil :location-name "count")
                        (occurrences :initarg :occurrences :initform
                         common-lisp:nil :type
                         (common-lisp:or occurrences common-lisp:null)
                         :accessor struct-shape-default-detection-occurrences
                         :shape "Occurrences" :location common-lisp:nil
                         :location-name "occurrences")
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-default-detection-type :shape "__string"
                         :location common-lisp:nil :location-name "type"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-default-detection
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'default-detection
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'default-detection 'make-default-detection))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input default-detection))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input default-detection))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'count))
      (common-lisp:list
       (common-lisp:cons "count"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'occurrences))
      (common-lisp:list
       (common-lisp:cons "occurrences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input default-detection))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype default-detections ()
   '(trivial-types:proper-list default-detection))
 (common-lisp:defun make-default-detections
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list default-detection))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass delete-allow-list-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-allow-list-request-id :shape
                         "__string" :location "uri" :location-name "id")
                        (ignore-job-checks :initarg :ignore-job-checks
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-allow-list-request-ignore-job-checks
                         :shape "__string" :location "querystring"
                         :location-name "ignoreJobChecks"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-allow-list-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-allow-list-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-allow-list-request
                    'make-delete-allow-list-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-allow-list-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-allow-list-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-allow-list-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-allow-list-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-allow-list-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-allow-list-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-allow-list-response
                    'make-delete-allow-list-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-allow-list-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-allow-list-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-allow-list-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-custom-data-identifier-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-custom-data-identifier-request-id
                         :shape "__string" :location "uri" :location-name
                         "id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-custom-data-identifier-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-custom-data-identifier-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-custom-data-identifier-request
                    'make-delete-custom-data-identifier-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-custom-data-identifier-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-custom-data-identifier-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-custom-data-identifier-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-custom-data-identifier-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-custom-data-identifier-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-custom-data-identifier-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-custom-data-identifier-response
                    'make-delete-custom-data-identifier-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-custom-data-identifier-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-custom-data-identifier-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-custom-data-identifier-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-findings-filter-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-findings-filter-request-id :shape
                         "__string" :location "uri" :location-name "id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-findings-filter-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-findings-filter-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-findings-filter-request
                    'make-delete-findings-filter-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-findings-filter-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-findings-filter-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-findings-filter-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-findings-filter-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-findings-filter-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-findings-filter-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-findings-filter-response
                    'make-delete-findings-filter-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-findings-filter-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-findings-filter-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-findings-filter-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-invitations-request common-lisp:nil
                       ((account-ids :initarg :account-ids :initform
                         (common-lisp:error ":accountids is required") :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-invitations-request-account-ids
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "accountIds"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-invitations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-invitations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-invitations-request
                    'make-delete-invitations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-invitations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-invitations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-invitations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-invitations-response common-lisp:nil
                       ((unprocessed-accounts :initarg :unprocessed-accounts
                         :initform common-lisp:nil :type
                         (common-lisp:or |__listOfUnprocessedAccount|
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-invitations-response-unprocessed-accounts
                         :shape "__listOfUnprocessedAccount" :location
                         common-lisp:nil :location-name "unprocessedAccounts"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-invitations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-invitations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-invitations-response
                    'make-delete-invitations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-invitations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-invitations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'unprocessed-accounts))
      (common-lisp:list
       (common-lisp:cons "unprocessedAccounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-invitations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-member-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-member-request-id :shape
                         "__string" :location "uri" :location-name "id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-member-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-member-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-member-request 'make-delete-member-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-member-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-member-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-member-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-member-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-member-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-member-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-member-response 'make-delete-member-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-member-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-member-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-member-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-buckets-request common-lisp:nil
                       ((criteria :initarg :criteria :initform common-lisp:nil
                         :type
                         (common-lisp:or bucket-criteria common-lisp:null)
                         :accessor
                         struct-shape-describe-buckets-request-criteria :shape
                         "BucketCriteria" :location common-lisp:nil
                         :location-name "criteria")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-describe-buckets-request-max-results
                         :shape "__integer" :location common-lisp:nil
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-buckets-request-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken")
                        (sort-criteria :initarg :sort-criteria :initform
                         common-lisp:nil :type
                         (common-lisp:or bucket-sort-criteria common-lisp:null)
                         :accessor
                         struct-shape-describe-buckets-request-sort-criteria
                         :shape "BucketSortCriteria" :location common-lisp:nil
                         :location-name "sortCriteria"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-buckets-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-buckets-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-buckets-request 'make-describe-buckets-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-buckets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-buckets-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'criteria))
      (common-lisp:list
       (common-lisp:cons "criteria"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sort-criteria))
      (common-lisp:list
       (common-lisp:cons "sortCriteria"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-buckets-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-buckets-response common-lisp:nil
                       ((buckets :initarg :buckets :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOfBucketMetadata|
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-buckets-response-buckets :shape
                         "__listOfBucketMetadata" :location common-lisp:nil
                         :location-name "buckets")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-buckets-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-buckets-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-buckets-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-buckets-response
                    'make-describe-buckets-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-buckets-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-buckets-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'buckets))
      (common-lisp:list
       (common-lisp:cons "buckets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-buckets-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-classification-job-request common-lisp:nil
                       ((job-id :initarg :job-id :initform
                         (common-lisp:error ":jobid is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-classification-job-request-job-id
                         :shape "__string" :location "uri" :location-name
                         "jobId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-classification-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-classification-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-classification-job-request
                    'make-describe-classification-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-classification-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-classification-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-classification-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-classification-job-response common-lisp:nil
                       ((allow-list-ids :initarg :allow-list-ids :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-describe-classification-job-response-allow-list-ids
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "allowListIds")
                        (client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-classification-job-response-client-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "clientToken")
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-describe-classification-job-response-created-at
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "createdAt")
                        (custom-data-identifier-ids :initarg
                         :custom-data-identifier-ids :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-describe-classification-job-response-custom-data-identifier-ids
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "customDataIdentifierIds")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-classification-job-response-description
                         :shape "__string" :location common-lisp:nil
                         :location-name "description")
                        (initial-run :initarg :initial-run :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-describe-classification-job-response-initial-run
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "initialRun")
                        (job-arn :initarg :job-arn :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-describe-classification-job-response-job-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name "jobArn")
                        (job-id :initarg :job-id :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-describe-classification-job-response-job-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "jobId")
                        (job-status :initarg :job-status :initform
                         common-lisp:nil :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-describe-classification-job-response-job-status
                         :shape "JobStatus" :location common-lisp:nil
                         :location-name "jobStatus")
                        (job-type :initarg :job-type :initform common-lisp:nil
                         :type (common-lisp:or job-type common-lisp:null)
                         :accessor
                         struct-shape-describe-classification-job-response-job-type
                         :shape "JobType" :location common-lisp:nil
                         :location-name "jobType")
                        (last-run-error-status :initarg :last-run-error-status
                         :initform common-lisp:nil :type
                         (common-lisp:or last-run-error-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-classification-job-response-last-run-error-status
                         :shape "LastRunErrorStatus" :location common-lisp:nil
                         :location-name "lastRunErrorStatus")
                        (last-run-time :initarg :last-run-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-describe-classification-job-response-last-run-time
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "lastRunTime")
                        (managed-data-identifier-ids :initarg
                         :managed-data-identifier-ids :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-describe-classification-job-response-managed-data-identifier-ids
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "managedDataIdentifierIds")
                        (managed-data-identifier-selector :initarg
                         :managed-data-identifier-selector :initform
                         common-lisp:nil :type
                         (common-lisp:or managed-data-identifier-selector
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-classification-job-response-managed-data-identifier-selector
                         :shape "ManagedDataIdentifierSelector" :location
                         common-lisp:nil :location-name
                         "managedDataIdentifierSelector")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-classification-job-response-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "name")
                        (s3job-definition :initarg :s3job-definition :initform
                         common-lisp:nil :type
                         (common-lisp:or s3job-definition common-lisp:null)
                         :accessor
                         struct-shape-describe-classification-job-response-s3job-definition
                         :shape "S3JobDefinition" :location common-lisp:nil
                         :location-name "s3JobDefinition")
                        (sampling-percentage :initarg :sampling-percentage
                         :initform common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-describe-classification-job-response-sampling-percentage
                         :shape "__integer" :location common-lisp:nil
                         :location-name "samplingPercentage")
                        (schedule-frequency :initarg :schedule-frequency
                         :initform common-lisp:nil :type
                         (common-lisp:or job-schedule-frequency
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-classification-job-response-schedule-frequency
                         :shape "JobScheduleFrequency" :location
                         common-lisp:nil :location-name "scheduleFrequency")
                        (statistics :initarg :statistics :initform
                         common-lisp:nil :type
                         (common-lisp:or statistics common-lisp:null) :accessor
                         struct-shape-describe-classification-job-response-statistics
                         :shape "Statistics" :location common-lisp:nil
                         :location-name "statistics")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-describe-classification-job-response-tags
                         :shape "TagMap" :location common-lisp:nil
                         :location-name "tags")
                        (user-paused-details :initarg :user-paused-details
                         :initform common-lisp:nil :type
                         (common-lisp:or user-paused-details common-lisp:null)
                         :accessor
                         struct-shape-describe-classification-job-response-user-paused-details
                         :shape "UserPausedDetails" :location common-lisp:nil
                         :location-name "userPausedDetails"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-classification-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-classification-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-classification-job-response
                    'make-describe-classification-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-classification-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-classification-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allow-list-ids))
      (common-lisp:list
       (common-lisp:cons "allowListIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'custom-data-identifier-ids))
      (common-lisp:list
       (common-lisp:cons "customDataIdentifierIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'initial-run))
      (common-lisp:list
       (common-lisp:cons "initialRun"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "jobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "jobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "jobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-type))
      (common-lisp:list
       (common-lisp:cons "jobType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-run-error-status))
      (common-lisp:list
       (common-lisp:cons "lastRunErrorStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-run-time))
      (common-lisp:list
       (common-lisp:cons "lastRunTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'managed-data-identifier-ids))
      (common-lisp:list
       (common-lisp:cons "managedDataIdentifierIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'managed-data-identifier-selector))
      (common-lisp:list
       (common-lisp:cons "managedDataIdentifierSelector"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3job-definition))
      (common-lisp:list
       (common-lisp:cons "s3JobDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sampling-percentage))
      (common-lisp:list
       (common-lisp:cons "samplingPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule-frequency))
      (common-lisp:list
       (common-lisp:cons "scheduleFrequency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statistics))
      (common-lisp:list
       (common-lisp:cons "statistics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-paused-details))
      (common-lisp:list
       (common-lisp:cons "userPausedDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-classification-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-organization-configuration-request
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-organization-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-organization-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-organization-configuration-request
                    'make-describe-organization-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-organization-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-organization-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-organization-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-organization-configuration-response
                       common-lisp:nil
                       ((auto-enable :initarg :auto-enable :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-describe-organization-configuration-response-auto-enable
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "autoEnable")
                        (max-account-limit-reached :initarg
                         :max-account-limit-reached :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-describe-organization-configuration-response-max-account-limit-reached
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "maxAccountLimitReached"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-organization-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-organization-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-organization-configuration-response
                    'make-describe-organization-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-organization-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-organization-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-enable))
      (common-lisp:list
       (common-lisp:cons "autoEnable"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'max-account-limit-reached))
      (common-lisp:list
       (common-lisp:cons "maxAccountLimitReached"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-organization-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass detected-data-details common-lisp:nil
                       ((value :initarg :value :initform
                         (common-lisp:error ":value is required") :type
                         (common-lisp:or |__stringMin1Max128| common-lisp:null)
                         :accessor struct-shape-detected-data-details-value
                         :shape "__stringMin1Max128" :location common-lisp:nil
                         :location-name "value"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-detected-data-details
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'detected-data-details
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'detected-data-details 'make-detected-data-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detected-data-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detected-data-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detected-data-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass detection common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-detection-arn :shape "__string" :location
                         common-lisp:nil :location-name "arn")
                        (count :initarg :count :initform common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-detection-count :shape "__long" :location
                         common-lisp:nil :location-name "count")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-detection-id :shape "__string" :location
                         common-lisp:nil :location-name "id")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-detection-name :shape "__string"
                         :location common-lisp:nil :location-name "name")
                        (suppressed :initarg :suppressed :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-detection-suppressed :shape
                         "__boolean" :location common-lisp:nil :location-name
                         "suppressed")
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or data-identifier-type common-lisp:null)
                         :accessor struct-shape-detection-type :shape
                         "DataIdentifierType" :location common-lisp:nil
                         :location-name "type"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-detection
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'detection
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'detection 'make-detection))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input detection))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input detection))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'count))
      (common-lisp:list
       (common-lisp:cons "count"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'suppressed))
      (common-lisp:list
       (common-lisp:cons "suppressed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input detection))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disable-macie-request common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disable-macie-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'disable-macie-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'disable-macie-request 'make-disable-macie-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disable-macie-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disable-macie-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disable-macie-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disable-macie-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disable-macie-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'disable-macie-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'disable-macie-response 'make-disable-macie-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disable-macie-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disable-macie-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disable-macie-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disable-organization-admin-account-request
                       common-lisp:nil
                       ((admin-account-id :initarg :admin-account-id :initform
                         (common-lisp:error ":adminaccountid is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-disable-organization-admin-account-request-admin-account-id
                         :shape "__string" :location "querystring"
                         :location-name "adminAccountId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disable-organization-admin-account-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'disable-organization-admin-account-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'disable-organization-admin-account-request
                    'make-disable-organization-admin-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disable-organization-admin-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disable-organization-admin-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disable-organization-admin-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disable-organization-admin-account-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disable-organization-admin-account-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'disable-organization-admin-account-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'disable-organization-admin-account-response
                    'make-disable-organization-admin-account-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disable-organization-admin-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disable-organization-admin-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disable-organization-admin-account-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-from-administrator-account-request
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disassociate-from-administrator-account-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-from-administrator-account-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'disassociate-from-administrator-account-request
                    'make-disassociate-from-administrator-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-from-administrator-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-from-administrator-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-from-administrator-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-from-administrator-account-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disassociate-from-administrator-account-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-from-administrator-account-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'disassociate-from-administrator-account-response
                    'make-disassociate-from-administrator-account-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-from-administrator-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-from-administrator-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-from-administrator-account-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-from-master-account-request common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disassociate-from-master-account-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-from-master-account-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'disassociate-from-master-account-request
                    'make-disassociate-from-master-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-from-master-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-from-master-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-from-master-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-from-master-account-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disassociate-from-master-account-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-from-master-account-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'disassociate-from-master-account-response
                    'make-disassociate-from-master-account-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-from-master-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-from-master-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-from-master-account-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-member-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-disassociate-member-request-id :shape
                         "__string" :location "uri" :location-name "id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disassociate-member-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'disassociate-member-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'disassociate-member-request
                    'make-disassociate-member-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-member-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-member-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-member-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-member-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disassociate-member-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'disassociate-member-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'disassociate-member-response
                    'make-disassociate-member-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-member-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-member-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-member-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass domain-details common-lisp:nil
                       ((domain-name :initarg :domain-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-domain-details-domain-name :shape
                         "__string" :location common-lisp:nil :location-name
                         "domainName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-domain-details
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'domain-details
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'domain-details 'make-domain-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input domain-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input domain-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "domainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input domain-details))
   common-lisp:nil))
(common-lisp:deftype effective-permission () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass empty common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-empty
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'empty
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'empty 'make-empty))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input empty))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input empty))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input empty))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass enable-macie-request common-lisp:nil
                       ((client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-enable-macie-request-client-token :shape
                         "__string" :location common-lisp:nil :location-name
                         "clientToken")
                        (finding-publishing-frequency :initarg
                         :finding-publishing-frequency :initform
                         common-lisp:nil :type
                         (common-lisp:or finding-publishing-frequency
                                         common-lisp:null)
                         :accessor
                         struct-shape-enable-macie-request-finding-publishing-frequency
                         :shape "FindingPublishingFrequency" :location
                         common-lisp:nil :location-name
                         "findingPublishingFrequency")
                        (status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or macie-status common-lisp:null)
                         :accessor struct-shape-enable-macie-request-status
                         :shape "MacieStatus" :location common-lisp:nil
                         :location-name "status"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-enable-macie-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'enable-macie-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'enable-macie-request 'make-enable-macie-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input enable-macie-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input enable-macie-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'finding-publishing-frequency))
      (common-lisp:list
       (common-lisp:cons "findingPublishingFrequency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input enable-macie-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass enable-macie-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-enable-macie-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'enable-macie-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'enable-macie-response 'make-enable-macie-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          enable-macie-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          enable-macie-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          enable-macie-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass enable-organization-admin-account-request
                       common-lisp:nil
                       ((admin-account-id :initarg :admin-account-id :initform
                         (common-lisp:error ":adminaccountid is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-enable-organization-admin-account-request-admin-account-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "adminAccountId")
                        (client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-enable-organization-admin-account-request-client-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "clientToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-enable-organization-admin-account-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'enable-organization-admin-account-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'enable-organization-admin-account-request
                    'make-enable-organization-admin-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          enable-organization-admin-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          enable-organization-admin-account-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'admin-account-id))
      (common-lisp:list
       (common-lisp:cons "adminAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          enable-organization-admin-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass enable-organization-admin-account-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-enable-organization-admin-account-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'enable-organization-admin-account-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'enable-organization-admin-account-response
                    'make-enable-organization-admin-account-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          enable-organization-admin-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          enable-organization-admin-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          enable-organization-admin-account-response))
   common-lisp:nil))
(common-lisp:deftype encryption-type () 'common-lisp:string)
(common-lisp:deftype error-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass federated-user common-lisp:nil
                       ((access-key-id :initarg :access-key-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-federated-user-access-key-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "accessKeyId")
                        (account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-federated-user-account-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "accountId")
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-federated-user-arn :shape "__string"
                         :location common-lisp:nil :location-name "arn")
                        (principal-id :initarg :principal-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-federated-user-principal-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "principalId")
                        (session-context :initarg :session-context :initform
                         common-lisp:nil :type
                         (common-lisp:or session-context common-lisp:null)
                         :accessor struct-shape-federated-user-session-context
                         :shape "SessionContext" :location common-lisp:nil
                         :location-name "sessionContext"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-federated-user
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'federated-user
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'federated-user 'make-federated-user))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input federated-user))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input federated-user))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-key-id))
      (common-lisp:list
       (common-lisp:cons "accessKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-id))
      (common-lisp:list
       (common-lisp:cons "principalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'session-context))
      (common-lisp:list
       (common-lisp:cons "sessionContext"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input federated-user))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass finding common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-finding-account-id :shape "__string"
                         :location common-lisp:nil :location-name "accountId")
                        (archived :initarg :archived :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-finding-archived :shape
                         "__boolean" :location common-lisp:nil :location-name
                         "archived")
                        (category :initarg :category :initform common-lisp:nil
                         :type
                         (common-lisp:or finding-category common-lisp:null)
                         :accessor struct-shape-finding-category :shape
                         "FindingCategory" :location common-lisp:nil
                         :location-name "category")
                        (classification-details :initarg
                         :classification-details :initform common-lisp:nil
                         :type
                         (common-lisp:or classification-details
                                         common-lisp:null)
                         :accessor struct-shape-finding-classification-details
                         :shape "ClassificationDetails" :location
                         common-lisp:nil :location-name
                         "classificationDetails")
                        (count :initarg :count :initform common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-finding-count :shape "__long" :location
                         common-lisp:nil :location-name "count")
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor struct-shape-finding-created-at :shape
                         "__timestampIso8601" :location common-lisp:nil
                         :location-name "createdAt")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-finding-description :shape "__string"
                         :location common-lisp:nil :location-name
                         "description")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-finding-id :shape "__string" :location
                         common-lisp:nil :location-name "id")
                        (partition :initarg :partition :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-finding-partition :shape "__string"
                         :location common-lisp:nil :location-name "partition")
                        (policy-details :initarg :policy-details :initform
                         common-lisp:nil :type
                         (common-lisp:or policy-details common-lisp:null)
                         :accessor struct-shape-finding-policy-details :shape
                         "PolicyDetails" :location common-lisp:nil
                         :location-name "policyDetails")
                        (region :initarg :region :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-finding-region :shape
                         "__string" :location common-lisp:nil :location-name
                         "region")
                        (resources-affected :initarg :resources-affected
                         :initform common-lisp:nil :type
                         (common-lisp:or resources-affected common-lisp:null)
                         :accessor struct-shape-finding-resources-affected
                         :shape "ResourcesAffected" :location common-lisp:nil
                         :location-name "resourcesAffected")
                        (sample :initarg :sample :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-finding-sample :shape
                         "__boolean" :location common-lisp:nil :location-name
                         "sample")
                        (schema-version :initarg :schema-version :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-finding-schema-version :shape "__string"
                         :location common-lisp:nil :location-name
                         "schemaVersion")
                        (severity :initarg :severity :initform common-lisp:nil
                         :type (common-lisp:or severity common-lisp:null)
                         :accessor struct-shape-finding-severity :shape
                         "Severity" :location common-lisp:nil :location-name
                         "severity")
                        (title :initarg :title :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-finding-title :shape "__string" :location
                         common-lisp:nil :location-name "title")
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or finding-type common-lisp:null)
                         :accessor struct-shape-finding-type :shape
                         "FindingType" :location common-lisp:nil :location-name
                         "type")
                        (updated-at :initarg :updated-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor struct-shape-finding-updated-at :shape
                         "__timestampIso8601" :location common-lisp:nil
                         :location-name "updatedAt"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-finding
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'finding
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'finding 'make-finding))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input finding))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input finding))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'archived))
      (common-lisp:list
       (common-lisp:cons "archived"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'category))
      (common-lisp:list
       (common-lisp:cons "category"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'classification-details))
      (common-lisp:list
       (common-lisp:cons "classificationDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'count))
      (common-lisp:list
       (common-lisp:cons "count"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'partition))
      (common-lisp:list
       (common-lisp:cons "partition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-details))
      (common-lisp:list
       (common-lisp:cons "policyDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'region))
      (common-lisp:list
       (common-lisp:cons "region"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resources-affected))
      (common-lisp:list
       (common-lisp:cons "resourcesAffected"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sample))
      (common-lisp:list
       (common-lisp:cons "sample"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schema-version))
      (common-lisp:list
       (common-lisp:cons "schemaVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'severity))
      (common-lisp:list
       (common-lisp:cons "severity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'title))
      (common-lisp:list
       (common-lisp:cons "title"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input finding))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass finding-action common-lisp:nil
                       ((action-type :initarg :action-type :initform
                         common-lisp:nil :type
                         (common-lisp:or finding-action-type common-lisp:null)
                         :accessor struct-shape-finding-action-action-type
                         :shape "FindingActionType" :location common-lisp:nil
                         :location-name "actionType")
                        (api-call-details :initarg :api-call-details :initform
                         common-lisp:nil :type
                         (common-lisp:or api-call-details common-lisp:null)
                         :accessor struct-shape-finding-action-api-call-details
                         :shape "ApiCallDetails" :location common-lisp:nil
                         :location-name "apiCallDetails"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-finding-action
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'finding-action
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'finding-action 'make-finding-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input finding-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input finding-action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action-type))
      (common-lisp:list
       (common-lisp:cons "actionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-call-details))
      (common-lisp:list
       (common-lisp:cons "apiCallDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input finding-action))
   common-lisp:nil))
(common-lisp:deftype finding-action-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass finding-actor common-lisp:nil
                       ((domain-details :initarg :domain-details :initform
                         common-lisp:nil :type
                         (common-lisp:or domain-details common-lisp:null)
                         :accessor struct-shape-finding-actor-domain-details
                         :shape "DomainDetails" :location common-lisp:nil
                         :location-name "domainDetails")
                        (ip-address-details :initarg :ip-address-details
                         :initform common-lisp:nil :type
                         (common-lisp:or ip-address-details common-lisp:null)
                         :accessor
                         struct-shape-finding-actor-ip-address-details :shape
                         "IpAddressDetails" :location common-lisp:nil
                         :location-name "ipAddressDetails")
                        (user-identity :initarg :user-identity :initform
                         common-lisp:nil :type
                         (common-lisp:or user-identity common-lisp:null)
                         :accessor struct-shape-finding-actor-user-identity
                         :shape "UserIdentity" :location common-lisp:nil
                         :location-name "userIdentity"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-finding-actor
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'finding-actor
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'finding-actor 'make-finding-actor))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input finding-actor))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input finding-actor))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-details))
      (common-lisp:list
       (common-lisp:cons "domainDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ip-address-details))
      (common-lisp:list
       (common-lisp:cons "ipAddressDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-identity))
      (common-lisp:list
       (common-lisp:cons "userIdentity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input finding-actor))
   common-lisp:nil))
(common-lisp:deftype finding-category () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass finding-criteria common-lisp:nil
                       ((criterion :initarg :criterion :initform
                         common-lisp:nil :type
                         (common-lisp:or criterion common-lisp:null) :accessor
                         struct-shape-finding-criteria-criterion :shape
                         "Criterion" :location common-lisp:nil :location-name
                         "criterion"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-finding-criteria
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'finding-criteria
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'finding-criteria 'make-finding-criteria))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input finding-criteria))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input finding-criteria))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'criterion))
      (common-lisp:list
       (common-lisp:cons "criterion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input finding-criteria))
   common-lisp:nil))
(common-lisp:deftype finding-publishing-frequency () 'common-lisp:string)
(common-lisp:deftype finding-statistics-sort-attribute-name ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass finding-statistics-sort-criteria common-lisp:nil
                       ((attribute-name :initarg :attribute-name :initform
                         common-lisp:nil :type
                         (common-lisp:or finding-statistics-sort-attribute-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-finding-statistics-sort-criteria-attribute-name
                         :shape "FindingStatisticsSortAttributeName" :location
                         common-lisp:nil :location-name "attributeName")
                        (order-by :initarg :order-by :initform common-lisp:nil
                         :type (common-lisp:or order-by common-lisp:null)
                         :accessor
                         struct-shape-finding-statistics-sort-criteria-order-by
                         :shape "OrderBy" :location common-lisp:nil
                         :location-name "orderBy"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-finding-statistics-sort-criteria
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'finding-statistics-sort-criteria
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'finding-statistics-sort-criteria
                    'make-finding-statistics-sort-criteria))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          finding-statistics-sort-criteria))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          finding-statistics-sort-criteria))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-name))
      (common-lisp:list
       (common-lisp:cons "attributeName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'order-by))
      (common-lisp:list
       (common-lisp:cons "orderBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          finding-statistics-sort-criteria))
   common-lisp:nil))
(common-lisp:deftype finding-type () 'common-lisp:string)
(common-lisp:deftype findings-filter-action () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass findings-filter-list-item common-lisp:nil
                       ((action :initarg :action :initform common-lisp:nil
                         :type
                         (common-lisp:or findings-filter-action
                                         common-lisp:null)
                         :accessor
                         struct-shape-findings-filter-list-item-action :shape
                         "FindingsFilterAction" :location common-lisp:nil
                         :location-name "action")
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-findings-filter-list-item-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         "arn")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-findings-filter-list-item-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "id")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-findings-filter-list-item-name :shape
                         "__string" :location common-lisp:nil :location-name
                         "name")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-findings-filter-list-item-tags :shape
                         "TagMap" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-findings-filter-list-item
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'findings-filter-list-item
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'findings-filter-list-item
                    'make-findings-filter-list-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          findings-filter-list-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          findings-filter-list-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          findings-filter-list-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-administrator-account-request common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-administrator-account-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-administrator-account-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-administrator-account-request
                    'make-get-administrator-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-administrator-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-administrator-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-administrator-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-administrator-account-response common-lisp:nil
                       ((administrator :initarg :administrator :initform
                         common-lisp:nil :type
                         (common-lisp:or invitation common-lisp:null) :accessor
                         struct-shape-get-administrator-account-response-administrator
                         :shape "Invitation" :location common-lisp:nil
                         :location-name "administrator"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-administrator-account-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-administrator-account-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-administrator-account-response
                    'make-get-administrator-account-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-administrator-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-administrator-account-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'administrator))
      (common-lisp:list
       (common-lisp:cons "administrator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-administrator-account-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-allow-list-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-allow-list-request-id :shape
                         "__string" :location "uri" :location-name "id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-allow-list-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-allow-list-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-allow-list-request 'make-get-allow-list-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-allow-list-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-allow-list-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-allow-list-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-allow-list-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or
                          |__stringMin71Max89PatternArnAwsAwsCnAwsUsGovMacie2AZ19920D12AllowListAZ0922|
                          common-lisp:null)
                         :accessor struct-shape-get-allow-list-response-arn
                         :shape
                         "__stringMin71Max89PatternArnAwsAwsCnAwsUsGovMacie2AZ19920D12AllowListAZ0922"
                         :location common-lisp:nil :location-name "arn")
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-get-allow-list-response-created-at :shape
                         "__timestampIso8601" :location common-lisp:nil
                         :location-name "createdAt")
                        (criteria :initarg :criteria :initform common-lisp:nil
                         :type
                         (common-lisp:or allow-list-criteria common-lisp:null)
                         :accessor
                         struct-shape-get-allow-list-response-criteria :shape
                         "AllowListCriteria" :location common-lisp:nil
                         :location-name "criteria")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__stringMin1Max512PatternSS|
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-allow-list-response-description
                         :shape "__stringMin1Max512PatternSS" :location
                         common-lisp:nil :location-name "description")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__stringMin22Max22PatternAZ0922|
                                         common-lisp:null)
                         :accessor struct-shape-get-allow-list-response-id
                         :shape "__stringMin22Max22PatternAZ0922" :location
                         common-lisp:nil :location-name "id")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__stringMin1Max128Pattern|
                                         common-lisp:null)
                         :accessor struct-shape-get-allow-list-response-name
                         :shape "__stringMin1Max128Pattern" :location
                         common-lisp:nil :location-name "name")
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or allow-list-status common-lisp:null)
                         :accessor struct-shape-get-allow-list-response-status
                         :shape "AllowListStatus" :location common-lisp:nil
                         :location-name "status")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-get-allow-list-response-tags :shape
                         "TagMap" :location common-lisp:nil :location-name
                         "tags")
                        (updated-at :initarg :updated-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-get-allow-list-response-updated-at :shape
                         "__timestampIso8601" :location common-lisp:nil
                         :location-name "updatedAt"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-allow-list-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-allow-list-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-allow-list-response 'make-get-allow-list-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-allow-list-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-allow-list-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'criteria))
      (common-lisp:list
       (common-lisp:cons "criteria"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-allow-list-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-automated-discovery-configuration-request
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-automated-discovery-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-automated-discovery-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-automated-discovery-configuration-request
                    'make-get-automated-discovery-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-automated-discovery-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-automated-discovery-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-automated-discovery-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-automated-discovery-configuration-response
                       common-lisp:nil
                       ((classification-scope-id :initarg
                         :classification-scope-id :initform common-lisp:nil
                         :type
                         (common-lisp:or classification-scope-id
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-automated-discovery-configuration-response-classification-scope-id
                         :shape "ClassificationScopeId" :location
                         common-lisp:nil :location-name
                         "classificationScopeId")
                        (disabled-at :initarg :disabled-at :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-get-automated-discovery-configuration-response-disabled-at
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name "disabledAt")
                        (first-enabled-at :initarg :first-enabled-at :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-get-automated-discovery-configuration-response-first-enabled-at
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name "firstEnabledAt")
                        (last-updated-at :initarg :last-updated-at :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-get-automated-discovery-configuration-response-last-updated-at
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name "lastUpdatedAt")
                        (sensitivity-inspection-template-id :initarg
                         :sensitivity-inspection-template-id :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitivity-inspection-template-id
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-automated-discovery-configuration-response-sensitivity-inspection-template-id
                         :shape "SensitivityInspectionTemplateId" :location
                         common-lisp:nil :location-name
                         "sensitivityInspectionTemplateId")
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or automated-discovery-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-automated-discovery-configuration-response-status
                         :shape "AutomatedDiscoveryStatus" :location
                         common-lisp:nil :location-name "status"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-automated-discovery-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-automated-discovery-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-automated-discovery-configuration-response
                    'make-get-automated-discovery-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-automated-discovery-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-automated-discovery-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'classification-scope-id))
      (common-lisp:list
       (common-lisp:cons "classificationScopeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disabled-at))
      (common-lisp:list
       (common-lisp:cons "disabledAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'first-enabled-at))
      (common-lisp:list
       (common-lisp:cons "firstEnabledAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-at))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sensitivity-inspection-template-id))
      (common-lisp:list
       (common-lisp:cons "sensitivityInspectionTemplateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-automated-discovery-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-bucket-statistics-request common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-bucket-statistics-request-account-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "accountId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-bucket-statistics-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-bucket-statistics-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-bucket-statistics-request
                    'make-get-bucket-statistics-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-bucket-statistics-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-bucket-statistics-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-bucket-statistics-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-bucket-statistics-response common-lisp:nil
                       ((bucket-count :initarg :bucket-count :initform
                         common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-get-bucket-statistics-response-bucket-count
                         :shape "__long" :location common-lisp:nil
                         :location-name "bucketCount")
                        (bucket-count-by-effective-permission :initarg
                         :bucket-count-by-effective-permission :initform
                         common-lisp:nil :type
                         (common-lisp:or bucket-count-by-effective-permission
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-bucket-statistics-response-bucket-count-by-effective-permission
                         :shape "BucketCountByEffectivePermission" :location
                         common-lisp:nil :location-name
                         "bucketCountByEffectivePermission")
                        (bucket-count-by-encryption-type :initarg
                         :bucket-count-by-encryption-type :initform
                         common-lisp:nil :type
                         (common-lisp:or bucket-count-by-encryption-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-bucket-statistics-response-bucket-count-by-encryption-type
                         :shape "BucketCountByEncryptionType" :location
                         common-lisp:nil :location-name
                         "bucketCountByEncryptionType")
                        (bucket-count-by-object-encryption-requirement :initarg
                         :bucket-count-by-object-encryption-requirement
                         :initform common-lisp:nil :type
                         (common-lisp:or
                          bucket-count-policy-allows-unencrypted-object-uploads
                          common-lisp:null)
                         :accessor
                         struct-shape-get-bucket-statistics-response-bucket-count-by-object-encryption-requirement
                         :shape
                         "BucketCountPolicyAllowsUnencryptedObjectUploads"
                         :location common-lisp:nil :location-name
                         "bucketCountByObjectEncryptionRequirement")
                        (bucket-count-by-shared-access-type :initarg
                         :bucket-count-by-shared-access-type :initform
                         common-lisp:nil :type
                         (common-lisp:or bucket-count-by-shared-access-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-bucket-statistics-response-bucket-count-by-shared-access-type
                         :shape "BucketCountBySharedAccessType" :location
                         common-lisp:nil :location-name
                         "bucketCountBySharedAccessType")
                        (bucket-statistics-by-sensitivity :initarg
                         :bucket-statistics-by-sensitivity :initform
                         common-lisp:nil :type
                         (common-lisp:or bucket-statistics-by-sensitivity
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-bucket-statistics-response-bucket-statistics-by-sensitivity
                         :shape "BucketStatisticsBySensitivity" :location
                         common-lisp:nil :location-name
                         "bucketStatisticsBySensitivity")
                        (classifiable-object-count :initarg
                         :classifiable-object-count :initform common-lisp:nil
                         :type (common-lisp:or |__long| common-lisp:null)
                         :accessor
                         struct-shape-get-bucket-statistics-response-classifiable-object-count
                         :shape "__long" :location common-lisp:nil
                         :location-name "classifiableObjectCount")
                        (classifiable-size-in-bytes :initarg
                         :classifiable-size-in-bytes :initform common-lisp:nil
                         :type (common-lisp:or |__long| common-lisp:null)
                         :accessor
                         struct-shape-get-bucket-statistics-response-classifiable-size-in-bytes
                         :shape "__long" :location common-lisp:nil
                         :location-name "classifiableSizeInBytes")
                        (last-updated :initarg :last-updated :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-get-bucket-statistics-response-last-updated
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "lastUpdated")
                        (object-count :initarg :object-count :initform
                         common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-get-bucket-statistics-response-object-count
                         :shape "__long" :location common-lisp:nil
                         :location-name "objectCount")
                        (size-in-bytes :initarg :size-in-bytes :initform
                         common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-get-bucket-statistics-response-size-in-bytes
                         :shape "__long" :location common-lisp:nil
                         :location-name "sizeInBytes")
                        (size-in-bytes-compressed :initarg
                         :size-in-bytes-compressed :initform common-lisp:nil
                         :type (common-lisp:or |__long| common-lisp:null)
                         :accessor
                         struct-shape-get-bucket-statistics-response-size-in-bytes-compressed
                         :shape "__long" :location common-lisp:nil
                         :location-name "sizeInBytesCompressed")
                        (unclassifiable-object-count :initarg
                         :unclassifiable-object-count :initform common-lisp:nil
                         :type
                         (common-lisp:or object-level-statistics
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-bucket-statistics-response-unclassifiable-object-count
                         :shape "ObjectLevelStatistics" :location
                         common-lisp:nil :location-name
                         "unclassifiableObjectCount")
                        (unclassifiable-object-size-in-bytes :initarg
                         :unclassifiable-object-size-in-bytes :initform
                         common-lisp:nil :type
                         (common-lisp:or object-level-statistics
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-bucket-statistics-response-unclassifiable-object-size-in-bytes
                         :shape "ObjectLevelStatistics" :location
                         common-lisp:nil :location-name
                         "unclassifiableObjectSizeInBytes"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-bucket-statistics-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-bucket-statistics-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-bucket-statistics-response
                    'make-get-bucket-statistics-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-bucket-statistics-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-bucket-statistics-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-count))
      (common-lisp:list
       (common-lisp:cons "bucketCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'bucket-count-by-effective-permission))
      (common-lisp:list
       (common-lisp:cons "bucketCountByEffectivePermission"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'bucket-count-by-encryption-type))
      (common-lisp:list
       (common-lisp:cons "bucketCountByEncryptionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'bucket-count-by-object-encryption-requirement))
      (common-lisp:list
       (common-lisp:cons "bucketCountByObjectEncryptionRequirement"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'bucket-count-by-shared-access-type))
      (common-lisp:list
       (common-lisp:cons "bucketCountBySharedAccessType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'bucket-statistics-by-sensitivity))
      (common-lisp:list
       (common-lisp:cons "bucketStatisticsBySensitivity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'classifiable-object-count))
      (common-lisp:list
       (common-lisp:cons "classifiableObjectCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'classifiable-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "classifiableSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated))
      (common-lisp:list
       (common-lisp:cons "lastUpdated"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'object-count))
      (common-lisp:list
       (common-lisp:cons "objectCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "sizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'size-in-bytes-compressed))
      (common-lisp:list
       (common-lisp:cons "sizeInBytesCompressed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'unclassifiable-object-count))
      (common-lisp:list
       (common-lisp:cons "unclassifiableObjectCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'unclassifiable-object-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "unclassifiableObjectSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-bucket-statistics-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-classification-export-configuration-request
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-classification-export-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-classification-export-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-classification-export-configuration-request
                    'make-get-classification-export-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-classification-export-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-classification-export-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-classification-export-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-classification-export-configuration-response
                       common-lisp:nil
                       ((configuration :initarg :configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or classification-export-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-classification-export-configuration-response-configuration
                         :shape "ClassificationExportConfiguration" :location
                         common-lisp:nil :location-name "configuration"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-classification-export-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-classification-export-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-classification-export-configuration-response
                    'make-get-classification-export-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-classification-export-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-classification-export-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration))
      (common-lisp:list
       (common-lisp:cons "configuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-classification-export-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-classification-scope-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-classification-scope-request-id
                         :shape "__string" :location "uri" :location-name
                         "id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-classification-scope-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-classification-scope-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-classification-scope-request
                    'make-get-classification-scope-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-classification-scope-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-classification-scope-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-classification-scope-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-classification-scope-response common-lisp:nil
                       ((id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or classification-scope-id
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-classification-scope-response-id
                         :shape "ClassificationScopeId" :location
                         common-lisp:nil :location-name "id")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or classification-scope-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-classification-scope-response-name
                         :shape "ClassificationScopeName" :location
                         common-lisp:nil :location-name "name")
                        (s3 :initarg :s3 :initform common-lisp:nil :type
                         (common-lisp:or s3classification-scope
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-classification-scope-response-s3
                         :shape "S3ClassificationScope" :location
                         common-lisp:nil :location-name "s3"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-classification-scope-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-classification-scope-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-classification-scope-response
                    'make-get-classification-scope-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-classification-scope-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-classification-scope-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3))
      (common-lisp:list
       (common-lisp:cons "s3"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-classification-scope-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-custom-data-identifier-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-custom-data-identifier-request-id
                         :shape "__string" :location "uri" :location-name
                         "id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-custom-data-identifier-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-custom-data-identifier-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-custom-data-identifier-request
                    'make-get-custom-data-identifier-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-custom-data-identifier-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-custom-data-identifier-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-custom-data-identifier-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-custom-data-identifier-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-custom-data-identifier-response-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name "arn")
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-get-custom-data-identifier-response-created-at
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "createdAt")
                        (deleted :initarg :deleted :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-get-custom-data-identifier-response-deleted
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "deleted")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-custom-data-identifier-response-description
                         :shape "__string" :location common-lisp:nil
                         :location-name "description")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-custom-data-identifier-response-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "id")
                        (ignore-words :initarg :ignore-words :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-get-custom-data-identifier-response-ignore-words
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "ignoreWords")
                        (keywords :initarg :keywords :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-get-custom-data-identifier-response-keywords
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "keywords")
                        (maximum-match-distance :initarg
                         :maximum-match-distance :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-get-custom-data-identifier-response-maximum-match-distance
                         :shape "__integer" :location common-lisp:nil
                         :location-name "maximumMatchDistance")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-custom-data-identifier-response-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "name")
                        (regex :initarg :regex :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-custom-data-identifier-response-regex
                         :shape "__string" :location common-lisp:nil
                         :location-name "regex")
                        (severity-levels :initarg :severity-levels :initform
                         common-lisp:nil :type
                         (common-lisp:or severity-level-list common-lisp:null)
                         :accessor
                         struct-shape-get-custom-data-identifier-response-severity-levels
                         :shape "SeverityLevelList" :location common-lisp:nil
                         :location-name "severityLevels")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-get-custom-data-identifier-response-tags
                         :shape "TagMap" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-custom-data-identifier-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-custom-data-identifier-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-custom-data-identifier-response
                    'make-get-custom-data-identifier-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-custom-data-identifier-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-custom-data-identifier-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deleted))
      (common-lisp:list
       (common-lisp:cons "deleted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ignore-words))
      (common-lisp:list
       (common-lisp:cons "ignoreWords"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'keywords))
      (common-lisp:list
       (common-lisp:cons "keywords"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'maximum-match-distance))
      (common-lisp:list
       (common-lisp:cons "maximumMatchDistance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'regex))
      (common-lisp:list
       (common-lisp:cons "regex"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'severity-levels))
      (common-lisp:list
       (common-lisp:cons "severityLevels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-custom-data-identifier-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-finding-statistics-request common-lisp:nil
                       ((finding-criteria :initarg :finding-criteria :initform
                         common-lisp:nil :type
                         (common-lisp:or finding-criteria common-lisp:null)
                         :accessor
                         struct-shape-get-finding-statistics-request-finding-criteria
                         :shape "FindingCriteria" :location common-lisp:nil
                         :location-name "findingCriteria")
                        (group-by :initarg :group-by :initform
                         (common-lisp:error ":groupby is required") :type
                         (common-lisp:or group-by common-lisp:null) :accessor
                         struct-shape-get-finding-statistics-request-group-by
                         :shape "GroupBy" :location common-lisp:nil
                         :location-name "groupBy")
                        (size :initarg :size :initform common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-get-finding-statistics-request-size
                         :shape "__integer" :location common-lisp:nil
                         :location-name "size")
                        (sort-criteria :initarg :sort-criteria :initform
                         common-lisp:nil :type
                         (common-lisp:or finding-statistics-sort-criteria
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-finding-statistics-request-sort-criteria
                         :shape "FindingStatisticsSortCriteria" :location
                         common-lisp:nil :location-name "sortCriteria"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-finding-statistics-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-finding-statistics-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-finding-statistics-request
                    'make-get-finding-statistics-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-finding-statistics-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-finding-statistics-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'finding-criteria))
      (common-lisp:list
       (common-lisp:cons "findingCriteria"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-by))
      (common-lisp:list
       (common-lisp:cons "groupBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'size))
      (common-lisp:list
       (common-lisp:cons "size"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sort-criteria))
      (common-lisp:list
       (common-lisp:cons "sortCriteria"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-finding-statistics-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-finding-statistics-response common-lisp:nil
                       ((counts-by-group :initarg :counts-by-group :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfGroupCount| common-lisp:null)
                         :accessor
                         struct-shape-get-finding-statistics-response-counts-by-group
                         :shape "__listOfGroupCount" :location common-lisp:nil
                         :location-name "countsByGroup"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-finding-statistics-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-finding-statistics-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-finding-statistics-response
                    'make-get-finding-statistics-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-finding-statistics-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-finding-statistics-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'counts-by-group))
      (common-lisp:list
       (common-lisp:cons "countsByGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-finding-statistics-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-findings-filter-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-findings-filter-request-id :shape
                         "__string" :location "uri" :location-name "id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-findings-filter-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-findings-filter-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-findings-filter-request
                    'make-get-findings-filter-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-findings-filter-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-findings-filter-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-findings-filter-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-findings-filter-response common-lisp:nil
                       ((action :initarg :action :initform common-lisp:nil
                         :type
                         (common-lisp:or findings-filter-action
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-findings-filter-response-action
                         :shape "FindingsFilterAction" :location
                         common-lisp:nil :location-name "action")
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-findings-filter-response-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         "arn")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-findings-filter-response-description
                         :shape "__string" :location common-lisp:nil
                         :location-name "description")
                        (finding-criteria :initarg :finding-criteria :initform
                         common-lisp:nil :type
                         (common-lisp:or finding-criteria common-lisp:null)
                         :accessor
                         struct-shape-get-findings-filter-response-finding-criteria
                         :shape "FindingCriteria" :location common-lisp:nil
                         :location-name "findingCriteria")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-findings-filter-response-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "id")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-findings-filter-response-name :shape
                         "__string" :location common-lisp:nil :location-name
                         "name")
                        (position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-get-findings-filter-response-position
                         :shape "__integer" :location common-lisp:nil
                         :location-name "position")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-get-findings-filter-response-tags :shape
                         "TagMap" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-findings-filter-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-findings-filter-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-findings-filter-response
                    'make-get-findings-filter-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-findings-filter-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-findings-filter-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'finding-criteria))
      (common-lisp:list
       (common-lisp:cons "findingCriteria"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-findings-filter-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-findings-publication-configuration-request
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-findings-publication-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-findings-publication-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-findings-publication-configuration-request
                    'make-get-findings-publication-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-findings-publication-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-findings-publication-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-findings-publication-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-findings-publication-configuration-response
                       common-lisp:nil
                       ((security-hub-configuration :initarg
                         :security-hub-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or security-hub-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-findings-publication-configuration-response-security-hub-configuration
                         :shape "SecurityHubConfiguration" :location
                         common-lisp:nil :location-name
                         "securityHubConfiguration"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-findings-publication-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-findings-publication-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-findings-publication-configuration-response
                    'make-get-findings-publication-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-findings-publication-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-findings-publication-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'security-hub-configuration))
      (common-lisp:list
       (common-lisp:cons "securityHubConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-findings-publication-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-findings-request common-lisp:nil
                       ((finding-ids :initarg :finding-ids :initform
                         (common-lisp:error ":findingids is required") :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-get-findings-request-finding-ids :shape
                         "__listOf__string" :location common-lisp:nil
                         :location-name "findingIds")
                        (sort-criteria :initarg :sort-criteria :initform
                         common-lisp:nil :type
                         (common-lisp:or sort-criteria common-lisp:null)
                         :accessor
                         struct-shape-get-findings-request-sort-criteria :shape
                         "SortCriteria" :location common-lisp:nil
                         :location-name "sortCriteria"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-findings-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-findings-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-findings-request 'make-get-findings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-findings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-findings-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'finding-ids))
      (common-lisp:list
       (common-lisp:cons "findingIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sort-criteria))
      (common-lisp:list
       (common-lisp:cons "sortCriteria"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-findings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-findings-response common-lisp:nil
                       ((findings :initarg :findings :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOfFinding| common-lisp:null)
                         :accessor struct-shape-get-findings-response-findings
                         :shape "__listOfFinding" :location common-lisp:nil
                         :location-name "findings"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-findings-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-findings-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-findings-response 'make-get-findings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-findings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-findings-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'findings))
      (common-lisp:list
       (common-lisp:cons "findings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-findings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-invitations-count-request common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-invitations-count-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-invitations-count-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-invitations-count-request
                    'make-get-invitations-count-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-invitations-count-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-invitations-count-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-invitations-count-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-invitations-count-response common-lisp:nil
                       ((invitations-count :initarg :invitations-count
                         :initform common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-get-invitations-count-response-invitations-count
                         :shape "__long" :location common-lisp:nil
                         :location-name "invitationsCount"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-invitations-count-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-invitations-count-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-invitations-count-response
                    'make-get-invitations-count-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-invitations-count-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-invitations-count-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'invitations-count))
      (common-lisp:list
       (common-lisp:cons "invitationsCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-invitations-count-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-macie-session-request common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-macie-session-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-macie-session-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-macie-session-request
                    'make-get-macie-session-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-macie-session-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-macie-session-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-macie-session-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-macie-session-response common-lisp:nil
                       ((created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-get-macie-session-response-created-at
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "createdAt")
                        (finding-publishing-frequency :initarg
                         :finding-publishing-frequency :initform
                         common-lisp:nil :type
                         (common-lisp:or finding-publishing-frequency
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-macie-session-response-finding-publishing-frequency
                         :shape "FindingPublishingFrequency" :location
                         common-lisp:nil :location-name
                         "findingPublishingFrequency")
                        (service-role :initarg :service-role :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-macie-session-response-service-role
                         :shape "__string" :location common-lisp:nil
                         :location-name "serviceRole")
                        (status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or macie-status common-lisp:null)
                         :accessor
                         struct-shape-get-macie-session-response-status :shape
                         "MacieStatus" :location common-lisp:nil :location-name
                         "status")
                        (updated-at :initarg :updated-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-get-macie-session-response-updated-at
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "updatedAt"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-macie-session-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-macie-session-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-macie-session-response
                    'make-get-macie-session-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-macie-session-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-macie-session-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'finding-publishing-frequency))
      (common-lisp:list
       (common-lisp:cons "findingPublishingFrequency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-role))
      (common-lisp:list
       (common-lisp:cons "serviceRole"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-macie-session-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-master-account-request common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-master-account-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-master-account-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-master-account-request
                    'make-get-master-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-master-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-master-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-master-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-master-account-response common-lisp:nil
                       ((master :initarg :master :initform common-lisp:nil
                         :type (common-lisp:or invitation common-lisp:null)
                         :accessor
                         struct-shape-get-master-account-response-master :shape
                         "Invitation" :location common-lisp:nil :location-name
                         "master"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-master-account-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-master-account-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-master-account-response
                    'make-get-master-account-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-master-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-master-account-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'master))
      (common-lisp:list
       (common-lisp:cons "master"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-master-account-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-member-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-member-request-id :shape "__string"
                         :location "uri" :location-name "id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-member-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-member-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-member-request 'make-get-member-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-member-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-member-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-member-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-member-response common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-member-response-account-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "accountId")
                        (administrator-account-id :initarg
                         :administrator-account-id :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-member-response-administrator-account-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "administratorAccountId")
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-member-response-arn :shape "__string"
                         :location common-lisp:nil :location-name "arn")
                        (email :initarg :email :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-member-response-email :shape
                         "__string" :location common-lisp:nil :location-name
                         "email")
                        (invited-at :initarg :invited-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor struct-shape-get-member-response-invited-at
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "invitedAt")
                        (master-account-id :initarg :master-account-id
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-member-response-master-account-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "masterAccountId")
                        (relationship-status :initarg :relationship-status
                         :initform common-lisp:nil :type
                         (common-lisp:or relationship-status common-lisp:null)
                         :accessor
                         struct-shape-get-member-response-relationship-status
                         :shape "RelationshipStatus" :location common-lisp:nil
                         :location-name "relationshipStatus")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-get-member-response-tags :shape "TagMap"
                         :location common-lisp:nil :location-name "tags")
                        (updated-at :initarg :updated-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor struct-shape-get-member-response-updated-at
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "updatedAt"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-member-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-member-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-member-response 'make-get-member-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-member-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-member-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'administrator-account-id))
      (common-lisp:list
       (common-lisp:cons "administratorAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email))
      (common-lisp:list
       (common-lisp:cons "email"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'invited-at))
      (common-lisp:list
       (common-lisp:cons "invitedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'master-account-id))
      (common-lisp:list
       (common-lisp:cons "masterAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'relationship-status))
      (common-lisp:list
       (common-lisp:cons "relationshipStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-member-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-resource-profile-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-resource-profile-request-resource-arn
                         :shape "__string" :location "querystring"
                         :location-name "resourceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-resource-profile-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-resource-profile-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-resource-profile-request
                    'make-get-resource-profile-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-profile-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-profile-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-profile-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-resource-profile-response common-lisp:nil
                       ((profile-updated-at :initarg :profile-updated-at
                         :initform common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-get-resource-profile-response-profile-updated-at
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "profileUpdatedAt")
                        (sensitivity-score :initarg :sensitivity-score
                         :initform common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-get-resource-profile-response-sensitivity-score
                         :shape "__integer" :location common-lisp:nil
                         :location-name "sensitivityScore")
                        (sensitivity-score-overridden :initarg
                         :sensitivity-score-overridden :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-get-resource-profile-response-sensitivity-score-overridden
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "sensitivityScoreOverridden")
                        (statistics :initarg :statistics :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-statistics common-lisp:null)
                         :accessor
                         struct-shape-get-resource-profile-response-statistics
                         :shape "ResourceStatistics" :location common-lisp:nil
                         :location-name "statistics"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-resource-profile-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-resource-profile-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-resource-profile-response
                    'make-get-resource-profile-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-profile-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-profile-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'profile-updated-at))
      (common-lisp:list
       (common-lisp:cons "profileUpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sensitivity-score))
      (common-lisp:list
       (common-lisp:cons "sensitivityScore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sensitivity-score-overridden))
      (common-lisp:list
       (common-lisp:cons "sensitivityScoreOverridden"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statistics))
      (common-lisp:list
       (common-lisp:cons "statistics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-profile-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-reveal-configuration-request common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-reveal-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-reveal-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-reveal-configuration-request
                    'make-get-reveal-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-reveal-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-reveal-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-reveal-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-reveal-configuration-response common-lisp:nil
                       ((configuration :initarg :configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or reveal-configuration common-lisp:null)
                         :accessor
                         struct-shape-get-reveal-configuration-response-configuration
                         :shape "RevealConfiguration" :location common-lisp:nil
                         :location-name "configuration")
                        (retrieval-configuration :initarg
                         :retrieval-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or retrieval-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-reveal-configuration-response-retrieval-configuration
                         :shape "RetrievalConfiguration" :location
                         common-lisp:nil :location-name
                         "retrievalConfiguration"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-reveal-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-reveal-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-reveal-configuration-response
                    'make-get-reveal-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-reveal-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-reveal-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration))
      (common-lisp:list
       (common-lisp:cons "configuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'retrieval-configuration))
      (common-lisp:list
       (common-lisp:cons "retrievalConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-reveal-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-sensitive-data-occurrences-availability-request
                       common-lisp:nil
                       ((finding-id :initarg :finding-id :initform
                         (common-lisp:error ":findingid is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-sensitive-data-occurrences-availability-request-finding-id
                         :shape "__string" :location "uri" :location-name
                         "findingId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-sensitive-data-occurrences-availability-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-sensitive-data-occurrences-availability-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-sensitive-data-occurrences-availability-request
                    'make-get-sensitive-data-occurrences-availability-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-sensitive-data-occurrences-availability-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-sensitive-data-occurrences-availability-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-sensitive-data-occurrences-availability-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-sensitive-data-occurrences-availability-response
                       common-lisp:nil
                       ((code :initarg :code :initform common-lisp:nil :type
                         (common-lisp:or availability-code common-lisp:null)
                         :accessor
                         struct-shape-get-sensitive-data-occurrences-availability-response-code
                         :shape "AvailabilityCode" :location common-lisp:nil
                         :location-name "code")
                        (reasons :initarg :reasons :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOfUnavailabilityReasonCode|
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-sensitive-data-occurrences-availability-response-reasons
                         :shape "__listOfUnavailabilityReasonCode" :location
                         common-lisp:nil :location-name "reasons"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-sensitive-data-occurrences-availability-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-sensitive-data-occurrences-availability-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-sensitive-data-occurrences-availability-response
                    'make-get-sensitive-data-occurrences-availability-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-sensitive-data-occurrences-availability-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-sensitive-data-occurrences-availability-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'code))
      (common-lisp:list
       (common-lisp:cons "code"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reasons))
      (common-lisp:list
       (common-lisp:cons "reasons"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-sensitive-data-occurrences-availability-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-sensitive-data-occurrences-request common-lisp:nil
                       ((finding-id :initarg :finding-id :initform
                         (common-lisp:error ":findingid is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-sensitive-data-occurrences-request-finding-id
                         :shape "__string" :location "uri" :location-name
                         "findingId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-sensitive-data-occurrences-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-sensitive-data-occurrences-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-sensitive-data-occurrences-request
                    'make-get-sensitive-data-occurrences-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-sensitive-data-occurrences-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-sensitive-data-occurrences-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-sensitive-data-occurrences-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-sensitive-data-occurrences-response common-lisp:nil
                       ((error :initarg :error :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-sensitive-data-occurrences-response-error
                         :shape "__string" :location common-lisp:nil
                         :location-name "error")
                        (sensitive-data-occurrences :initarg
                         :sensitive-data-occurrences :initform common-lisp:nil
                         :type
                         (common-lisp:or sensitive-data-occurrences
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-sensitive-data-occurrences-response-sensitive-data-occurrences
                         :shape "SensitiveDataOccurrences" :location
                         common-lisp:nil :location-name
                         "sensitiveDataOccurrences")
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or reveal-request-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-sensitive-data-occurrences-response-status
                         :shape "RevealRequestStatus" :location common-lisp:nil
                         :location-name "status"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-sensitive-data-occurrences-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-sensitive-data-occurrences-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-sensitive-data-occurrences-response
                    'make-get-sensitive-data-occurrences-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-sensitive-data-occurrences-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-sensitive-data-occurrences-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sensitive-data-occurrences))
      (common-lisp:list
       (common-lisp:cons "sensitiveDataOccurrences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-sensitive-data-occurrences-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-sensitivity-inspection-template-request
                       common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-sensitivity-inspection-template-request-id
                         :shape "__string" :location "uri" :location-name
                         "id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-sensitivity-inspection-template-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-sensitivity-inspection-template-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-sensitivity-inspection-template-request
                    'make-get-sensitivity-inspection-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-sensitivity-inspection-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-sensitivity-inspection-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-sensitivity-inspection-template-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-sensitivity-inspection-template-response
                       common-lisp:nil
                       ((description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-sensitivity-inspection-template-response-description
                         :shape "__string" :location common-lisp:nil
                         :location-name "description")
                        (excludes :initarg :excludes :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          sensitivity-inspection-template-excludes
                          common-lisp:null)
                         :accessor
                         struct-shape-get-sensitivity-inspection-template-response-excludes
                         :shape "SensitivityInspectionTemplateExcludes"
                         :location common-lisp:nil :location-name "excludes")
                        (includes :initarg :includes :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          sensitivity-inspection-template-includes
                          common-lisp:null)
                         :accessor
                         struct-shape-get-sensitivity-inspection-template-response-includes
                         :shape "SensitivityInspectionTemplateIncludes"
                         :location common-lisp:nil :location-name "includes")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-sensitivity-inspection-template-response-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "name")
                        (sensitivity-inspection-template-id :initarg
                         :sensitivity-inspection-template-id :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitivity-inspection-template-id
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-sensitivity-inspection-template-response-sensitivity-inspection-template-id
                         :shape "SensitivityInspectionTemplateId" :location
                         common-lisp:nil :location-name
                         "sensitivityInspectionTemplateId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-sensitivity-inspection-template-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-sensitivity-inspection-template-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-sensitivity-inspection-template-response
                    'make-get-sensitivity-inspection-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-sensitivity-inspection-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-sensitivity-inspection-template-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'excludes))
      (common-lisp:list
       (common-lisp:cons "excludes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'includes))
      (common-lisp:list
       (common-lisp:cons "includes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sensitivity-inspection-template-id))
      (common-lisp:list
       (common-lisp:cons "sensitivityInspectionTemplateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-sensitivity-inspection-template-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-usage-statistics-request common-lisp:nil
                       ((filter-by :initarg :filter-by :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfUsageStatisticsFilter|
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-usage-statistics-request-filter-by
                         :shape "__listOfUsageStatisticsFilter" :location
                         common-lisp:nil :location-name "filterBy")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-get-usage-statistics-request-max-results
                         :shape "__integer" :location common-lisp:nil
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-usage-statistics-request-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken")
                        (sort-by :initarg :sort-by :initform common-lisp:nil
                         :type
                         (common-lisp:or usage-statistics-sort-by
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-usage-statistics-request-sort-by
                         :shape "UsageStatisticsSortBy" :location
                         common-lisp:nil :location-name "sortBy")
                        (time-range :initarg :time-range :initform
                         common-lisp:nil :type
                         (common-lisp:or time-range common-lisp:null) :accessor
                         struct-shape-get-usage-statistics-request-time-range
                         :shape "TimeRange" :location common-lisp:nil
                         :location-name "timeRange"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-usage-statistics-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-usage-statistics-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-usage-statistics-request
                    'make-get-usage-statistics-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-statistics-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-statistics-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter-by))
      (common-lisp:list
       (common-lisp:cons "filterBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sort-by))
      (common-lisp:list
       (common-lisp:cons "sortBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-range))
      (common-lisp:list
       (common-lisp:cons "timeRange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-statistics-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-usage-statistics-response common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-usage-statistics-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken")
                        (records :initarg :records :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOfUsageRecord|
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-usage-statistics-response-records
                         :shape "__listOfUsageRecord" :location common-lisp:nil
                         :location-name "records")
                        (time-range :initarg :time-range :initform
                         common-lisp:nil :type
                         (common-lisp:or time-range common-lisp:null) :accessor
                         struct-shape-get-usage-statistics-response-time-range
                         :shape "TimeRange" :location common-lisp:nil
                         :location-name "timeRange"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-usage-statistics-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-usage-statistics-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-usage-statistics-response
                    'make-get-usage-statistics-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-statistics-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-statistics-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'records))
      (common-lisp:list
       (common-lisp:cons "records"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-range))
      (common-lisp:list
       (common-lisp:cons "timeRange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-statistics-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-usage-totals-request common-lisp:nil
                       ((time-range :initarg :time-range :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-usage-totals-request-time-range
                         :shape "__string" :location "querystring"
                         :location-name "timeRange"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-usage-totals-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-usage-totals-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-usage-totals-request 'make-get-usage-totals-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-totals-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-totals-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-totals-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-usage-totals-response common-lisp:nil
                       ((time-range :initarg :time-range :initform
                         common-lisp:nil :type
                         (common-lisp:or time-range common-lisp:null) :accessor
                         struct-shape-get-usage-totals-response-time-range
                         :shape "TimeRange" :location common-lisp:nil
                         :location-name "timeRange")
                        (usage-totals :initarg :usage-totals :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfUsageTotal| common-lisp:null)
                         :accessor
                         struct-shape-get-usage-totals-response-usage-totals
                         :shape "__listOfUsageTotal" :location common-lisp:nil
                         :location-name "usageTotals"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-usage-totals-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-usage-totals-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-usage-totals-response
                    'make-get-usage-totals-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-totals-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-totals-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-range))
      (common-lisp:list
       (common-lisp:cons "timeRange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'usage-totals))
      (common-lisp:list
       (common-lisp:cons "usageTotals"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-totals-response))
   common-lisp:nil))
(common-lisp:deftype group-by () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass group-count common-lisp:nil
                       ((count :initarg :count :initform common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-group-count-count :shape "__long"
                         :location common-lisp:nil :location-name "count")
                        (group-key :initarg :group-key :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-group-count-group-key :shape "__string"
                         :location common-lisp:nil :location-name "groupKey"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-group-count
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'group-count
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'group-count 'make-group-count))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input group-count))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input group-count))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'count))
      (common-lisp:list
       (common-lisp:cons "count"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-key))
      (common-lisp:list
       (common-lisp:cons "groupKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input group-count))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass iam-user common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-iam-user-account-id :shape "__string"
                         :location common-lisp:nil :location-name "accountId")
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-iam-user-arn :shape "__string" :location
                         common-lisp:nil :location-name "arn")
                        (principal-id :initarg :principal-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-iam-user-principal-id :shape "__string"
                         :location common-lisp:nil :location-name
                         "principalId")
                        (user-name :initarg :user-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-iam-user-user-name :shape "__string"
                         :location common-lisp:nil :location-name "userName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-iam-user
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'iam-user
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'iam-user 'make-iam-user))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input iam-user))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input iam-user))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-id))
      (common-lisp:list
       (common-lisp:cons "principalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-name))
      (common-lisp:list
       (common-lisp:cons "userName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input iam-user))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (macie2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message)))
(common-lisp:progn
 (common-lisp:defclass invitation common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-invitation-account-id :shape "__string"
                         :location common-lisp:nil :location-name "accountId")
                        (invitation-id :initarg :invitation-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-invitation-invitation-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "invitationId")
                        (invited-at :initarg :invited-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor struct-shape-invitation-invited-at :shape
                         "__timestampIso8601" :location common-lisp:nil
                         :location-name "invitedAt")
                        (relationship-status :initarg :relationship-status
                         :initform common-lisp:nil :type
                         (common-lisp:or relationship-status common-lisp:null)
                         :accessor struct-shape-invitation-relationship-status
                         :shape "RelationshipStatus" :location common-lisp:nil
                         :location-name "relationshipStatus"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-invitation
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'invitation
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'invitation 'make-invitation))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input invitation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input invitation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'invitation-id))
      (common-lisp:list
       (common-lisp:cons "invitationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'invited-at))
      (common-lisp:list
       (common-lisp:cons "invitedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'relationship-status))
      (common-lisp:list
       (common-lisp:cons "relationshipStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input invitation))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass ip-address-details common-lisp:nil
                       ((ip-address-v4 :initarg :ip-address-v4 :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-ip-address-details-ip-address-v4 :shape
                         "__string" :location common-lisp:nil :location-name
                         "ipAddressV4")
                        (ip-city :initarg :ip-city :initform common-lisp:nil
                         :type (common-lisp:or ip-city common-lisp:null)
                         :accessor struct-shape-ip-address-details-ip-city
                         :shape "IpCity" :location common-lisp:nil
                         :location-name "ipCity")
                        (ip-country :initarg :ip-country :initform
                         common-lisp:nil :type
                         (common-lisp:or ip-country common-lisp:null) :accessor
                         struct-shape-ip-address-details-ip-country :shape
                         "IpCountry" :location common-lisp:nil :location-name
                         "ipCountry")
                        (ip-geo-location :initarg :ip-geo-location :initform
                         common-lisp:nil :type
                         (common-lisp:or ip-geo-location common-lisp:null)
                         :accessor
                         struct-shape-ip-address-details-ip-geo-location :shape
                         "IpGeoLocation" :location common-lisp:nil
                         :location-name "ipGeoLocation")
                        (ip-owner :initarg :ip-owner :initform common-lisp:nil
                         :type (common-lisp:or ip-owner common-lisp:null)
                         :accessor struct-shape-ip-address-details-ip-owner
                         :shape "IpOwner" :location common-lisp:nil
                         :location-name "ipOwner"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ip-address-details
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'ip-address-details
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'ip-address-details 'make-ip-address-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input ip-address-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input ip-address-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ip-address-v4))
      (common-lisp:list
       (common-lisp:cons "ipAddressV4"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ip-city))
      (common-lisp:list
       (common-lisp:cons "ipCity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ip-country))
      (common-lisp:list
       (common-lisp:cons "ipCountry"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ip-geo-location))
      (common-lisp:list
       (common-lisp:cons "ipGeoLocation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ip-owner))
      (common-lisp:list
       (common-lisp:cons "ipOwner"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input ip-address-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass ip-city common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-ip-city-name :shape "__string" :location
                         common-lisp:nil :location-name "name"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ip-city
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'ip-city
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'ip-city 'make-ip-city))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input ip-city))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input ip-city))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input ip-city))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass ip-country common-lisp:nil
                       ((code :initarg :code :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-ip-country-code :shape "__string"
                         :location common-lisp:nil :location-name "code")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-ip-country-name :shape "__string"
                         :location common-lisp:nil :location-name "name"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ip-country
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'ip-country
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'ip-country 'make-ip-country))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input ip-country))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input ip-country))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'code))
      (common-lisp:list
       (common-lisp:cons "code"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input ip-country))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass ip-geo-location common-lisp:nil
                       ((lat :initarg :lat :initform common-lisp:nil :type
                         (common-lisp:or |__double| common-lisp:null) :accessor
                         struct-shape-ip-geo-location-lat :shape "__double"
                         :location common-lisp:nil :location-name "lat")
                        (lon :initarg :lon :initform common-lisp:nil :type
                         (common-lisp:or |__double| common-lisp:null) :accessor
                         struct-shape-ip-geo-location-lon :shape "__double"
                         :location common-lisp:nil :location-name "lon"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ip-geo-location
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'ip-geo-location
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'ip-geo-location 'make-ip-geo-location))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input ip-geo-location))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input ip-geo-location))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lat))
      (common-lisp:list
       (common-lisp:cons "lat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lon))
      (common-lisp:list
       (common-lisp:cons "lon"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input ip-geo-location))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass ip-owner common-lisp:nil
                       ((asn :initarg :asn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-ip-owner-asn :shape "__string" :location
                         common-lisp:nil :location-name "asn")
                        (asn-org :initarg :asn-org :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-ip-owner-asn-org :shape
                         "__string" :location common-lisp:nil :location-name
                         "asnOrg")
                        (isp :initarg :isp :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-ip-owner-isp :shape "__string" :location
                         common-lisp:nil :location-name "isp")
                        (org :initarg :org :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-ip-owner-org :shape "__string" :location
                         common-lisp:nil :location-name "org"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ip-owner
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'ip-owner
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'ip-owner 'make-ip-owner))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input ip-owner))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input ip-owner))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'asn))
      (common-lisp:list
       (common-lisp:cons "asn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'asn-org))
      (common-lisp:list
       (common-lisp:cons "asnOrg"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'isp))
      (common-lisp:list
       (common-lisp:cons "isp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'org))
      (common-lisp:list
       (common-lisp:cons "org"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input ip-owner))
   common-lisp:nil))
(common-lisp:deftype is-defined-in-job () 'common-lisp:string)
(common-lisp:deftype is-monitored-by-job () 'common-lisp:string)
(common-lisp:deftype job-comparator () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass job-details common-lisp:nil
                       ((is-defined-in-job :initarg :is-defined-in-job
                         :initform common-lisp:nil :type
                         (common-lisp:or is-defined-in-job common-lisp:null)
                         :accessor struct-shape-job-details-is-defined-in-job
                         :shape "IsDefinedInJob" :location common-lisp:nil
                         :location-name "isDefinedInJob")
                        (is-monitored-by-job :initarg :is-monitored-by-job
                         :initform common-lisp:nil :type
                         (common-lisp:or is-monitored-by-job common-lisp:null)
                         :accessor struct-shape-job-details-is-monitored-by-job
                         :shape "IsMonitoredByJob" :location common-lisp:nil
                         :location-name "isMonitoredByJob")
                        (last-job-id :initarg :last-job-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-job-details-last-job-id :shape "__string"
                         :location common-lisp:nil :location-name "lastJobId")
                        (last-job-run-time :initarg :last-job-run-time
                         :initform common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor struct-shape-job-details-last-job-run-time
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "lastJobRunTime"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-job-details
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'job-details
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'job-details 'make-job-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input job-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input job-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-defined-in-job))
      (common-lisp:list
       (common-lisp:cons "isDefinedInJob"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-monitored-by-job))
      (common-lisp:list
       (common-lisp:cons "isMonitoredByJob"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-job-id))
      (common-lisp:list
       (common-lisp:cons "lastJobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-job-run-time))
      (common-lisp:list
       (common-lisp:cons "lastJobRunTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input job-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass job-schedule-frequency common-lisp:nil
                       ((daily-schedule :initarg :daily-schedule :initform
                         common-lisp:nil :type
                         (common-lisp:or daily-schedule common-lisp:null)
                         :accessor
                         struct-shape-job-schedule-frequency-daily-schedule
                         :shape "DailySchedule" :location common-lisp:nil
                         :location-name "dailySchedule")
                        (monthly-schedule :initarg :monthly-schedule :initform
                         common-lisp:nil :type
                         (common-lisp:or monthly-schedule common-lisp:null)
                         :accessor
                         struct-shape-job-schedule-frequency-monthly-schedule
                         :shape "MonthlySchedule" :location common-lisp:nil
                         :location-name "monthlySchedule")
                        (weekly-schedule :initarg :weekly-schedule :initform
                         common-lisp:nil :type
                         (common-lisp:or weekly-schedule common-lisp:null)
                         :accessor
                         struct-shape-job-schedule-frequency-weekly-schedule
                         :shape "WeeklySchedule" :location common-lisp:nil
                         :location-name "weeklySchedule"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-job-schedule-frequency
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'job-schedule-frequency
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'job-schedule-frequency 'make-job-schedule-frequency))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          job-schedule-frequency))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          job-schedule-frequency))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'daily-schedule))
      (common-lisp:list
       (common-lisp:cons "dailySchedule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'monthly-schedule))
      (common-lisp:list
       (common-lisp:cons "monthlySchedule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'weekly-schedule))
      (common-lisp:list
       (common-lisp:cons "weeklySchedule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          job-schedule-frequency))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass job-scope-term common-lisp:nil
                       ((simple-scope-term :initarg :simple-scope-term
                         :initform common-lisp:nil :type
                         (common-lisp:or simple-scope-term common-lisp:null)
                         :accessor
                         struct-shape-job-scope-term-simple-scope-term :shape
                         "SimpleScopeTerm" :location common-lisp:nil
                         :location-name "simpleScopeTerm")
                        (tag-scope-term :initarg :tag-scope-term :initform
                         common-lisp:nil :type
                         (common-lisp:or tag-scope-term common-lisp:null)
                         :accessor struct-shape-job-scope-term-tag-scope-term
                         :shape "TagScopeTerm" :location common-lisp:nil
                         :location-name "tagScopeTerm"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-job-scope-term
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'job-scope-term
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'job-scope-term 'make-job-scope-term))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input job-scope-term))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input job-scope-term))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'simple-scope-term))
      (common-lisp:list
       (common-lisp:cons "simpleScopeTerm"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-scope-term))
      (common-lisp:list
       (common-lisp:cons "tagScopeTerm"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input job-scope-term))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass job-scoping-block common-lisp:nil
                       ((and :initarg :and :initform common-lisp:nil :type
                         (common-lisp:or |__listOfJobScopeTerm|
                                         common-lisp:null)
                         :accessor struct-shape-job-scoping-block-and :shape
                         "__listOfJobScopeTerm" :location common-lisp:nil
                         :location-name "and"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-job-scoping-block
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'job-scoping-block
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'job-scoping-block 'make-job-scoping-block))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input job-scoping-block))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input job-scoping-block))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'and))
      (common-lisp:list
       (common-lisp:cons "and"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input job-scoping-block))
   common-lisp:nil))
(common-lisp:deftype job-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass job-summary common-lisp:nil
                       ((bucket-criteria :initarg :bucket-criteria :initform
                         common-lisp:nil :type
                         (common-lisp:or s3bucket-criteria-for-job
                                         common-lisp:null)
                         :accessor struct-shape-job-summary-bucket-criteria
                         :shape "S3BucketCriteriaForJob" :location
                         common-lisp:nil :location-name "bucketCriteria")
                        (bucket-definitions :initarg :bucket-definitions
                         :initform common-lisp:nil :type
                         (common-lisp:or |__listOfS3BucketDefinitionForJob|
                                         common-lisp:null)
                         :accessor struct-shape-job-summary-bucket-definitions
                         :shape "__listOfS3BucketDefinitionForJob" :location
                         common-lisp:nil :location-name "bucketDefinitions")
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor struct-shape-job-summary-created-at :shape
                         "__timestampIso8601" :location common-lisp:nil
                         :location-name "createdAt")
                        (job-id :initarg :job-id :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-job-summary-job-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "jobId")
                        (job-status :initarg :job-status :initform
                         common-lisp:nil :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-job-summary-job-status :shape "JobStatus"
                         :location common-lisp:nil :location-name "jobStatus")
                        (job-type :initarg :job-type :initform common-lisp:nil
                         :type (common-lisp:or job-type common-lisp:null)
                         :accessor struct-shape-job-summary-job-type :shape
                         "JobType" :location common-lisp:nil :location-name
                         "jobType")
                        (last-run-error-status :initarg :last-run-error-status
                         :initform common-lisp:nil :type
                         (common-lisp:or last-run-error-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-job-summary-last-run-error-status :shape
                         "LastRunErrorStatus" :location common-lisp:nil
                         :location-name "lastRunErrorStatus")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-job-summary-name :shape "__string"
                         :location common-lisp:nil :location-name "name")
                        (user-paused-details :initarg :user-paused-details
                         :initform common-lisp:nil :type
                         (common-lisp:or user-paused-details common-lisp:null)
                         :accessor struct-shape-job-summary-user-paused-details
                         :shape "UserPausedDetails" :location common-lisp:nil
                         :location-name "userPausedDetails"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-job-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'job-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'job-summary 'make-job-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input job-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input job-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-criteria))
      (common-lisp:list
       (common-lisp:cons "bucketCriteria"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-definitions))
      (common-lisp:list
       (common-lisp:cons "bucketDefinitions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "jobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "jobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-type))
      (common-lisp:list
       (common-lisp:cons "jobType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-run-error-status))
      (common-lisp:list
       (common-lisp:cons "lastRunErrorStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-paused-details))
      (common-lisp:list
       (common-lisp:cons "userPausedDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input job-summary))
   common-lisp:nil))
(common-lisp:deftype job-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass key-value-pair common-lisp:nil
                       ((key :initarg :key :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-key-value-pair-key :shape "__string"
                         :location common-lisp:nil :location-name "key")
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-key-value-pair-value :shape "__string"
                         :location common-lisp:nil :location-name "value"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-key-value-pair
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'key-value-pair
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'key-value-pair 'make-key-value-pair))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input key-value-pair))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input key-value-pair))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input key-value-pair))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype key-value-pair-list ()
   '(trivial-types:proper-list key-value-pair))
 (common-lisp:defun make-key-value-pair-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list key-value-pair))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass last-run-error-status common-lisp:nil
                       ((code :initarg :code :initform common-lisp:nil :type
                         (common-lisp:or last-run-error-status-code
                                         common-lisp:null)
                         :accessor struct-shape-last-run-error-status-code
                         :shape "LastRunErrorStatusCode" :location
                         common-lisp:nil :location-name "code"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-last-run-error-status
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'last-run-error-status
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'last-run-error-status 'make-last-run-error-status))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          last-run-error-status))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          last-run-error-status))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'code))
      (common-lisp:list
       (common-lisp:cons "code"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          last-run-error-status))
   common-lisp:nil))
(common-lisp:deftype last-run-error-status-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass list-allow-lists-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-allow-lists-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-allow-lists-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-allow-lists-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-allow-lists-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-allow-lists-request 'make-list-allow-lists-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-allow-lists-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-allow-lists-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-allow-lists-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-allow-lists-response common-lisp:nil
                       ((allow-lists :initarg :allow-lists :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfAllowListSummary|
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-allow-lists-response-allow-lists
                         :shape "__listOfAllowListSummary" :location
                         common-lisp:nil :location-name "allowLists")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-allow-lists-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-allow-lists-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-allow-lists-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-allow-lists-response
                    'make-list-allow-lists-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-allow-lists-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-allow-lists-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allow-lists))
      (common-lisp:list
       (common-lisp:cons "allowLists"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-allow-lists-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-classification-jobs-request common-lisp:nil
                       ((filter-criteria :initarg :filter-criteria :initform
                         common-lisp:nil :type
                         (common-lisp:or list-jobs-filter-criteria
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-classification-jobs-request-filter-criteria
                         :shape "ListJobsFilterCriteria" :location
                         common-lisp:nil :location-name "filterCriteria")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-list-classification-jobs-request-max-results
                         :shape "__integer" :location common-lisp:nil
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-classification-jobs-request-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken")
                        (sort-criteria :initarg :sort-criteria :initform
                         common-lisp:nil :type
                         (common-lisp:or list-jobs-sort-criteria
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-classification-jobs-request-sort-criteria
                         :shape "ListJobsSortCriteria" :location
                         common-lisp:nil :location-name "sortCriteria"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-classification-jobs-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-classification-jobs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-classification-jobs-request
                    'make-list-classification-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-classification-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-classification-jobs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter-criteria))
      (common-lisp:list
       (common-lisp:cons "filterCriteria"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sort-criteria))
      (common-lisp:list
       (common-lisp:cons "sortCriteria"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-classification-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-classification-jobs-response common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or |__listOfJobSummary| common-lisp:null)
                         :accessor
                         struct-shape-list-classification-jobs-response-items
                         :shape "__listOfJobSummary" :location common-lisp:nil
                         :location-name "items")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-classification-jobs-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-classification-jobs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-classification-jobs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-classification-jobs-response
                    'make-list-classification-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-classification-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-classification-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-classification-jobs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-classification-scopes-request common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-classification-scopes-request-name
                         :shape "__string" :location "querystring"
                         :location-name "name")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-classification-scopes-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-classification-scopes-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-classification-scopes-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-classification-scopes-request
                    'make-list-classification-scopes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-classification-scopes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-classification-scopes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-classification-scopes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-classification-scopes-response common-lisp:nil
                       ((classification-scopes :initarg :classification-scopes
                         :initform common-lisp:nil :type
                         (common-lisp:or |__listOfClassificationScopeSummary|
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-classification-scopes-response-classification-scopes
                         :shape "__listOfClassificationScopeSummary" :location
                         common-lisp:nil :location-name "classificationScopes")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-classification-scopes-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-classification-scopes-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-classification-scopes-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-classification-scopes-response
                    'make-list-classification-scopes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-classification-scopes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-classification-scopes-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'classification-scopes))
      (common-lisp:list
       (common-lisp:cons "classificationScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-classification-scopes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-custom-data-identifiers-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-list-custom-data-identifiers-request-max-results
                         :shape "__integer" :location common-lisp:nil
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-custom-data-identifiers-request-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-custom-data-identifiers-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-custom-data-identifiers-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-custom-data-identifiers-request
                    'make-list-custom-data-identifiers-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-data-identifiers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-data-identifiers-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-data-identifiers-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-custom-data-identifiers-response common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or |__listOfCustomDataIdentifierSummary|
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-custom-data-identifiers-response-items
                         :shape "__listOfCustomDataIdentifierSummary" :location
                         common-lisp:nil :location-name "items")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-custom-data-identifiers-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-custom-data-identifiers-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-custom-data-identifiers-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-custom-data-identifiers-response
                    'make-list-custom-data-identifiers-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-data-identifiers-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-data-identifiers-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-data-identifiers-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-findings-filters-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-findings-filters-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-findings-filters-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-findings-filters-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-findings-filters-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-findings-filters-request
                    'make-list-findings-filters-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-findings-filters-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-findings-filters-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-findings-filters-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-findings-filters-response common-lisp:nil
                       ((findings-filter-list-items :initarg
                         :findings-filter-list-items :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOfFindingsFilterListItem|
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-findings-filters-response-findings-filter-list-items
                         :shape "__listOfFindingsFilterListItem" :location
                         common-lisp:nil :location-name
                         "findingsFilterListItems")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-findings-filters-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-findings-filters-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-findings-filters-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-findings-filters-response
                    'make-list-findings-filters-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-findings-filters-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-findings-filters-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'findings-filter-list-items))
      (common-lisp:list
       (common-lisp:cons "findingsFilterListItems"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-findings-filters-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-findings-request common-lisp:nil
                       ((finding-criteria :initarg :finding-criteria :initform
                         common-lisp:nil :type
                         (common-lisp:or finding-criteria common-lisp:null)
                         :accessor
                         struct-shape-list-findings-request-finding-criteria
                         :shape "FindingCriteria" :location common-lisp:nil
                         :location-name "findingCriteria")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-list-findings-request-max-results :shape
                         "__integer" :location common-lisp:nil :location-name
                         "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-findings-request-next-token :shape
                         "__string" :location common-lisp:nil :location-name
                         "nextToken")
                        (sort-criteria :initarg :sort-criteria :initform
                         common-lisp:nil :type
                         (common-lisp:or sort-criteria common-lisp:null)
                         :accessor
                         struct-shape-list-findings-request-sort-criteria
                         :shape "SortCriteria" :location common-lisp:nil
                         :location-name "sortCriteria"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-findings-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-findings-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-findings-request 'make-list-findings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-findings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-findings-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'finding-criteria))
      (common-lisp:list
       (common-lisp:cons "findingCriteria"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sort-criteria))
      (common-lisp:list
       (common-lisp:cons "sortCriteria"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-findings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-findings-response common-lisp:nil
                       ((finding-ids :initarg :finding-ids :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-list-findings-response-finding-ids :shape
                         "__listOf__string" :location common-lisp:nil
                         :location-name "findingIds")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-findings-response-next-token :shape
                         "__string" :location common-lisp:nil :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-findings-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-findings-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-findings-response 'make-list-findings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-findings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-findings-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'finding-ids))
      (common-lisp:list
       (common-lisp:cons "findingIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-findings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-invitations-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-invitations-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-invitations-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-invitations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-invitations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-invitations-request 'make-list-invitations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-invitations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-invitations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-invitations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-invitations-response common-lisp:nil
                       ((invitations :initarg :invitations :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfInvitation| common-lisp:null)
                         :accessor
                         struct-shape-list-invitations-response-invitations
                         :shape "__listOfInvitation" :location common-lisp:nil
                         :location-name "invitations")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-invitations-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-invitations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-invitations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-invitations-response
                    'make-list-invitations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-invitations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-invitations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'invitations))
      (common-lisp:list
       (common-lisp:cons "invitations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-invitations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-jobs-filter-criteria common-lisp:nil
                       ((excludes :initarg :excludes :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOfListJobsFilterTerm|
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-jobs-filter-criteria-excludes :shape
                         "__listOfListJobsFilterTerm" :location common-lisp:nil
                         :location-name "excludes")
                        (includes :initarg :includes :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOfListJobsFilterTerm|
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-jobs-filter-criteria-includes :shape
                         "__listOfListJobsFilterTerm" :location common-lisp:nil
                         :location-name "includes"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-jobs-filter-criteria
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-jobs-filter-criteria
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-jobs-filter-criteria
                    'make-list-jobs-filter-criteria))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-jobs-filter-criteria))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-jobs-filter-criteria))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'excludes))
      (common-lisp:list
       (common-lisp:cons "excludes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'includes))
      (common-lisp:list
       (common-lisp:cons "includes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-jobs-filter-criteria))
   common-lisp:nil))
(common-lisp:deftype list-jobs-filter-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass list-jobs-filter-term common-lisp:nil
                       ((comparator :initarg :comparator :initform
                         common-lisp:nil :type
                         (common-lisp:or job-comparator common-lisp:null)
                         :accessor
                         struct-shape-list-jobs-filter-term-comparator :shape
                         "JobComparator" :location common-lisp:nil
                         :location-name "comparator")
                        (key :initarg :key :initform common-lisp:nil :type
                         (common-lisp:or list-jobs-filter-key common-lisp:null)
                         :accessor struct-shape-list-jobs-filter-term-key
                         :shape "ListJobsFilterKey" :location common-lisp:nil
                         :location-name "key")
                        (values :initarg :values :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-list-jobs-filter-term-values
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "values"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-jobs-filter-term
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-jobs-filter-term
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-jobs-filter-term 'make-list-jobs-filter-term))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-jobs-filter-term))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-jobs-filter-term))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'comparator))
      (common-lisp:list
       (common-lisp:cons "comparator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-jobs-filter-term))
   common-lisp:nil))
(common-lisp:deftype list-jobs-sort-attribute-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass list-jobs-sort-criteria common-lisp:nil
                       ((attribute-name :initarg :attribute-name :initform
                         common-lisp:nil :type
                         (common-lisp:or list-jobs-sort-attribute-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-jobs-sort-criteria-attribute-name
                         :shape "ListJobsSortAttributeName" :location
                         common-lisp:nil :location-name "attributeName")
                        (order-by :initarg :order-by :initform common-lisp:nil
                         :type (common-lisp:or order-by common-lisp:null)
                         :accessor
                         struct-shape-list-jobs-sort-criteria-order-by :shape
                         "OrderBy" :location common-lisp:nil :location-name
                         "orderBy"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-jobs-sort-criteria
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-jobs-sort-criteria
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-jobs-sort-criteria 'make-list-jobs-sort-criteria))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-jobs-sort-criteria))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-jobs-sort-criteria))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-name))
      (common-lisp:list
       (common-lisp:cons "attributeName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'order-by))
      (common-lisp:list
       (common-lisp:cons "orderBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-jobs-sort-criteria))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-managed-data-identifiers-request common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-managed-data-identifiers-request-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-managed-data-identifiers-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-managed-data-identifiers-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-managed-data-identifiers-request
                    'make-list-managed-data-identifiers-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-managed-data-identifiers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-managed-data-identifiers-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-managed-data-identifiers-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-managed-data-identifiers-response common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or |__listOfManagedDataIdentifierSummary|
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-managed-data-identifiers-response-items
                         :shape "__listOfManagedDataIdentifierSummary"
                         :location common-lisp:nil :location-name "items")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-managed-data-identifiers-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-managed-data-identifiers-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-managed-data-identifiers-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-managed-data-identifiers-response
                    'make-list-managed-data-identifiers-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-managed-data-identifiers-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-managed-data-identifiers-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-managed-data-identifiers-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-members-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-members-request-max-results :shape
                         "MaxResults" :location "querystring" :location-name
                         "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-members-request-next-token :shape
                         "__string" :location "querystring" :location-name
                         "nextToken")
                        (only-associated :initarg :only-associated :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-members-request-only-associated
                         :shape "__string" :location "querystring"
                         :location-name "onlyAssociated"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-members-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-members-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-members-request 'make-list-members-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-members-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-members-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-members-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-members-response common-lisp:nil
                       ((members :initarg :members :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOfMember| common-lisp:null)
                         :accessor struct-shape-list-members-response-members
                         :shape "__listOfMember" :location common-lisp:nil
                         :location-name "members")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-members-response-next-token :shape
                         "__string" :location common-lisp:nil :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-members-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-members-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-members-response 'make-list-members-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-members-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-members-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'members))
      (common-lisp:list
       (common-lisp:cons "members"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-members-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-organization-admin-accounts-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-organization-admin-accounts-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-organization-admin-accounts-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-organization-admin-accounts-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-organization-admin-accounts-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-organization-admin-accounts-request
                    'make-list-organization-admin-accounts-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-organization-admin-accounts-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-organization-admin-accounts-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-organization-admin-accounts-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-organization-admin-accounts-response
                       common-lisp:nil
                       ((admin-accounts :initarg :admin-accounts :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfAdminAccount|
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-organization-admin-accounts-response-admin-accounts
                         :shape "__listOfAdminAccount" :location
                         common-lisp:nil :location-name "adminAccounts")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-organization-admin-accounts-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-organization-admin-accounts-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-organization-admin-accounts-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-organization-admin-accounts-response
                    'make-list-organization-admin-accounts-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-organization-admin-accounts-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-organization-admin-accounts-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'admin-accounts))
      (common-lisp:list
       (common-lisp:cons "adminAccounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-organization-admin-accounts-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-resource-profile-artifacts-request common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-resource-profile-artifacts-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "nextToken")
                        (resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-resource-profile-artifacts-request-resource-arn
                         :shape "__string" :location "querystring"
                         :location-name "resourceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-resource-profile-artifacts-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-resource-profile-artifacts-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-resource-profile-artifacts-request
                    'make-list-resource-profile-artifacts-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-profile-artifacts-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-profile-artifacts-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-profile-artifacts-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-resource-profile-artifacts-response common-lisp:nil
                       ((artifacts :initarg :artifacts :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfResourceProfileArtifact|
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-resource-profile-artifacts-response-artifacts
                         :shape "__listOfResourceProfileArtifact" :location
                         common-lisp:nil :location-name "artifacts")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-resource-profile-artifacts-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-resource-profile-artifacts-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-resource-profile-artifacts-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-resource-profile-artifacts-response
                    'make-list-resource-profile-artifacts-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-profile-artifacts-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-profile-artifacts-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'artifacts))
      (common-lisp:list
       (common-lisp:cons "artifacts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-profile-artifacts-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-resource-profile-detections-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-resource-profile-detections-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-resource-profile-detections-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "nextToken")
                        (resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-resource-profile-detections-request-resource-arn
                         :shape "__string" :location "querystring"
                         :location-name "resourceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-resource-profile-detections-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-resource-profile-detections-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-resource-profile-detections-request
                    'make-list-resource-profile-detections-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-profile-detections-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-profile-detections-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-profile-detections-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-resource-profile-detections-response
                       common-lisp:nil
                       ((detections :initarg :detections :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfDetection| common-lisp:null)
                         :accessor
                         struct-shape-list-resource-profile-detections-response-detections
                         :shape "__listOfDetection" :location common-lisp:nil
                         :location-name "detections")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-resource-profile-detections-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-resource-profile-detections-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-resource-profile-detections-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-resource-profile-detections-response
                    'make-list-resource-profile-detections-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-profile-detections-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-profile-detections-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'detections))
      (common-lisp:list
       (common-lisp:cons "detections"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-profile-detections-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-sensitivity-inspection-templates-request
                       common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-sensitivity-inspection-templates-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-sensitivity-inspection-templates-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-sensitivity-inspection-templates-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-sensitivity-inspection-templates-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-sensitivity-inspection-templates-request
                    'make-list-sensitivity-inspection-templates-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-sensitivity-inspection-templates-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-sensitivity-inspection-templates-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-sensitivity-inspection-templates-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-sensitivity-inspection-templates-response
                       common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-sensitivity-inspection-templates-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken")
                        (sensitivity-inspection-templates :initarg
                         :sensitivity-inspection-templates :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          |__listOfSensitivityInspectionTemplatesEntry|
                          common-lisp:null)
                         :accessor
                         struct-shape-list-sensitivity-inspection-templates-response-sensitivity-inspection-templates
                         :shape "__listOfSensitivityInspectionTemplatesEntry"
                         :location common-lisp:nil :location-name
                         "sensitivityInspectionTemplates"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-sensitivity-inspection-templates-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-sensitivity-inspection-templates-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-sensitivity-inspection-templates-response
                    'make-list-sensitivity-inspection-templates-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-sensitivity-inspection-templates-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-sensitivity-inspection-templates-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sensitivity-inspection-templates))
      (common-lisp:list
       (common-lisp:cons "sensitivityInspectionTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-sensitivity-inspection-templates-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-request-resource-arn
                         :shape "__string" :location "uri" :location-name
                         "resourceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-response-tags
                         :shape "TagMap" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:deftype macie-status () 'common-lisp:string)
(common-lisp:deftype managed-data-identifier-selector () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass managed-data-identifier-summary common-lisp:nil
                       ((category :initarg :category :initform common-lisp:nil
                         :type
                         (common-lisp:or sensitive-data-item-category
                                         common-lisp:null)
                         :accessor
                         struct-shape-managed-data-identifier-summary-category
                         :shape "SensitiveDataItemCategory" :location
                         common-lisp:nil :location-name "category")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-managed-data-identifier-summary-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-managed-data-identifier-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'managed-data-identifier-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'managed-data-identifier-summary
                    'make-managed-data-identifier-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          managed-data-identifier-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          managed-data-identifier-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'category))
      (common-lisp:list
       (common-lisp:cons "category"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          managed-data-identifier-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass matching-bucket common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-matching-bucket-account-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "accountId")
                        (bucket-name :initarg :bucket-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-matching-bucket-bucket-name :shape
                         "__string" :location common-lisp:nil :location-name
                         "bucketName")
                        (classifiable-object-count :initarg
                         :classifiable-object-count :initform common-lisp:nil
                         :type (common-lisp:or |__long| common-lisp:null)
                         :accessor
                         struct-shape-matching-bucket-classifiable-object-count
                         :shape "__long" :location common-lisp:nil
                         :location-name "classifiableObjectCount")
                        (classifiable-size-in-bytes :initarg
                         :classifiable-size-in-bytes :initform common-lisp:nil
                         :type (common-lisp:or |__long| common-lisp:null)
                         :accessor
                         struct-shape-matching-bucket-classifiable-size-in-bytes
                         :shape "__long" :location common-lisp:nil
                         :location-name "classifiableSizeInBytes")
                        (error-code :initarg :error-code :initform
                         common-lisp:nil :type
                         (common-lisp:or bucket-metadata-error-code
                                         common-lisp:null)
                         :accessor struct-shape-matching-bucket-error-code
                         :shape "BucketMetadataErrorCode" :location
                         common-lisp:nil :location-name "errorCode")
                        (error-message :initarg :error-message :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-matching-bucket-error-message :shape
                         "__string" :location common-lisp:nil :location-name
                         "errorMessage")
                        (job-details :initarg :job-details :initform
                         common-lisp:nil :type
                         (common-lisp:or job-details common-lisp:null)
                         :accessor struct-shape-matching-bucket-job-details
                         :shape "JobDetails" :location common-lisp:nil
                         :location-name "jobDetails")
                        (last-automated-discovery-time :initarg
                         :last-automated-discovery-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-matching-bucket-last-automated-discovery-time
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "lastAutomatedDiscoveryTime")
                        (object-count :initarg :object-count :initform
                         common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-matching-bucket-object-count :shape
                         "__long" :location common-lisp:nil :location-name
                         "objectCount")
                        (object-count-by-encryption-type :initarg
                         :object-count-by-encryption-type :initform
                         common-lisp:nil :type
                         (common-lisp:or object-count-by-encryption-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-matching-bucket-object-count-by-encryption-type
                         :shape "ObjectCountByEncryptionType" :location
                         common-lisp:nil :location-name
                         "objectCountByEncryptionType")
                        (sensitivity-score :initarg :sensitivity-score
                         :initform common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-matching-bucket-sensitivity-score :shape
                         "__integer" :location common-lisp:nil :location-name
                         "sensitivityScore")
                        (size-in-bytes :initarg :size-in-bytes :initform
                         common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-matching-bucket-size-in-bytes :shape
                         "__long" :location common-lisp:nil :location-name
                         "sizeInBytes")
                        (size-in-bytes-compressed :initarg
                         :size-in-bytes-compressed :initform common-lisp:nil
                         :type (common-lisp:or |__long| common-lisp:null)
                         :accessor
                         struct-shape-matching-bucket-size-in-bytes-compressed
                         :shape "__long" :location common-lisp:nil
                         :location-name "sizeInBytesCompressed")
                        (unclassifiable-object-count :initarg
                         :unclassifiable-object-count :initform common-lisp:nil
                         :type
                         (common-lisp:or object-level-statistics
                                         common-lisp:null)
                         :accessor
                         struct-shape-matching-bucket-unclassifiable-object-count
                         :shape "ObjectLevelStatistics" :location
                         common-lisp:nil :location-name
                         "unclassifiableObjectCount")
                        (unclassifiable-object-size-in-bytes :initarg
                         :unclassifiable-object-size-in-bytes :initform
                         common-lisp:nil :type
                         (common-lisp:or object-level-statistics
                                         common-lisp:null)
                         :accessor
                         struct-shape-matching-bucket-unclassifiable-object-size-in-bytes
                         :shape "ObjectLevelStatistics" :location
                         common-lisp:nil :location-name
                         "unclassifiableObjectSizeInBytes"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-matching-bucket
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'matching-bucket
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'matching-bucket 'make-matching-bucket))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input matching-bucket))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input matching-bucket))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-name))
      (common-lisp:list
       (common-lisp:cons "bucketName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'classifiable-object-count))
      (common-lisp:list
       (common-lisp:cons "classifiableObjectCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'classifiable-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "classifiableSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "errorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "errorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-details))
      (common-lisp:list
       (common-lisp:cons "jobDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-automated-discovery-time))
      (common-lisp:list
       (common-lisp:cons "lastAutomatedDiscoveryTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'object-count))
      (common-lisp:list
       (common-lisp:cons "objectCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'object-count-by-encryption-type))
      (common-lisp:list
       (common-lisp:cons "objectCountByEncryptionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sensitivity-score))
      (common-lisp:list
       (common-lisp:cons "sensitivityScore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "sizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'size-in-bytes-compressed))
      (common-lisp:list
       (common-lisp:cons "sizeInBytesCompressed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'unclassifiable-object-count))
      (common-lisp:list
       (common-lisp:cons "unclassifiableObjectCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'unclassifiable-object-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "unclassifiableObjectSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input matching-bucket))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass matching-resource common-lisp:nil
                       ((matching-bucket :initarg :matching-bucket :initform
                         common-lisp:nil :type
                         (common-lisp:or matching-bucket common-lisp:null)
                         :accessor
                         struct-shape-matching-resource-matching-bucket :shape
                         "MatchingBucket" :location common-lisp:nil
                         :location-name "matchingBucket"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-matching-resource
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'matching-resource
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'matching-resource 'make-matching-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input matching-resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input matching-resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'matching-bucket))
      (common-lisp:list
       (common-lisp:cons "matchingBucket"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input matching-resource))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass member common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-member-account-id :shape "__string"
                         :location common-lisp:nil :location-name "accountId")
                        (administrator-account-id :initarg
                         :administrator-account-id :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-member-administrator-account-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "administratorAccountId")
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-member-arn :shape "__string" :location
                         common-lisp:nil :location-name "arn")
                        (email :initarg :email :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-member-email :shape "__string" :location
                         common-lisp:nil :location-name "email")
                        (invited-at :initarg :invited-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor struct-shape-member-invited-at :shape
                         "__timestampIso8601" :location common-lisp:nil
                         :location-name "invitedAt")
                        (master-account-id :initarg :master-account-id
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-member-master-account-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "masterAccountId")
                        (relationship-status :initarg :relationship-status
                         :initform common-lisp:nil :type
                         (common-lisp:or relationship-status common-lisp:null)
                         :accessor struct-shape-member-relationship-status
                         :shape "RelationshipStatus" :location common-lisp:nil
                         :location-name "relationshipStatus")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-member-tags :shape "TagMap" :location
                         common-lisp:nil :location-name "tags")
                        (updated-at :initarg :updated-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor struct-shape-member-updated-at :shape
                         "__timestampIso8601" :location common-lisp:nil
                         :location-name "updatedAt"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-member
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'member
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'member 'make-member))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input member))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input member))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'administrator-account-id))
      (common-lisp:list
       (common-lisp:cons "administratorAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email))
      (common-lisp:list
       (common-lisp:cons "email"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'invited-at))
      (common-lisp:list
       (common-lisp:cons "invitedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'master-account-id))
      (common-lisp:list
       (common-lisp:cons "masterAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'relationship-status))
      (common-lisp:list
       (common-lisp:cons "relationshipStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input member))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass monthly-schedule common-lisp:nil
                       ((day-of-month :initarg :day-of-month :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-monthly-schedule-day-of-month
                         :shape "__integer" :location common-lisp:nil
                         :location-name "dayOfMonth"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-monthly-schedule
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'monthly-schedule
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'monthly-schedule 'make-monthly-schedule))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input monthly-schedule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input monthly-schedule))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'day-of-month))
      (common-lisp:list
       (common-lisp:cons "dayOfMonth"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input monthly-schedule))
   common-lisp:nil))
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass object-count-by-encryption-type common-lisp:nil
                       ((customer-managed :initarg :customer-managed :initform
                         common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-object-count-by-encryption-type-customer-managed
                         :shape "__long" :location common-lisp:nil
                         :location-name "customerManaged")
                        (kms-managed :initarg :kms-managed :initform
                         common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-object-count-by-encryption-type-kms-managed
                         :shape "__long" :location common-lisp:nil
                         :location-name "kmsManaged")
                        (s3managed :initarg :s3managed :initform
                         common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-object-count-by-encryption-type-s3managed
                         :shape "__long" :location common-lisp:nil
                         :location-name "s3Managed")
                        (unencrypted :initarg :unencrypted :initform
                         common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-object-count-by-encryption-type-unencrypted
                         :shape "__long" :location common-lisp:nil
                         :location-name "unencrypted")
                        (unknown :initarg :unknown :initform common-lisp:nil
                         :type (common-lisp:or |__long| common-lisp:null)
                         :accessor
                         struct-shape-object-count-by-encryption-type-unknown
                         :shape "__long" :location common-lisp:nil
                         :location-name "unknown"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-object-count-by-encryption-type
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'object-count-by-encryption-type
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'object-count-by-encryption-type
                    'make-object-count-by-encryption-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          object-count-by-encryption-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          object-count-by-encryption-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'customer-managed))
      (common-lisp:list
       (common-lisp:cons "customerManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-managed))
      (common-lisp:list
       (common-lisp:cons "kmsManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3managed))
      (common-lisp:list
       (common-lisp:cons "s3Managed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'unencrypted))
      (common-lisp:list
       (common-lisp:cons "unencrypted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'unknown))
      (common-lisp:list
       (common-lisp:cons "unknown"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          object-count-by-encryption-type))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass object-level-statistics common-lisp:nil
                       ((file-type :initarg :file-type :initform
                         common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-object-level-statistics-file-type :shape
                         "__long" :location common-lisp:nil :location-name
                         "fileType")
                        (storage-class :initarg :storage-class :initform
                         common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-object-level-statistics-storage-class
                         :shape "__long" :location common-lisp:nil
                         :location-name "storageClass")
                        (total :initarg :total :initform common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-object-level-statistics-total :shape
                         "__long" :location common-lisp:nil :location-name
                         "total"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-object-level-statistics
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'object-level-statistics
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'object-level-statistics 'make-object-level-statistics))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          object-level-statistics))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          object-level-statistics))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-type))
      (common-lisp:list
       (common-lisp:cons "fileType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-class))
      (common-lisp:list
       (common-lisp:cons "storageClass"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total))
      (common-lisp:list
       (common-lisp:cons "total"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          object-level-statistics))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass occurrences common-lisp:nil
                       ((cells :initarg :cells :initform common-lisp:nil :type
                         (common-lisp:or cells common-lisp:null) :accessor
                         struct-shape-occurrences-cells :shape "Cells"
                         :location common-lisp:nil :location-name "cells")
                        (line-ranges :initarg :line-ranges :initform
                         common-lisp:nil :type
                         (common-lisp:or ranges common-lisp:null) :accessor
                         struct-shape-occurrences-line-ranges :shape "Ranges"
                         :location common-lisp:nil :location-name "lineRanges")
                        (offset-ranges :initarg :offset-ranges :initform
                         common-lisp:nil :type
                         (common-lisp:or ranges common-lisp:null) :accessor
                         struct-shape-occurrences-offset-ranges :shape "Ranges"
                         :location common-lisp:nil :location-name
                         "offsetRanges")
                        (pages :initarg :pages :initform common-lisp:nil :type
                         (common-lisp:or pages common-lisp:null) :accessor
                         struct-shape-occurrences-pages :shape "Pages"
                         :location common-lisp:nil :location-name "pages")
                        (records :initarg :records :initform common-lisp:nil
                         :type (common-lisp:or records common-lisp:null)
                         :accessor struct-shape-occurrences-records :shape
                         "Records" :location common-lisp:nil :location-name
                         "records"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-occurrences
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'occurrences
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'occurrences 'make-occurrences))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input occurrences))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input occurrences))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cells))
      (common-lisp:list
       (common-lisp:cons "cells"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'line-ranges))
      (common-lisp:list
       (common-lisp:cons "lineRanges"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'offset-ranges))
      (common-lisp:list
       (common-lisp:cons "offsetRanges"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pages))
      (common-lisp:list
       (common-lisp:cons "pages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'records))
      (common-lisp:list
       (common-lisp:cons "records"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input occurrences))
   common-lisp:nil))
(common-lisp:deftype order-by () 'common-lisp:string)
(common-lisp:deftype origin-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass page common-lisp:nil
                       ((line-range :initarg :line-range :initform
                         common-lisp:nil :type
                         (common-lisp:or range common-lisp:null) :accessor
                         struct-shape-page-line-range :shape "Range" :location
                         common-lisp:nil :location-name "lineRange")
                        (offset-range :initarg :offset-range :initform
                         common-lisp:nil :type
                         (common-lisp:or range common-lisp:null) :accessor
                         struct-shape-page-offset-range :shape "Range"
                         :location common-lisp:nil :location-name
                         "offsetRange")
                        (page-number :initarg :page-number :initform
                         common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-page-page-number :shape "__long"
                         :location common-lisp:nil :location-name
                         "pageNumber"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-page (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'page
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'page 'make-page))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input page))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input page))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'line-range))
      (common-lisp:list
       (common-lisp:cons "lineRange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'offset-range))
      (common-lisp:list
       (common-lisp:cons "offsetRange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'page-number))
      (common-lisp:list
       (common-lisp:cons "pageNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input page))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype pages () '(trivial-types:proper-list page))
 (common-lisp:defun make-pages
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list page))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass policy-details common-lisp:nil
                       ((action :initarg :action :initform common-lisp:nil
                         :type (common-lisp:or finding-action common-lisp:null)
                         :accessor struct-shape-policy-details-action :shape
                         "FindingAction" :location common-lisp:nil
                         :location-name "action")
                        (actor :initarg :actor :initform common-lisp:nil :type
                         (common-lisp:or finding-actor common-lisp:null)
                         :accessor struct-shape-policy-details-actor :shape
                         "FindingActor" :location common-lisp:nil
                         :location-name "actor"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-policy-details
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'policy-details
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'policy-details 'make-policy-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input policy-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input policy-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'actor))
      (common-lisp:list
       (common-lisp:cons "actor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input policy-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-classification-export-configuration-request
                       common-lisp:nil
                       ((configuration :initarg :configuration :initform
                         (common-lisp:error ":configuration is required") :type
                         (common-lisp:or classification-export-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-classification-export-configuration-request-configuration
                         :shape "ClassificationExportConfiguration" :location
                         common-lisp:nil :location-name "configuration"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-classification-export-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-classification-export-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-classification-export-configuration-request
                    'make-put-classification-export-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-classification-export-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-classification-export-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration))
      (common-lisp:list
       (common-lisp:cons "configuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-classification-export-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-classification-export-configuration-response
                       common-lisp:nil
                       ((configuration :initarg :configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or classification-export-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-classification-export-configuration-response-configuration
                         :shape "ClassificationExportConfiguration" :location
                         common-lisp:nil :location-name "configuration"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-classification-export-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-classification-export-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-classification-export-configuration-response
                    'make-put-classification-export-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-classification-export-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-classification-export-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration))
      (common-lisp:list
       (common-lisp:cons "configuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-classification-export-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-findings-publication-configuration-request
                       common-lisp:nil
                       ((client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-put-findings-publication-configuration-request-client-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "clientToken")
                        (security-hub-configuration :initarg
                         :security-hub-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or security-hub-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-findings-publication-configuration-request-security-hub-configuration
                         :shape "SecurityHubConfiguration" :location
                         common-lisp:nil :location-name
                         "securityHubConfiguration"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-findings-publication-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-findings-publication-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-findings-publication-configuration-request
                    'make-put-findings-publication-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-findings-publication-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-findings-publication-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'security-hub-configuration))
      (common-lisp:list
       (common-lisp:cons "securityHubConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-findings-publication-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-findings-publication-configuration-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-findings-publication-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-findings-publication-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-findings-publication-configuration-response
                    'make-put-findings-publication-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-findings-publication-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-findings-publication-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-findings-publication-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass range common-lisp:nil
                       ((end :initarg :end :initform common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-range-end :shape "__long" :location
                         common-lisp:nil :location-name "end")
                        (start :initarg :start :initform common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-range-start :shape "__long" :location
                         common-lisp:nil :location-name "start")
                        (start-column :initarg :start-column :initform
                         common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-range-start-column :shape "__long"
                         :location common-lisp:nil :location-name
                         "startColumn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-range
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'range
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'range 'make-range))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input range))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input range))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end))
      (common-lisp:list
       (common-lisp:cons "end"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start))
      (common-lisp:list
       (common-lisp:cons "start"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-column))
      (common-lisp:list
       (common-lisp:cons "startColumn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input range))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype ranges () '(trivial-types:proper-list range))
 (common-lisp:defun make-ranges
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list range))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass record common-lisp:nil
                       ((json-path :initarg :json-path :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-record-json-path :shape "__string"
                         :location common-lisp:nil :location-name "jsonPath")
                        (record-index :initarg :record-index :initform
                         common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-record-record-index :shape "__long"
                         :location common-lisp:nil :location-name
                         "recordIndex"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-record
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'record
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'record 'make-record))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input record))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input record))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'json-path))
      (common-lisp:list
       (common-lisp:cons "jsonPath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'record-index))
      (common-lisp:list
       (common-lisp:cons "recordIndex"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input record))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype records () '(trivial-types:proper-list record))
 (common-lisp:defun make-records
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list record))
   aws-sdk/generator/shape::members))
(common-lisp:deftype relationship-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass replication-details common-lisp:nil
                       ((replicated :initarg :replicated :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-replication-details-replicated
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "replicated")
                        (replicated-externally :initarg :replicated-externally
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-replication-details-replicated-externally
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "replicatedExternally")
                        (replication-accounts :initarg :replication-accounts
                         :initform common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-replication-details-replication-accounts
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "replicationAccounts"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-replication-details
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'replication-details
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'replication-details 'make-replication-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input replication-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input replication-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replicated))
      (common-lisp:list
       (common-lisp:cons "replicated"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'replicated-externally))
      (common-lisp:list
       (common-lisp:cons "replicatedExternally"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'replication-accounts))
      (common-lisp:list
       (common-lisp:cons "replicationAccounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input replication-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (macie2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:progn
 (common-lisp:defclass resource-profile-artifact common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-resource-profile-artifact-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         "arn")
                        (classification-result-status :initarg
                         :classification-result-status :initform
                         (common-lisp:error
                          ":classificationresultstatus is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-resource-profile-artifact-classification-result-status
                         :shape "__string" :location common-lisp:nil
                         :location-name "classificationResultStatus")
                        (sensitive :initarg :sensitive :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-resource-profile-artifact-sensitive
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "sensitive"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-resource-profile-artifact
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'resource-profile-artifact
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'resource-profile-artifact
                    'make-resource-profile-artifact))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          resource-profile-artifact))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          resource-profile-artifact))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'classification-result-status))
      (common-lisp:list
       (common-lisp:cons "classificationResultStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sensitive))
      (common-lisp:list
       (common-lisp:cons "sensitive"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          resource-profile-artifact))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass resource-statistics common-lisp:nil
                       ((total-bytes-classified :initarg
                         :total-bytes-classified :initform common-lisp:nil
                         :type (common-lisp:or |__long| common-lisp:null)
                         :accessor
                         struct-shape-resource-statistics-total-bytes-classified
                         :shape "__long" :location common-lisp:nil
                         :location-name "totalBytesClassified")
                        (total-detections :initarg :total-detections :initform
                         common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-resource-statistics-total-detections
                         :shape "__long" :location common-lisp:nil
                         :location-name "totalDetections")
                        (total-detections-suppressed :initarg
                         :total-detections-suppressed :initform common-lisp:nil
                         :type (common-lisp:or |__long| common-lisp:null)
                         :accessor
                         struct-shape-resource-statistics-total-detections-suppressed
                         :shape "__long" :location common-lisp:nil
                         :location-name "totalDetectionsSuppressed")
                        (total-items-classified :initarg
                         :total-items-classified :initform common-lisp:nil
                         :type (common-lisp:or |__long| common-lisp:null)
                         :accessor
                         struct-shape-resource-statistics-total-items-classified
                         :shape "__long" :location common-lisp:nil
                         :location-name "totalItemsClassified")
                        (total-items-sensitive :initarg :total-items-sensitive
                         :initform common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-resource-statistics-total-items-sensitive
                         :shape "__long" :location common-lisp:nil
                         :location-name "totalItemsSensitive")
                        (total-items-skipped :initarg :total-items-skipped
                         :initform common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-resource-statistics-total-items-skipped
                         :shape "__long" :location common-lisp:nil
                         :location-name "totalItemsSkipped")
                        (total-items-skipped-invalid-encryption :initarg
                         :total-items-skipped-invalid-encryption :initform
                         common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-resource-statistics-total-items-skipped-invalid-encryption
                         :shape "__long" :location common-lisp:nil
                         :location-name "totalItemsSkippedInvalidEncryption")
                        (total-items-skipped-invalid-kms :initarg
                         :total-items-skipped-invalid-kms :initform
                         common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-resource-statistics-total-items-skipped-invalid-kms
                         :shape "__long" :location common-lisp:nil
                         :location-name "totalItemsSkippedInvalidKms")
                        (total-items-skipped-permission-denied :initarg
                         :total-items-skipped-permission-denied :initform
                         common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-resource-statistics-total-items-skipped-permission-denied
                         :shape "__long" :location common-lisp:nil
                         :location-name "totalItemsSkippedPermissionDenied"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-resource-statistics
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'resource-statistics
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'resource-statistics 'make-resource-statistics))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resource-statistics))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resource-statistics))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'total-bytes-classified))
      (common-lisp:list
       (common-lisp:cons "totalBytesClassified"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total-detections))
      (common-lisp:list
       (common-lisp:cons "totalDetections"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'total-detections-suppressed))
      (common-lisp:list
       (common-lisp:cons "totalDetectionsSuppressed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'total-items-classified))
      (common-lisp:list
       (common-lisp:cons "totalItemsClassified"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'total-items-sensitive))
      (common-lisp:list
       (common-lisp:cons "totalItemsSensitive"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total-items-skipped))
      (common-lisp:list
       (common-lisp:cons "totalItemsSkipped"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'total-items-skipped-invalid-encryption))
      (common-lisp:list
       (common-lisp:cons "totalItemsSkippedInvalidEncryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'total-items-skipped-invalid-kms))
      (common-lisp:list
       (common-lisp:cons "totalItemsSkippedInvalidKms"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'total-items-skipped-permission-denied))
      (common-lisp:list
       (common-lisp:cons "totalItemsSkippedPermissionDenied"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resource-statistics))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass resources-affected common-lisp:nil
                       ((s3bucket :initarg :s3bucket :initform common-lisp:nil
                         :type (common-lisp:or s3bucket common-lisp:null)
                         :accessor struct-shape-resources-affected-s3bucket
                         :shape "S3Bucket" :location common-lisp:nil
                         :location-name "s3Bucket")
                        (s3object :initarg :s3object :initform common-lisp:nil
                         :type (common-lisp:or s3object common-lisp:null)
                         :accessor struct-shape-resources-affected-s3object
                         :shape "S3Object" :location common-lisp:nil
                         :location-name "s3Object"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-resources-affected
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'resources-affected
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'resources-affected 'make-resources-affected))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resources-affected))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resources-affected))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3bucket))
      (common-lisp:list
       (common-lisp:cons "s3Bucket"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3object))
      (common-lisp:list
       (common-lisp:cons "s3Object"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resources-affected))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass retrieval-configuration common-lisp:nil
                       ((external-id :initarg :external-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-retrieval-configuration-external-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "externalId")
                        (retrieval-mode :initarg :retrieval-mode :initform
                         (common-lisp:error ":retrievalmode is required") :type
                         (common-lisp:or retrieval-mode common-lisp:null)
                         :accessor
                         struct-shape-retrieval-configuration-retrieval-mode
                         :shape "RetrievalMode" :location common-lisp:nil
                         :location-name "retrievalMode")
                        (role-name :initarg :role-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__stringMin1Max64PatternW|
                                         common-lisp:null)
                         :accessor
                         struct-shape-retrieval-configuration-role-name :shape
                         "__stringMin1Max64PatternW" :location common-lisp:nil
                         :location-name "roleName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-retrieval-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'retrieval-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'retrieval-configuration 'make-retrieval-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          retrieval-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          retrieval-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'external-id))
      (common-lisp:list
       (common-lisp:cons "externalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retrieval-mode))
      (common-lisp:list
       (common-lisp:cons "retrievalMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-name))
      (common-lisp:list
       (common-lisp:cons "roleName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          retrieval-configuration))
   common-lisp:nil))
(common-lisp:deftype retrieval-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass reveal-configuration common-lisp:nil
                       ((kms-key-id :initarg :kms-key-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__stringMin1Max2048|
                                         common-lisp:null)
                         :accessor struct-shape-reveal-configuration-kms-key-id
                         :shape "__stringMin1Max2048" :location common-lisp:nil
                         :location-name "kmsKeyId")
                        (status :initarg :status :initform
                         (common-lisp:error ":status is required") :type
                         (common-lisp:or reveal-status common-lisp:null)
                         :accessor struct-shape-reveal-configuration-status
                         :shape "RevealStatus" :location common-lisp:nil
                         :location-name "status"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-reveal-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'reveal-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'reveal-configuration 'make-reveal-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input reveal-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input reveal-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-id))
      (common-lisp:list
       (common-lisp:cons "kmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input reveal-configuration))
   common-lisp:nil))
(common-lisp:deftype reveal-request-status () 'common-lisp:string)
(common-lisp:deftype reveal-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass s3bucket common-lisp:nil
                       ((allows-unencrypted-object-uploads :initarg
                         :allows-unencrypted-object-uploads :initform
                         common-lisp:nil :type
                         (common-lisp:or allows-unencrypted-object-uploads
                                         common-lisp:null)
                         :accessor
                         struct-shape-s3bucket-allows-unencrypted-object-uploads
                         :shape "AllowsUnencryptedObjectUploads" :location
                         common-lisp:nil :location-name
                         "allowsUnencryptedObjectUploads")
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-s3bucket-arn :shape "__string" :location
                         common-lisp:nil :location-name "arn")
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor struct-shape-s3bucket-created-at :shape
                         "__timestampIso8601" :location common-lisp:nil
                         :location-name "createdAt")
                        (default-server-side-encryption :initarg
                         :default-server-side-encryption :initform
                         common-lisp:nil :type
                         (common-lisp:or server-side-encryption
                                         common-lisp:null)
                         :accessor
                         struct-shape-s3bucket-default-server-side-encryption
                         :shape "ServerSideEncryption" :location
                         common-lisp:nil :location-name
                         "defaultServerSideEncryption")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-s3bucket-name :shape "__string" :location
                         common-lisp:nil :location-name "name")
                        (owner :initarg :owner :initform common-lisp:nil :type
                         (common-lisp:or s3bucket-owner common-lisp:null)
                         :accessor struct-shape-s3bucket-owner :shape
                         "S3BucketOwner" :location common-lisp:nil
                         :location-name "owner")
                        (public-access :initarg :public-access :initform
                         common-lisp:nil :type
                         (common-lisp:or bucket-public-access common-lisp:null)
                         :accessor struct-shape-s3bucket-public-access :shape
                         "BucketPublicAccess" :location common-lisp:nil
                         :location-name "publicAccess")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or key-value-pair-list common-lisp:null)
                         :accessor struct-shape-s3bucket-tags :shape
                         "KeyValuePairList" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-s3bucket
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 's3bucket
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 's3bucket 'make-s3bucket))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input s3bucket))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input s3bucket))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'allows-unencrypted-object-uploads))
      (common-lisp:list
       (common-lisp:cons "allowsUnencryptedObjectUploads"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-server-side-encryption))
      (common-lisp:list
       (common-lisp:cons "defaultServerSideEncryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owner))
      (common-lisp:list
       (common-lisp:cons "owner"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'public-access))
      (common-lisp:list
       (common-lisp:cons "publicAccess"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input s3bucket))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass s3bucket-criteria-for-job common-lisp:nil
                       ((excludes :initarg :excludes :initform common-lisp:nil
                         :type
                         (common-lisp:or criteria-block-for-job
                                         common-lisp:null)
                         :accessor
                         struct-shape-s3bucket-criteria-for-job-excludes :shape
                         "CriteriaBlockForJob" :location common-lisp:nil
                         :location-name "excludes")
                        (includes :initarg :includes :initform common-lisp:nil
                         :type
                         (common-lisp:or criteria-block-for-job
                                         common-lisp:null)
                         :accessor
                         struct-shape-s3bucket-criteria-for-job-includes :shape
                         "CriteriaBlockForJob" :location common-lisp:nil
                         :location-name "includes"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-s3bucket-criteria-for-job
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 's3bucket-criteria-for-job
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 's3bucket-criteria-for-job
                    'make-s3bucket-criteria-for-job))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          s3bucket-criteria-for-job))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          s3bucket-criteria-for-job))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'excludes))
      (common-lisp:list
       (common-lisp:cons "excludes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'includes))
      (common-lisp:list
       (common-lisp:cons "includes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          s3bucket-criteria-for-job))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass s3bucket-definition-for-job common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         (common-lisp:error ":accountid is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-s3bucket-definition-for-job-account-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "accountId")
                        (buckets :initarg :buckets :initform
                         (common-lisp:error ":buckets is required") :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-s3bucket-definition-for-job-buckets
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "buckets"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-s3bucket-definition-for-job
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 's3bucket-definition-for-job
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 's3bucket-definition-for-job
                    'make-s3bucket-definition-for-job))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          s3bucket-definition-for-job))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          s3bucket-definition-for-job))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'buckets))
      (common-lisp:list
       (common-lisp:cons "buckets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          s3bucket-definition-for-job))
   common-lisp:nil))
(common-lisp:deftype s3bucket-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass s3bucket-owner common-lisp:nil
                       ((display-name :initarg :display-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-s3bucket-owner-display-name :shape
                         "__string" :location common-lisp:nil :location-name
                         "displayName")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-s3bucket-owner-id :shape "__string"
                         :location common-lisp:nil :location-name "id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-s3bucket-owner
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 's3bucket-owner
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 's3bucket-owner 'make-s3bucket-owner))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input s3bucket-owner))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input s3bucket-owner))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'display-name))
      (common-lisp:list
       (common-lisp:cons "displayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input s3bucket-owner))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass s3classification-scope common-lisp:nil
                       ((excludes :initarg :excludes :initform
                         (common-lisp:error ":excludes is required") :type
                         (common-lisp:or s3classification-scope-exclusion
                                         common-lisp:null)
                         :accessor struct-shape-s3classification-scope-excludes
                         :shape "S3ClassificationScopeExclusion" :location
                         common-lisp:nil :location-name "excludes"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-s3classification-scope
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 's3classification-scope
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 's3classification-scope 'make-s3classification-scope))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          s3classification-scope))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          s3classification-scope))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'excludes))
      (common-lisp:list
       (common-lisp:cons "excludes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          s3classification-scope))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass s3classification-scope-exclusion common-lisp:nil
                       ((bucket-names :initarg :bucket-names :initform
                         (common-lisp:error ":bucketnames is required") :type
                         (common-lisp:or |__listOfS3BucketName|
                                         common-lisp:null)
                         :accessor
                         struct-shape-s3classification-scope-exclusion-bucket-names
                         :shape "__listOfS3BucketName" :location
                         common-lisp:nil :location-name "bucketNames"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-s3classification-scope-exclusion
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      's3classification-scope-exclusion
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 's3classification-scope-exclusion
                    'make-s3classification-scope-exclusion))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          s3classification-scope-exclusion))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          s3classification-scope-exclusion))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-names))
      (common-lisp:list
       (common-lisp:cons "bucketNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          s3classification-scope-exclusion))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass s3classification-scope-exclusion-update common-lisp:nil
                       ((bucket-names :initarg :bucket-names :initform
                         (common-lisp:error ":bucketnames is required") :type
                         (common-lisp:or |__listOfS3BucketName|
                                         common-lisp:null)
                         :accessor
                         struct-shape-s3classification-scope-exclusion-update-bucket-names
                         :shape "__listOfS3BucketName" :location
                         common-lisp:nil :location-name "bucketNames")
                        (operation :initarg :operation :initform
                         (common-lisp:error ":operation is required") :type
                         (common-lisp:or classification-scope-update-operation
                                         common-lisp:null)
                         :accessor
                         struct-shape-s3classification-scope-exclusion-update-operation
                         :shape "ClassificationScopeUpdateOperation" :location
                         common-lisp:nil :location-name "operation"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-s3classification-scope-exclusion-update
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      's3classification-scope-exclusion-update
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 's3classification-scope-exclusion-update
                    'make-s3classification-scope-exclusion-update))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          s3classification-scope-exclusion-update))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          s3classification-scope-exclusion-update))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-names))
      (common-lisp:list
       (common-lisp:cons "bucketNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          s3classification-scope-exclusion-update))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass s3classification-scope-update common-lisp:nil
                       ((excludes :initarg :excludes :initform
                         (common-lisp:error ":excludes is required") :type
                         (common-lisp:or
                          s3classification-scope-exclusion-update
                          common-lisp:null)
                         :accessor
                         struct-shape-s3classification-scope-update-excludes
                         :shape "S3ClassificationScopeExclusionUpdate"
                         :location common-lisp:nil :location-name "excludes"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-s3classification-scope-update
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      's3classification-scope-update
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 's3classification-scope-update
                    'make-s3classification-scope-update))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          s3classification-scope-update))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          s3classification-scope-update))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'excludes))
      (common-lisp:list
       (common-lisp:cons "excludes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          s3classification-scope-update))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass s3destination common-lisp:nil
                       ((bucket-name :initarg :bucket-name :initform
                         (common-lisp:error ":bucketname is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-s3destination-bucket-name :shape
                         "__string" :location common-lisp:nil :location-name
                         "bucketName")
                        (key-prefix :initarg :key-prefix :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-s3destination-key-prefix :shape
                         "__string" :location common-lisp:nil :location-name
                         "keyPrefix")
                        (kms-key-arn :initarg :kms-key-arn :initform
                         (common-lisp:error ":kmskeyarn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-s3destination-kms-key-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         "kmsKeyArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-s3destination
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 's3destination
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 's3destination 'make-s3destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input s3destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input s3destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-name))
      (common-lisp:list
       (common-lisp:cons "bucketName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-prefix))
      (common-lisp:list
       (common-lisp:cons "keyPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-arn))
      (common-lisp:list
       (common-lisp:cons "kmsKeyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input s3destination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass s3job-definition common-lisp:nil
                       ((bucket-criteria :initarg :bucket-criteria :initform
                         common-lisp:nil :type
                         (common-lisp:or s3bucket-criteria-for-job
                                         common-lisp:null)
                         :accessor
                         struct-shape-s3job-definition-bucket-criteria :shape
                         "S3BucketCriteriaForJob" :location common-lisp:nil
                         :location-name "bucketCriteria")
                        (bucket-definitions :initarg :bucket-definitions
                         :initform common-lisp:nil :type
                         (common-lisp:or |__listOfS3BucketDefinitionForJob|
                                         common-lisp:null)
                         :accessor
                         struct-shape-s3job-definition-bucket-definitions
                         :shape "__listOfS3BucketDefinitionForJob" :location
                         common-lisp:nil :location-name "bucketDefinitions")
                        (scoping :initarg :scoping :initform common-lisp:nil
                         :type (common-lisp:or scoping common-lisp:null)
                         :accessor struct-shape-s3job-definition-scoping :shape
                         "Scoping" :location common-lisp:nil :location-name
                         "scoping"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-s3job-definition
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 's3job-definition
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 's3job-definition 'make-s3job-definition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input s3job-definition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input s3job-definition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-criteria))
      (common-lisp:list
       (common-lisp:cons "bucketCriteria"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-definitions))
      (common-lisp:list
       (common-lisp:cons "bucketDefinitions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scoping))
      (common-lisp:list
       (common-lisp:cons "scoping"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input s3job-definition))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass s3object common-lisp:nil
                       ((bucket-arn :initarg :bucket-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-s3object-bucket-arn :shape "__string"
                         :location common-lisp:nil :location-name "bucketArn")
                        (e-tag :initarg :e-tag :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-s3object-e-tag :shape "__string"
                         :location common-lisp:nil :location-name "eTag")
                        (extension :initarg :extension :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-s3object-extension :shape "__string"
                         :location common-lisp:nil :location-name "extension")
                        (key :initarg :key :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-s3object-key :shape "__string" :location
                         common-lisp:nil :location-name "key")
                        (last-modified :initarg :last-modified :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor struct-shape-s3object-last-modified :shape
                         "__timestampIso8601" :location common-lisp:nil
                         :location-name "lastModified")
                        (path :initarg :path :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-s3object-path :shape "__string" :location
                         common-lisp:nil :location-name "path")
                        (public-access :initarg :public-access :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-s3object-public-access :shape
                         "__boolean" :location common-lisp:nil :location-name
                         "publicAccess")
                        (server-side-encryption :initarg
                         :server-side-encryption :initform common-lisp:nil
                         :type
                         (common-lisp:or server-side-encryption
                                         common-lisp:null)
                         :accessor struct-shape-s3object-server-side-encryption
                         :shape "ServerSideEncryption" :location
                         common-lisp:nil :location-name "serverSideEncryption")
                        (size :initarg :size :initform common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-s3object-size :shape "__long" :location
                         common-lisp:nil :location-name "size")
                        (storage-class :initarg :storage-class :initform
                         common-lisp:nil :type
                         (common-lisp:or storage-class common-lisp:null)
                         :accessor struct-shape-s3object-storage-class :shape
                         "StorageClass" :location common-lisp:nil
                         :location-name "storageClass")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or key-value-pair-list common-lisp:null)
                         :accessor struct-shape-s3object-tags :shape
                         "KeyValuePairList" :location common-lisp:nil
                         :location-name "tags")
                        (version-id :initarg :version-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-s3object-version-id :shape "__string"
                         :location common-lisp:nil :location-name "versionId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-s3object
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 's3object
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 's3object 'make-s3object))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input s3object))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input s3object))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-arn))
      (common-lisp:list
       (common-lisp:cons "bucketArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'e-tag))
      (common-lisp:list
       (common-lisp:cons "eTag"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'extension))
      (common-lisp:list
       (common-lisp:cons "extension"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified))
      (common-lisp:list
       (common-lisp:cons "lastModified"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path))
      (common-lisp:list
       (common-lisp:cons "path"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'public-access))
      (common-lisp:list
       (common-lisp:cons "publicAccess"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'server-side-encryption))
      (common-lisp:list
       (common-lisp:cons "serverSideEncryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'size))
      (common-lisp:list
       (common-lisp:cons "size"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-class))
      (common-lisp:list
       (common-lisp:cons "storageClass"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version-id))
      (common-lisp:list
       (common-lisp:cons "versionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input s3object))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass s3words-list common-lisp:nil
                       ((bucket-name :initarg :bucket-name :initform
                         (common-lisp:error ":bucketname is required") :type
                         (common-lisp:or |__stringMin3Max255PatternAZaZ093255|
                                         common-lisp:null)
                         :accessor struct-shape-s3words-list-bucket-name :shape
                         "__stringMin3Max255PatternAZaZ093255" :location
                         common-lisp:nil :location-name "bucketName")
                        (object-key :initarg :object-key :initform
                         (common-lisp:error ":objectkey is required") :type
                         (common-lisp:or |__stringMin1Max1024PatternSS|
                                         common-lisp:null)
                         :accessor struct-shape-s3words-list-object-key :shape
                         "__stringMin1Max1024PatternSS" :location
                         common-lisp:nil :location-name "objectKey"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-s3words-list
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 's3words-list
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 's3words-list 'make-s3words-list))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input s3words-list))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input s3words-list))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-name))
      (common-lisp:list
       (common-lisp:cons "bucketName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'object-key))
      (common-lisp:list
       (common-lisp:cons "objectKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input s3words-list))
   common-lisp:nil))
(common-lisp:deftype scope-filter-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass scoping common-lisp:nil
                       ((excludes :initarg :excludes :initform common-lisp:nil
                         :type
                         (common-lisp:or job-scoping-block common-lisp:null)
                         :accessor struct-shape-scoping-excludes :shape
                         "JobScopingBlock" :location common-lisp:nil
                         :location-name "excludes")
                        (includes :initarg :includes :initform common-lisp:nil
                         :type
                         (common-lisp:or job-scoping-block common-lisp:null)
                         :accessor struct-shape-scoping-includes :shape
                         "JobScopingBlock" :location common-lisp:nil
                         :location-name "includes"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-scoping
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'scoping
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'scoping 'make-scoping))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input scoping))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input scoping))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'excludes))
      (common-lisp:list
       (common-lisp:cons "excludes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'includes))
      (common-lisp:list
       (common-lisp:cons "includes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input scoping))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass search-resources-bucket-criteria common-lisp:nil
                       ((excludes :initarg :excludes :initform common-lisp:nil
                         :type
                         (common-lisp:or search-resources-criteria-block
                                         common-lisp:null)
                         :accessor
                         struct-shape-search-resources-bucket-criteria-excludes
                         :shape "SearchResourcesCriteriaBlock" :location
                         common-lisp:nil :location-name "excludes")
                        (includes :initarg :includes :initform common-lisp:nil
                         :type
                         (common-lisp:or search-resources-criteria-block
                                         common-lisp:null)
                         :accessor
                         struct-shape-search-resources-bucket-criteria-includes
                         :shape "SearchResourcesCriteriaBlock" :location
                         common-lisp:nil :location-name "includes"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-search-resources-bucket-criteria
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'search-resources-bucket-criteria
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'search-resources-bucket-criteria
                    'make-search-resources-bucket-criteria))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          search-resources-bucket-criteria))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          search-resources-bucket-criteria))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'excludes))
      (common-lisp:list
       (common-lisp:cons "excludes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'includes))
      (common-lisp:list
       (common-lisp:cons "includes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          search-resources-bucket-criteria))
   common-lisp:nil))
(common-lisp:deftype search-resources-comparator () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass search-resources-criteria common-lisp:nil
                       ((simple-criterion :initarg :simple-criterion :initform
                         common-lisp:nil :type
                         (common-lisp:or search-resources-simple-criterion
                                         common-lisp:null)
                         :accessor
                         struct-shape-search-resources-criteria-simple-criterion
                         :shape "SearchResourcesSimpleCriterion" :location
                         common-lisp:nil :location-name "simpleCriterion")
                        (tag-criterion :initarg :tag-criterion :initform
                         common-lisp:nil :type
                         (common-lisp:or search-resources-tag-criterion
                                         common-lisp:null)
                         :accessor
                         struct-shape-search-resources-criteria-tag-criterion
                         :shape "SearchResourcesTagCriterion" :location
                         common-lisp:nil :location-name "tagCriterion"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-search-resources-criteria
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'search-resources-criteria
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'search-resources-criteria
                    'make-search-resources-criteria))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          search-resources-criteria))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          search-resources-criteria))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'simple-criterion))
      (common-lisp:list
       (common-lisp:cons "simpleCriterion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-criterion))
      (common-lisp:list
       (common-lisp:cons "tagCriterion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          search-resources-criteria))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass search-resources-criteria-block common-lisp:nil
                       ((and :initarg :and :initform common-lisp:nil :type
                         (common-lisp:or |__listOfSearchResourcesCriteria|
                                         common-lisp:null)
                         :accessor
                         struct-shape-search-resources-criteria-block-and
                         :shape "__listOfSearchResourcesCriteria" :location
                         common-lisp:nil :location-name "and"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-search-resources-criteria-block
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'search-resources-criteria-block
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'search-resources-criteria-block
                    'make-search-resources-criteria-block))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          search-resources-criteria-block))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          search-resources-criteria-block))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'and))
      (common-lisp:list
       (common-lisp:cons "and"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          search-resources-criteria-block))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass search-resources-request common-lisp:nil
                       ((bucket-criteria :initarg :bucket-criteria :initform
                         common-lisp:nil :type
                         (common-lisp:or search-resources-bucket-criteria
                                         common-lisp:null)
                         :accessor
                         struct-shape-search-resources-request-bucket-criteria
                         :shape "SearchResourcesBucketCriteria" :location
                         common-lisp:nil :location-name "bucketCriteria")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-search-resources-request-max-results
                         :shape "__integer" :location common-lisp:nil
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-search-resources-request-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken")
                        (sort-criteria :initarg :sort-criteria :initform
                         common-lisp:nil :type
                         (common-lisp:or search-resources-sort-criteria
                                         common-lisp:null)
                         :accessor
                         struct-shape-search-resources-request-sort-criteria
                         :shape "SearchResourcesSortCriteria" :location
                         common-lisp:nil :location-name "sortCriteria"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-search-resources-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'search-resources-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'search-resources-request 'make-search-resources-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          search-resources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          search-resources-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-criteria))
      (common-lisp:list
       (common-lisp:cons "bucketCriteria"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sort-criteria))
      (common-lisp:list
       (common-lisp:cons "sortCriteria"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          search-resources-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass search-resources-response common-lisp:nil
                       ((matching-resources :initarg :matching-resources
                         :initform common-lisp:nil :type
                         (common-lisp:or |__listOfMatchingResource|
                                         common-lisp:null)
                         :accessor
                         struct-shape-search-resources-response-matching-resources
                         :shape "__listOfMatchingResource" :location
                         common-lisp:nil :location-name "matchingResources")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-search-resources-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-search-resources-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'search-resources-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'search-resources-response
                    'make-search-resources-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          search-resources-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          search-resources-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'matching-resources))
      (common-lisp:list
       (common-lisp:cons "matchingResources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          search-resources-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass search-resources-simple-criterion common-lisp:nil
                       ((comparator :initarg :comparator :initform
                         common-lisp:nil :type
                         (common-lisp:or search-resources-comparator
                                         common-lisp:null)
                         :accessor
                         struct-shape-search-resources-simple-criterion-comparator
                         :shape "SearchResourcesComparator" :location
                         common-lisp:nil :location-name "comparator")
                        (key :initarg :key :initform common-lisp:nil :type
                         (common-lisp:or search-resources-simple-criterion-key
                                         common-lisp:null)
                         :accessor
                         struct-shape-search-resources-simple-criterion-key
                         :shape "SearchResourcesSimpleCriterionKey" :location
                         common-lisp:nil :location-name "key")
                        (values :initarg :values :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-search-resources-simple-criterion-values
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "values"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-search-resources-simple-criterion
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'search-resources-simple-criterion
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'search-resources-simple-criterion
                    'make-search-resources-simple-criterion))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          search-resources-simple-criterion))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          search-resources-simple-criterion))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'comparator))
      (common-lisp:list
       (common-lisp:cons "comparator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          search-resources-simple-criterion))
   common-lisp:nil))
(common-lisp:deftype search-resources-simple-criterion-key ()
  'common-lisp:string)
(common-lisp:deftype search-resources-sort-attribute-name ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass search-resources-sort-criteria common-lisp:nil
                       ((attribute-name :initarg :attribute-name :initform
                         common-lisp:nil :type
                         (common-lisp:or search-resources-sort-attribute-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-search-resources-sort-criteria-attribute-name
                         :shape "SearchResourcesSortAttributeName" :location
                         common-lisp:nil :location-name "attributeName")
                        (order-by :initarg :order-by :initform common-lisp:nil
                         :type (common-lisp:or order-by common-lisp:null)
                         :accessor
                         struct-shape-search-resources-sort-criteria-order-by
                         :shape "OrderBy" :location common-lisp:nil
                         :location-name "orderBy"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-search-resources-sort-criteria
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'search-resources-sort-criteria
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'search-resources-sort-criteria
                    'make-search-resources-sort-criteria))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          search-resources-sort-criteria))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          search-resources-sort-criteria))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-name))
      (common-lisp:list
       (common-lisp:cons "attributeName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'order-by))
      (common-lisp:list
       (common-lisp:cons "orderBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          search-resources-sort-criteria))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass search-resources-tag-criterion common-lisp:nil
                       ((comparator :initarg :comparator :initform
                         common-lisp:nil :type
                         (common-lisp:or search-resources-comparator
                                         common-lisp:null)
                         :accessor
                         struct-shape-search-resources-tag-criterion-comparator
                         :shape "SearchResourcesComparator" :location
                         common-lisp:nil :location-name "comparator")
                        (tag-values :initarg :tag-values :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          |__listOfSearchResourcesTagCriterionPair|
                          common-lisp:null)
                         :accessor
                         struct-shape-search-resources-tag-criterion-tag-values
                         :shape "__listOfSearchResourcesTagCriterionPair"
                         :location common-lisp:nil :location-name "tagValues"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-search-resources-tag-criterion
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'search-resources-tag-criterion
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'search-resources-tag-criterion
                    'make-search-resources-tag-criterion))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          search-resources-tag-criterion))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          search-resources-tag-criterion))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'comparator))
      (common-lisp:list
       (common-lisp:cons "comparator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-values))
      (common-lisp:list
       (common-lisp:cons "tagValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          search-resources-tag-criterion))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass search-resources-tag-criterion-pair common-lisp:nil
                       ((key :initarg :key :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-search-resources-tag-criterion-pair-key
                         :shape "__string" :location common-lisp:nil
                         :location-name "key")
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-search-resources-tag-criterion-pair-value
                         :shape "__string" :location common-lisp:nil
                         :location-name "value"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-search-resources-tag-criterion-pair
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'search-resources-tag-criterion-pair
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'search-resources-tag-criterion-pair
                    'make-search-resources-tag-criterion-pair))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          search-resources-tag-criterion-pair))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          search-resources-tag-criterion-pair))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          search-resources-tag-criterion-pair))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass security-hub-configuration common-lisp:nil
                       ((publish-classification-findings :initarg
                         :publish-classification-findings :initform
                         (common-lisp:error
                          ":publishclassificationfindings is required")
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-security-hub-configuration-publish-classification-findings
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "publishClassificationFindings")
                        (publish-policy-findings :initarg
                         :publish-policy-findings :initform
                         (common-lisp:error
                          ":publishpolicyfindings is required")
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-security-hub-configuration-publish-policy-findings
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "publishPolicyFindings"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-security-hub-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'security-hub-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'security-hub-configuration
                    'make-security-hub-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          security-hub-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          security-hub-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'publish-classification-findings))
      (common-lisp:list
       (common-lisp:cons "publishClassificationFindings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'publish-policy-findings))
      (common-lisp:list
       (common-lisp:cons "publishPolicyFindings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          security-hub-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype sensitive-data ()
   '(trivial-types:proper-list sensitive-data-item))
 (common-lisp:defun make-sensitive-data
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list sensitive-data-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass sensitive-data-item common-lisp:nil
                       ((category :initarg :category :initform common-lisp:nil
                         :type
                         (common-lisp:or sensitive-data-item-category
                                         common-lisp:null)
                         :accessor struct-shape-sensitive-data-item-category
                         :shape "SensitiveDataItemCategory" :location
                         common-lisp:nil :location-name "category")
                        (detections :initarg :detections :initform
                         common-lisp:nil :type
                         (common-lisp:or default-detections common-lisp:null)
                         :accessor struct-shape-sensitive-data-item-detections
                         :shape "DefaultDetections" :location common-lisp:nil
                         :location-name "detections")
                        (total-count :initarg :total-count :initform
                         common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-sensitive-data-item-total-count :shape
                         "__long" :location common-lisp:nil :location-name
                         "totalCount"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-sensitive-data-item
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'sensitive-data-item
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'sensitive-data-item 'make-sensitive-data-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sensitive-data-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sensitive-data-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'category))
      (common-lisp:list
       (common-lisp:cons "category"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'detections))
      (common-lisp:list
       (common-lisp:cons "detections"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total-count))
      (common-lisp:list
       (common-lisp:cons "totalCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sensitive-data-item))
   common-lisp:nil))
(common-lisp:deftype sensitive-data-item-category () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype sensitive-data-occurrences () 'common-lisp:hash-table)
 (common-lisp:defun make-sensitive-data-occurrences
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass sensitivity-aggregations common-lisp:nil
                       ((classifiable-size-in-bytes :initarg
                         :classifiable-size-in-bytes :initform common-lisp:nil
                         :type (common-lisp:or |__long| common-lisp:null)
                         :accessor
                         struct-shape-sensitivity-aggregations-classifiable-size-in-bytes
                         :shape "__long" :location common-lisp:nil
                         :location-name "classifiableSizeInBytes")
                        (publicly-accessible-count :initarg
                         :publicly-accessible-count :initform common-lisp:nil
                         :type (common-lisp:or |__long| common-lisp:null)
                         :accessor
                         struct-shape-sensitivity-aggregations-publicly-accessible-count
                         :shape "__long" :location common-lisp:nil
                         :location-name "publiclyAccessibleCount")
                        (total-count :initarg :total-count :initform
                         common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-sensitivity-aggregations-total-count
                         :shape "__long" :location common-lisp:nil
                         :location-name "totalCount")
                        (total-size-in-bytes :initarg :total-size-in-bytes
                         :initform common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-sensitivity-aggregations-total-size-in-bytes
                         :shape "__long" :location common-lisp:nil
                         :location-name "totalSizeInBytes"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-sensitivity-aggregations
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'sensitivity-aggregations
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'sensitivity-aggregations 'make-sensitivity-aggregations))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sensitivity-aggregations))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sensitivity-aggregations))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'classifiable-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "classifiableSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'publicly-accessible-count))
      (common-lisp:list
       (common-lisp:cons "publiclyAccessibleCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total-count))
      (common-lisp:list
       (common-lisp:cons "totalCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "totalSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sensitivity-aggregations))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass sensitivity-inspection-template-excludes common-lisp:nil
                       ((managed-data-identifier-ids :initarg
                         :managed-data-identifier-ids :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-sensitivity-inspection-template-excludes-managed-data-identifier-ids
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "managedDataIdentifierIds"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-sensitivity-inspection-template-excludes
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'sensitivity-inspection-template-excludes
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'sensitivity-inspection-template-excludes
                    'make-sensitivity-inspection-template-excludes))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sensitivity-inspection-template-excludes))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sensitivity-inspection-template-excludes))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'managed-data-identifier-ids))
      (common-lisp:list
       (common-lisp:cons "managedDataIdentifierIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sensitivity-inspection-template-excludes))
   common-lisp:nil))
(common-lisp:deftype sensitivity-inspection-template-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass sensitivity-inspection-template-includes common-lisp:nil
                       ((allow-list-ids :initarg :allow-list-ids :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-sensitivity-inspection-template-includes-allow-list-ids
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "allowListIds")
                        (custom-data-identifier-ids :initarg
                         :custom-data-identifier-ids :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-sensitivity-inspection-template-includes-custom-data-identifier-ids
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "customDataIdentifierIds")
                        (managed-data-identifier-ids :initarg
                         :managed-data-identifier-ids :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-sensitivity-inspection-template-includes-managed-data-identifier-ids
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "managedDataIdentifierIds"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-sensitivity-inspection-template-includes
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'sensitivity-inspection-template-includes
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'sensitivity-inspection-template-includes
                    'make-sensitivity-inspection-template-includes))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sensitivity-inspection-template-includes))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sensitivity-inspection-template-includes))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allow-list-ids))
      (common-lisp:list
       (common-lisp:cons "allowListIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'custom-data-identifier-ids))
      (common-lisp:list
       (common-lisp:cons "customDataIdentifierIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'managed-data-identifier-ids))
      (common-lisp:list
       (common-lisp:cons "managedDataIdentifierIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sensitivity-inspection-template-includes))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass sensitivity-inspection-templates-entry common-lisp:nil
                       ((id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-sensitivity-inspection-templates-entry-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "id")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-sensitivity-inspection-templates-entry-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "name"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-sensitivity-inspection-templates-entry
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'sensitivity-inspection-templates-entry
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'sensitivity-inspection-templates-entry
                    'make-sensitivity-inspection-templates-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sensitivity-inspection-templates-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sensitivity-inspection-templates-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sensitivity-inspection-templates-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass server-side-encryption common-lisp:nil
                       ((encryption-type :initarg :encryption-type :initform
                         common-lisp:nil :type
                         (common-lisp:or encryption-type common-lisp:null)
                         :accessor
                         struct-shape-server-side-encryption-encryption-type
                         :shape "EncryptionType" :location common-lisp:nil
                         :location-name "encryptionType")
                        (kms-master-key-id :initarg :kms-master-key-id
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-server-side-encryption-kms-master-key-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "kmsMasterKeyId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-server-side-encryption
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'server-side-encryption
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'server-side-encryption 'make-server-side-encryption))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          server-side-encryption))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          server-side-encryption))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption-type))
      (common-lisp:list
       (common-lisp:cons "encryptionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-master-key-id))
      (common-lisp:list
       (common-lisp:cons "kmsMasterKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          server-side-encryption))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass service-limit common-lisp:nil
                       ((is-service-limited :initarg :is-service-limited
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-service-limit-is-service-limited :shape
                         "__boolean" :location common-lisp:nil :location-name
                         "isServiceLimited")
                        (unit :initarg :unit :initform common-lisp:nil :type
                         (common-lisp:or unit common-lisp:null) :accessor
                         struct-shape-service-limit-unit :shape "Unit"
                         :location common-lisp:nil :location-name "unit")
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-service-limit-value :shape "__long"
                         :location common-lisp:nil :location-name "value"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-service-limit
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'service-limit
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'service-limit 'make-service-limit))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input service-limit))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input service-limit))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-service-limited))
      (common-lisp:list
       (common-lisp:cons "isServiceLimited"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'unit))
      (common-lisp:list
       (common-lisp:cons "unit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input service-limit))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition service-quota-exceeded-exception
     (macie2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-quota-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-quota-exceeded-exception
                    'service-quota-exceeded-exception-message)))
(common-lisp:progn
 (common-lisp:defclass session-context common-lisp:nil
                       ((attributes :initarg :attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or session-context-attributes
                                         common-lisp:null)
                         :accessor struct-shape-session-context-attributes
                         :shape "SessionContextAttributes" :location
                         common-lisp:nil :location-name "attributes")
                        (session-issuer :initarg :session-issuer :initform
                         common-lisp:nil :type
                         (common-lisp:or session-issuer common-lisp:null)
                         :accessor struct-shape-session-context-session-issuer
                         :shape "SessionIssuer" :location common-lisp:nil
                         :location-name "sessionIssuer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-session-context
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'session-context
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'session-context 'make-session-context))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input session-context))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input session-context))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'session-issuer))
      (common-lisp:list
       (common-lisp:cons "sessionIssuer"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input session-context))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass session-context-attributes common-lisp:nil
                       ((creation-date :initarg :creation-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-session-context-attributes-creation-date
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "creationDate")
                        (mfa-authenticated :initarg :mfa-authenticated
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-session-context-attributes-mfa-authenticated
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "mfaAuthenticated"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-session-context-attributes
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'session-context-attributes
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'session-context-attributes
                    'make-session-context-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          session-context-attributes))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          session-context-attributes))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "creationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mfa-authenticated))
      (common-lisp:list
       (common-lisp:cons "mfaAuthenticated"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          session-context-attributes))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass session-issuer common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-session-issuer-account-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "accountId")
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-session-issuer-arn :shape "__string"
                         :location common-lisp:nil :location-name "arn")
                        (principal-id :initarg :principal-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-session-issuer-principal-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "principalId")
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-session-issuer-type :shape "__string"
                         :location common-lisp:nil :location-name "type")
                        (user-name :initarg :user-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-session-issuer-user-name :shape
                         "__string" :location common-lisp:nil :location-name
                         "userName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-session-issuer
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'session-issuer
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'session-issuer 'make-session-issuer))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input session-issuer))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input session-issuer))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-id))
      (common-lisp:list
       (common-lisp:cons "principalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-name))
      (common-lisp:list
       (common-lisp:cons "userName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input session-issuer))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass severity common-lisp:nil
                       ((description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or severity-description common-lisp:null)
                         :accessor struct-shape-severity-description :shape
                         "SeverityDescription" :location common-lisp:nil
                         :location-name "description")
                        (score :initarg :score :initform common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-severity-score :shape "__long" :location
                         common-lisp:nil :location-name "score"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-severity
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'severity
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'severity 'make-severity))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input severity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input severity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'score))
      (common-lisp:list
       (common-lisp:cons "score"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input severity))
   common-lisp:nil))
(common-lisp:deftype severity-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass severity-level common-lisp:nil
                       ((occurrences-threshold :initarg :occurrences-threshold
                         :initform
                         (common-lisp:error
                          ":occurrencesthreshold is required")
                         :type (common-lisp:or |__long| common-lisp:null)
                         :accessor
                         struct-shape-severity-level-occurrences-threshold
                         :shape "__long" :location common-lisp:nil
                         :location-name "occurrencesThreshold")
                        (severity :initarg :severity :initform
                         (common-lisp:error ":severity is required") :type
                         (common-lisp:or data-identifier-severity
                                         common-lisp:null)
                         :accessor struct-shape-severity-level-severity :shape
                         "DataIdentifierSeverity" :location common-lisp:nil
                         :location-name "severity"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-severity-level
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'severity-level
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'severity-level 'make-severity-level))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input severity-level))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input severity-level))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'occurrences-threshold))
      (common-lisp:list
       (common-lisp:cons "occurrencesThreshold"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'severity))
      (common-lisp:list
       (common-lisp:cons "severity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input severity-level))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype severity-level-list ()
   '(trivial-types:proper-list severity-level))
 (common-lisp:defun make-severity-level-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list severity-level))
   aws-sdk/generator/shape::members))
(common-lisp:deftype shared-access () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass simple-criterion-for-job common-lisp:nil
                       ((comparator :initarg :comparator :initform
                         common-lisp:nil :type
                         (common-lisp:or job-comparator common-lisp:null)
                         :accessor
                         struct-shape-simple-criterion-for-job-comparator
                         :shape "JobComparator" :location common-lisp:nil
                         :location-name "comparator")
                        (key :initarg :key :initform common-lisp:nil :type
                         (common-lisp:or simple-criterion-key-for-job
                                         common-lisp:null)
                         :accessor struct-shape-simple-criterion-for-job-key
                         :shape "SimpleCriterionKeyForJob" :location
                         common-lisp:nil :location-name "key")
                        (values :initarg :values :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-simple-criterion-for-job-values
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "values"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-simple-criterion-for-job
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'simple-criterion-for-job
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'simple-criterion-for-job 'make-simple-criterion-for-job))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          simple-criterion-for-job))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          simple-criterion-for-job))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'comparator))
      (common-lisp:list
       (common-lisp:cons "comparator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          simple-criterion-for-job))
   common-lisp:nil))
(common-lisp:deftype simple-criterion-key-for-job () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass simple-scope-term common-lisp:nil
                       ((comparator :initarg :comparator :initform
                         common-lisp:nil :type
                         (common-lisp:or job-comparator common-lisp:null)
                         :accessor struct-shape-simple-scope-term-comparator
                         :shape "JobComparator" :location common-lisp:nil
                         :location-name "comparator")
                        (key :initarg :key :initform common-lisp:nil :type
                         (common-lisp:or scope-filter-key common-lisp:null)
                         :accessor struct-shape-simple-scope-term-key :shape
                         "ScopeFilterKey" :location common-lisp:nil
                         :location-name "key")
                        (values :initarg :values :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-simple-scope-term-values :shape
                         "__listOf__string" :location common-lisp:nil
                         :location-name "values"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-simple-scope-term
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'simple-scope-term
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'simple-scope-term 'make-simple-scope-term))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input simple-scope-term))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input simple-scope-term))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'comparator))
      (common-lisp:list
       (common-lisp:cons "comparator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input simple-scope-term))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass sort-criteria common-lisp:nil
                       ((attribute-name :initarg :attribute-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-sort-criteria-attribute-name :shape
                         "__string" :location common-lisp:nil :location-name
                         "attributeName")
                        (order-by :initarg :order-by :initform common-lisp:nil
                         :type (common-lisp:or order-by common-lisp:null)
                         :accessor struct-shape-sort-criteria-order-by :shape
                         "OrderBy" :location common-lisp:nil :location-name
                         "orderBy"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-sort-criteria
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'sort-criteria
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'sort-criteria 'make-sort-criteria))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sort-criteria))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sort-criteria))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-name))
      (common-lisp:list
       (common-lisp:cons "attributeName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'order-by))
      (common-lisp:list
       (common-lisp:cons "orderBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sort-criteria))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass statistics common-lisp:nil
                       ((approximate-number-of-objects-to-process :initarg
                         :approximate-number-of-objects-to-process :initform
                         common-lisp:nil :type
                         (common-lisp:or |__double| common-lisp:null) :accessor
                         struct-shape-statistics-approximate-number-of-objects-to-process
                         :shape "__double" :location common-lisp:nil
                         :location-name "approximateNumberOfObjectsToProcess")
                        (number-of-runs :initarg :number-of-runs :initform
                         common-lisp:nil :type
                         (common-lisp:or |__double| common-lisp:null) :accessor
                         struct-shape-statistics-number-of-runs :shape
                         "__double" :location common-lisp:nil :location-name
                         "numberOfRuns"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-statistics
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'statistics
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'statistics 'make-statistics))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input statistics))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input statistics))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'approximate-number-of-objects-to-process))
      (common-lisp:list
       (common-lisp:cons "approximateNumberOfObjectsToProcess"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'number-of-runs))
      (common-lisp:list
       (common-lisp:cons "numberOfRuns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input statistics))
   common-lisp:nil))
(common-lisp:deftype storage-class () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass suppress-data-identifier common-lisp:nil
                       ((id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-suppress-data-identifier-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "id")
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or data-identifier-type common-lisp:null)
                         :accessor struct-shape-suppress-data-identifier-type
                         :shape "DataIdentifierType" :location common-lisp:nil
                         :location-name "type"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-suppress-data-identifier
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'suppress-data-identifier
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'suppress-data-identifier 'make-suppress-data-identifier))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          suppress-data-identifier))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          suppress-data-identifier))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          suppress-data-identifier))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-criterion-for-job common-lisp:nil
                       ((comparator :initarg :comparator :initform
                         common-lisp:nil :type
                         (common-lisp:or job-comparator common-lisp:null)
                         :accessor
                         struct-shape-tag-criterion-for-job-comparator :shape
                         "JobComparator" :location common-lisp:nil
                         :location-name "comparator")
                        (tag-values :initarg :tag-values :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfTagCriterionPairForJob|
                                         common-lisp:null)
                         :accessor
                         struct-shape-tag-criterion-for-job-tag-values :shape
                         "__listOfTagCriterionPairForJob" :location
                         common-lisp:nil :location-name "tagValues"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-criterion-for-job
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-criterion-for-job
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-criterion-for-job 'make-tag-criterion-for-job))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-criterion-for-job))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-criterion-for-job))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'comparator))
      (common-lisp:list
       (common-lisp:cons "comparator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-values))
      (common-lisp:list
       (common-lisp:cons "tagValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-criterion-for-job))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-criterion-pair-for-job common-lisp:nil
                       ((key :initarg :key :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-tag-criterion-pair-for-job-key :shape
                         "__string" :location common-lisp:nil :location-name
                         "key")
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-tag-criterion-pair-for-job-value :shape
                         "__string" :location common-lisp:nil :location-name
                         "value"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-criterion-pair-for-job
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-criterion-pair-for-job
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-criterion-pair-for-job
                    'make-tag-criterion-pair-for-job))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-criterion-pair-for-job))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-criterion-pair-for-job))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-criterion-pair-for-job))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype tag-map () 'common-lisp:hash-table)
 (common-lisp:defun make-tag-map (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-tag-resource-request-resource-arn :shape
                         "__string" :location "uri" :location-name
                         "resourceArn")
                        (tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-tag-resource-request-tags :shape "TagMap"
                         :location common-lisp:nil :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-scope-term common-lisp:nil
                       ((comparator :initarg :comparator :initform
                         common-lisp:nil :type
                         (common-lisp:or job-comparator common-lisp:null)
                         :accessor struct-shape-tag-scope-term-comparator
                         :shape "JobComparator" :location common-lisp:nil
                         :location-name "comparator")
                        (key :initarg :key :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-tag-scope-term-key :shape "__string"
                         :location common-lisp:nil :location-name "key")
                        (tag-values :initarg :tag-values :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfTagValuePair|
                                         common-lisp:null)
                         :accessor struct-shape-tag-scope-term-tag-values
                         :shape "__listOfTagValuePair" :location
                         common-lisp:nil :location-name "tagValues")
                        (target :initarg :target :initform common-lisp:nil
                         :type (common-lisp:or tag-target common-lisp:null)
                         :accessor struct-shape-tag-scope-term-target :shape
                         "TagTarget" :location common-lisp:nil :location-name
                         "target"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-scope-term
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-scope-term
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'tag-scope-term 'make-tag-scope-term))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-scope-term))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-scope-term))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'comparator))
      (common-lisp:list
       (common-lisp:cons "comparator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-values))
      (common-lisp:list
       (common-lisp:cons "tagValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target))
      (common-lisp:list
       (common-lisp:cons "target"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-scope-term))
   common-lisp:nil))
(common-lisp:deftype tag-target () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass tag-value-pair common-lisp:nil
                       ((key :initarg :key :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-tag-value-pair-key :shape "__string"
                         :location common-lisp:nil :location-name "key")
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-tag-value-pair-value :shape "__string"
                         :location common-lisp:nil :location-name "value"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-value-pair
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-value-pair
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'tag-value-pair 'make-tag-value-pair))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-value-pair))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-value-pair))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-value-pair))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass test-custom-data-identifier-request common-lisp:nil
                       ((ignore-words :initarg :ignore-words :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-test-custom-data-identifier-request-ignore-words
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "ignoreWords")
                        (keywords :initarg :keywords :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-test-custom-data-identifier-request-keywords
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "keywords")
                        (maximum-match-distance :initarg
                         :maximum-match-distance :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-test-custom-data-identifier-request-maximum-match-distance
                         :shape "__integer" :location common-lisp:nil
                         :location-name "maximumMatchDistance")
                        (regex :initarg :regex :initform
                         (common-lisp:error ":regex is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-test-custom-data-identifier-request-regex
                         :shape "__string" :location common-lisp:nil
                         :location-name "regex")
                        (sample-text :initarg :sample-text :initform
                         (common-lisp:error ":sampletext is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-test-custom-data-identifier-request-sample-text
                         :shape "__string" :location common-lisp:nil
                         :location-name "sampleText"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-test-custom-data-identifier-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'test-custom-data-identifier-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'test-custom-data-identifier-request
                    'make-test-custom-data-identifier-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          test-custom-data-identifier-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          test-custom-data-identifier-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ignore-words))
      (common-lisp:list
       (common-lisp:cons "ignoreWords"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'keywords))
      (common-lisp:list
       (common-lisp:cons "keywords"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'maximum-match-distance))
      (common-lisp:list
       (common-lisp:cons "maximumMatchDistance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'regex))
      (common-lisp:list
       (common-lisp:cons "regex"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sample-text))
      (common-lisp:list
       (common-lisp:cons "sampleText"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          test-custom-data-identifier-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass test-custom-data-identifier-response common-lisp:nil
                       ((match-count :initarg :match-count :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-test-custom-data-identifier-response-match-count
                         :shape "__integer" :location common-lisp:nil
                         :location-name "matchCount"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-test-custom-data-identifier-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'test-custom-data-identifier-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'test-custom-data-identifier-response
                    'make-test-custom-data-identifier-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          test-custom-data-identifier-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          test-custom-data-identifier-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'match-count))
      (common-lisp:list
       (common-lisp:cons "matchCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          test-custom-data-identifier-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (macie2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message)))
(common-lisp:deftype time-range () 'common-lisp:string)
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:deftype type () 'common-lisp:string)
(common-lisp:deftype unavailability-reason-code () 'common-lisp:string)
(common-lisp:deftype unit () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition unprocessable-entity-exception
     (macie2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       unprocessable-entity-exception-message)))
 (common-lisp:export
  (common-lisp:list 'unprocessable-entity-exception
                    'unprocessable-entity-exception-message)))
(common-lisp:progn
 (common-lisp:defclass unprocessed-account common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-unprocessed-account-account-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "accountId")
                        (error-code :initarg :error-code :initform
                         common-lisp:nil :type
                         (common-lisp:or error-code common-lisp:null) :accessor
                         struct-shape-unprocessed-account-error-code :shape
                         "ErrorCode" :location common-lisp:nil :location-name
                         "errorCode")
                        (error-message :initarg :error-message :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-unprocessed-account-error-message :shape
                         "__string" :location common-lisp:nil :location-name
                         "errorMessage"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-unprocessed-account
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'unprocessed-account
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'unprocessed-account 'make-unprocessed-account))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input unprocessed-account))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input unprocessed-account))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "errorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "errorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input unprocessed-account))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-untag-resource-request-resource-arn
                         :shape "__string" :location "uri" :location-name
                         "resourceArn")
                        (tag-keys :initarg :tag-keys :initform
                         (common-lisp:error ":tagkeys is required") :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-untag-resource-request-tag-keys
                         :shape "__listOf__string" :location "querystring"
                         :location-name "tagKeys"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-allow-list-request common-lisp:nil
                       ((criteria :initarg :criteria :initform
                         (common-lisp:error ":criteria is required") :type
                         (common-lisp:or allow-list-criteria common-lisp:null)
                         :accessor
                         struct-shape-update-allow-list-request-criteria :shape
                         "AllowListCriteria" :location common-lisp:nil
                         :location-name "criteria")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__stringMin1Max512PatternSS|
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-allow-list-request-description
                         :shape "__stringMin1Max512PatternSS" :location
                         common-lisp:nil :location-name "description")
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-allow-list-request-id :shape
                         "__string" :location "uri" :location-name "id")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or |__stringMin1Max128Pattern|
                                         common-lisp:null)
                         :accessor struct-shape-update-allow-list-request-name
                         :shape "__stringMin1Max128Pattern" :location
                         common-lisp:nil :location-name "name"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-allow-list-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-allow-list-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-allow-list-request
                    'make-update-allow-list-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-allow-list-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-allow-list-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'criteria))
      (common-lisp:list
       (common-lisp:cons "criteria"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-allow-list-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-allow-list-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or
                          |__stringMin71Max89PatternArnAwsAwsCnAwsUsGovMacie2AZ19920D12AllowListAZ0922|
                          common-lisp:null)
                         :accessor struct-shape-update-allow-list-response-arn
                         :shape
                         "__stringMin71Max89PatternArnAwsAwsCnAwsUsGovMacie2AZ19920D12AllowListAZ0922"
                         :location common-lisp:nil :location-name "arn")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__stringMin22Max22PatternAZ0922|
                                         common-lisp:null)
                         :accessor struct-shape-update-allow-list-response-id
                         :shape "__stringMin22Max22PatternAZ0922" :location
                         common-lisp:nil :location-name "id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-allow-list-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-allow-list-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-allow-list-response
                    'make-update-allow-list-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-allow-list-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-allow-list-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-allow-list-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-automated-discovery-configuration-request
                       common-lisp:nil
                       ((status :initarg :status :initform
                         (common-lisp:error ":status is required") :type
                         (common-lisp:or automated-discovery-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-automated-discovery-configuration-request-status
                         :shape "AutomatedDiscoveryStatus" :location
                         common-lisp:nil :location-name "status"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-automated-discovery-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-automated-discovery-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-automated-discovery-configuration-request
                    'make-update-automated-discovery-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-automated-discovery-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-automated-discovery-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-automated-discovery-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-automated-discovery-configuration-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-automated-discovery-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-automated-discovery-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-automated-discovery-configuration-response
                    'make-update-automated-discovery-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-automated-discovery-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-automated-discovery-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-automated-discovery-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-classification-job-request common-lisp:nil
                       ((job-id :initarg :job-id :initform
                         (common-lisp:error ":jobid is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-classification-job-request-job-id
                         :shape "__string" :location "uri" :location-name
                         "jobId")
                        (job-status :initarg :job-status :initform
                         (common-lisp:error ":jobstatus is required") :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-update-classification-job-request-job-status
                         :shape "JobStatus" :location common-lisp:nil
                         :location-name "jobStatus"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-classification-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-classification-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-classification-job-request
                    'make-update-classification-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-classification-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-classification-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "jobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-classification-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-classification-job-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-classification-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-classification-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-classification-job-response
                    'make-update-classification-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-classification-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-classification-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-classification-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-classification-scope-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-classification-scope-request-id
                         :shape "__string" :location "uri" :location-name "id")
                        (s3 :initarg :s3 :initform common-lisp:nil :type
                         (common-lisp:or s3classification-scope-update
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-classification-scope-request-s3
                         :shape "S3ClassificationScopeUpdate" :location
                         common-lisp:nil :location-name "s3"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-classification-scope-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-classification-scope-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-classification-scope-request
                    'make-update-classification-scope-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-classification-scope-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-classification-scope-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3))
      (common-lisp:list
       (common-lisp:cons "s3"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-classification-scope-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-classification-scope-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-classification-scope-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-classification-scope-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-classification-scope-response
                    'make-update-classification-scope-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-classification-scope-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-classification-scope-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-classification-scope-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-findings-filter-request common-lisp:nil
                       ((action :initarg :action :initform common-lisp:nil
                         :type
                         (common-lisp:or findings-filter-action
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-findings-filter-request-action
                         :shape "FindingsFilterAction" :location
                         common-lisp:nil :location-name "action")
                        (client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-findings-filter-request-client-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "clientToken")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-findings-filter-request-description
                         :shape "__string" :location common-lisp:nil
                         :location-name "description")
                        (finding-criteria :initarg :finding-criteria :initform
                         common-lisp:nil :type
                         (common-lisp:or finding-criteria common-lisp:null)
                         :accessor
                         struct-shape-update-findings-filter-request-finding-criteria
                         :shape "FindingCriteria" :location common-lisp:nil
                         :location-name "findingCriteria")
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-findings-filter-request-id :shape
                         "__string" :location "uri" :location-name "id")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-findings-filter-request-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "name")
                        (position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-update-findings-filter-request-position
                         :shape "__integer" :location common-lisp:nil
                         :location-name "position"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-findings-filter-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-findings-filter-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-findings-filter-request
                    'make-update-findings-filter-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-findings-filter-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-findings-filter-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'finding-criteria))
      (common-lisp:list
       (common-lisp:cons "findingCriteria"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-findings-filter-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-findings-filter-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-findings-filter-response-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name "arn")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-findings-filter-response-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-findings-filter-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-findings-filter-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-findings-filter-response
                    'make-update-findings-filter-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-findings-filter-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-findings-filter-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-findings-filter-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-macie-session-request common-lisp:nil
                       ((finding-publishing-frequency :initarg
                         :finding-publishing-frequency :initform
                         common-lisp:nil :type
                         (common-lisp:or finding-publishing-frequency
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-macie-session-request-finding-publishing-frequency
                         :shape "FindingPublishingFrequency" :location
                         common-lisp:nil :location-name
                         "findingPublishingFrequency")
                        (status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or macie-status common-lisp:null)
                         :accessor
                         struct-shape-update-macie-session-request-status
                         :shape "MacieStatus" :location common-lisp:nil
                         :location-name "status"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-macie-session-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-macie-session-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-macie-session-request
                    'make-update-macie-session-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-macie-session-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-macie-session-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'finding-publishing-frequency))
      (common-lisp:list
       (common-lisp:cons "findingPublishingFrequency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-macie-session-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-macie-session-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-macie-session-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-macie-session-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-macie-session-response
                    'make-update-macie-session-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-macie-session-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-macie-session-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-macie-session-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-member-session-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-member-session-request-id :shape
                         "__string" :location "uri" :location-name "id")
                        (status :initarg :status :initform
                         (common-lisp:error ":status is required") :type
                         (common-lisp:or macie-status common-lisp:null)
                         :accessor
                         struct-shape-update-member-session-request-status
                         :shape "MacieStatus" :location common-lisp:nil
                         :location-name "status"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-member-session-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-member-session-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-member-session-request
                    'make-update-member-session-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-member-session-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-member-session-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-member-session-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-member-session-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-member-session-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-member-session-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-member-session-response
                    'make-update-member-session-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-member-session-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-member-session-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-member-session-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-organization-configuration-request
                       common-lisp:nil
                       ((auto-enable :initarg :auto-enable :initform
                         (common-lisp:error ":autoenable is required") :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-update-organization-configuration-request-auto-enable
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "autoEnable"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-organization-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-organization-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-organization-configuration-request
                    'make-update-organization-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-organization-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-organization-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-enable))
      (common-lisp:list
       (common-lisp:cons "autoEnable"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-organization-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-organization-configuration-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-organization-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-organization-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-organization-configuration-response
                    'make-update-organization-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-organization-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-organization-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-organization-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-resource-profile-detections-request
                       common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-resource-profile-detections-request-resource-arn
                         :shape "__string" :location "querystring"
                         :location-name "resourceArn")
                        (suppress-data-identifiers :initarg
                         :suppress-data-identifiers :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOfSuppressDataIdentifier|
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-resource-profile-detections-request-suppress-data-identifiers
                         :shape "__listOfSuppressDataIdentifier" :location
                         common-lisp:nil :location-name
                         "suppressDataIdentifiers"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-resource-profile-detections-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-resource-profile-detections-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-resource-profile-detections-request
                    'make-update-resource-profile-detections-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-profile-detections-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-profile-detections-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suppress-data-identifiers))
      (common-lisp:list
       (common-lisp:cons "suppressDataIdentifiers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-profile-detections-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-resource-profile-detections-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-resource-profile-detections-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-resource-profile-detections-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-resource-profile-detections-response
                    'make-update-resource-profile-detections-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-profile-detections-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-profile-detections-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-profile-detections-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-resource-profile-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-resource-profile-request-resource-arn
                         :shape "__string" :location "querystring"
                         :location-name "resourceArn")
                        (sensitivity-score-override :initarg
                         :sensitivity-score-override :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-update-resource-profile-request-sensitivity-score-override
                         :shape "__integer" :location common-lisp:nil
                         :location-name "sensitivityScoreOverride"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-resource-profile-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-resource-profile-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-resource-profile-request
                    'make-update-resource-profile-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-profile-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-profile-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sensitivity-score-override))
      (common-lisp:list
       (common-lisp:cons "sensitivityScoreOverride"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-profile-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-resource-profile-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-resource-profile-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-resource-profile-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-resource-profile-response
                    'make-update-resource-profile-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-profile-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-profile-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-profile-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-retrieval-configuration common-lisp:nil
                       ((retrieval-mode :initarg :retrieval-mode :initform
                         (common-lisp:error ":retrievalmode is required") :type
                         (common-lisp:or retrieval-mode common-lisp:null)
                         :accessor
                         struct-shape-update-retrieval-configuration-retrieval-mode
                         :shape "RetrievalMode" :location common-lisp:nil
                         :location-name "retrievalMode")
                        (role-name :initarg :role-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__stringMin1Max64PatternW|
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-retrieval-configuration-role-name
                         :shape "__stringMin1Max64PatternW" :location
                         common-lisp:nil :location-name "roleName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-retrieval-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-retrieval-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-retrieval-configuration
                    'make-update-retrieval-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-retrieval-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-retrieval-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retrieval-mode))
      (common-lisp:list
       (common-lisp:cons "retrievalMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-name))
      (common-lisp:list
       (common-lisp:cons "roleName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-retrieval-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-reveal-configuration-request common-lisp:nil
                       ((configuration :initarg :configuration :initform
                         (common-lisp:error ":configuration is required") :type
                         (common-lisp:or reveal-configuration common-lisp:null)
                         :accessor
                         struct-shape-update-reveal-configuration-request-configuration
                         :shape "RevealConfiguration" :location common-lisp:nil
                         :location-name "configuration")
                        (retrieval-configuration :initarg
                         :retrieval-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or update-retrieval-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-reveal-configuration-request-retrieval-configuration
                         :shape "UpdateRetrievalConfiguration" :location
                         common-lisp:nil :location-name
                         "retrievalConfiguration"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-reveal-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-reveal-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-reveal-configuration-request
                    'make-update-reveal-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-reveal-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-reveal-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration))
      (common-lisp:list
       (common-lisp:cons "configuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'retrieval-configuration))
      (common-lisp:list
       (common-lisp:cons "retrievalConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-reveal-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-reveal-configuration-response common-lisp:nil
                       ((configuration :initarg :configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or reveal-configuration common-lisp:null)
                         :accessor
                         struct-shape-update-reveal-configuration-response-configuration
                         :shape "RevealConfiguration" :location common-lisp:nil
                         :location-name "configuration")
                        (retrieval-configuration :initarg
                         :retrieval-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or retrieval-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-reveal-configuration-response-retrieval-configuration
                         :shape "RetrievalConfiguration" :location
                         common-lisp:nil :location-name
                         "retrievalConfiguration"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-reveal-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-reveal-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-reveal-configuration-response
                    'make-update-reveal-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-reveal-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-reveal-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration))
      (common-lisp:list
       (common-lisp:cons "configuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'retrieval-configuration))
      (common-lisp:list
       (common-lisp:cons "retrievalConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-reveal-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-sensitivity-inspection-template-request
                       common-lisp:nil
                       ((description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-sensitivity-inspection-template-request-description
                         :shape "__string" :location common-lisp:nil
                         :location-name "description")
                        (excludes :initarg :excludes :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          sensitivity-inspection-template-excludes
                          common-lisp:null)
                         :accessor
                         struct-shape-update-sensitivity-inspection-template-request-excludes
                         :shape "SensitivityInspectionTemplateExcludes"
                         :location common-lisp:nil :location-name "excludes")
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-sensitivity-inspection-template-request-id
                         :shape "__string" :location "uri" :location-name "id")
                        (includes :initarg :includes :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          sensitivity-inspection-template-includes
                          common-lisp:null)
                         :accessor
                         struct-shape-update-sensitivity-inspection-template-request-includes
                         :shape "SensitivityInspectionTemplateIncludes"
                         :location common-lisp:nil :location-name "includes"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-sensitivity-inspection-template-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-sensitivity-inspection-template-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-sensitivity-inspection-template-request
                    'make-update-sensitivity-inspection-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-sensitivity-inspection-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-sensitivity-inspection-template-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'excludes))
      (common-lisp:list
       (common-lisp:cons "excludes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'includes))
      (common-lisp:list
       (common-lisp:cons "includes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-sensitivity-inspection-template-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-sensitivity-inspection-template-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-sensitivity-inspection-template-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-sensitivity-inspection-template-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-sensitivity-inspection-template-response
                    'make-update-sensitivity-inspection-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-sensitivity-inspection-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-sensitivity-inspection-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-sensitivity-inspection-template-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass usage-by-account common-lisp:nil
                       ((currency :initarg :currency :initform common-lisp:nil
                         :type (common-lisp:or currency common-lisp:null)
                         :accessor struct-shape-usage-by-account-currency
                         :shape "Currency" :location common-lisp:nil
                         :location-name "currency")
                        (estimated-cost :initarg :estimated-cost :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-usage-by-account-estimated-cost :shape
                         "__string" :location common-lisp:nil :location-name
                         "estimatedCost")
                        (service-limit :initarg :service-limit :initform
                         common-lisp:nil :type
                         (common-lisp:or service-limit common-lisp:null)
                         :accessor struct-shape-usage-by-account-service-limit
                         :shape "ServiceLimit" :location common-lisp:nil
                         :location-name "serviceLimit")
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or usage-type common-lisp:null) :accessor
                         struct-shape-usage-by-account-type :shape "UsageType"
                         :location common-lisp:nil :location-name "type"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-usage-by-account
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'usage-by-account
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'usage-by-account 'make-usage-by-account))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input usage-by-account))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input usage-by-account))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'currency))
      (common-lisp:list
       (common-lisp:cons "currency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'estimated-cost))
      (common-lisp:list
       (common-lisp:cons "estimatedCost"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-limit))
      (common-lisp:list
       (common-lisp:cons "serviceLimit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input usage-by-account))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass usage-record common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-usage-record-account-id :shape "__string"
                         :location common-lisp:nil :location-name "accountId")
                        (automated-discovery-free-trial-start-date :initarg
                         :automated-discovery-free-trial-start-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-usage-record-automated-discovery-free-trial-start-date
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "automatedDiscoveryFreeTrialStartDate")
                        (free-trial-start-date :initarg :free-trial-start-date
                         :initform common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-usage-record-free-trial-start-date :shape
                         "__timestampIso8601" :location common-lisp:nil
                         :location-name "freeTrialStartDate")
                        (usage :initarg :usage :initform common-lisp:nil :type
                         (common-lisp:or |__listOfUsageByAccount|
                                         common-lisp:null)
                         :accessor struct-shape-usage-record-usage :shape
                         "__listOfUsageByAccount" :location common-lisp:nil
                         :location-name "usage"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-usage-record
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'usage-record
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'usage-record 'make-usage-record))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input usage-record))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input usage-record))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'automated-discovery-free-trial-start-date))
      (common-lisp:list
       (common-lisp:cons "automatedDiscoveryFreeTrialStartDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'free-trial-start-date))
      (common-lisp:list
       (common-lisp:cons "freeTrialStartDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'usage))
      (common-lisp:list
       (common-lisp:cons "usage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input usage-record))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass usage-statistics-filter common-lisp:nil
                       ((comparator :initarg :comparator :initform
                         common-lisp:nil :type
                         (common-lisp:or usage-statistics-filter-comparator
                                         common-lisp:null)
                         :accessor
                         struct-shape-usage-statistics-filter-comparator :shape
                         "UsageStatisticsFilterComparator" :location
                         common-lisp:nil :location-name "comparator")
                        (key :initarg :key :initform common-lisp:nil :type
                         (common-lisp:or usage-statistics-filter-key
                                         common-lisp:null)
                         :accessor struct-shape-usage-statistics-filter-key
                         :shape "UsageStatisticsFilterKey" :location
                         common-lisp:nil :location-name "key")
                        (values :initarg :values :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-usage-statistics-filter-values
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "values"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-usage-statistics-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'usage-statistics-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'usage-statistics-filter 'make-usage-statistics-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          usage-statistics-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          usage-statistics-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'comparator))
      (common-lisp:list
       (common-lisp:cons "comparator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          usage-statistics-filter))
   common-lisp:nil))
(common-lisp:deftype usage-statistics-filter-comparator () 'common-lisp:string)
(common-lisp:deftype usage-statistics-filter-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass usage-statistics-sort-by common-lisp:nil
                       ((key :initarg :key :initform common-lisp:nil :type
                         (common-lisp:or usage-statistics-sort-key
                                         common-lisp:null)
                         :accessor struct-shape-usage-statistics-sort-by-key
                         :shape "UsageStatisticsSortKey" :location
                         common-lisp:nil :location-name "key")
                        (order-by :initarg :order-by :initform common-lisp:nil
                         :type (common-lisp:or order-by common-lisp:null)
                         :accessor
                         struct-shape-usage-statistics-sort-by-order-by :shape
                         "OrderBy" :location common-lisp:nil :location-name
                         "orderBy"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-usage-statistics-sort-by
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'usage-statistics-sort-by
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'usage-statistics-sort-by 'make-usage-statistics-sort-by))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          usage-statistics-sort-by))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          usage-statistics-sort-by))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'order-by))
      (common-lisp:list
       (common-lisp:cons "orderBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          usage-statistics-sort-by))
   common-lisp:nil))
(common-lisp:deftype usage-statistics-sort-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass usage-total common-lisp:nil
                       ((currency :initarg :currency :initform common-lisp:nil
                         :type (common-lisp:or currency common-lisp:null)
                         :accessor struct-shape-usage-total-currency :shape
                         "Currency" :location common-lisp:nil :location-name
                         "currency")
                        (estimated-cost :initarg :estimated-cost :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-usage-total-estimated-cost :shape
                         "__string" :location common-lisp:nil :location-name
                         "estimatedCost")
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or usage-type common-lisp:null) :accessor
                         struct-shape-usage-total-type :shape "UsageType"
                         :location common-lisp:nil :location-name "type"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-usage-total
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'usage-total
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'usage-total 'make-usage-total))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input usage-total))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input usage-total))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'currency))
      (common-lisp:list
       (common-lisp:cons "currency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'estimated-cost))
      (common-lisp:list
       (common-lisp:cons "estimatedCost"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input usage-total))
   common-lisp:nil))
(common-lisp:deftype usage-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass user-identity common-lisp:nil
                       ((assumed-role :initarg :assumed-role :initform
                         common-lisp:nil :type
                         (common-lisp:or assumed-role common-lisp:null)
                         :accessor struct-shape-user-identity-assumed-role
                         :shape "AssumedRole" :location common-lisp:nil
                         :location-name "assumedRole")
                        (aws-account :initarg :aws-account :initform
                         common-lisp:nil :type
                         (common-lisp:or aws-account common-lisp:null)
                         :accessor struct-shape-user-identity-aws-account
                         :shape "AwsAccount" :location common-lisp:nil
                         :location-name "awsAccount")
                        (aws-service :initarg :aws-service :initform
                         common-lisp:nil :type
                         (common-lisp:or aws-service common-lisp:null)
                         :accessor struct-shape-user-identity-aws-service
                         :shape "AwsService" :location common-lisp:nil
                         :location-name "awsService")
                        (federated-user :initarg :federated-user :initform
                         common-lisp:nil :type
                         (common-lisp:or federated-user common-lisp:null)
                         :accessor struct-shape-user-identity-federated-user
                         :shape "FederatedUser" :location common-lisp:nil
                         :location-name "federatedUser")
                        (iam-user :initarg :iam-user :initform common-lisp:nil
                         :type (common-lisp:or iam-user common-lisp:null)
                         :accessor struct-shape-user-identity-iam-user :shape
                         "IamUser" :location common-lisp:nil :location-name
                         "iamUser")
                        (root :initarg :root :initform common-lisp:nil :type
                         (common-lisp:or user-identity-root common-lisp:null)
                         :accessor struct-shape-user-identity-root :shape
                         "UserIdentityRoot" :location common-lisp:nil
                         :location-name "root")
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or user-identity-type common-lisp:null)
                         :accessor struct-shape-user-identity-type :shape
                         "UserIdentityType" :location common-lisp:nil
                         :location-name "type"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-user-identity
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'user-identity
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'user-identity 'make-user-identity))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input user-identity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input user-identity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'assumed-role))
      (common-lisp:list
       (common-lisp:cons "assumedRole"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-account))
      (common-lisp:list
       (common-lisp:cons "awsAccount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-service))
      (common-lisp:list
       (common-lisp:cons "awsService"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'federated-user))
      (common-lisp:list
       (common-lisp:cons "federatedUser"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-user))
      (common-lisp:list
       (common-lisp:cons "iamUser"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'root))
      (common-lisp:list
       (common-lisp:cons "root"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input user-identity))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass user-identity-root common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-user-identity-root-account-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "accountId")
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-user-identity-root-arn :shape "__string"
                         :location common-lisp:nil :location-name "arn")
                        (principal-id :initarg :principal-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-user-identity-root-principal-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "principalId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-user-identity-root
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'user-identity-root
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'user-identity-root 'make-user-identity-root))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input user-identity-root))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input user-identity-root))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-id))
      (common-lisp:list
       (common-lisp:cons "principalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input user-identity-root))
   common-lisp:nil))
(common-lisp:deftype user-identity-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass user-paused-details common-lisp:nil
                       ((job-expires-at :initarg :job-expires-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-user-paused-details-job-expires-at :shape
                         "__timestampIso8601" :location common-lisp:nil
                         :location-name "jobExpiresAt")
                        (job-imminent-expiration-health-event-arn :initarg
                         :job-imminent-expiration-health-event-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-user-paused-details-job-imminent-expiration-health-event-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name "jobImminentExpirationHealthEventArn")
                        (job-paused-at :initarg :job-paused-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-user-paused-details-job-paused-at :shape
                         "__timestampIso8601" :location common-lisp:nil
                         :location-name "jobPausedAt"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-user-paused-details
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'user-paused-details
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'user-paused-details 'make-user-paused-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input user-paused-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input user-paused-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-expires-at))
      (common-lisp:list
       (common-lisp:cons "jobExpiresAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'job-imminent-expiration-health-event-arn))
      (common-lisp:list
       (common-lisp:cons "jobImminentExpirationHealthEventArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-paused-at))
      (common-lisp:list
       (common-lisp:cons "jobPausedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input user-paused-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (macie2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message)))
(common-lisp:progn
 (common-lisp:defclass weekly-schedule common-lisp:nil
                       ((day-of-week :initarg :day-of-week :initform
                         common-lisp:nil :type
                         (common-lisp:or day-of-week common-lisp:null)
                         :accessor struct-shape-weekly-schedule-day-of-week
                         :shape "DayOfWeek" :location common-lisp:nil
                         :location-name "dayOfWeek"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-weekly-schedule
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'weekly-schedule
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'weekly-schedule 'make-weekly-schedule))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input weekly-schedule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input weekly-schedule))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'day-of-week))
      (common-lisp:list
       (common-lisp:cons "dayOfWeek"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input weekly-schedule))
   common-lisp:nil))
(common-lisp:deftype |__boolean| () 'common-lisp:boolean)
(common-lisp:deftype |__double| () 'common-lisp:double-float)
(common-lisp:deftype |__integer| () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype |__listOfAdminAccount| ()
   '(trivial-types:proper-list admin-account))
 (common-lisp:defun make-__listofadminaccount
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list admin-account))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfAllowListSummary| ()
   '(trivial-types:proper-list allow-list-summary))
 (common-lisp:defun make-__listofallowlistsummary
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list allow-list-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfBatchGetCustomDataIdentifierSummary| ()
   '(trivial-types:proper-list batch-get-custom-data-identifier-summary))
 (common-lisp:defun make-__listofbatchgetcustomdataidentifiersummary
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            batch-get-custom-data-identifier-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfBucketMetadata| ()
   '(trivial-types:proper-list bucket-metadata))
 (common-lisp:defun make-__listofbucketmetadata
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list bucket-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfClassificationScopeSummary| ()
   '(trivial-types:proper-list classification-scope-summary))
 (common-lisp:defun make-__listofclassificationscopesummary
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            classification-scope-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfCriteriaForJob| ()
   '(trivial-types:proper-list criteria-for-job))
 (common-lisp:defun make-__listofcriteriaforjob
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list criteria-for-job))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfCustomDataIdentifierSummary| ()
   '(trivial-types:proper-list custom-data-identifier-summary))
 (common-lisp:defun make-__listofcustomdataidentifiersummary
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            custom-data-identifier-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfDetectedDataDetails| ()
   '(trivial-types:proper-list detected-data-details))
 (common-lisp:defun make-__listofdetecteddatadetails
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list detected-data-details))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfDetection| ()
   '(trivial-types:proper-list detection))
 (common-lisp:defun make-__listofdetection
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list detection))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfFinding| ()
   '(trivial-types:proper-list finding))
 (common-lisp:defun make-__listoffinding
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list finding))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfFindingType| ()
   '(trivial-types:proper-list finding-type))
 (common-lisp:defun make-__listoffindingtype
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list finding-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfFindingsFilterListItem| ()
   '(trivial-types:proper-list findings-filter-list-item))
 (common-lisp:defun make-__listoffindingsfilterlistitem
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            findings-filter-list-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfGroupCount| ()
   '(trivial-types:proper-list group-count))
 (common-lisp:defun make-__listofgroupcount
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list group-count))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfInvitation| ()
   '(trivial-types:proper-list invitation))
 (common-lisp:defun make-__listofinvitation
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list invitation))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfJobScopeTerm| ()
   '(trivial-types:proper-list job-scope-term))
 (common-lisp:defun make-__listofjobscopeterm
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list job-scope-term))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfJobSummary| ()
   '(trivial-types:proper-list job-summary))
 (common-lisp:defun make-__listofjobsummary
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list job-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfKeyValuePair| ()
   '(trivial-types:proper-list key-value-pair))
 (common-lisp:defun make-__listofkeyvaluepair
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list key-value-pair))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfListJobsFilterTerm| ()
   '(trivial-types:proper-list list-jobs-filter-term))
 (common-lisp:defun make-__listoflistjobsfilterterm
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list list-jobs-filter-term))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfManagedDataIdentifierSummary| ()
   '(trivial-types:proper-list managed-data-identifier-summary))
 (common-lisp:defun make-__listofmanageddataidentifiersummary
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            managed-data-identifier-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfMatchingResource| ()
   '(trivial-types:proper-list matching-resource))
 (common-lisp:defun make-__listofmatchingresource
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list matching-resource))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfMember| () '(trivial-types:proper-list member))
 (common-lisp:defun make-__listofmember
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list member))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfResourceProfileArtifact| ()
   '(trivial-types:proper-list resource-profile-artifact))
 (common-lisp:defun make-__listofresourceprofileartifact
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            resource-profile-artifact))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfS3BucketDefinitionForJob| ()
   '(trivial-types:proper-list s3bucket-definition-for-job))
 (common-lisp:defun make-__listofs3bucketdefinitionforjob
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            s3bucket-definition-for-job))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfS3BucketName| ()
   '(trivial-types:proper-list s3bucket-name))
 (common-lisp:defun make-__listofs3bucketname
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list s3bucket-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfSearchResourcesCriteria| ()
   '(trivial-types:proper-list search-resources-criteria))
 (common-lisp:defun make-__listofsearchresourcescriteria
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            search-resources-criteria))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfSearchResourcesTagCriterionPair| ()
   '(trivial-types:proper-list search-resources-tag-criterion-pair))
 (common-lisp:defun make-__listofsearchresourcestagcriterionpair
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            search-resources-tag-criterion-pair))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfSensitivityInspectionTemplatesEntry| ()
   '(trivial-types:proper-list sensitivity-inspection-templates-entry))
 (common-lisp:defun make-__listofsensitivityinspectiontemplatesentry
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            sensitivity-inspection-templates-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfSuppressDataIdentifier| ()
   '(trivial-types:proper-list suppress-data-identifier))
 (common-lisp:defun make-__listofsuppressdataidentifier
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            suppress-data-identifier))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfTagCriterionPairForJob| ()
   '(trivial-types:proper-list tag-criterion-pair-for-job))
 (common-lisp:defun make-__listoftagcriterionpairforjob
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            tag-criterion-pair-for-job))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfTagValuePair| ()
   '(trivial-types:proper-list tag-value-pair))
 (common-lisp:defun make-__listoftagvaluepair
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-value-pair))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfUnavailabilityReasonCode| ()
   '(trivial-types:proper-list unavailability-reason-code))
 (common-lisp:defun make-__listofunavailabilityreasoncode
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            unavailability-reason-code))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfUnprocessedAccount| ()
   '(trivial-types:proper-list unprocessed-account))
 (common-lisp:defun make-__listofunprocessedaccount
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list unprocessed-account))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfUsageByAccount| ()
   '(trivial-types:proper-list usage-by-account))
 (common-lisp:defun make-__listofusagebyaccount
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list usage-by-account))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfUsageRecord| ()
   '(trivial-types:proper-list usage-record))
 (common-lisp:defun make-__listofusagerecord
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list usage-record))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfUsageStatisticsFilter| ()
   '(trivial-types:proper-list usage-statistics-filter))
 (common-lisp:defun make-__listofusagestatisticsfilter
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list usage-statistics-filter))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfUsageTotal| ()
   '(trivial-types:proper-list usage-total))
 (common-lisp:defun make-__listofusagetotal
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list usage-total))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOf__string| ()
   '(trivial-types:proper-list |__string|))
 (common-lisp:defun make-__listof__string
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__string|))
   aws-sdk/generator/shape::members))
(common-lisp:deftype |__long| () 'common-lisp:integer)
(common-lisp:deftype |__string| () 'common-lisp:string)
(common-lisp:deftype |__stringMin1Max1024PatternSS| () 'common-lisp:string)
(common-lisp:deftype |__stringMin1Max128| () 'common-lisp:string)
(common-lisp:deftype |__stringMin1Max128Pattern| () 'common-lisp:string)
(common-lisp:deftype |__stringMin1Max2048| () 'common-lisp:string)
(common-lisp:deftype |__stringMin1Max512PatternSS| () 'common-lisp:string)
(common-lisp:deftype |__stringMin1Max64PatternW| () 'common-lisp:string)
(common-lisp:deftype |__stringMin22Max22PatternAZ0922| () 'common-lisp:string)
(common-lisp:deftype |__stringMin3Max255PatternAZaZ093255| ()
  'common-lisp:string)
(common-lisp:deftype |__stringMin71Max89PatternArnAwsAwsCnAwsUsGovMacie2AZ19920D12AllowListAZ0922|
                     ()
  'common-lisp:string)
(common-lisp:deftype |__timestampIso8601| () 'common-lisp:string)
(common-lisp:deftype |__timestampUnix| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun accept-invitation
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key administrator-account-id invitation-id
                     master-account)
   (common-lisp:declare
    (common-lisp:ignorable administrator-account-id invitation-id
     master-account))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-accept-invitation-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/invitations/accept"
                                                        "AcceptInvitation"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'accept-invitation))
(common-lisp:progn
 (common-lisp:defun batch-get-custom-data-identifiers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ids)
   (common-lisp:declare (common-lisp:ignorable ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-batch-get-custom-data-identifiers-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/custom-data-identifiers/get"
                                                        "BatchGetCustomDataIdentifiers"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'batch-get-custom-data-identifiers))
(common-lisp:progn
 (common-lisp:defun create-allow-list
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token criteria description name
                     tags)
   (common-lisp:declare
    (common-lisp:ignorable client-token criteria description name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-allow-list-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/allow-lists"
                                                        "CreateAllowList"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-allow-list))
(common-lisp:progn
 (common-lisp:defun create-classification-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key allow-list-ids client-token
                     custom-data-identifier-ids description initial-run
                     job-type managed-data-identifier-ids
                     managed-data-identifier-selector name s3job-definition
                     sampling-percentage schedule-frequency tags)
   (common-lisp:declare
    (common-lisp:ignorable allow-list-ids client-token
     custom-data-identifier-ids description initial-run job-type
     managed-data-identifier-ids managed-data-identifier-selector name
     s3job-definition sampling-percentage schedule-frequency tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-classification-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/jobs"
                                                        "CreateClassificationJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-classification-job))
(common-lisp:progn
 (common-lisp:defun create-custom-data-identifier
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token description ignore-words
                     keywords maximum-match-distance name regex severity-levels
                     tags)
   (common-lisp:declare
    (common-lisp:ignorable client-token description ignore-words keywords
     maximum-match-distance name regex severity-levels tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-custom-data-identifier-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/custom-data-identifiers"
                                                        "CreateCustomDataIdentifier"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-custom-data-identifier))
(common-lisp:progn
 (common-lisp:defun create-findings-filter
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key action client-token description
                     finding-criteria name position tags)
   (common-lisp:declare
    (common-lisp:ignorable action client-token description finding-criteria
     name position tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-findings-filter-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/findingsfilters"
                                                        "CreateFindingsFilter"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-findings-filter))
(common-lisp:progn
 (common-lisp:defun create-invitations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-ids disable-email-notification
                     message)
   (common-lisp:declare
    (common-lisp:ignorable account-ids disable-email-notification message))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-invitations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/invitations"
                                                        "CreateInvitations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-invitations))
(common-lisp:progn
 (common-lisp:defun create-member
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account tags)
   (common-lisp:declare (common-lisp:ignorable account tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-member-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/members"
                                                        "CreateMember"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-member))
(common-lisp:progn
 (common-lisp:defun create-sample-findings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key finding-types)
   (common-lisp:declare (common-lisp:ignorable finding-types))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-sample-findings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/findings/sample"
                                                        "CreateSampleFindings"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-sample-findings))
(common-lisp:progn
 (common-lisp:defun decline-invitations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-ids)
   (common-lisp:declare (common-lisp:ignorable account-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-decline-invitations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/invitations/decline"
                                                        "DeclineInvitations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'decline-invitations))
(common-lisp:progn
 (common-lisp:defun delete-allow-list
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id ignore-job-checks)
   (common-lisp:declare (common-lisp:ignorable id ignore-job-checks))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-allow-list-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/allow-lists/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "DeleteAllowList"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-allow-list))
(common-lisp:progn
 (common-lisp:defun delete-custom-data-identifier
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-custom-data-identifier-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/custom-data-identifiers/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "DeleteCustomDataIdentifier"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-custom-data-identifier))
(common-lisp:progn
 (common-lisp:defun delete-findings-filter
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-findings-filter-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/findingsfilters/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "DeleteFindingsFilter"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-findings-filter))
(common-lisp:progn
 (common-lisp:defun delete-invitations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-ids)
   (common-lisp:declare (common-lisp:ignorable account-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-invitations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/invitations/delete"
                                                        "DeleteInvitations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-invitations))
(common-lisp:progn
 (common-lisp:defun delete-member
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-member-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/members/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "DeleteMember"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-member))
(common-lisp:progn
 (common-lisp:defun describe-buckets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key criteria max-results next-token
                     sort-criteria)
   (common-lisp:declare
    (common-lisp:ignorable criteria max-results next-token sort-criteria))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-buckets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/datasources/s3"
                                                        "DescribeBuckets"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-buckets))
(common-lisp:progn
 (common-lisp:defun describe-classification-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-classification-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/jobs/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'job-id))))
                                                        "DescribeClassificationJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-classification-job))
(common-lisp:progn
 (common-lisp:defun describe-organization-configuration ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'macie2-request :method "GET" :path
                                "/admin/configuration" :operation
                                "DescribeOrganizationConfiguration"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'describe-organization-configuration))
(common-lisp:progn
 (common-lisp:defun disable-macie ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'macie2-request :method "DELETE" :path "/macie"
                                :operation "DisableMacie"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'disable-macie))
(common-lisp:progn
 (common-lisp:defun disable-organization-admin-account
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key admin-account-id)
   (common-lisp:declare (common-lisp:ignorable admin-account-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disable-organization-admin-account-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" "/admin"
                                                        "DisableOrganizationAdminAccount"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'disable-organization-admin-account))
(common-lisp:progn
 (common-lisp:defun disassociate-from-administrator-account ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'macie2-request :method "POST" :path
                                "/administrator/disassociate" :operation
                                "DisassociateFromAdministratorAccount"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'disassociate-from-administrator-account))
(common-lisp:progn
 (common-lisp:defun disassociate-from-master-account ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'macie2-request :method "POST" :path
                                "/master/disassociate" :operation
                                "DisassociateFromMasterAccount"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'disassociate-from-master-account))
(common-lisp:progn
 (common-lisp:defun disassociate-member
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-disassociate-member-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/members/disassociate/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "DisassociateMember"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'disassociate-member))
(common-lisp:progn
 (common-lisp:defun enable-macie
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token finding-publishing-frequency
                     status)
   (common-lisp:declare
    (common-lisp:ignorable client-token finding-publishing-frequency status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-enable-macie-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/macie"
                                                        "EnableMacie"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'enable-macie))
(common-lisp:progn
 (common-lisp:defun enable-organization-admin-account
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key admin-account-id client-token)
   (common-lisp:declare (common-lisp:ignorable admin-account-id client-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-enable-organization-admin-account-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/admin"
                                                        "EnableOrganizationAdminAccount"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'enable-organization-admin-account))
(common-lisp:progn
 (common-lisp:defun get-administrator-account ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'macie2-request :method "GET" :path
                                "/administrator" :operation
                                "GetAdministratorAccount"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-administrator-account))
(common-lisp:progn
 (common-lisp:defun get-allow-list
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-allow-list-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/allow-lists/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "GetAllowList"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-allow-list))
(common-lisp:progn
 (common-lisp:defun get-automated-discovery-configuration ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'macie2-request :method "GET" :path
                                "/automated-discovery/configuration" :operation
                                "GetAutomatedDiscoveryConfiguration"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-automated-discovery-configuration))
(common-lisp:progn
 (common-lisp:defun get-bucket-statistics
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id)
   (common-lisp:declare (common-lisp:ignorable account-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-bucket-statistics-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/datasources/s3/statistics"
                                                        "GetBucketStatistics"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-bucket-statistics))
(common-lisp:progn
 (common-lisp:defun get-classification-export-configuration ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'macie2-request :method "GET" :path
                                "/classification-export-configuration"
                                :operation
                                "GetClassificationExportConfiguration"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-classification-export-configuration))
(common-lisp:progn
 (common-lisp:defun get-classification-scope
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-classification-scope-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/classification-scopes/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "GetClassificationScope"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-classification-scope))
(common-lisp:progn
 (common-lisp:defun get-custom-data-identifier
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-custom-data-identifier-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/custom-data-identifiers/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "GetCustomDataIdentifier"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-custom-data-identifier))
(common-lisp:progn
 (common-lisp:defun get-finding-statistics
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key finding-criteria group-by size
                     sort-criteria)
   (common-lisp:declare
    (common-lisp:ignorable finding-criteria group-by size sort-criteria))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-finding-statistics-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/findings/statistics"
                                                        "GetFindingStatistics"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-finding-statistics))
(common-lisp:progn
 (common-lisp:defun get-findings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key finding-ids sort-criteria)
   (common-lisp:declare (common-lisp:ignorable finding-ids sort-criteria))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-findings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/findings/describe"
                                                        "GetFindings"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-findings))
(common-lisp:progn
 (common-lisp:defun get-findings-filter
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-findings-filter-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/findingsfilters/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "GetFindingsFilter"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-findings-filter))
(common-lisp:progn
 (common-lisp:defun get-findings-publication-configuration ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'macie2-request :method "GET" :path
                                "/findings-publication-configuration"
                                :operation
                                "GetFindingsPublicationConfiguration"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-findings-publication-configuration))
(common-lisp:progn
 (common-lisp:defun get-invitations-count ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'macie2-request :method "GET" :path
                                "/invitations/count" :operation
                                "GetInvitationsCount"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-invitations-count))
(common-lisp:progn
 (common-lisp:defun get-macie-session ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'macie2-request :method "GET" :path "/macie"
                                :operation "GetMacieSession"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-macie-session))
(common-lisp:progn
 (common-lisp:defun get-master-account ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'macie2-request :method "GET" :path "/master"
                                :operation "GetMasterAccount"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-master-account))
(common-lisp:progn
 (common-lisp:defun get-member
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-member-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/members/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "GetMember"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-member))
(common-lisp:progn
 (common-lisp:defun get-resource-profile
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-resource-profile-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/resource-profiles"
                                                        "GetResourceProfile"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-resource-profile))
(common-lisp:progn
 (common-lisp:defun get-reveal-configuration ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'macie2-request :method "GET" :path
                                "/reveal-configuration" :operation
                                "GetRevealConfiguration"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-reveal-configuration))
(common-lisp:progn
 (common-lisp:defun get-sensitive-data-occurrences
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key finding-id)
   (common-lisp:declare (common-lisp:ignorable finding-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-sensitive-data-occurrences-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/findings/~A/reveal"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'finding-id))))
                                                        "GetSensitiveDataOccurrences"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-sensitive-data-occurrences))
(common-lisp:progn
 (common-lisp:defun get-sensitive-data-occurrences-availability
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key finding-id)
   (common-lisp:declare (common-lisp:ignorable finding-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-sensitive-data-occurrences-availability-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/findings/~A/reveal/availability"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'finding-id))))
                                                        "GetSensitiveDataOccurrencesAvailability"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-sensitive-data-occurrences-availability))
(common-lisp:progn
 (common-lisp:defun get-sensitivity-inspection-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-sensitivity-inspection-template-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/templates/sensitivity-inspections/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "GetSensitivityInspectionTemplate"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-sensitivity-inspection-template))
(common-lisp:progn
 (common-lisp:defun get-usage-statistics
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter-by max-results next-token sort-by
                     time-range)
   (common-lisp:declare
    (common-lisp:ignorable filter-by max-results next-token sort-by
     time-range))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-usage-statistics-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/usage/statistics"
                                                        "GetUsageStatistics"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-usage-statistics))
(common-lisp:progn
 (common-lisp:defun get-usage-totals
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key time-range)
   (common-lisp:declare (common-lisp:ignorable time-range))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-usage-totals-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/usage"
                                                        "GetUsageTotals"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-usage-totals))
(common-lisp:progn
 (common-lisp:defun list-allow-lists
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-allow-lists-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/allow-lists"
                                                        "ListAllowLists"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-allow-lists))
(common-lisp:progn
 (common-lisp:defun list-classification-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter-criteria max-results next-token
                     sort-criteria)
   (common-lisp:declare
    (common-lisp:ignorable filter-criteria max-results next-token
     sort-criteria))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-classification-jobs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/jobs/list"
                                                        "ListClassificationJobs"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-classification-jobs))
(common-lisp:progn
 (common-lisp:defun list-classification-scopes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name next-token)
   (common-lisp:declare (common-lisp:ignorable name next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-classification-scopes-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/classification-scopes"
                                                        "ListClassificationScopes"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-classification-scopes))
(common-lisp:progn
 (common-lisp:defun list-custom-data-identifiers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-custom-data-identifiers-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/custom-data-identifiers/list"
                                                        "ListCustomDataIdentifiers"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-custom-data-identifiers))
(common-lisp:progn
 (common-lisp:defun list-findings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key finding-criteria max-results next-token
                     sort-criteria)
   (common-lisp:declare
    (common-lisp:ignorable finding-criteria max-results next-token
     sort-criteria))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-findings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/findings"
                                                        "ListFindings"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-findings))
(common-lisp:progn
 (common-lisp:defun list-findings-filters
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-findings-filters-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/findingsfilters"
                                                        "ListFindingsFilters"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-findings-filters))
(common-lisp:progn
 (common-lisp:defun list-invitations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-invitations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/invitations"
                                                        "ListInvitations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-invitations))
(common-lisp:progn
 (common-lisp:defun list-managed-data-identifiers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token)
   (common-lisp:declare (common-lisp:ignorable next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-managed-data-identifiers-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/managed-data-identifiers/list"
                                                        "ListManagedDataIdentifiers"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-managed-data-identifiers))
(common-lisp:progn
 (common-lisp:defun list-members
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token only-associated)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token only-associated))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-members-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/members"
                                                        "ListMembers"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-members))
(common-lisp:progn
 (common-lisp:defun list-organization-admin-accounts
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-organization-admin-accounts-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/admin"
                                                        "ListOrganizationAdminAccounts"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-organization-admin-accounts))
(common-lisp:progn
 (common-lisp:defun list-resource-profile-artifacts
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token resource-arn)
   (common-lisp:declare (common-lisp:ignorable next-token resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-resource-profile-artifacts-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/resource-profiles/artifacts"
                                                        "ListResourceProfileArtifacts"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-resource-profile-artifacts))
(common-lisp:progn
 (common-lisp:defun list-resource-profile-detections
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token resource-arn)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-resource-profile-detections-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/resource-profiles/detections"
                                                        "ListResourceProfileDetections"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-resource-profile-detections))
(common-lisp:progn
 (common-lisp:defun list-sensitivity-inspection-templates
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-sensitivity-inspection-templates-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/templates/sensitivity-inspections"
                                                        "ListSensitivityInspectionTemplates"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-sensitivity-inspection-templates))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun put-classification-export-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration)
   (common-lisp:declare (common-lisp:ignorable configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-classification-export-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        "/classification-export-configuration"
                                                        "PutClassificationExportConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-classification-export-configuration))
(common-lisp:progn
 (common-lisp:defun put-findings-publication-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token security-hub-configuration)
   (common-lisp:declare
    (common-lisp:ignorable client-token security-hub-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-findings-publication-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        "/findings-publication-configuration"
                                                        "PutFindingsPublicationConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-findings-publication-configuration))
(common-lisp:progn
 (common-lisp:defun search-resources
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bucket-criteria max-results next-token
                     sort-criteria)
   (common-lisp:declare
    (common-lisp:ignorable bucket-criteria max-results next-token
     sort-criteria))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-search-resources-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/datasources/search-resources"
                                                        "SearchResources"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'search-resources))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "TagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun test-custom-data-identifier
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ignore-words keywords
                     maximum-match-distance regex sample-text)
   (common-lisp:declare
    (common-lisp:ignorable ignore-words keywords maximum-match-distance regex
     sample-text))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-test-custom-data-identifier-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/custom-data-identifiers/test"
                                                        "TestCustomDataIdentifier"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'test-custom-data-identifier))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-allow-list
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key criteria description id name)
   (common-lisp:declare (common-lisp:ignorable criteria description id name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-allow-list-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/allow-lists/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "UpdateAllowList"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-allow-list))
(common-lisp:progn
 (common-lisp:defun update-automated-discovery-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key status)
   (common-lisp:declare (common-lisp:ignorable status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-automated-discovery-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        "/automated-discovery/configuration"
                                                        "UpdateAutomatedDiscoveryConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-automated-discovery-configuration))
(common-lisp:progn
 (common-lisp:defun update-classification-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id job-status)
   (common-lisp:declare (common-lisp:ignorable job-id job-status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-classification-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/jobs/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'job-id))))
                                                        "UpdateClassificationJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-classification-job))
(common-lisp:progn
 (common-lisp:defun update-classification-scope
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id s3)
   (common-lisp:declare (common-lisp:ignorable id s3))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-classification-scope-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/classification-scopes/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "UpdateClassificationScope"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-classification-scope))
(common-lisp:progn
 (common-lisp:defun update-findings-filter
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key action client-token description
                     finding-criteria id name position)
   (common-lisp:declare
    (common-lisp:ignorable action client-token description finding-criteria id
     name position))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-findings-filter-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/findingsfilters/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "UpdateFindingsFilter"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-findings-filter))
(common-lisp:progn
 (common-lisp:defun update-macie-session
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key finding-publishing-frequency status)
   (common-lisp:declare
    (common-lisp:ignorable finding-publishing-frequency status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-macie-session-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH" "/macie"
                                                        "UpdateMacieSession"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-macie-session))
(common-lisp:progn
 (common-lisp:defun update-member-session
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id status)
   (common-lisp:declare (common-lisp:ignorable id status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-member-session-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/macie/members/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "UpdateMemberSession"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-member-session))
(common-lisp:progn
 (common-lisp:defun update-organization-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key auto-enable)
   (common-lisp:declare (common-lisp:ignorable auto-enable))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-organization-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        "/admin/configuration"
                                                        "UpdateOrganizationConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-organization-configuration))
(common-lisp:progn
 (common-lisp:defun update-resource-profile
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn sensitivity-score-override)
   (common-lisp:declare
    (common-lisp:ignorable resource-arn sensitivity-score-override))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-resource-profile-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        "/resource-profiles"
                                                        "UpdateResourceProfile"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-resource-profile))
(common-lisp:progn
 (common-lisp:defun update-resource-profile-detections
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn suppress-data-identifiers)
   (common-lisp:declare
    (common-lisp:ignorable resource-arn suppress-data-identifiers))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-resource-profile-detections-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        "/resource-profiles/detections"
                                                        "UpdateResourceProfileDetections"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-resource-profile-detections))
(common-lisp:progn
 (common-lisp:defun update-reveal-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration retrieval-configuration)
   (common-lisp:declare
    (common-lisp:ignorable configuration retrieval-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-reveal-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        "/reveal-configuration"
                                                        "UpdateRevealConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-reveal-configuration))
(common-lisp:progn
 (common-lisp:defun update-sensitivity-inspection-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key description excludes id includes)
   (common-lisp:declare
    (common-lisp:ignorable description excludes id includes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-sensitivity-inspection-template-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/templates/sensitivity-inspections/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "UpdateSensitivityInspectionTemplate"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-sensitivity-inspection-template))
