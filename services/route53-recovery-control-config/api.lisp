;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(uiop/package:define-package
 #:aws-sdk/services/route53-recovery-control-config/api (:use)
 (:nicknames #:aws/route53-recovery-control-config)
 (:import-from #:aws-sdk/generator/shape)
 (:import-from #:aws-sdk/generator/operation) (:import-from #:aws-sdk/api)
 (:import-from #:aws-sdk/request) (:import-from #:aws-sdk/json-request)
 (:import-from #:aws-sdk/rest-json-request)
 (:import-from #:aws-sdk/rest-xml-request)
 (:import-from #:aws-sdk/query-request) (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/route53-recovery-control-config/api)
(common-lisp:progn
 (common-lisp:define-condition route53-recovery-control-config-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'route53-recovery-control-config-error))
(common-lisp:progn
 (common-lisp:defclass route53-recovery-control-config-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service
                        "route53-recovery-control-config" :api-version
                        "2020-11-02" :host-prefix
                        "route53-recovery-control-config" :signing-name
                        "route53-recovery-control-config" :global-host
                        common-lisp:nil))
 (common-lisp:export 'route53-recovery-control-config-request))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceQuotaExceededException" . service-quota-exceeded-exception)
    ("ThrottlingException" . throttling-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (route53-recovery-control-config-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:progn
 (common-lisp:defclass assertion-rule common-lisp:nil
                       ((asserted-controls :initarg :asserted-controls
                         :initform
                         (common-lisp:error ":asserted-controls is required")
                         :type
                         (common-lisp:or
                          |__listOf__stringMin1Max256PatternAZaZ09|
                          common-lisp:null)
                         :accessor
                         struct-shape-assertion-rule-asserted-controls :shape
                         "__listOf__stringMin1Max256PatternAZaZ09" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (control-panel-arn :initarg :control-panel-arn
                         :initform
                         (common-lisp:error ":control-panel-arn is required")
                         :type
                         (common-lisp:or |__stringMin1Max256PatternAZaZ09|
                                         common-lisp:null)
                         :accessor
                         struct-shape-assertion-rule-control-panel-arn :shape
                         "__stringMin1Max256PatternAZaZ09" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or |__stringMin1Max64PatternS|
                                         common-lisp:null)
                         :accessor struct-shape-assertion-rule-name :shape
                         "__stringMin1Max64PatternS" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (rule-config :initarg :rule-config :initform
                         (common-lisp:error ":rule-config is required") :type
                         (common-lisp:or rule-config common-lisp:null)
                         :accessor struct-shape-assertion-rule-rule-config
                         :shape "RuleConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (safety-rule-arn :initarg :safety-rule-arn :initform
                         (common-lisp:error ":safety-rule-arn is required")
                         :type
                         (common-lisp:or |__stringMin1Max256PatternAZaZ09|
                                         common-lisp:null)
                         :accessor struct-shape-assertion-rule-safety-rule-arn
                         :shape "__stringMin1Max256PatternAZaZ09" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (status :initarg :status :initform
                         (common-lisp:error ":status is required") :type
                         (common-lisp:or status common-lisp:null) :accessor
                         struct-shape-assertion-rule-status :shape "Status"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (wait-period-ms :initarg :wait-period-ms :initform
                         (common-lisp:error ":wait-period-ms is required")
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-assertion-rule-wait-period-ms
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (owner :initarg :owner :initform common-lisp:nil :type
                         (common-lisp:or |__stringMin12Max12PatternD12|
                                         common-lisp:null)
                         :accessor struct-shape-assertion-rule-owner :shape
                         "__stringMin12Max12PatternD12" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-assertion-rule
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'assertion-rule
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'assertion-rule 'make-assertion-rule))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input assertion-rule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input assertion-rule))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'asserted-controls))
      (common-lisp:list
       (common-lisp:cons "AssertedControls"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'control-panel-arn))
      (common-lisp:list
       (common-lisp:cons "ControlPanelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-config))
      (common-lisp:list
       (common-lisp:cons "RuleConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'safety-rule-arn))
      (common-lisp:list
       (common-lisp:cons "SafetyRuleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'wait-period-ms))
      (common-lisp:list
       (common-lisp:cons "WaitPeriodMs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owner))
      (common-lisp:list
       (common-lisp:cons "Owner"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input assertion-rule))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass assertion-rule-update common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or |__stringMin1Max64PatternS|
                                         common-lisp:null)
                         :accessor struct-shape-assertion-rule-update-name
                         :shape "__stringMin1Max64PatternS" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (safety-rule-arn :initarg :safety-rule-arn :initform
                         (common-lisp:error ":safety-rule-arn is required")
                         :type
                         (common-lisp:or |__stringMin1Max256PatternAZaZ09|
                                         common-lisp:null)
                         :accessor
                         struct-shape-assertion-rule-update-safety-rule-arn
                         :shape "__stringMin1Max256PatternAZaZ09" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (wait-period-ms :initarg :wait-period-ms :initform
                         (common-lisp:error ":wait-period-ms is required")
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-assertion-rule-update-wait-period-ms
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-assertion-rule-update
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'assertion-rule-update
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'assertion-rule-update 'make-assertion-rule-update))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          assertion-rule-update))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          assertion-rule-update))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'safety-rule-arn))
      (common-lisp:list
       (common-lisp:cons "SafetyRuleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'wait-period-ms))
      (common-lisp:list
       (common-lisp:cons "WaitPeriodMs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          assertion-rule-update))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass cluster common-lisp:nil
                       ((cluster-arn :initarg :cluster-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |__stringMin1Max256PatternAZaZ09|
                                         common-lisp:null)
                         :accessor struct-shape-cluster-cluster-arn :shape
                         "__stringMin1Max256PatternAZaZ09" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (cluster-endpoints :initarg :cluster-endpoints
                         :initform common-lisp:nil :type
                         (common-lisp:or |__listOfClusterEndpoint|
                                         common-lisp:null)
                         :accessor struct-shape-cluster-cluster-endpoints
                         :shape "__listOfClusterEndpoint" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__stringMin1Max64PatternS|
                                         common-lisp:null)
                         :accessor struct-shape-cluster-name :shape
                         "__stringMin1Max64PatternS" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or status common-lisp:null)
                         :accessor struct-shape-cluster-status :shape "Status"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (owner :initarg :owner :initform common-lisp:nil :type
                         (common-lisp:or |__stringMin12Max12PatternD12|
                                         common-lisp:null)
                         :accessor struct-shape-cluster-owner :shape
                         "__stringMin12Max12PatternD12" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-cluster
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'cluster
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'cluster 'make-cluster))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input cluster))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input cluster))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster-arn))
      (common-lisp:list
       (common-lisp:cons "ClusterArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster-endpoints))
      (common-lisp:list
       (common-lisp:cons "ClusterEndpoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owner))
      (common-lisp:list
       (common-lisp:cons "Owner"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input cluster))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass cluster-endpoint common-lisp:nil
                       ((endpoint :initarg :endpoint :initform common-lisp:nil
                         :type
                         (common-lisp:or |__stringMin1Max128PatternAZaZ09|
                                         common-lisp:null)
                         :accessor struct-shape-cluster-endpoint-endpoint
                         :shape "__stringMin1Max128PatternAZaZ09" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (region :initarg :region :initform common-lisp:nil
                         :type
                         (common-lisp:or |__stringMin1Max32PatternS|
                                         common-lisp:null)
                         :accessor struct-shape-cluster-endpoint-region :shape
                         "__stringMin1Max32PatternS" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-cluster-endpoint
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'cluster-endpoint
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'cluster-endpoint 'make-cluster-endpoint))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input cluster-endpoint))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input cluster-endpoint))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint))
      (common-lisp:list
       (common-lisp:cons "Endpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'region))
      (common-lisp:list
       (common-lisp:cons "Region"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input cluster-endpoint))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (route53-recovery-control-config-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message)))
(common-lisp:progn
 (common-lisp:defclass control-panel common-lisp:nil
                       ((cluster-arn :initarg :cluster-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |__stringMin1Max256PatternAZaZ09|
                                         common-lisp:null)
                         :accessor struct-shape-control-panel-cluster-arn
                         :shape "__stringMin1Max256PatternAZaZ09" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (control-panel-arn :initarg :control-panel-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or |__stringMin1Max256PatternAZaZ09|
                                         common-lisp:null)
                         :accessor struct-shape-control-panel-control-panel-arn
                         :shape "__stringMin1Max256PatternAZaZ09" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (default-control-panel :initarg :default-control-panel
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-control-panel-default-control-panel
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__stringMin1Max64PatternS|
                                         common-lisp:null)
                         :accessor struct-shape-control-panel-name :shape
                         "__stringMin1Max64PatternS" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (routing-control-count :initarg :routing-control-count
                         :initform common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-control-panel-routing-control-count
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or status common-lisp:null)
                         :accessor struct-shape-control-panel-status :shape
                         "Status" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (owner :initarg :owner :initform common-lisp:nil :type
                         (common-lisp:or |__stringMin12Max12PatternD12|
                                         common-lisp:null)
                         :accessor struct-shape-control-panel-owner :shape
                         "__stringMin12Max12PatternD12" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-control-panel
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'control-panel
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'control-panel 'make-control-panel))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input control-panel))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input control-panel))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster-arn))
      (common-lisp:list
       (common-lisp:cons "ClusterArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'control-panel-arn))
      (common-lisp:list
       (common-lisp:cons "ControlPanelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-control-panel))
      (common-lisp:list
       (common-lisp:cons "DefaultControlPanel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'routing-control-count))
      (common-lisp:list
       (common-lisp:cons "RoutingControlCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owner))
      (common-lisp:list
       (common-lisp:cons "Owner"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input control-panel))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-cluster-request common-lisp:nil
                       ((client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__stringMin1Max64PatternS|
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-cluster-request-client-token
                         :shape "__stringMin1Max64PatternS" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (cluster-name :initarg :cluster-name :initform
                         (common-lisp:error ":cluster-name is required") :type
                         (common-lisp:or |__stringMin1Max64PatternS|
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-cluster-request-cluster-name
                         :shape "__stringMin1Max64PatternS" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__stringMin0Max256PatternS|
                                         common-lisp:null)
                         :accessor struct-shape-create-cluster-request-tags
                         :shape "__mapOf__stringMin0Max256PatternS" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-cluster-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-cluster-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-cluster-request 'make-create-cluster-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-cluster-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-cluster-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster-name))
      (common-lisp:list
       (common-lisp:cons "ClusterName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-cluster-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-cluster-response common-lisp:nil
                       ((cluster :initarg :cluster :initform common-lisp:nil
                         :type (common-lisp:or cluster common-lisp:null)
                         :accessor struct-shape-create-cluster-response-cluster
                         :shape "Cluster" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-cluster-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-cluster-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-cluster-response 'make-create-cluster-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-cluster-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-cluster-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster))
      (common-lisp:list
       (common-lisp:cons "Cluster"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-cluster-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-control-panel-request common-lisp:nil
                       ((client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__stringMin1Max64PatternS|
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-control-panel-request-client-token
                         :shape "__stringMin1Max64PatternS" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (cluster-arn :initarg :cluster-arn :initform
                         (common-lisp:error ":cluster-arn is required") :type
                         (common-lisp:or |__stringMin1Max256PatternAZaZ09|
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-control-panel-request-cluster-arn
                         :shape "__stringMin1Max256PatternAZaZ09" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (control-panel-name :initarg :control-panel-name
                         :initform
                         (common-lisp:error ":control-panel-name is required")
                         :type
                         (common-lisp:or |__stringMin1Max64PatternS|
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-control-panel-request-control-panel-name
                         :shape "__stringMin1Max64PatternS" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__stringMin0Max256PatternS|
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-control-panel-request-tags :shape
                         "__mapOf__stringMin0Max256PatternS" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-control-panel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-control-panel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-control-panel-request
                    'make-create-control-panel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-control-panel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-control-panel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster-arn))
      (common-lisp:list
       (common-lisp:cons "ClusterArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'control-panel-name))
      (common-lisp:list
       (common-lisp:cons "ControlPanelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-control-panel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-control-panel-response common-lisp:nil
                       ((control-panel :initarg :control-panel :initform
                         common-lisp:nil :type
                         (common-lisp:or control-panel common-lisp:null)
                         :accessor
                         struct-shape-create-control-panel-response-control-panel
                         :shape "ControlPanel" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-control-panel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-control-panel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-control-panel-response
                    'make-create-control-panel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-control-panel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-control-panel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'control-panel))
      (common-lisp:list
       (common-lisp:cons "ControlPanel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-control-panel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-routing-control-request common-lisp:nil
                       ((client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__stringMin1Max64PatternS|
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-routing-control-request-client-token
                         :shape "__stringMin1Max64PatternS" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (cluster-arn :initarg :cluster-arn :initform
                         (common-lisp:error ":cluster-arn is required") :type
                         (common-lisp:or |__stringMin1Max256PatternAZaZ09|
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-routing-control-request-cluster-arn
                         :shape "__stringMin1Max256PatternAZaZ09" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (control-panel-arn :initarg :control-panel-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or |__stringMin1Max256PatternAZaZ09|
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-routing-control-request-control-panel-arn
                         :shape "__stringMin1Max256PatternAZaZ09" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (routing-control-name :initarg :routing-control-name
                         :initform
                         (common-lisp:error
                          ":routing-control-name is required")
                         :type
                         (common-lisp:or |__stringMin1Max64PatternS|
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-routing-control-request-routing-control-name
                         :shape "__stringMin1Max64PatternS" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-routing-control-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-routing-control-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-routing-control-request
                    'make-create-routing-control-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-routing-control-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-routing-control-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster-arn))
      (common-lisp:list
       (common-lisp:cons "ClusterArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'control-panel-arn))
      (common-lisp:list
       (common-lisp:cons "ControlPanelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'routing-control-name))
      (common-lisp:list
       (common-lisp:cons "RoutingControlName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-routing-control-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-routing-control-response common-lisp:nil
                       ((routing-control :initarg :routing-control :initform
                         common-lisp:nil :type
                         (common-lisp:or routing-control common-lisp:null)
                         :accessor
                         struct-shape-create-routing-control-response-routing-control
                         :shape "RoutingControl" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-routing-control-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-routing-control-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-routing-control-response
                    'make-create-routing-control-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-routing-control-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-routing-control-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'routing-control))
      (common-lisp:list
       (common-lisp:cons "RoutingControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-routing-control-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-safety-rule-request common-lisp:nil
                       ((assertion-rule :initarg :assertion-rule :initform
                         common-lisp:nil :type
                         (common-lisp:or new-assertion-rule common-lisp:null)
                         :accessor
                         struct-shape-create-safety-rule-request-assertion-rule
                         :shape "NewAssertionRule" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__stringMin1Max64PatternS|
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-safety-rule-request-client-token
                         :shape "__stringMin1Max64PatternS" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (gating-rule :initarg :gating-rule :initform
                         common-lisp:nil :type
                         (common-lisp:or new-gating-rule common-lisp:null)
                         :accessor
                         struct-shape-create-safety-rule-request-gating-rule
                         :shape "NewGatingRule" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__stringMin0Max256PatternS|
                                         common-lisp:null)
                         :accessor struct-shape-create-safety-rule-request-tags
                         :shape "__mapOf__stringMin0Max256PatternS" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-safety-rule-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-safety-rule-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-safety-rule-request
                    'make-create-safety-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-safety-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-safety-rule-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'assertion-rule))
      (common-lisp:list
       (common-lisp:cons "AssertionRule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gating-rule))
      (common-lisp:list
       (common-lisp:cons "GatingRule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-safety-rule-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-safety-rule-response common-lisp:nil
                       ((assertion-rule :initarg :assertion-rule :initform
                         common-lisp:nil :type
                         (common-lisp:or assertion-rule common-lisp:null)
                         :accessor
                         struct-shape-create-safety-rule-response-assertion-rule
                         :shape "AssertionRule" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (gating-rule :initarg :gating-rule :initform
                         common-lisp:nil :type
                         (common-lisp:or gating-rule common-lisp:null)
                         :accessor
                         struct-shape-create-safety-rule-response-gating-rule
                         :shape "GatingRule" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-safety-rule-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-safety-rule-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-safety-rule-response
                    'make-create-safety-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-safety-rule-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-safety-rule-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'assertion-rule))
      (common-lisp:list
       (common-lisp:cons "AssertionRule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gating-rule))
      (common-lisp:list
       (common-lisp:cons "GatingRule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-safety-rule-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-cluster-request common-lisp:nil
                       ((cluster-arn :initarg :cluster-arn :initform
                         (common-lisp:error ":cluster-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-cluster-request-cluster-arn :shape
                         "__string" :location "uri" :location-name
                         "ClusterArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-cluster-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-cluster-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-cluster-request 'make-delete-cluster-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-cluster-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-cluster-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-cluster-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-cluster-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-cluster-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-cluster-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-cluster-response 'make-delete-cluster-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-cluster-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-cluster-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-cluster-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-control-panel-request common-lisp:nil
                       ((control-panel-arn :initarg :control-panel-arn
                         :initform
                         (common-lisp:error ":control-panel-arn is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-control-panel-request-control-panel-arn
                         :shape "__string" :location "uri" :location-name
                         "ControlPanelArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-control-panel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-control-panel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-control-panel-request
                    'make-delete-control-panel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-control-panel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-control-panel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-control-panel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-control-panel-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-control-panel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-control-panel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-control-panel-response
                    'make-delete-control-panel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-control-panel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-control-panel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-control-panel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-routing-control-request common-lisp:nil
                       ((routing-control-arn :initarg :routing-control-arn
                         :initform
                         (common-lisp:error ":routing-control-arn is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-routing-control-request-routing-control-arn
                         :shape "__string" :location "uri" :location-name
                         "RoutingControlArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-routing-control-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-routing-control-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-routing-control-request
                    'make-delete-routing-control-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-routing-control-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-routing-control-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-routing-control-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-routing-control-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-routing-control-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-routing-control-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-routing-control-response
                    'make-delete-routing-control-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-routing-control-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-routing-control-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-routing-control-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-safety-rule-request common-lisp:nil
                       ((safety-rule-arn :initarg :safety-rule-arn :initform
                         (common-lisp:error ":safety-rule-arn is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-safety-rule-request-safety-rule-arn
                         :shape "__string" :location "uri" :location-name
                         "SafetyRuleArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-safety-rule-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-safety-rule-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-safety-rule-request
                    'make-delete-safety-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-safety-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-safety-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-safety-rule-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-safety-rule-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-safety-rule-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-safety-rule-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-safety-rule-response
                    'make-delete-safety-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-safety-rule-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-safety-rule-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-safety-rule-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-cluster-request common-lisp:nil
                       ((cluster-arn :initarg :cluster-arn :initform
                         (common-lisp:error ":cluster-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-cluster-request-cluster-arn
                         :shape "__string" :location "uri" :location-name
                         "ClusterArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-cluster-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-cluster-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-cluster-request 'make-describe-cluster-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-cluster-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-cluster-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-cluster-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-cluster-response common-lisp:nil
                       ((cluster :initarg :cluster :initform common-lisp:nil
                         :type (common-lisp:or cluster common-lisp:null)
                         :accessor
                         struct-shape-describe-cluster-response-cluster :shape
                         "Cluster" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-cluster-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-cluster-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-cluster-response
                    'make-describe-cluster-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-cluster-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-cluster-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster))
      (common-lisp:list
       (common-lisp:cons "Cluster"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-cluster-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-control-panel-request common-lisp:nil
                       ((control-panel-arn :initarg :control-panel-arn
                         :initform
                         (common-lisp:error ":control-panel-arn is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-describe-control-panel-request-control-panel-arn
                         :shape "__string" :location "uri" :location-name
                         "ControlPanelArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-control-panel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-control-panel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-control-panel-request
                    'make-describe-control-panel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-control-panel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-control-panel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-control-panel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-control-panel-response common-lisp:nil
                       ((control-panel :initarg :control-panel :initform
                         common-lisp:nil :type
                         (common-lisp:or control-panel common-lisp:null)
                         :accessor
                         struct-shape-describe-control-panel-response-control-panel
                         :shape "ControlPanel" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-control-panel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-control-panel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-control-panel-response
                    'make-describe-control-panel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-control-panel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-control-panel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'control-panel))
      (common-lisp:list
       (common-lisp:cons "ControlPanel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-control-panel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-routing-control-request common-lisp:nil
                       ((routing-control-arn :initarg :routing-control-arn
                         :initform
                         (common-lisp:error ":routing-control-arn is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-describe-routing-control-request-routing-control-arn
                         :shape "__string" :location "uri" :location-name
                         "RoutingControlArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-routing-control-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-routing-control-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-routing-control-request
                    'make-describe-routing-control-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-routing-control-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-routing-control-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-routing-control-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-routing-control-response common-lisp:nil
                       ((routing-control :initarg :routing-control :initform
                         common-lisp:nil :type
                         (common-lisp:or routing-control common-lisp:null)
                         :accessor
                         struct-shape-describe-routing-control-response-routing-control
                         :shape "RoutingControl" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-routing-control-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-routing-control-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-routing-control-response
                    'make-describe-routing-control-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-routing-control-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-routing-control-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'routing-control))
      (common-lisp:list
       (common-lisp:cons "RoutingControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-routing-control-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-safety-rule-request common-lisp:nil
                       ((safety-rule-arn :initarg :safety-rule-arn :initform
                         (common-lisp:error ":safety-rule-arn is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-describe-safety-rule-request-safety-rule-arn
                         :shape "__string" :location "uri" :location-name
                         "SafetyRuleArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-safety-rule-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-safety-rule-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-safety-rule-request
                    'make-describe-safety-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-safety-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-safety-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-safety-rule-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-safety-rule-response common-lisp:nil
                       ((assertion-rule :initarg :assertion-rule :initform
                         common-lisp:nil :type
                         (common-lisp:or assertion-rule common-lisp:null)
                         :accessor
                         struct-shape-describe-safety-rule-response-assertion-rule
                         :shape "AssertionRule" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (gating-rule :initarg :gating-rule :initform
                         common-lisp:nil :type
                         (common-lisp:or gating-rule common-lisp:null)
                         :accessor
                         struct-shape-describe-safety-rule-response-gating-rule
                         :shape "GatingRule" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-safety-rule-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-safety-rule-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-safety-rule-response
                    'make-describe-safety-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-safety-rule-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-safety-rule-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'assertion-rule))
      (common-lisp:list
       (common-lisp:cons "AssertionRule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gating-rule))
      (common-lisp:list
       (common-lisp:cons "GatingRule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-safety-rule-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass gating-rule common-lisp:nil
                       ((control-panel-arn :initarg :control-panel-arn
                         :initform
                         (common-lisp:error ":control-panel-arn is required")
                         :type
                         (common-lisp:or |__stringMin1Max256PatternAZaZ09|
                                         common-lisp:null)
                         :accessor struct-shape-gating-rule-control-panel-arn
                         :shape "__stringMin1Max256PatternAZaZ09" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (gating-controls :initarg :gating-controls :initform
                         (common-lisp:error ":gating-controls is required")
                         :type
                         (common-lisp:or
                          |__listOf__stringMin1Max256PatternAZaZ09|
                          common-lisp:null)
                         :accessor struct-shape-gating-rule-gating-controls
                         :shape "__listOf__stringMin1Max256PatternAZaZ09"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or |__stringMin1Max64PatternS|
                                         common-lisp:null)
                         :accessor struct-shape-gating-rule-name :shape
                         "__stringMin1Max64PatternS" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (rule-config :initarg :rule-config :initform
                         (common-lisp:error ":rule-config is required") :type
                         (common-lisp:or rule-config common-lisp:null)
                         :accessor struct-shape-gating-rule-rule-config :shape
                         "RuleConfig" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (safety-rule-arn :initarg :safety-rule-arn :initform
                         (common-lisp:error ":safety-rule-arn is required")
                         :type
                         (common-lisp:or |__stringMin1Max256PatternAZaZ09|
                                         common-lisp:null)
                         :accessor struct-shape-gating-rule-safety-rule-arn
                         :shape "__stringMin1Max256PatternAZaZ09" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (status :initarg :status :initform
                         (common-lisp:error ":status is required") :type
                         (common-lisp:or status common-lisp:null) :accessor
                         struct-shape-gating-rule-status :shape "Status"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (target-controls :initarg :target-controls :initform
                         (common-lisp:error ":target-controls is required")
                         :type
                         (common-lisp:or
                          |__listOf__stringMin1Max256PatternAZaZ09|
                          common-lisp:null)
                         :accessor struct-shape-gating-rule-target-controls
                         :shape "__listOf__stringMin1Max256PatternAZaZ09"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (wait-period-ms :initarg :wait-period-ms :initform
                         (common-lisp:error ":wait-period-ms is required")
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-gating-rule-wait-period-ms
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (owner :initarg :owner :initform common-lisp:nil :type
                         (common-lisp:or |__stringMin12Max12PatternD12|
                                         common-lisp:null)
                         :accessor struct-shape-gating-rule-owner :shape
                         "__stringMin12Max12PatternD12" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-gating-rule
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'gating-rule
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'gating-rule 'make-gating-rule))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input gating-rule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input gating-rule))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'control-panel-arn))
      (common-lisp:list
       (common-lisp:cons "ControlPanelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gating-controls))
      (common-lisp:list
       (common-lisp:cons "GatingControls"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-config))
      (common-lisp:list
       (common-lisp:cons "RuleConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'safety-rule-arn))
      (common-lisp:list
       (common-lisp:cons "SafetyRuleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-controls))
      (common-lisp:list
       (common-lisp:cons "TargetControls"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'wait-period-ms))
      (common-lisp:list
       (common-lisp:cons "WaitPeriodMs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owner))
      (common-lisp:list
       (common-lisp:cons "Owner"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input gating-rule))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass gating-rule-update common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or |__stringMin1Max64PatternS|
                                         common-lisp:null)
                         :accessor struct-shape-gating-rule-update-name :shape
                         "__stringMin1Max64PatternS" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (safety-rule-arn :initarg :safety-rule-arn :initform
                         (common-lisp:error ":safety-rule-arn is required")
                         :type
                         (common-lisp:or |__stringMin1Max256PatternAZaZ09|
                                         common-lisp:null)
                         :accessor
                         struct-shape-gating-rule-update-safety-rule-arn :shape
                         "__stringMin1Max256PatternAZaZ09" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (wait-period-ms :initarg :wait-period-ms :initform
                         (common-lisp:error ":wait-period-ms is required")
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-gating-rule-update-wait-period-ms :shape
                         "__integer" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-gating-rule-update
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'gating-rule-update
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'gating-rule-update 'make-gating-rule-update))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input gating-rule-update))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input gating-rule-update))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'safety-rule-arn))
      (common-lisp:list
       (common-lisp:cons "SafetyRuleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'wait-period-ms))
      (common-lisp:list
       (common-lisp:cons "WaitPeriodMs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input gating-rule-update))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-resource-policy-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-resource-policy-request-resource-arn
                         :shape "__string" :location "uri" :location-name
                         "ResourceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-resource-policy-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-resource-policy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-resource-policy-request
                    'make-get-resource-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-resource-policy-response common-lisp:nil
                       ((policy :initarg :policy :initform common-lisp:nil
                         :type (common-lisp:or |__policy| common-lisp:null)
                         :accessor
                         struct-shape-get-resource-policy-response-policy
                         :shape "__policy" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-resource-policy-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-resource-policy-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-resource-policy-response
                    'make-get-resource-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "Policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (route53-recovery-control-config-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message)))
(common-lisp:progn
 (common-lisp:defclass list-associated-route53health-checks-request
                       common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-associated-route53health-checks-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "MaxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-associated-route53health-checks-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "NextToken")
                        (routing-control-arn :initarg :routing-control-arn
                         :initform
                         (common-lisp:error ":routing-control-arn is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-list-associated-route53health-checks-request-routing-control-arn
                         :shape "__string" :location "uri" :location-name
                         "RoutingControlArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-associated-route53health-checks-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-associated-route53health-checks-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-associated-route53health-checks-request
                    'make-list-associated-route53health-checks-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-associated-route53health-checks-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-associated-route53health-checks-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-associated-route53health-checks-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-associated-route53health-checks-response
                       common-lisp:nil
                       ((health-check-ids :initarg :health-check-ids :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__stringMax36PatternS|
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-associated-route53health-checks-response-health-check-ids
                         :shape "__listOf__stringMax36PatternS" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__stringMin1Max8096PatternS|
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-associated-route53health-checks-response-next-token
                         :shape "__stringMin1Max8096PatternS" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-associated-route53health-checks-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-associated-route53health-checks-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-associated-route53health-checks-response
                    'make-list-associated-route53health-checks-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-associated-route53health-checks-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-associated-route53health-checks-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'health-check-ids))
      (common-lisp:list
       (common-lisp:cons "HealthCheckIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-associated-route53health-checks-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-clusters-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-clusters-request-max-results :shape
                         "MaxResults" :location "querystring" :location-name
                         "MaxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-clusters-request-next-token :shape
                         "__string" :location "querystring" :location-name
                         "NextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-clusters-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-clusters-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-clusters-request 'make-list-clusters-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-clusters-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-clusters-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-clusters-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-clusters-response common-lisp:nil
                       ((clusters :initarg :clusters :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOfCluster| common-lisp:null)
                         :accessor struct-shape-list-clusters-response-clusters
                         :shape "__listOfCluster" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__stringMin1Max8096PatternS|
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-clusters-response-next-token :shape
                         "__stringMin1Max8096PatternS" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-clusters-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-clusters-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-clusters-response 'make-list-clusters-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-clusters-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-clusters-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'clusters))
      (common-lisp:list
       (common-lisp:cons "Clusters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-clusters-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-control-panels-request common-lisp:nil
                       ((cluster-arn :initarg :cluster-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-control-panels-request-cluster-arn
                         :shape "__string" :location "querystring"
                         :location-name "ClusterArn")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-control-panels-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "MaxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-control-panels-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "NextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-control-panels-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-control-panels-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-control-panels-request
                    'make-list-control-panels-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-control-panels-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-control-panels-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-control-panels-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-control-panels-response common-lisp:nil
                       ((control-panels :initarg :control-panels :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfControlPanel|
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-control-panels-response-control-panels
                         :shape "__listOfControlPanel" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__stringMin1Max8096PatternS|
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-control-panels-response-next-token
                         :shape "__stringMin1Max8096PatternS" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-control-panels-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-control-panels-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-control-panels-response
                    'make-list-control-panels-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-control-panels-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-control-panels-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'control-panels))
      (common-lisp:list
       (common-lisp:cons "ControlPanels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-control-panels-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-routing-controls-request common-lisp:nil
                       ((control-panel-arn :initarg :control-panel-arn
                         :initform
                         (common-lisp:error ":control-panel-arn is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-list-routing-controls-request-control-panel-arn
                         :shape "__string" :location "uri" :location-name
                         "ControlPanelArn")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-routing-controls-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "MaxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-routing-controls-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "NextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-routing-controls-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-routing-controls-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-routing-controls-request
                    'make-list-routing-controls-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-routing-controls-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-routing-controls-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-routing-controls-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-routing-controls-response common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__stringMin1Max8096PatternS|
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-routing-controls-response-next-token
                         :shape "__stringMin1Max8096PatternS" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (routing-controls :initarg :routing-controls :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfRoutingControl|
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-routing-controls-response-routing-controls
                         :shape "__listOfRoutingControl" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-routing-controls-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-routing-controls-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-routing-controls-response
                    'make-list-routing-controls-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-routing-controls-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-routing-controls-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'routing-controls))
      (common-lisp:list
       (common-lisp:cons "RoutingControls"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-routing-controls-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-safety-rules-request common-lisp:nil
                       ((control-panel-arn :initarg :control-panel-arn
                         :initform
                         (common-lisp:error ":control-panel-arn is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-list-safety-rules-request-control-panel-arn
                         :shape "__string" :location "uri" :location-name
                         "ControlPanelArn")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-safety-rules-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "MaxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-safety-rules-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "NextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-safety-rules-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-safety-rules-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-safety-rules-request
                    'make-list-safety-rules-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-safety-rules-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-safety-rules-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-safety-rules-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-safety-rules-response common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__stringMin1Max8096PatternS|
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-safety-rules-response-next-token
                         :shape "__stringMin1Max8096PatternS" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (safety-rules :initarg :safety-rules :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfRule| common-lisp:null)
                         :accessor
                         struct-shape-list-safety-rules-response-safety-rules
                         :shape "__listOfRule" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-safety-rules-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-safety-rules-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-safety-rules-response
                    'make-list-safety-rules-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-safety-rules-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-safety-rules-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'safety-rules))
      (common-lisp:list
       (common-lisp:cons "SafetyRules"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-safety-rules-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-request-resource-arn
                         :shape "__string" :location "uri" :location-name
                         "ResourceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__stringMin0Max256PatternS|
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-tags-for-resource-response-tags
                         :shape "__mapOf__stringMin0Max256PatternS" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass new-assertion-rule common-lisp:nil
                       ((asserted-controls :initarg :asserted-controls
                         :initform
                         (common-lisp:error ":asserted-controls is required")
                         :type
                         (common-lisp:or
                          |__listOf__stringMin1Max256PatternAZaZ09|
                          common-lisp:null)
                         :accessor
                         struct-shape-new-assertion-rule-asserted-controls
                         :shape "__listOf__stringMin1Max256PatternAZaZ09"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (control-panel-arn :initarg :control-panel-arn
                         :initform
                         (common-lisp:error ":control-panel-arn is required")
                         :type
                         (common-lisp:or |__stringMin1Max256PatternAZaZ09|
                                         common-lisp:null)
                         :accessor
                         struct-shape-new-assertion-rule-control-panel-arn
                         :shape "__stringMin1Max256PatternAZaZ09" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or |__stringMin1Max64PatternS|
                                         common-lisp:null)
                         :accessor struct-shape-new-assertion-rule-name :shape
                         "__stringMin1Max64PatternS" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (rule-config :initarg :rule-config :initform
                         (common-lisp:error ":rule-config is required") :type
                         (common-lisp:or rule-config common-lisp:null)
                         :accessor struct-shape-new-assertion-rule-rule-config
                         :shape "RuleConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (wait-period-ms :initarg :wait-period-ms :initform
                         (common-lisp:error ":wait-period-ms is required")
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-new-assertion-rule-wait-period-ms :shape
                         "__integer" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-new-assertion-rule
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'new-assertion-rule
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'new-assertion-rule 'make-new-assertion-rule))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input new-assertion-rule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input new-assertion-rule))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'asserted-controls))
      (common-lisp:list
       (common-lisp:cons "AssertedControls"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'control-panel-arn))
      (common-lisp:list
       (common-lisp:cons "ControlPanelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-config))
      (common-lisp:list
       (common-lisp:cons "RuleConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'wait-period-ms))
      (common-lisp:list
       (common-lisp:cons "WaitPeriodMs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input new-assertion-rule))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass new-gating-rule common-lisp:nil
                       ((control-panel-arn :initarg :control-panel-arn
                         :initform
                         (common-lisp:error ":control-panel-arn is required")
                         :type
                         (common-lisp:or |__stringMin1Max256PatternAZaZ09|
                                         common-lisp:null)
                         :accessor
                         struct-shape-new-gating-rule-control-panel-arn :shape
                         "__stringMin1Max256PatternAZaZ09" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (gating-controls :initarg :gating-controls :initform
                         (common-lisp:error ":gating-controls is required")
                         :type
                         (common-lisp:or
                          |__listOf__stringMin1Max256PatternAZaZ09|
                          common-lisp:null)
                         :accessor struct-shape-new-gating-rule-gating-controls
                         :shape "__listOf__stringMin1Max256PatternAZaZ09"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or |__stringMin1Max64PatternS|
                                         common-lisp:null)
                         :accessor struct-shape-new-gating-rule-name :shape
                         "__stringMin1Max64PatternS" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (rule-config :initarg :rule-config :initform
                         (common-lisp:error ":rule-config is required") :type
                         (common-lisp:or rule-config common-lisp:null)
                         :accessor struct-shape-new-gating-rule-rule-config
                         :shape "RuleConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (target-controls :initarg :target-controls :initform
                         (common-lisp:error ":target-controls is required")
                         :type
                         (common-lisp:or
                          |__listOf__stringMin1Max256PatternAZaZ09|
                          common-lisp:null)
                         :accessor struct-shape-new-gating-rule-target-controls
                         :shape "__listOf__stringMin1Max256PatternAZaZ09"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (wait-period-ms :initarg :wait-period-ms :initform
                         (common-lisp:error ":wait-period-ms is required")
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-new-gating-rule-wait-period-ms
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-new-gating-rule
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'new-gating-rule
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'new-gating-rule 'make-new-gating-rule))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input new-gating-rule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input new-gating-rule))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'control-panel-arn))
      (common-lisp:list
       (common-lisp:cons "ControlPanelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gating-controls))
      (common-lisp:list
       (common-lisp:cons "GatingControls"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-config))
      (common-lisp:list
       (common-lisp:cons "RuleConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-controls))
      (common-lisp:list
       (common-lisp:cons "TargetControls"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'wait-period-ms))
      (common-lisp:list
       (common-lisp:cons "WaitPeriodMs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input new-gating-rule))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (route53-recovery-control-config-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:progn
 (common-lisp:defclass routing-control common-lisp:nil
                       ((control-panel-arn :initarg :control-panel-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or |__stringMin1Max256PatternAZaZ09|
                                         common-lisp:null)
                         :accessor
                         struct-shape-routing-control-control-panel-arn :shape
                         "__stringMin1Max256PatternAZaZ09" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__stringMin1Max64PatternS|
                                         common-lisp:null)
                         :accessor struct-shape-routing-control-name :shape
                         "__stringMin1Max64PatternS" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (routing-control-arn :initarg :routing-control-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or |__stringMin1Max256PatternAZaZ09|
                                         common-lisp:null)
                         :accessor
                         struct-shape-routing-control-routing-control-arn
                         :shape "__stringMin1Max256PatternAZaZ09" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or status common-lisp:null)
                         :accessor struct-shape-routing-control-status :shape
                         "Status" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (owner :initarg :owner :initform common-lisp:nil :type
                         (common-lisp:or |__stringMin12Max12PatternD12|
                                         common-lisp:null)
                         :accessor struct-shape-routing-control-owner :shape
                         "__stringMin12Max12PatternD12" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-routing-control
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'routing-control
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'routing-control 'make-routing-control))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input routing-control))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input routing-control))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'control-panel-arn))
      (common-lisp:list
       (common-lisp:cons "ControlPanelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'routing-control-arn))
      (common-lisp:list
       (common-lisp:cons "RoutingControlArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owner))
      (common-lisp:list
       (common-lisp:cons "Owner"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input routing-control))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass rule common-lisp:nil
                       ((assertion :initarg :assertion :initform
                         common-lisp:nil :type
                         (common-lisp:or assertion-rule common-lisp:null)
                         :accessor struct-shape-rule-assertion :shape
                         "AssertionRule" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (gating :initarg :gating :initform common-lisp:nil
                         :type (common-lisp:or gating-rule common-lisp:null)
                         :accessor struct-shape-rule-gating :shape "GatingRule"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-rule (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'rule
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'rule 'make-rule))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input rule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input rule))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'assertion))
      (common-lisp:list
       (common-lisp:cons "ASSERTION"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gating))
      (common-lisp:list
       (common-lisp:cons "GATING"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input rule))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass rule-config common-lisp:nil
                       ((inverted :initarg :inverted :initform
                         (common-lisp:error ":inverted is required") :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-rule-config-inverted :shape
                         "__boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (threshold :initarg :threshold :initform
                         (common-lisp:error ":threshold is required") :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-rule-config-threshold :shape
                         "__integer" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (type :initarg :type :initform
                         (common-lisp:error ":type is required") :type
                         (common-lisp:or rule-type common-lisp:null) :accessor
                         struct-shape-rule-config-type :shape "RuleType"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-rule-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'rule-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'rule-config 'make-rule-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input rule-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input rule-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inverted))
      (common-lisp:list
       (common-lisp:cons "Inverted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'threshold))
      (common-lisp:list
       (common-lisp:cons "Threshold"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input rule-config))
   common-lisp:nil))
(common-lisp:deftype rule-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition service-quota-exceeded-exception
     (route53-recovery-control-config-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-quota-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-quota-exceeded-exception
                    'service-quota-exceeded-exception-message)))
(common-lisp:deftype status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-tag-resource-request-resource-arn :shape
                         "__string" :location "uri" :location-name
                         "ResourceArn")
                        (tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or |__mapOf__stringMin0Max256PatternS|
                                         common-lisp:null)
                         :accessor struct-shape-tag-resource-request-tags
                         :shape "__mapOf__stringMin0Max256PatternS" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (route53-recovery-control-config-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message)))
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-untag-resource-request-resource-arn
                         :shape "__string" :location "uri" :location-name
                         "ResourceArn")
                        (tag-keys :initarg :tag-keys :initform
                         (common-lisp:error ":tag-keys is required") :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-untag-resource-request-tag-keys
                         :shape "__listOf__string" :location "querystring"
                         :location-name "TagKeys"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-control-panel-request common-lisp:nil
                       ((control-panel-arn :initarg :control-panel-arn
                         :initform
                         (common-lisp:error ":control-panel-arn is required")
                         :type
                         (common-lisp:or |__stringMin1Max256PatternAZaZ09|
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-control-panel-request-control-panel-arn
                         :shape "__stringMin1Max256PatternAZaZ09" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (control-panel-name :initarg :control-panel-name
                         :initform
                         (common-lisp:error ":control-panel-name is required")
                         :type
                         (common-lisp:or |__stringMin1Max64PatternS|
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-control-panel-request-control-panel-name
                         :shape "__stringMin1Max64PatternS" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-control-panel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-control-panel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-control-panel-request
                    'make-update-control-panel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-control-panel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-control-panel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'control-panel-arn))
      (common-lisp:list
       (common-lisp:cons "ControlPanelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'control-panel-name))
      (common-lisp:list
       (common-lisp:cons "ControlPanelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-control-panel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-control-panel-response common-lisp:nil
                       ((control-panel :initarg :control-panel :initform
                         common-lisp:nil :type
                         (common-lisp:or control-panel common-lisp:null)
                         :accessor
                         struct-shape-update-control-panel-response-control-panel
                         :shape "ControlPanel" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-control-panel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-control-panel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-control-panel-response
                    'make-update-control-panel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-control-panel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-control-panel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'control-panel))
      (common-lisp:list
       (common-lisp:cons "ControlPanel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-control-panel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-routing-control-request common-lisp:nil
                       ((routing-control-arn :initarg :routing-control-arn
                         :initform
                         (common-lisp:error ":routing-control-arn is required")
                         :type
                         (common-lisp:or |__stringMin1Max256PatternAZaZ09|
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-routing-control-request-routing-control-arn
                         :shape "__stringMin1Max256PatternAZaZ09" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (routing-control-name :initarg :routing-control-name
                         :initform
                         (common-lisp:error
                          ":routing-control-name is required")
                         :type
                         (common-lisp:or |__stringMin1Max64PatternS|
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-routing-control-request-routing-control-name
                         :shape "__stringMin1Max64PatternS" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-routing-control-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-routing-control-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-routing-control-request
                    'make-update-routing-control-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-routing-control-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-routing-control-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'routing-control-arn))
      (common-lisp:list
       (common-lisp:cons "RoutingControlArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'routing-control-name))
      (common-lisp:list
       (common-lisp:cons "RoutingControlName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-routing-control-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-routing-control-response common-lisp:nil
                       ((routing-control :initarg :routing-control :initform
                         common-lisp:nil :type
                         (common-lisp:or routing-control common-lisp:null)
                         :accessor
                         struct-shape-update-routing-control-response-routing-control
                         :shape "RoutingControl" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-routing-control-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-routing-control-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-routing-control-response
                    'make-update-routing-control-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-routing-control-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-routing-control-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'routing-control))
      (common-lisp:list
       (common-lisp:cons "RoutingControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-routing-control-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-safety-rule-request common-lisp:nil
                       ((assertion-rule-update :initarg :assertion-rule-update
                         :initform common-lisp:nil :type
                         (common-lisp:or assertion-rule-update
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-safety-rule-request-assertion-rule-update
                         :shape "AssertionRuleUpdate" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (gating-rule-update :initarg :gating-rule-update
                         :initform common-lisp:nil :type
                         (common-lisp:or gating-rule-update common-lisp:null)
                         :accessor
                         struct-shape-update-safety-rule-request-gating-rule-update
                         :shape "GatingRuleUpdate" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-safety-rule-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-safety-rule-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-safety-rule-request
                    'make-update-safety-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-safety-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-safety-rule-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'assertion-rule-update))
      (common-lisp:list
       (common-lisp:cons "AssertionRuleUpdate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gating-rule-update))
      (common-lisp:list
       (common-lisp:cons "GatingRuleUpdate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-safety-rule-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-safety-rule-response common-lisp:nil
                       ((assertion-rule :initarg :assertion-rule :initform
                         common-lisp:nil :type
                         (common-lisp:or assertion-rule common-lisp:null)
                         :accessor
                         struct-shape-update-safety-rule-response-assertion-rule
                         :shape "AssertionRule" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (gating-rule :initarg :gating-rule :initform
                         common-lisp:nil :type
                         (common-lisp:or gating-rule common-lisp:null)
                         :accessor
                         struct-shape-update-safety-rule-response-gating-rule
                         :shape "GatingRule" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-safety-rule-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-safety-rule-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-safety-rule-response
                    'make-update-safety-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-safety-rule-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-safety-rule-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'assertion-rule))
      (common-lisp:list
       (common-lisp:cons "AssertionRule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gating-rule))
      (common-lisp:list
       (common-lisp:cons "GatingRule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-safety-rule-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (route53-recovery-control-config-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message)))
(common-lisp:deftype |__boolean| () 'common-lisp:boolean)
(common-lisp:deftype |__double| () 'common-lisp:double-float)
(common-lisp:deftype |__integer| () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype |__listOfCluster| ()
   '(trivial-types:proper-list cluster))
 (common-lisp:defun make-__listofcluster
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list cluster))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfClusterEndpoint| ()
   '(trivial-types:proper-list cluster-endpoint))
 (common-lisp:defun make-__listofclusterendpoint
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list cluster-endpoint))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfControlPanel| ()
   '(trivial-types:proper-list control-panel))
 (common-lisp:defun make-__listofcontrolpanel
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list control-panel))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfRoutingControl| ()
   '(trivial-types:proper-list routing-control))
 (common-lisp:defun make-__listofroutingcontrol
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list routing-control))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfRule| () '(trivial-types:proper-list rule))
 (common-lisp:defun make-__listofrule
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list rule))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOf__string| ()
   '(trivial-types:proper-list |__string|))
 (common-lisp:defun make-__listof__string
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__string|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOf__stringMax36PatternS| ()
   '(trivial-types:proper-list |__stringMax36PatternS|))
 (common-lisp:defun make-__listof__stringmax36patterns
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__stringMax36PatternS|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOf__stringMin1Max256PatternAZaZ09| ()
   '(trivial-types:proper-list |__stringMin1Max256PatternAZaZ09|))
 (common-lisp:defun make-__listof__stringmin1max256patternazaz09
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            |__stringMin1Max256PatternAZaZ09|))
   aws-sdk/generator/shape::members))
(common-lisp:deftype |__long| () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype |__mapOf__stringMin0Max256PatternS| ()
   'common-lisp:hash-table)
 (common-lisp:defun make-__mapof__stringmin0max256patterns
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype |__string| () 'common-lisp:string)
(common-lisp:deftype |__stringMax36PatternS| () 'common-lisp:string)
(common-lisp:deftype |__stringMin0Max256PatternS| () 'common-lisp:string)
(common-lisp:deftype |__stringMin12Max12PatternD12| () 'common-lisp:string)
(common-lisp:deftype |__stringMin1Max128PatternAZaZ09| () 'common-lisp:string)
(common-lisp:deftype |__stringMin1Max256PatternAZaZ09| () 'common-lisp:string)
(common-lisp:deftype |__stringMin1Max32PatternS| () 'common-lisp:string)
(common-lisp:deftype |__stringMin1Max64PatternS| () 'common-lisp:string)
(common-lisp:deftype |__stringMin1Max8096PatternS| () 'common-lisp:string)
(common-lisp:deftype |__policy| () 'common-lisp:string)
(common-lisp:deftype |__timestampIso8601| () 'common-lisp:string)
(common-lisp:deftype |__timestampUnix| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun create-cluster
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token cluster-name tags)
   (common-lisp:declare (common-lisp:ignorable client-token cluster-name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-cluster-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-control-config-request
        aws-sdk/generator/operation::input "POST" "/cluster" "CreateCluster"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-cluster))
(common-lisp:progn
 (common-lisp:defun create-control-panel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token cluster-arn
                     control-panel-name tags)
   (common-lisp:declare
    (common-lisp:ignorable client-token cluster-arn control-panel-name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-control-panel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-control-config-request
        aws-sdk/generator/operation::input "POST" "/controlpanel"
        "CreateControlPanel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-control-panel))
(common-lisp:progn
 (common-lisp:defun create-routing-control
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token cluster-arn
                     control-panel-arn routing-control-name)
   (common-lisp:declare
    (common-lisp:ignorable client-token cluster-arn control-panel-arn
     routing-control-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-routing-control-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-control-config-request
        aws-sdk/generator/operation::input "POST" "/routingcontrol"
        "CreateRoutingControl"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-routing-control))
(common-lisp:progn
 (common-lisp:defun create-safety-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key assertion-rule client-token gating-rule
                     tags)
   (common-lisp:declare
    (common-lisp:ignorable assertion-rule client-token gating-rule tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-safety-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-control-config-request
        aws-sdk/generator/operation::input "POST" "/safetyrule"
        "CreateSafetyRule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-safety-rule))
(common-lisp:progn
 (common-lisp:defun delete-cluster
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster-arn)
   (common-lisp:declare (common-lisp:ignorable cluster-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-cluster-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-control-config-request
        aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/cluster/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'cluster-arn))))
        "DeleteCluster"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-cluster))
(common-lisp:progn
 (common-lisp:defun delete-control-panel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key control-panel-arn)
   (common-lisp:declare (common-lisp:ignorable control-panel-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-control-panel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-control-config-request
        aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/controlpanel/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'control-panel-arn))))
        "DeleteControlPanel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-control-panel))
(common-lisp:progn
 (common-lisp:defun delete-routing-control
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key routing-control-arn)
   (common-lisp:declare (common-lisp:ignorable routing-control-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-routing-control-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-control-config-request
        aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/routingcontrol/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'routing-control-arn))))
        "DeleteRoutingControl"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-routing-control))
(common-lisp:progn
 (common-lisp:defun delete-safety-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key safety-rule-arn)
   (common-lisp:declare (common-lisp:ignorable safety-rule-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-safety-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-control-config-request
        aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/safetyrule/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'safety-rule-arn))))
        "DeleteSafetyRule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-safety-rule))
(common-lisp:progn
 (common-lisp:defun describe-cluster
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster-arn)
   (common-lisp:declare (common-lisp:ignorable cluster-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-cluster-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-control-config-request
        aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/cluster/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'cluster-arn))))
        "DescribeCluster"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-cluster))
(common-lisp:progn
 (common-lisp:defun describe-control-panel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key control-panel-arn)
   (common-lisp:declare (common-lisp:ignorable control-panel-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-control-panel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-control-config-request
        aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/controlpanel/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'control-panel-arn))))
        "DescribeControlPanel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-control-panel))
(common-lisp:progn
 (common-lisp:defun describe-routing-control
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key routing-control-arn)
   (common-lisp:declare (common-lisp:ignorable routing-control-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-routing-control-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-control-config-request
        aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/routingcontrol/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'routing-control-arn))))
        "DescribeRoutingControl"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-routing-control))
(common-lisp:progn
 (common-lisp:defun describe-safety-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key safety-rule-arn)
   (common-lisp:declare (common-lisp:ignorable safety-rule-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-safety-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-control-config-request
        aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/safetyrule/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'safety-rule-arn))))
        "DescribeSafetyRule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-safety-rule))
(common-lisp:progn
 (common-lisp:defun get-resource-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-resource-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-control-config-request
        aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/resourcePolicy/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "GetResourcePolicy"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-resource-policy))
(common-lisp:progn
 (common-lisp:defun list-associated-route53health-checks
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token
                     routing-control-arn)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token routing-control-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-associated-route53health-checks-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-control-config-request
        aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/routingcontrol/~A/associatedRoute53HealthChecks"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'routing-control-arn))))
        "ListAssociatedRoute53HealthChecks"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-associated-route53health-checks))
(common-lisp:progn
 (common-lisp:defun list-clusters
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-clusters-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-control-config-request
        aws-sdk/generator/operation::input "GET" "/cluster" "ListClusters"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-clusters))
(common-lisp:progn
 (common-lisp:defun list-control-panels
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster-arn max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable cluster-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-control-panels-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-control-config-request
        aws-sdk/generator/operation::input "GET" "/controlpanels"
        "ListControlPanels"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-control-panels))
(common-lisp:progn
 (common-lisp:defun list-routing-controls
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key control-panel-arn max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable control-panel-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-routing-controls-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-control-config-request
        aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/controlpanel/~A/routingcontrols"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'control-panel-arn))))
        "ListRoutingControls"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-routing-controls))
(common-lisp:progn
 (common-lisp:defun list-safety-rules
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key control-panel-arn max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable control-panel-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-safety-rules-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-control-config-request
        aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/controlpanel/~A/safetyrules"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'control-panel-arn))))
        "ListSafetyRules"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-safety-rules))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-control-config-request
        aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-control-config-request
        aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "TagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-control-config-request
        aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-control-panel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key control-panel-arn control-panel-name)
   (common-lisp:declare
    (common-lisp:ignorable control-panel-arn control-panel-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-control-panel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-control-config-request
        aws-sdk/generator/operation::input "PUT" "/controlpanel"
        "UpdateControlPanel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-control-panel))
(common-lisp:progn
 (common-lisp:defun update-routing-control
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key routing-control-arn routing-control-name)
   (common-lisp:declare
    (common-lisp:ignorable routing-control-arn routing-control-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-routing-control-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-control-config-request
        aws-sdk/generator/operation::input "PUT" "/routingcontrol"
        "UpdateRoutingControl"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-routing-control))
(common-lisp:progn
 (common-lisp:defun update-safety-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key assertion-rule-update gating-rule-update)
   (common-lisp:declare
    (common-lisp:ignorable assertion-rule-update gating-rule-update))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-safety-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-control-config-request
        aws-sdk/generator/operation::input "PUT" "/safetyrule"
        "UpdateSafetyRule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-safety-rule))
