;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/sns/api
  (:use)
  (:nicknames #:aws/sns)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/json-request)
  (:import-from #:aws-sdk/rest-json-request)
  (:import-from #:aws-sdk/rest-xml-request)
  (:import-from #:aws-sdk/query-request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/sns/api)
(common-lisp:progn
 (common-lisp:define-condition sns-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'sns-error))
(common-lisp:progn
 (common-lisp:defclass sns-request (aws-sdk/query-request:query-request)
                       common-lisp:nil
                       (:default-initargs :service "sns" :api-version
                        "2010-03-31" :host-prefix "sns" :signing-name
                        common-lisp:nil :global-host common-lisp:nil))
 (common-lisp:export 'sns-request))
(common-lisp:defvar *error-map*
  '(("AuthorizationErrorException" . authorization-error-exception)
    ("BatchEntryIdsNotDistinctException"
     . batch-entry-ids-not-distinct-exception)
    ("BatchRequestTooLongException" . batch-request-too-long-exception)
    ("ConcurrentAccessException" . concurrent-access-exception)
    ("EmptyBatchRequestException" . empty-batch-request-exception)
    ("EndpointDisabledException" . endpoint-disabled-exception)
    ("FilterPolicyLimitExceededException"
     . filter-policy-limit-exceeded-exception)
    ("InternalErrorException" . internal-error-exception)
    ("InvalidBatchEntryIdException" . invalid-batch-entry-id-exception)
    ("InvalidParameterException" . invalid-parameter-exception)
    ("InvalidParameterValueException" . invalid-parameter-value-exception)
    ("InvalidSecurityException" . invalid-security-exception)
    ("InvalidStateException" . invalid-state-exception)
    ("KMSAccessDeniedException" . kmsaccess-denied-exception)
    ("KMSDisabledException" . kmsdisabled-exception)
    ("KMSInvalidStateException" . kmsinvalid-state-exception)
    ("KMSNotFoundException" . kmsnot-found-exception)
    ("KMSOptInRequired" . kmsopt-in-required)
    ("KMSThrottlingException" . kmsthrottling-exception)
    ("NotFoundException" . not-found-exception)
    ("OptedOutException" . opted-out-exception)
    ("PlatformApplicationDisabledException"
     . platform-application-disabled-exception)
    ("ReplayLimitExceededException" . replay-limit-exceeded-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("StaleTagException" . stale-tag-exception)
    ("SubscriptionLimitExceededException"
     . subscription-limit-exceeded-exception)
    ("TagLimitExceededException" . tag-limit-exceeded-exception)
    ("TagPolicyException" . tag-policy-exception)
    ("ThrottledException" . throttled-exception)
    ("TooManyEntriesInBatchRequestException"
     . too-many-entries-in-batch-request-exception)
    ("TopicLimitExceededException" . topic-limit-exceeded-exception)
    ("UserErrorException" . user-error-exception)
    ("ValidationException" . validation-exception)
    ("VerificationException" . verification-exception)))
(common-lisp:progn
 (common-lisp:deftype actions-list () '(trivial-types:proper-list |action|))
 (common-lisp:defun make-actions-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |action|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass add-permission-input common-lisp:nil
                       ((topic-arn :initarg :topic-arn :initform
                         (common-lisp:error ":topic-arn is required") :type
                         (common-lisp:or |topicARN| common-lisp:null) :accessor
                         struct-shape-add-permission-input-topic-arn :shape
                         "topicARN" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (label :initarg :label :initform
                         (common-lisp:error ":label is required") :type
                         (common-lisp:or |label| common-lisp:null) :accessor
                         struct-shape-add-permission-input-label :shape "label"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (awsaccount-id :initarg :awsaccount-id :initform
                         (common-lisp:error ":awsaccount-id is required") :type
                         (common-lisp:or delegates-list common-lisp:null)
                         :accessor
                         struct-shape-add-permission-input-awsaccount-id :shape
                         "DelegatesList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (action-name :initarg :action-name :initform
                         (common-lisp:error ":action-name is required") :type
                         (common-lisp:or actions-list common-lisp:null)
                         :accessor
                         struct-shape-add-permission-input-action-name :shape
                         "ActionsList" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-add-permission-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'add-permission-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'add-permission-input 'make-add-permission-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input add-permission-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input add-permission-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-arn))
      (common-lisp:list
       (common-lisp:cons "TopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'label))
      (common-lisp:list
       (common-lisp:cons "Label"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'awsaccount-id))
      (common-lisp:list
       (common-lisp:cons "AWSAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action-name))
      (common-lisp:list
       (common-lisp:cons "ActionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input add-permission-input))
   common-lisp:nil))
(common-lisp:deftype amazon-resource-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition authorization-error-exception
     (sns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       authorization-error-exception-message)))
 (common-lisp:export
  (common-lisp:list 'authorization-error-exception
                    'authorization-error-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition batch-entry-ids-not-distinct-exception
     (sns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       batch-entry-ids-not-distinct-exception-message)))
 (common-lisp:export
  (common-lisp:list 'batch-entry-ids-not-distinct-exception
                    'batch-entry-ids-not-distinct-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition batch-request-too-long-exception
     (sns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       batch-request-too-long-exception-message)))
 (common-lisp:export
  (common-lisp:list 'batch-request-too-long-exception
                    'batch-request-too-long-exception-message)))
(common-lisp:progn
 (common-lisp:defclass batch-result-error-entry common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-batch-result-error-entry-id :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (code :initarg :code :initform
                         (common-lisp:error ":code is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-batch-result-error-entry-code :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (message :initarg :message :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-batch-result-error-entry-message :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (sender-fault :initarg :sender-fault :initform
                         (common-lisp:error ":sender-fault is required") :type
                         (common-lisp:or common-lisp:boolean common-lisp:null)
                         :accessor
                         struct-shape-batch-result-error-entry-sender-fault
                         :shape "boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-result-error-entry
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'batch-result-error-entry
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-result-error-entry 'make-batch-result-error-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-result-error-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-result-error-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'code))
      (common-lisp:list
       (common-lisp:cons "Code"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sender-fault))
      (common-lisp:list
       (common-lisp:cons "SenderFault"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-result-error-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype batch-result-error-entry-list ()
   '(trivial-types:proper-list batch-result-error-entry))
 (common-lisp:defun make-batch-result-error-entry-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            batch-result-error-entry))
   aws-sdk/generator/shape::members))
(common-lisp:deftype binary ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:progn
 (common-lisp:defclass check-if-phone-number-is-opted-out-input common-lisp:nil
                       ((phone-number :initarg :phone-number :initform
                         (common-lisp:error ":phonenumber is required") :type
                         (common-lisp:or phone-number common-lisp:null)
                         :accessor
                         struct-shape-check-if-phone-number-is-opted-out-input-phone-number
                         :shape "PhoneNumber" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-check-if-phone-number-is-opted-out-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'check-if-phone-number-is-opted-out-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'check-if-phone-number-is-opted-out-input
                    'make-check-if-phone-number-is-opted-out-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          check-if-phone-number-is-opted-out-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          check-if-phone-number-is-opted-out-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number))
      (common-lisp:list
       (common-lisp:cons "phoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          check-if-phone-number-is-opted-out-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass check-if-phone-number-is-opted-out-response
                       common-lisp:nil
                       ((is-opted-out :initarg :is-opted-out :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:boolean common-lisp:null)
                         :accessor
                         struct-shape-check-if-phone-number-is-opted-out-response-is-opted-out
                         :shape "boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-check-if-phone-number-is-opted-out-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'check-if-phone-number-is-opted-out-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'check-if-phone-number-is-opted-out-response
                    'make-check-if-phone-number-is-opted-out-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          check-if-phone-number-is-opted-out-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          check-if-phone-number-is-opted-out-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-opted-out))
      (common-lisp:list
       (common-lisp:cons "isOptedOut"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          check-if-phone-number-is-opted-out-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition concurrent-access-exception
     (sns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       concurrent-access-exception-message)))
 (common-lisp:export
  (common-lisp:list 'concurrent-access-exception
                    'concurrent-access-exception-message)))
(common-lisp:progn
 (common-lisp:defclass confirm-subscription-input common-lisp:nil
                       ((topic-arn :initarg :topic-arn :initform
                         (common-lisp:error ":topic-arn is required") :type
                         (common-lisp:or |topicARN| common-lisp:null) :accessor
                         struct-shape-confirm-subscription-input-topic-arn
                         :shape "topicARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (token :initarg :token :initform
                         (common-lisp:error ":token is required") :type
                         (common-lisp:or |token| common-lisp:null) :accessor
                         struct-shape-confirm-subscription-input-token :shape
                         "token" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (authenticate-on-unsubscribe :initarg
                         :authenticate-on-unsubscribe :initform common-lisp:nil
                         :type
                         (common-lisp:or |authenticateOnUnsubscribe|
                                         common-lisp:null)
                         :accessor
                         struct-shape-confirm-subscription-input-authenticate-on-unsubscribe
                         :shape "authenticateOnUnsubscribe" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-confirm-subscription-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'confirm-subscription-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'confirm-subscription-input
                    'make-confirm-subscription-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          confirm-subscription-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          confirm-subscription-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-arn))
      (common-lisp:list
       (common-lisp:cons "TopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'token))
      (common-lisp:list
       (common-lisp:cons "Token"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authenticate-on-unsubscribe))
      (common-lisp:list
       (common-lisp:cons "AuthenticateOnUnsubscribe"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          confirm-subscription-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass confirm-subscription-response common-lisp:nil
                       ((subscription-arn :initarg :subscription-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |subscriptionARN| common-lisp:null)
                         :accessor
                         struct-shape-confirm-subscription-response-subscription-arn
                         :shape "subscriptionARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-confirm-subscription-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'confirm-subscription-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'confirm-subscription-response
                    'make-confirm-subscription-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          confirm-subscription-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          confirm-subscription-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscription-arn))
      (common-lisp:list
       (common-lisp:cons "SubscriptionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          confirm-subscription-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-endpoint-response common-lisp:nil
                       ((endpoint-arn :initarg :endpoint-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-endpoint-response-endpoint-arn
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-endpoint-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-endpoint-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-endpoint-response 'make-create-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-arn))
      (common-lisp:list
       (common-lisp:cons "EndpointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-platform-application-input common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-platform-application-input-name
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (platform :initarg :platform :initform
                         (common-lisp:error ":platform is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-platform-application-input-platform
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (attributes :initarg :attributes :initform
                         (common-lisp:error ":attributes is required") :type
                         (common-lisp:or map-string-to-string common-lisp:null)
                         :accessor
                         struct-shape-create-platform-application-input-attributes
                         :shape "MapStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-platform-application-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-platform-application-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-platform-application-input
                    'make-create-platform-application-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-platform-application-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-platform-application-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platform))
      (common-lisp:list
       (common-lisp:cons "Platform"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-platform-application-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-platform-application-response common-lisp:nil
                       ((platform-application-arn :initarg
                         :platform-application-arn :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-create-platform-application-response-platform-application-arn
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-platform-application-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-platform-application-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-platform-application-response
                    'make-create-platform-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-platform-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-platform-application-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'platform-application-arn))
      (common-lisp:list
       (common-lisp:cons "PlatformApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-platform-application-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-platform-endpoint-input common-lisp:nil
                       ((platform-application-arn :initarg
                         :platform-application-arn :initform
                         (common-lisp:error
                          ":platform-application-arn is required")
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-create-platform-endpoint-input-platform-application-arn
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (token :initarg :token :initform
                         (common-lisp:error ":token is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-platform-endpoint-input-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (custom-user-data :initarg :custom-user-data :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-platform-endpoint-input-custom-user-data
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (attributes :initarg :attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or map-string-to-string common-lisp:null)
                         :accessor
                         struct-shape-create-platform-endpoint-input-attributes
                         :shape "MapStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-platform-endpoint-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-platform-endpoint-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-platform-endpoint-input
                    'make-create-platform-endpoint-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-platform-endpoint-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-platform-endpoint-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'platform-application-arn))
      (common-lisp:list
       (common-lisp:cons "PlatformApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'token))
      (common-lisp:list
       (common-lisp:cons "Token"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'custom-user-data))
      (common-lisp:list
       (common-lisp:cons "CustomUserData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-platform-endpoint-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-smssandbox-phone-number-input common-lisp:nil
                       ((phone-number :initarg :phone-number :initform
                         (common-lisp:error ":phone-number is required") :type
                         (common-lisp:or phone-number-string common-lisp:null)
                         :accessor
                         struct-shape-create-smssandbox-phone-number-input-phone-number
                         :shape "PhoneNumberString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (language-code :initarg :language-code :initform
                         common-lisp:nil :type
                         (common-lisp:or language-code-string common-lisp:null)
                         :accessor
                         struct-shape-create-smssandbox-phone-number-input-language-code
                         :shape "LanguageCodeString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-smssandbox-phone-number-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-smssandbox-phone-number-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-smssandbox-phone-number-input
                    'make-create-smssandbox-phone-number-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-smssandbox-phone-number-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-smssandbox-phone-number-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number))
      (common-lisp:list
       (common-lisp:cons "PhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-smssandbox-phone-number-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-smssandbox-phone-number-result common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-smssandbox-phone-number-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-smssandbox-phone-number-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-smssandbox-phone-number-result
                    'make-create-smssandbox-phone-number-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-smssandbox-phone-number-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-smssandbox-phone-number-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-smssandbox-phone-number-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-topic-input common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or |topicName| common-lisp:null)
                         :accessor struct-shape-create-topic-input-name :shape
                         "topicName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (attributes :initarg :attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or topic-attributes-map common-lisp:null)
                         :accessor struct-shape-create-topic-input-attributes
                         :shape "TopicAttributesMap" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-create-topic-input-tags :shape "TagList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (data-protection-policy :initarg
                         :data-protection-policy :initform common-lisp:nil
                         :type
                         (common-lisp:or |attributeValue| common-lisp:null)
                         :accessor
                         struct-shape-create-topic-input-data-protection-policy
                         :shape "attributeValue" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-topic-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-topic-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-topic-input 'make-create-topic-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-topic-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-topic-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-protection-policy))
      (common-lisp:list
       (common-lisp:cons "DataProtectionPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-topic-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-topic-response common-lisp:nil
                       ((topic-arn :initarg :topic-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |topicARN| common-lisp:null) :accessor
                         struct-shape-create-topic-response-topic-arn :shape
                         "topicARN" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-topic-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-topic-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-topic-response 'make-create-topic-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-topic-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-topic-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-arn))
      (common-lisp:list
       (common-lisp:cons "TopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-topic-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype delegates-list ()
   '(trivial-types:proper-list |delegate|))
 (common-lisp:defun make-delegates-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |delegate|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass delete-endpoint-input common-lisp:nil
                       ((endpoint-arn :initarg :endpoint-arn :initform
                         (common-lisp:error ":endpoint-arn is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-endpoint-input-endpoint-arn :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-endpoint-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-endpoint-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-endpoint-input 'make-delete-endpoint-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-endpoint-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-endpoint-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-arn))
      (common-lisp:list
       (common-lisp:cons "EndpointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-endpoint-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-platform-application-input common-lisp:nil
                       ((platform-application-arn :initarg
                         :platform-application-arn :initform
                         (common-lisp:error
                          ":platform-application-arn is required")
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-delete-platform-application-input-platform-application-arn
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-platform-application-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-platform-application-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-platform-application-input
                    'make-delete-platform-application-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-platform-application-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-platform-application-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'platform-application-arn))
      (common-lisp:list
       (common-lisp:cons "PlatformApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-platform-application-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-smssandbox-phone-number-input common-lisp:nil
                       ((phone-number :initarg :phone-number :initform
                         (common-lisp:error ":phone-number is required") :type
                         (common-lisp:or phone-number-string common-lisp:null)
                         :accessor
                         struct-shape-delete-smssandbox-phone-number-input-phone-number
                         :shape "PhoneNumberString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-smssandbox-phone-number-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-smssandbox-phone-number-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-smssandbox-phone-number-input
                    'make-delete-smssandbox-phone-number-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-smssandbox-phone-number-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-smssandbox-phone-number-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number))
      (common-lisp:list
       (common-lisp:cons "PhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-smssandbox-phone-number-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-smssandbox-phone-number-result common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-smssandbox-phone-number-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-smssandbox-phone-number-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-smssandbox-phone-number-result
                    'make-delete-smssandbox-phone-number-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-smssandbox-phone-number-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-smssandbox-phone-number-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-smssandbox-phone-number-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-topic-input common-lisp:nil
                       ((topic-arn :initarg :topic-arn :initform
                         (common-lisp:error ":topic-arn is required") :type
                         (common-lisp:or |topicARN| common-lisp:null) :accessor
                         struct-shape-delete-topic-input-topic-arn :shape
                         "topicARN" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-topic-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-topic-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-topic-input 'make-delete-topic-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-topic-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-topic-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-arn))
      (common-lisp:list
       (common-lisp:cons "TopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-topic-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition empty-batch-request-exception
     (sns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       empty-batch-request-exception-message)))
 (common-lisp:export
  (common-lisp:list 'empty-batch-request-exception
                    'empty-batch-request-exception-message)))
(common-lisp:progn
 (common-lisp:defclass endpoint common-lisp:nil
                       ((endpoint-arn :initarg :endpoint-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-endpoint-endpoint-arn :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (attributes :initarg :attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or map-string-to-string common-lisp:null)
                         :accessor struct-shape-endpoint-attributes :shape
                         "MapStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-endpoint
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'endpoint
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'endpoint 'make-endpoint))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input endpoint))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input endpoint))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-arn))
      (common-lisp:list
       (common-lisp:cons "EndpointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input endpoint))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition endpoint-disabled-exception
     (sns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       endpoint-disabled-exception-message)))
 (common-lisp:export
  (common-lisp:list 'endpoint-disabled-exception
                    'endpoint-disabled-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition filter-policy-limit-exceeded-exception
     (sns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       filter-policy-limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'filter-policy-limit-exceeded-exception
                    'filter-policy-limit-exceeded-exception-message)))
(common-lisp:progn
 (common-lisp:defclass get-data-protection-policy-input common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or |topicARN| common-lisp:null) :accessor
                         struct-shape-get-data-protection-policy-input-resource-arn
                         :shape "topicARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-data-protection-policy-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-data-protection-policy-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-data-protection-policy-input
                    'make-get-data-protection-policy-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-data-protection-policy-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-data-protection-policy-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-data-protection-policy-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-data-protection-policy-response common-lisp:nil
                       ((data-protection-policy :initarg
                         :data-protection-policy :initform common-lisp:nil
                         :type
                         (common-lisp:or |attributeValue| common-lisp:null)
                         :accessor
                         struct-shape-get-data-protection-policy-response-data-protection-policy
                         :shape "attributeValue" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-data-protection-policy-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-data-protection-policy-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-data-protection-policy-response
                    'make-get-data-protection-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-data-protection-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-data-protection-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-protection-policy))
      (common-lisp:list
       (common-lisp:cons "DataProtectionPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-data-protection-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-endpoint-attributes-input common-lisp:nil
                       ((endpoint-arn :initarg :endpoint-arn :initform
                         (common-lisp:error ":endpoint-arn is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-endpoint-attributes-input-endpoint-arn
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-endpoint-attributes-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-endpoint-attributes-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-endpoint-attributes-input
                    'make-get-endpoint-attributes-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-endpoint-attributes-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-endpoint-attributes-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-arn))
      (common-lisp:list
       (common-lisp:cons "EndpointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-endpoint-attributes-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-endpoint-attributes-response common-lisp:nil
                       ((attributes :initarg :attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or map-string-to-string common-lisp:null)
                         :accessor
                         struct-shape-get-endpoint-attributes-response-attributes
                         :shape "MapStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-endpoint-attributes-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-endpoint-attributes-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-endpoint-attributes-response
                    'make-get-endpoint-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-endpoint-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-endpoint-attributes-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-endpoint-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-platform-application-attributes-input
                       common-lisp:nil
                       ((platform-application-arn :initarg
                         :platform-application-arn :initform
                         (common-lisp:error
                          ":platform-application-arn is required")
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-get-platform-application-attributes-input-platform-application-arn
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-platform-application-attributes-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-platform-application-attributes-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-platform-application-attributes-input
                    'make-get-platform-application-attributes-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-platform-application-attributes-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-platform-application-attributes-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'platform-application-arn))
      (common-lisp:list
       (common-lisp:cons "PlatformApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-platform-application-attributes-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-platform-application-attributes-response
                       common-lisp:nil
                       ((attributes :initarg :attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or map-string-to-string common-lisp:null)
                         :accessor
                         struct-shape-get-platform-application-attributes-response-attributes
                         :shape "MapStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-platform-application-attributes-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-platform-application-attributes-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-platform-application-attributes-response
                    'make-get-platform-application-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-platform-application-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-platform-application-attributes-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-platform-application-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-smsattributes-input common-lisp:nil
                       ((attributes :initarg :attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or list-string common-lisp:null)
                         :accessor
                         struct-shape-get-smsattributes-input-attributes :shape
                         "ListString" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-smsattributes-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-smsattributes-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-smsattributes-input 'make-get-smsattributes-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-smsattributes-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-smsattributes-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-smsattributes-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-smsattributes-response common-lisp:nil
                       ((attributes :initarg :attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or map-string-to-string common-lisp:null)
                         :accessor
                         struct-shape-get-smsattributes-response-attributes
                         :shape "MapStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-smsattributes-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-smsattributes-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-smsattributes-response
                    'make-get-smsattributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-smsattributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-smsattributes-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-smsattributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-smssandbox-account-status-input common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-smssandbox-account-status-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-smssandbox-account-status-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-smssandbox-account-status-input
                    'make-get-smssandbox-account-status-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-smssandbox-account-status-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-smssandbox-account-status-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-smssandbox-account-status-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-smssandbox-account-status-result common-lisp:nil
                       ((is-in-sandbox :initarg :is-in-sandbox :initform
                         (common-lisp:error ":is-in-sandbox is required") :type
                         (common-lisp:or common-lisp:boolean common-lisp:null)
                         :accessor
                         struct-shape-get-smssandbox-account-status-result-is-in-sandbox
                         :shape "boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-smssandbox-account-status-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-smssandbox-account-status-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-smssandbox-account-status-result
                    'make-get-smssandbox-account-status-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-smssandbox-account-status-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-smssandbox-account-status-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-in-sandbox))
      (common-lisp:list
       (common-lisp:cons "IsInSandbox"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-smssandbox-account-status-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-subscription-attributes-input common-lisp:nil
                       ((subscription-arn :initarg :subscription-arn :initform
                         (common-lisp:error ":subscription-arn is required")
                         :type
                         (common-lisp:or |subscriptionARN| common-lisp:null)
                         :accessor
                         struct-shape-get-subscription-attributes-input-subscription-arn
                         :shape "subscriptionARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-subscription-attributes-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-subscription-attributes-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-subscription-attributes-input
                    'make-get-subscription-attributes-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-subscription-attributes-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-subscription-attributes-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscription-arn))
      (common-lisp:list
       (common-lisp:cons "SubscriptionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-subscription-attributes-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-subscription-attributes-response common-lisp:nil
                       ((attributes :initarg :attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or subscription-attributes-map
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-subscription-attributes-response-attributes
                         :shape "SubscriptionAttributesMap" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-subscription-attributes-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-subscription-attributes-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-subscription-attributes-response
                    'make-get-subscription-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-subscription-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-subscription-attributes-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-subscription-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-topic-attributes-input common-lisp:nil
                       ((topic-arn :initarg :topic-arn :initform
                         (common-lisp:error ":topic-arn is required") :type
                         (common-lisp:or |topicARN| common-lisp:null) :accessor
                         struct-shape-get-topic-attributes-input-topic-arn
                         :shape "topicARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-topic-attributes-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-topic-attributes-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-topic-attributes-input
                    'make-get-topic-attributes-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-topic-attributes-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-topic-attributes-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-arn))
      (common-lisp:list
       (common-lisp:cons "TopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-topic-attributes-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-topic-attributes-response common-lisp:nil
                       ((attributes :initarg :attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or topic-attributes-map common-lisp:null)
                         :accessor
                         struct-shape-get-topic-attributes-response-attributes
                         :shape "TopicAttributesMap" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-topic-attributes-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-topic-attributes-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-topic-attributes-response
                    'make-get-topic-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-topic-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-topic-attributes-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-topic-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition internal-error-exception
     (sns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-error-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-error-exception
                    'internal-error-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-batch-entry-id-exception
     (sns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-batch-entry-id-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-batch-entry-id-exception
                    'invalid-batch-entry-id-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-parameter-exception
     (sns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-parameter-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-exception
                    'invalid-parameter-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-parameter-value-exception
     (sns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-parameter-value-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-value-exception
                    'invalid-parameter-value-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-security-exception
     (sns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-security-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-security-exception
                    'invalid-security-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-state-exception
     (sns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-state-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-state-exception 'invalid-state-exception-message)))
(common-lisp:deftype iso2country-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition kmsaccess-denied-exception
     (sns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       kmsaccess-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'kmsaccess-denied-exception
                    'kmsaccess-denied-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition kmsdisabled-exception
     (sns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       kmsdisabled-exception-message)))
 (common-lisp:export
  (common-lisp:list 'kmsdisabled-exception 'kmsdisabled-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition kmsinvalid-state-exception
     (sns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       kmsinvalid-state-exception-message)))
 (common-lisp:export
  (common-lisp:list 'kmsinvalid-state-exception
                    'kmsinvalid-state-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition kmsnot-found-exception
     (sns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       kmsnot-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'kmsnot-found-exception 'kmsnot-found-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition kmsopt-in-required
     (sns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       kmsopt-in-required-message)))
 (common-lisp:export
  (common-lisp:list 'kmsopt-in-required 'kmsopt-in-required-message)))
(common-lisp:progn
 (common-lisp:define-condition kmsthrottling-exception
     (sns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       kmsthrottling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'kmsthrottling-exception 'kmsthrottling-exception-message)))
(common-lisp:deftype language-code-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass list-endpoints-by-platform-application-input
                       common-lisp:nil
                       ((platform-application-arn :initarg
                         :platform-application-arn :initform
                         (common-lisp:error
                          ":platform-application-arn is required")
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-list-endpoints-by-platform-application-input-platform-application-arn
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-endpoints-by-platform-application-input-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-endpoints-by-platform-application-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-endpoints-by-platform-application-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-endpoints-by-platform-application-input
                    'make-list-endpoints-by-platform-application-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-endpoints-by-platform-application-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-endpoints-by-platform-application-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'platform-application-arn))
      (common-lisp:list
       (common-lisp:cons "PlatformApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-endpoints-by-platform-application-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-endpoints-by-platform-application-response
                       common-lisp:nil
                       ((endpoints :initarg :endpoints :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-endpoints common-lisp:null)
                         :accessor
                         struct-shape-list-endpoints-by-platform-application-response-endpoints
                         :shape "ListOfEndpoints" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-endpoints-by-platform-application-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-endpoints-by-platform-application-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-endpoints-by-platform-application-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-endpoints-by-platform-application-response
                    'make-list-endpoints-by-platform-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-endpoints-by-platform-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-endpoints-by-platform-application-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoints))
      (common-lisp:list
       (common-lisp:cons "Endpoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-endpoints-by-platform-application-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype list-of-endpoints ()
   '(trivial-types:proper-list endpoint))
 (common-lisp:defun make-list-of-endpoints
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list endpoint))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-platform-applications ()
   '(trivial-types:proper-list platform-application))
 (common-lisp:defun make-list-of-platform-applications
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list platform-application))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass list-origination-numbers-request common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |nextToken| common-lisp:null)
                         :accessor
                         struct-shape-list-origination-numbers-request-next-token
                         :shape "nextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-items-list-origination-numbers
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-origination-numbers-request-max-results
                         :shape "MaxItemsListOriginationNumbers" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-origination-numbers-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-origination-numbers-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-origination-numbers-request
                    'make-list-origination-numbers-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-origination-numbers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-origination-numbers-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-origination-numbers-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-origination-numbers-result common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |nextToken| common-lisp:null)
                         :accessor
                         struct-shape-list-origination-numbers-result-next-token
                         :shape "nextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (phone-numbers :initarg :phone-numbers :initform
                         common-lisp:nil :type
                         (common-lisp:or phone-number-information-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-origination-numbers-result-phone-numbers
                         :shape "PhoneNumberInformationList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-origination-numbers-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-origination-numbers-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-origination-numbers-result
                    'make-list-origination-numbers-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-origination-numbers-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-origination-numbers-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-numbers))
      (common-lisp:list
       (common-lisp:cons "PhoneNumbers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-origination-numbers-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-phone-numbers-opted-out-input common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor
                         struct-shape-list-phone-numbers-opted-out-input-next-token
                         :shape "string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-phone-numbers-opted-out-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-phone-numbers-opted-out-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-phone-numbers-opted-out-input
                    'make-list-phone-numbers-opted-out-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-numbers-opted-out-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-numbers-opted-out-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-numbers-opted-out-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-phone-numbers-opted-out-response common-lisp:nil
                       ((phone-numbers :initarg :phone-numbers :initform
                         common-lisp:nil :type
                         (common-lisp:or phone-number-list common-lisp:null)
                         :accessor
                         struct-shape-list-phone-numbers-opted-out-response-phone-numbers
                         :shape "PhoneNumberList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor
                         struct-shape-list-phone-numbers-opted-out-response-next-token
                         :shape "string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-phone-numbers-opted-out-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-phone-numbers-opted-out-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-phone-numbers-opted-out-response
                    'make-list-phone-numbers-opted-out-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-numbers-opted-out-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-numbers-opted-out-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-numbers))
      (common-lisp:list
       (common-lisp:cons "phoneNumbers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-numbers-opted-out-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-platform-applications-input common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-platform-applications-input-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-platform-applications-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-platform-applications-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-platform-applications-input
                    'make-list-platform-applications-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-platform-applications-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-platform-applications-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-platform-applications-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-platform-applications-response common-lisp:nil
                       ((platform-applications :initarg :platform-applications
                         :initform common-lisp:nil :type
                         (common-lisp:or list-of-platform-applications
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-platform-applications-response-platform-applications
                         :shape "ListOfPlatformApplications" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-platform-applications-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-platform-applications-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-platform-applications-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-platform-applications-response
                    'make-list-platform-applications-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-platform-applications-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-platform-applications-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'platform-applications))
      (common-lisp:list
       (common-lisp:cons "PlatformApplications"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-platform-applications-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-smssandbox-phone-numbers-input common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |nextToken| common-lisp:null)
                         :accessor
                         struct-shape-list-smssandbox-phone-numbers-input-next-token
                         :shape "nextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-items common-lisp:null) :accessor
                         struct-shape-list-smssandbox-phone-numbers-input-max-results
                         :shape "MaxItems" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-smssandbox-phone-numbers-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-smssandbox-phone-numbers-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-smssandbox-phone-numbers-input
                    'make-list-smssandbox-phone-numbers-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-smssandbox-phone-numbers-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-smssandbox-phone-numbers-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-smssandbox-phone-numbers-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-smssandbox-phone-numbers-result common-lisp:nil
                       ((phone-numbers :initarg :phone-numbers :initform
                         (common-lisp:error ":phone-numbers is required") :type
                         (common-lisp:or smssandbox-phone-number-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-smssandbox-phone-numbers-result-phone-numbers
                         :shape "SMSSandboxPhoneNumberList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor
                         struct-shape-list-smssandbox-phone-numbers-result-next-token
                         :shape "string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-smssandbox-phone-numbers-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-smssandbox-phone-numbers-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-smssandbox-phone-numbers-result
                    'make-list-smssandbox-phone-numbers-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-smssandbox-phone-numbers-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-smssandbox-phone-numbers-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-numbers))
      (common-lisp:list
       (common-lisp:cons "PhoneNumbers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-smssandbox-phone-numbers-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype list-string () '(trivial-types:proper-list string))
 (common-lisp:defun make-list-string
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass list-subscriptions-by-topic-input common-lisp:nil
                       ((topic-arn :initarg :topic-arn :initform
                         (common-lisp:error ":topic-arn is required") :type
                         (common-lisp:or |topicARN| common-lisp:null) :accessor
                         struct-shape-list-subscriptions-by-topic-input-topic-arn
                         :shape "topicARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |nextToken| common-lisp:null)
                         :accessor
                         struct-shape-list-subscriptions-by-topic-input-next-token
                         :shape "nextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-subscriptions-by-topic-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-subscriptions-by-topic-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-subscriptions-by-topic-input
                    'make-list-subscriptions-by-topic-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-subscriptions-by-topic-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-subscriptions-by-topic-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-arn))
      (common-lisp:list
       (common-lisp:cons "TopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-subscriptions-by-topic-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-subscriptions-by-topic-response common-lisp:nil
                       ((subscriptions :initarg :subscriptions :initform
                         common-lisp:nil :type
                         (common-lisp:or subscriptions-list common-lisp:null)
                         :accessor
                         struct-shape-list-subscriptions-by-topic-response-subscriptions
                         :shape "SubscriptionsList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |nextToken| common-lisp:null)
                         :accessor
                         struct-shape-list-subscriptions-by-topic-response-next-token
                         :shape "nextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-subscriptions-by-topic-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-subscriptions-by-topic-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-subscriptions-by-topic-response
                    'make-list-subscriptions-by-topic-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-subscriptions-by-topic-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-subscriptions-by-topic-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscriptions))
      (common-lisp:list
       (common-lisp:cons "Subscriptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-subscriptions-by-topic-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-subscriptions-input common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |nextToken| common-lisp:null)
                         :accessor
                         struct-shape-list-subscriptions-input-next-token
                         :shape "nextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-subscriptions-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-subscriptions-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-subscriptions-input 'make-list-subscriptions-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-subscriptions-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-subscriptions-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-subscriptions-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-subscriptions-response common-lisp:nil
                       ((subscriptions :initarg :subscriptions :initform
                         common-lisp:nil :type
                         (common-lisp:or subscriptions-list common-lisp:null)
                         :accessor
                         struct-shape-list-subscriptions-response-subscriptions
                         :shape "SubscriptionsList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |nextToken| common-lisp:null)
                         :accessor
                         struct-shape-list-subscriptions-response-next-token
                         :shape "nextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-subscriptions-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-subscriptions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-subscriptions-response
                    'make-list-subscriptions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-subscriptions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-subscriptions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscriptions))
      (common-lisp:list
       (common-lisp:cons "Subscriptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-subscriptions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-list-tags-for-resource-request-resource-arn
                         :shape "AmazonResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-response-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-topics-input common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |nextToken| common-lisp:null)
                         :accessor struct-shape-list-topics-input-next-token
                         :shape "nextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-topics-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-topics-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-topics-input 'make-list-topics-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-topics-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-topics-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-topics-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-topics-response common-lisp:nil
                       ((topics :initarg :topics :initform common-lisp:nil
                         :type (common-lisp:or topics-list common-lisp:null)
                         :accessor struct-shape-list-topics-response-topics
                         :shape "TopicsList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |nextToken| common-lisp:null)
                         :accessor struct-shape-list-topics-response-next-token
                         :shape "nextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-topics-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-topics-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-topics-response 'make-list-topics-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-topics-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-topics-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topics))
      (common-lisp:list
       (common-lisp:cons "Topics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-topics-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype map-string-to-string () 'common-lisp:hash-table)
 (common-lisp:defun make-map-string-to-string
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype max-items () 'common-lisp:integer)
(common-lisp:deftype max-items-list-origination-numbers () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype message-attribute-map () 'common-lisp:hash-table)
 (common-lisp:defun make-message-attribute-map
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass message-attribute-value common-lisp:nil
                       ((data-type :initarg :data-type :initform
                         (common-lisp:error ":data-type is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-message-attribute-value-data-type :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (string-value :initarg :string-value :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-message-attribute-value-string-value
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (binary-value :initarg :binary-value :initform
                         common-lisp:nil :type
                         (common-lisp:or binary common-lisp:null) :accessor
                         struct-shape-message-attribute-value-binary-value
                         :shape "Binary" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-message-attribute-value
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'message-attribute-value
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'message-attribute-value 'make-message-attribute-value))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          message-attribute-value))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          message-attribute-value))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-type))
      (common-lisp:list
       (common-lisp:cons "DataType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'string-value))
      (common-lisp:list
       (common-lisp:cons "StringValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'binary-value))
      (common-lisp:list
       (common-lisp:cons "BinaryValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          message-attribute-value))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition not-found-exception
     (sns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'not-found-exception 'not-found-exception-message)))
(common-lisp:deftype number-capability () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype number-capability-list ()
   '(trivial-types:proper-list number-capability))
 (common-lisp:defun make-number-capability-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list number-capability))
   aws-sdk/generator/shape::members))
(common-lisp:deftype otpcode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass opt-in-phone-number-input common-lisp:nil
                       ((phone-number :initarg :phone-number :initform
                         (common-lisp:error ":phonenumber is required") :type
                         (common-lisp:or phone-number common-lisp:null)
                         :accessor
                         struct-shape-opt-in-phone-number-input-phone-number
                         :shape "PhoneNumber" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-opt-in-phone-number-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'opt-in-phone-number-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'opt-in-phone-number-input
                    'make-opt-in-phone-number-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          opt-in-phone-number-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          opt-in-phone-number-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number))
      (common-lisp:list
       (common-lisp:cons "phoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          opt-in-phone-number-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass opt-in-phone-number-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-opt-in-phone-number-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'opt-in-phone-number-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'opt-in-phone-number-response
                    'make-opt-in-phone-number-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          opt-in-phone-number-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          opt-in-phone-number-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          opt-in-phone-number-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition opted-out-exception
     (sns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       opted-out-exception-message)))
 (common-lisp:export
  (common-lisp:list 'opted-out-exception 'opted-out-exception-message)))
(common-lisp:deftype phone-number () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass phone-number-information common-lisp:nil
                       ((created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-phone-number-information-created-at
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (phone-number :initarg :phone-number :initform
                         common-lisp:nil :type
                         (common-lisp:or phone-number common-lisp:null)
                         :accessor
                         struct-shape-phone-number-information-phone-number
                         :shape "PhoneNumber" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-phone-number-information-status
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (iso2country-code :initarg :iso2country-code :initform
                         common-lisp:nil :type
                         (common-lisp:or iso2country-code common-lisp:null)
                         :accessor
                         struct-shape-phone-number-information-iso2country-code
                         :shape "Iso2CountryCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (route-type :initarg :route-type :initform
                         common-lisp:nil :type
                         (common-lisp:or route-type common-lisp:null) :accessor
                         struct-shape-phone-number-information-route-type
                         :shape "RouteType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (number-capabilities :initarg :number-capabilities
                         :initform common-lisp:nil :type
                         (common-lisp:or number-capability-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-phone-number-information-number-capabilities
                         :shape "NumberCapabilityList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-phone-number-information
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'phone-number-information
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'phone-number-information 'make-phone-number-information))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          phone-number-information))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          phone-number-information))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number))
      (common-lisp:list
       (common-lisp:cons "PhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iso2country-code))
      (common-lisp:list
       (common-lisp:cons "Iso2CountryCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-type))
      (common-lisp:list
       (common-lisp:cons "RouteType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'number-capabilities))
      (common-lisp:list
       (common-lisp:cons "NumberCapabilities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          phone-number-information))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype phone-number-information-list ()
   '(trivial-types:proper-list phone-number-information))
 (common-lisp:defun make-phone-number-information-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            phone-number-information))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype phone-number-list ()
   '(trivial-types:proper-list phone-number))
 (common-lisp:defun make-phone-number-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list phone-number))
   aws-sdk/generator/shape::members))
(common-lisp:deftype phone-number-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass platform-application common-lisp:nil
                       ((platform-application-arn :initarg
                         :platform-application-arn :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-platform-application-platform-application-arn
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (attributes :initarg :attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or map-string-to-string common-lisp:null)
                         :accessor struct-shape-platform-application-attributes
                         :shape "MapStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-platform-application
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'platform-application
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'platform-application 'make-platform-application))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input platform-application))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input platform-application))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'platform-application-arn))
      (common-lisp:list
       (common-lisp:cons "PlatformApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input platform-application))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition platform-application-disabled-exception
     (sns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       platform-application-disabled-exception-message)))
 (common-lisp:export
  (common-lisp:list 'platform-application-disabled-exception
                    'platform-application-disabled-exception-message)))
(common-lisp:progn
 (common-lisp:defclass publish-batch-input common-lisp:nil
                       ((topic-arn :initarg :topic-arn :initform
                         (common-lisp:error ":topic-arn is required") :type
                         (common-lisp:or |topicARN| common-lisp:null) :accessor
                         struct-shape-publish-batch-input-topic-arn :shape
                         "topicARN" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (publish-batch-request-entries :initarg
                         :publish-batch-request-entries :initform
                         (common-lisp:error
                          ":publish-batch-request-entries is required")
                         :type
                         (common-lisp:or publish-batch-request-entry-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-publish-batch-input-publish-batch-request-entries
                         :shape "PublishBatchRequestEntryList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-publish-batch-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'publish-batch-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'publish-batch-input 'make-publish-batch-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input publish-batch-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input publish-batch-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-arn))
      (common-lisp:list
       (common-lisp:cons "TopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'publish-batch-request-entries))
      (common-lisp:list
       (common-lisp:cons "PublishBatchRequestEntries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input publish-batch-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass publish-batch-request-entry common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-publish-batch-request-entry-id :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (message :initarg :message :initform
                         (common-lisp:error ":message is required") :type
                         (common-lisp:or |message| common-lisp:null) :accessor
                         struct-shape-publish-batch-request-entry-message
                         :shape "message" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (subject :initarg :subject :initform common-lisp:nil
                         :type (common-lisp:or |subject| common-lisp:null)
                         :accessor
                         struct-shape-publish-batch-request-entry-subject
                         :shape "subject" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message-structure :initarg :message-structure
                         :initform common-lisp:nil :type
                         (common-lisp:or |messageStructure| common-lisp:null)
                         :accessor
                         struct-shape-publish-batch-request-entry-message-structure
                         :shape "messageStructure" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message-attributes :initarg :message-attributes
                         :initform common-lisp:nil :type
                         (common-lisp:or message-attribute-map
                                         common-lisp:null)
                         :accessor
                         struct-shape-publish-batch-request-entry-message-attributes
                         :shape "MessageAttributeMap" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message-deduplication-id :initarg
                         :message-deduplication-id :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-publish-batch-request-entry-message-deduplication-id
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message-group-id :initarg :message-group-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-publish-batch-request-entry-message-group-id
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-publish-batch-request-entry
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'publish-batch-request-entry
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'publish-batch-request-entry
                    'make-publish-batch-request-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          publish-batch-request-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          publish-batch-request-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subject))
      (common-lisp:list
       (common-lisp:cons "Subject"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-structure))
      (common-lisp:list
       (common-lisp:cons "MessageStructure"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-attributes))
      (common-lisp:list
       (common-lisp:cons "MessageAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'message-deduplication-id))
      (common-lisp:list
       (common-lisp:cons "MessageDeduplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-group-id))
      (common-lisp:list
       (common-lisp:cons "MessageGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          publish-batch-request-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype publish-batch-request-entry-list ()
   '(trivial-types:proper-list publish-batch-request-entry))
 (common-lisp:defun make-publish-batch-request-entry-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            publish-batch-request-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass publish-batch-response common-lisp:nil
                       ((successful :initarg :successful :initform
                         common-lisp:nil :type
                         (common-lisp:or publish-batch-result-entry-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-publish-batch-response-successful :shape
                         "PublishBatchResultEntryList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (failed :initarg :failed :initform common-lisp:nil
                         :type
                         (common-lisp:or batch-result-error-entry-list
                                         common-lisp:null)
                         :accessor struct-shape-publish-batch-response-failed
                         :shape "BatchResultErrorEntryList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-publish-batch-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'publish-batch-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'publish-batch-response 'make-publish-batch-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          publish-batch-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          publish-batch-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'successful))
      (common-lisp:list
       (common-lisp:cons "Successful"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failed))
      (common-lisp:list
       (common-lisp:cons "Failed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          publish-batch-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass publish-batch-result-entry common-lisp:nil
                       ((id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-publish-batch-result-entry-id :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (message-id :initarg :message-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |messageId| common-lisp:null)
                         :accessor
                         struct-shape-publish-batch-result-entry-message-id
                         :shape "messageId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sequence-number :initarg :sequence-number :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-publish-batch-result-entry-sequence-number
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-publish-batch-result-entry
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'publish-batch-result-entry
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'publish-batch-result-entry
                    'make-publish-batch-result-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          publish-batch-result-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          publish-batch-result-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-id))
      (common-lisp:list
       (common-lisp:cons "MessageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sequence-number))
      (common-lisp:list
       (common-lisp:cons "SequenceNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          publish-batch-result-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype publish-batch-result-entry-list ()
   '(trivial-types:proper-list publish-batch-result-entry))
 (common-lisp:defun make-publish-batch-result-entry-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            publish-batch-result-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass publish-input common-lisp:nil
                       ((topic-arn :initarg :topic-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |topicARN| common-lisp:null) :accessor
                         struct-shape-publish-input-topic-arn :shape "topicARN"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (target-arn :initarg :target-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-publish-input-target-arn :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (phone-number :initarg :phone-number :initform
                         common-lisp:nil :type
                         (common-lisp:or phone-number common-lisp:null)
                         :accessor struct-shape-publish-input-phone-number
                         :shape "PhoneNumber" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message :initarg :message :initform
                         (common-lisp:error ":message is required") :type
                         (common-lisp:or |message| common-lisp:null) :accessor
                         struct-shape-publish-input-message :shape "message"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (subject :initarg :subject :initform common-lisp:nil
                         :type (common-lisp:or |subject| common-lisp:null)
                         :accessor struct-shape-publish-input-subject :shape
                         "subject" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (message-structure :initarg :message-structure
                         :initform common-lisp:nil :type
                         (common-lisp:or |messageStructure| common-lisp:null)
                         :accessor struct-shape-publish-input-message-structure
                         :shape "messageStructure" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message-attributes :initarg :message-attributes
                         :initform common-lisp:nil :type
                         (common-lisp:or message-attribute-map
                                         common-lisp:null)
                         :accessor
                         struct-shape-publish-input-message-attributes :shape
                         "MessageAttributeMap" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message-deduplication-id :initarg
                         :message-deduplication-id :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-publish-input-message-deduplication-id
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message-group-id :initarg :message-group-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-publish-input-message-group-id :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-publish-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'publish-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'publish-input 'make-publish-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input publish-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input publish-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-arn))
      (common-lisp:list
       (common-lisp:cons "TopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arn))
      (common-lisp:list
       (common-lisp:cons "TargetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number))
      (common-lisp:list
       (common-lisp:cons "PhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subject))
      (common-lisp:list
       (common-lisp:cons "Subject"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-structure))
      (common-lisp:list
       (common-lisp:cons "MessageStructure"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-attributes))
      (common-lisp:list
       (common-lisp:cons "MessageAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'message-deduplication-id))
      (common-lisp:list
       (common-lisp:cons "MessageDeduplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-group-id))
      (common-lisp:list
       (common-lisp:cons "MessageGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input publish-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass publish-response common-lisp:nil
                       ((message-id :initarg :message-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |messageId| common-lisp:null)
                         :accessor struct-shape-publish-response-message-id
                         :shape "messageId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sequence-number :initarg :sequence-number :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-publish-response-sequence-number :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-publish-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'publish-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'publish-response 'make-publish-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input publish-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input publish-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-id))
      (common-lisp:list
       (common-lisp:cons "MessageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sequence-number))
      (common-lisp:list
       (common-lisp:cons "SequenceNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input publish-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-data-protection-policy-input common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or |topicARN| common-lisp:null) :accessor
                         struct-shape-put-data-protection-policy-input-resource-arn
                         :shape "topicARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (data-protection-policy :initarg
                         :data-protection-policy :initform
                         (common-lisp:error
                          ":data-protection-policy is required")
                         :type
                         (common-lisp:or |attributeValue| common-lisp:null)
                         :accessor
                         struct-shape-put-data-protection-policy-input-data-protection-policy
                         :shape "attributeValue" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-data-protection-policy-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-data-protection-policy-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-data-protection-policy-input
                    'make-put-data-protection-policy-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-data-protection-policy-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-data-protection-policy-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-protection-policy))
      (common-lisp:list
       (common-lisp:cons "DataProtectionPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-data-protection-policy-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass remove-permission-input common-lisp:nil
                       ((topic-arn :initarg :topic-arn :initform
                         (common-lisp:error ":topic-arn is required") :type
                         (common-lisp:or |topicARN| common-lisp:null) :accessor
                         struct-shape-remove-permission-input-topic-arn :shape
                         "topicARN" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (label :initarg :label :initform
                         (common-lisp:error ":label is required") :type
                         (common-lisp:or |label| common-lisp:null) :accessor
                         struct-shape-remove-permission-input-label :shape
                         "label" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-remove-permission-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'remove-permission-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'remove-permission-input 'make-remove-permission-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-permission-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-permission-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-arn))
      (common-lisp:list
       (common-lisp:cons "TopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'label))
      (common-lisp:list
       (common-lisp:cons "Label"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-permission-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition replay-limit-exceeded-exception
     (sns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       replay-limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'replay-limit-exceeded-exception
                    'replay-limit-exceeded-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (sns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:deftype route-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass smssandbox-phone-number common-lisp:nil
                       ((phone-number :initarg :phone-number :initform
                         common-lisp:nil :type
                         (common-lisp:or phone-number-string common-lisp:null)
                         :accessor
                         struct-shape-smssandbox-phone-number-phone-number
                         :shape "PhoneNumberString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          smssandbox-phone-number-verification-status
                          common-lisp:null)
                         :accessor struct-shape-smssandbox-phone-number-status
                         :shape "SMSSandboxPhoneNumberVerificationStatus"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-smssandbox-phone-number
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'smssandbox-phone-number
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'smssandbox-phone-number 'make-smssandbox-phone-number))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          smssandbox-phone-number))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          smssandbox-phone-number))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number))
      (common-lisp:list
       (common-lisp:cons "PhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          smssandbox-phone-number))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype smssandbox-phone-number-list ()
   '(trivial-types:proper-list smssandbox-phone-number))
 (common-lisp:defun make-smssandbox-phone-number-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list smssandbox-phone-number))
   aws-sdk/generator/shape::members))
(common-lisp:deftype smssandbox-phone-number-verification-status ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass set-endpoint-attributes-input common-lisp:nil
                       ((endpoint-arn :initarg :endpoint-arn :initform
                         (common-lisp:error ":endpoint-arn is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-set-endpoint-attributes-input-endpoint-arn
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (attributes :initarg :attributes :initform
                         (common-lisp:error ":attributes is required") :type
                         (common-lisp:or map-string-to-string common-lisp:null)
                         :accessor
                         struct-shape-set-endpoint-attributes-input-attributes
                         :shape "MapStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-set-endpoint-attributes-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'set-endpoint-attributes-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'set-endpoint-attributes-input
                    'make-set-endpoint-attributes-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          set-endpoint-attributes-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          set-endpoint-attributes-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-arn))
      (common-lisp:list
       (common-lisp:cons "EndpointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          set-endpoint-attributes-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass set-platform-application-attributes-input
                       common-lisp:nil
                       ((platform-application-arn :initarg
                         :platform-application-arn :initform
                         (common-lisp:error
                          ":platform-application-arn is required")
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-set-platform-application-attributes-input-platform-application-arn
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (attributes :initarg :attributes :initform
                         (common-lisp:error ":attributes is required") :type
                         (common-lisp:or map-string-to-string common-lisp:null)
                         :accessor
                         struct-shape-set-platform-application-attributes-input-attributes
                         :shape "MapStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-set-platform-application-attributes-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'set-platform-application-attributes-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'set-platform-application-attributes-input
                    'make-set-platform-application-attributes-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          set-platform-application-attributes-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          set-platform-application-attributes-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'platform-application-arn))
      (common-lisp:list
       (common-lisp:cons "PlatformApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          set-platform-application-attributes-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass set-smsattributes-input common-lisp:nil
                       ((attributes :initarg :attributes :initform
                         (common-lisp:error ":attributes is required") :type
                         (common-lisp:or map-string-to-string common-lisp:null)
                         :accessor
                         struct-shape-set-smsattributes-input-attributes :shape
                         "MapStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-set-smsattributes-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'set-smsattributes-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'set-smsattributes-input 'make-set-smsattributes-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          set-smsattributes-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          set-smsattributes-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          set-smsattributes-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass set-smsattributes-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-set-smsattributes-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'set-smsattributes-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'set-smsattributes-response
                    'make-set-smsattributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          set-smsattributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          set-smsattributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          set-smsattributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass set-subscription-attributes-input common-lisp:nil
                       ((subscription-arn :initarg :subscription-arn :initform
                         (common-lisp:error ":subscription-arn is required")
                         :type
                         (common-lisp:or |subscriptionARN| common-lisp:null)
                         :accessor
                         struct-shape-set-subscription-attributes-input-subscription-arn
                         :shape "subscriptionARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (attribute-name :initarg :attribute-name :initform
                         (common-lisp:error ":attribute-name is required")
                         :type
                         (common-lisp:or |attributeName| common-lisp:null)
                         :accessor
                         struct-shape-set-subscription-attributes-input-attribute-name
                         :shape "attributeName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (attribute-value :initarg :attribute-value :initform
                         common-lisp:nil :type
                         (common-lisp:or |attributeValue| common-lisp:null)
                         :accessor
                         struct-shape-set-subscription-attributes-input-attribute-value
                         :shape "attributeValue" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-set-subscription-attributes-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'set-subscription-attributes-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'set-subscription-attributes-input
                    'make-set-subscription-attributes-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          set-subscription-attributes-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          set-subscription-attributes-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscription-arn))
      (common-lisp:list
       (common-lisp:cons "SubscriptionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-name))
      (common-lisp:list
       (common-lisp:cons "AttributeName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-value))
      (common-lisp:list
       (common-lisp:cons "AttributeValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          set-subscription-attributes-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass set-topic-attributes-input common-lisp:nil
                       ((topic-arn :initarg :topic-arn :initform
                         (common-lisp:error ":topic-arn is required") :type
                         (common-lisp:or |topicARN| common-lisp:null) :accessor
                         struct-shape-set-topic-attributes-input-topic-arn
                         :shape "topicARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (attribute-name :initarg :attribute-name :initform
                         (common-lisp:error ":attribute-name is required")
                         :type
                         (common-lisp:or |attributeName| common-lisp:null)
                         :accessor
                         struct-shape-set-topic-attributes-input-attribute-name
                         :shape "attributeName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (attribute-value :initarg :attribute-value :initform
                         common-lisp:nil :type
                         (common-lisp:or |attributeValue| common-lisp:null)
                         :accessor
                         struct-shape-set-topic-attributes-input-attribute-value
                         :shape "attributeValue" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-set-topic-attributes-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'set-topic-attributes-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'set-topic-attributes-input
                    'make-set-topic-attributes-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          set-topic-attributes-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          set-topic-attributes-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-arn))
      (common-lisp:list
       (common-lisp:cons "TopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-name))
      (common-lisp:list
       (common-lisp:cons "AttributeName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-value))
      (common-lisp:list
       (common-lisp:cons "AttributeValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          set-topic-attributes-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition stale-tag-exception
     (sns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       stale-tag-exception-message)))
 (common-lisp:export
  (common-lisp:list 'stale-tag-exception 'stale-tag-exception-message)))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass subscribe-input common-lisp:nil
                       ((topic-arn :initarg :topic-arn :initform
                         (common-lisp:error ":topic-arn is required") :type
                         (common-lisp:or |topicARN| common-lisp:null) :accessor
                         struct-shape-subscribe-input-topic-arn :shape
                         "topicARN" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (protocol :initarg :protocol :initform
                         (common-lisp:error ":protocol is required") :type
                         (common-lisp:or |protocol| common-lisp:null) :accessor
                         struct-shape-subscribe-input-protocol :shape
                         "protocol" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (endpoint :initarg :endpoint :initform common-lisp:nil
                         :type (common-lisp:or |endpoint| common-lisp:null)
                         :accessor struct-shape-subscribe-input-endpoint :shape
                         "endpoint" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (attributes :initarg :attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or subscription-attributes-map
                                         common-lisp:null)
                         :accessor struct-shape-subscribe-input-attributes
                         :shape "SubscriptionAttributesMap" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (return-subscription-arn :initarg
                         :return-subscription-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or common-lisp:boolean common-lisp:null)
                         :accessor
                         struct-shape-subscribe-input-return-subscription-arn
                         :shape "boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-subscribe-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'subscribe-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'subscribe-input 'make-subscribe-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input subscribe-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input subscribe-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-arn))
      (common-lisp:list
       (common-lisp:cons "TopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "Protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint))
      (common-lisp:list
       (common-lisp:cons "Endpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'return-subscription-arn))
      (common-lisp:list
       (common-lisp:cons "ReturnSubscriptionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input subscribe-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass subscribe-response common-lisp:nil
                       ((subscription-arn :initarg :subscription-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |subscriptionARN| common-lisp:null)
                         :accessor
                         struct-shape-subscribe-response-subscription-arn
                         :shape "subscriptionARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-subscribe-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'subscribe-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'subscribe-response 'make-subscribe-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input subscribe-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input subscribe-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscription-arn))
      (common-lisp:list
       (common-lisp:cons "SubscriptionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input subscribe-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass subscription common-lisp:nil
                       ((subscription-arn :initarg :subscription-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |subscriptionARN| common-lisp:null)
                         :accessor struct-shape-subscription-subscription-arn
                         :shape "subscriptionARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (owner :initarg :owner :initform common-lisp:nil :type
                         (common-lisp:or |account| common-lisp:null) :accessor
                         struct-shape-subscription-owner :shape "account"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (protocol :initarg :protocol :initform common-lisp:nil
                         :type (common-lisp:or |protocol| common-lisp:null)
                         :accessor struct-shape-subscription-protocol :shape
                         "protocol" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (endpoint :initarg :endpoint :initform common-lisp:nil
                         :type (common-lisp:or |endpoint| common-lisp:null)
                         :accessor struct-shape-subscription-endpoint :shape
                         "endpoint" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (topic-arn :initarg :topic-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |topicARN| common-lisp:null) :accessor
                         struct-shape-subscription-topic-arn :shape "topicARN"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-subscription
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'subscription
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'subscription 'make-subscription))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input subscription))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input subscription))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscription-arn))
      (common-lisp:list
       (common-lisp:cons "SubscriptionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owner))
      (common-lisp:list
       (common-lisp:cons "Owner"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "Protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint))
      (common-lisp:list
       (common-lisp:cons "Endpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-arn))
      (common-lisp:list
       (common-lisp:cons "TopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input subscription))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype subscription-attributes-map () 'common-lisp:hash-table)
 (common-lisp:defun make-subscription-attributes-map
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:define-condition subscription-limit-exceeded-exception
     (sns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       subscription-limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'subscription-limit-exceeded-exception
                    'subscription-limit-exceeded-exception-message)))
(common-lisp:progn
 (common-lisp:deftype subscriptions-list ()
   '(trivial-types:proper-list subscription))
 (common-lisp:defun make-subscriptions-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list subscription))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass tag common-lisp:nil
                       ((key :initarg :key :initform
                         (common-lisp:error ":key is required") :type
                         (common-lisp:or tag-key common-lisp:null) :accessor
                         struct-shape-tag-key :shape "TagKey" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (value :initarg :value :initform
                         (common-lisp:error ":value is required") :type
                         (common-lisp:or tag-value common-lisp:null) :accessor
                         struct-shape-tag-value :shape "TagValue" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun make-tag-key-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition tag-limit-exceeded-exception
     (sns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       tag-limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'tag-limit-exceeded-exception
                    'tag-limit-exceeded-exception-message)))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun make-tag-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition tag-policy-exception
     (sns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       tag-policy-exception-message)))
 (common-lisp:export
  (common-lisp:list 'tag-policy-exception 'tag-policy-exception-message)))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-tag-resource-request-resource-arn :shape
                         "AmazonResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-tag-resource-request-tags :shape
                         "TagList" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttled-exception
     (sns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttled-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttled-exception 'throttled-exception-message)))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition too-many-entries-in-batch-request-exception
     (sns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       too-many-entries-in-batch-request-exception-message)))
 (common-lisp:export
  (common-lisp:list 'too-many-entries-in-batch-request-exception
                    'too-many-entries-in-batch-request-exception-message)))
(common-lisp:progn
 (common-lisp:defclass topic common-lisp:nil
                       ((topic-arn :initarg :topic-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |topicARN| common-lisp:null) :accessor
                         struct-shape-topic-topic-arn :shape "topicARN"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-topic
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'topic
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'topic 'make-topic))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input topic))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input topic))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-arn))
      (common-lisp:list
       (common-lisp:cons "TopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input topic))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype topic-attributes-map () 'common-lisp:hash-table)
 (common-lisp:defun make-topic-attributes-map
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:define-condition topic-limit-exceeded-exception
     (sns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       topic-limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'topic-limit-exceeded-exception
                    'topic-limit-exceeded-exception-message)))
(common-lisp:progn
 (common-lisp:deftype topics-list () '(trivial-types:proper-list topic))
 (common-lisp:defun make-topics-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list topic))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass unsubscribe-input common-lisp:nil
                       ((subscription-arn :initarg :subscription-arn :initform
                         (common-lisp:error ":subscription-arn is required")
                         :type
                         (common-lisp:or |subscriptionARN| common-lisp:null)
                         :accessor
                         struct-shape-unsubscribe-input-subscription-arn :shape
                         "subscriptionARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-unsubscribe-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'unsubscribe-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'unsubscribe-input 'make-unsubscribe-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input unsubscribe-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input unsubscribe-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscription-arn))
      (common-lisp:list
       (common-lisp:cons "SubscriptionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input unsubscribe-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-untag-resource-request-resource-arn
                         :shape "AmazonResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tag-keys :initarg :tag-keys :initform
                         (common-lisp:error ":tag-keys is required") :type
                         (common-lisp:or tag-key-list common-lisp:null)
                         :accessor struct-shape-untag-resource-request-tag-keys
                         :shape "TagKeyList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "TagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition user-error-exception
     (sns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       user-error-exception-message)))
 (common-lisp:export
  (common-lisp:list 'user-error-exception 'user-error-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (sns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition verification-exception
     (sns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       verification-exception-message)
      (status :initarg :status :initform common-lisp:nil :reader
       verification-exception-status)))
 (common-lisp:export
  (common-lisp:list 'verification-exception 'verification-exception-message
                    'verification-exception-status)))
(common-lisp:progn
 (common-lisp:defclass verify-smssandbox-phone-number-input common-lisp:nil
                       ((phone-number :initarg :phone-number :initform
                         (common-lisp:error ":phone-number is required") :type
                         (common-lisp:or phone-number-string common-lisp:null)
                         :accessor
                         struct-shape-verify-smssandbox-phone-number-input-phone-number
                         :shape "PhoneNumberString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (one-time-password :initarg :one-time-password
                         :initform
                         (common-lisp:error ":one-time-password is required")
                         :type (common-lisp:or otpcode common-lisp:null)
                         :accessor
                         struct-shape-verify-smssandbox-phone-number-input-one-time-password
                         :shape "OTPCode" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-verify-smssandbox-phone-number-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'verify-smssandbox-phone-number-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'verify-smssandbox-phone-number-input
                    'make-verify-smssandbox-phone-number-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          verify-smssandbox-phone-number-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          verify-smssandbox-phone-number-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number))
      (common-lisp:list
       (common-lisp:cons "PhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'one-time-password))
      (common-lisp:list
       (common-lisp:cons "OneTimePassword"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          verify-smssandbox-phone-number-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass verify-smssandbox-phone-number-result common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-verify-smssandbox-phone-number-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'verify-smssandbox-phone-number-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'verify-smssandbox-phone-number-result
                    'make-verify-smssandbox-phone-number-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          verify-smssandbox-phone-number-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          verify-smssandbox-phone-number-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          verify-smssandbox-phone-number-result))
   common-lisp:nil))
(common-lisp:deftype |account| () 'common-lisp:string)
(common-lisp:deftype |action| () 'common-lisp:string)
(common-lisp:deftype |attributeName| () 'common-lisp:string)
(common-lisp:deftype |attributeValue| () 'common-lisp:string)
(common-lisp:deftype |authenticateOnUnsubscribe| () 'common-lisp:string)
common-lisp:nil
(common-lisp:deftype |delegate| () 'common-lisp:string)
(common-lisp:deftype |endpoint| () 'common-lisp:string)
(common-lisp:deftype |label| () 'common-lisp:string)
(common-lisp:deftype |message| () 'common-lisp:string)
(common-lisp:deftype |messageId| () 'common-lisp:string)
(common-lisp:deftype |messageStructure| () 'common-lisp:string)
(common-lisp:deftype |nextToken| () 'common-lisp:string)
(common-lisp:deftype |protocol| () 'common-lisp:string)
common-lisp:nil
(common-lisp:deftype |subject| () 'common-lisp:string)
(common-lisp:deftype |subscriptionARN| () 'common-lisp:string)
(common-lisp:deftype |token| () 'common-lisp:string)
(common-lisp:deftype |topicARN| () 'common-lisp:string)
(common-lisp:deftype |topicName| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun add-permission
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key topic-arn label awsaccount-id
                     action-name)
   (common-lisp:declare
    (common-lisp:ignorable topic-arn label awsaccount-id action-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-permission-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AddPermission"))
      common-lisp:nil common-lisp:nil *error-map* common-lisp:nil)))
 (common-lisp:export 'add-permission))
(common-lisp:progn
 (common-lisp:defun check-if-phone-number-is-opted-out
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key phone-number)
   (common-lisp:declare (common-lisp:ignorable phone-number))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-check-if-phone-number-is-opted-out-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CheckIfPhoneNumberIsOptedOut"))
      common-lisp:nil "CheckIfPhoneNumberIsOptedOutResult" *error-map*
      common-lisp:nil)))
 (common-lisp:export 'check-if-phone-number-is-opted-out))
(common-lisp:progn
 (common-lisp:defun confirm-subscription
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key topic-arn token
                     authenticate-on-unsubscribe)
   (common-lisp:declare
    (common-lisp:ignorable topic-arn token authenticate-on-unsubscribe))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-confirm-subscription-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ConfirmSubscription"))
      common-lisp:nil "ConfirmSubscriptionResult" *error-map*
      common-lisp:nil)))
 (common-lisp:export 'confirm-subscription))
(common-lisp:progn
 (common-lisp:defun create-platform-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name platform attributes)
   (common-lisp:declare (common-lisp:ignorable name platform attributes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-platform-application-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreatePlatformApplication"))
      common-lisp:nil "CreatePlatformApplicationResult" *error-map*
      common-lisp:nil)))
 (common-lisp:export 'create-platform-application))
(common-lisp:progn
 (common-lisp:defun create-platform-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key platform-application-arn token
                     custom-user-data attributes)
   (common-lisp:declare
    (common-lisp:ignorable platform-application-arn token custom-user-data
     attributes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-platform-endpoint-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreatePlatformEndpoint"))
      common-lisp:nil "CreatePlatformEndpointResult" *error-map*
      common-lisp:nil)))
 (common-lisp:export 'create-platform-endpoint))
(common-lisp:progn
 (common-lisp:defun create-smssandbox-phone-number
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key phone-number language-code)
   (common-lisp:declare (common-lisp:ignorable phone-number language-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-smssandbox-phone-number-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateSMSSandboxPhoneNumber"))
      common-lisp:nil "CreateSMSSandboxPhoneNumberResult" *error-map*
      common-lisp:nil)))
 (common-lisp:export 'create-smssandbox-phone-number))
(common-lisp:progn
 (common-lisp:defun create-topic
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name attributes tags
                     data-protection-policy)
   (common-lisp:declare
    (common-lisp:ignorable name attributes tags data-protection-policy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-topic-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateTopic"))
      common-lisp:nil "CreateTopicResult" *error-map* common-lisp:nil)))
 (common-lisp:export 'create-topic))
(common-lisp:progn
 (common-lisp:defun delete-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key endpoint-arn)
   (common-lisp:declare (common-lisp:ignorable endpoint-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-endpoint-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteEndpoint"))
      common-lisp:nil common-lisp:nil *error-map* common-lisp:nil)))
 (common-lisp:export 'delete-endpoint))
(common-lisp:progn
 (common-lisp:defun delete-platform-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key platform-application-arn)
   (common-lisp:declare (common-lisp:ignorable platform-application-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-platform-application-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeletePlatformApplication"))
      common-lisp:nil common-lisp:nil *error-map* common-lisp:nil)))
 (common-lisp:export 'delete-platform-application))
(common-lisp:progn
 (common-lisp:defun delete-smssandbox-phone-number
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key phone-number)
   (common-lisp:declare (common-lisp:ignorable phone-number))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-smssandbox-phone-number-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteSMSSandboxPhoneNumber"))
      common-lisp:nil "DeleteSMSSandboxPhoneNumberResult" *error-map*
      common-lisp:nil)))
 (common-lisp:export 'delete-smssandbox-phone-number))
(common-lisp:progn
 (common-lisp:defun delete-topic
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key topic-arn)
   (common-lisp:declare (common-lisp:ignorable topic-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-topic-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteTopic"))
      common-lisp:nil common-lisp:nil *error-map* common-lisp:nil)))
 (common-lisp:export 'delete-topic))
(common-lisp:progn
 (common-lisp:defun get-data-protection-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-data-protection-policy-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetDataProtectionPolicy"))
      common-lisp:nil "GetDataProtectionPolicyResult" *error-map*
      common-lisp:nil)))
 (common-lisp:export 'get-data-protection-policy))
(common-lisp:progn
 (common-lisp:defun get-endpoint-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key endpoint-arn)
   (common-lisp:declare (common-lisp:ignorable endpoint-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-endpoint-attributes-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetEndpointAttributes"))
      common-lisp:nil "GetEndpointAttributesResult" *error-map*
      common-lisp:nil)))
 (common-lisp:export 'get-endpoint-attributes))
(common-lisp:progn
 (common-lisp:defun get-platform-application-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key platform-application-arn)
   (common-lisp:declare (common-lisp:ignorable platform-application-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-platform-application-attributes-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetPlatformApplicationAttributes"))
      common-lisp:nil "GetPlatformApplicationAttributesResult" *error-map*
      common-lisp:nil)))
 (common-lisp:export 'get-platform-application-attributes))
(common-lisp:progn
 (common-lisp:defun get-smsattributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key attributes)
   (common-lisp:declare (common-lisp:ignorable attributes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-smsattributes-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetSMSAttributes"))
      common-lisp:nil "GetSMSAttributesResult" *error-map* common-lisp:nil)))
 (common-lisp:export 'get-smsattributes))
(common-lisp:progn
 (common-lisp:defun get-smssandbox-account-status ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'sns-request :method "POST" :path "/"
                                :operation "GetSMSSandboxAccountStatus"))
    common-lisp:nil "GetSMSSandboxAccountStatusResult" *error-map*))
 (common-lisp:export 'get-smssandbox-account-status))
(common-lisp:progn
 (common-lisp:defun get-subscription-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key subscription-arn)
   (common-lisp:declare (common-lisp:ignorable subscription-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-subscription-attributes-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetSubscriptionAttributes"))
      common-lisp:nil "GetSubscriptionAttributesResult" *error-map*
      common-lisp:nil)))
 (common-lisp:export 'get-subscription-attributes))
(common-lisp:progn
 (common-lisp:defun get-topic-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key topic-arn)
   (common-lisp:declare (common-lisp:ignorable topic-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-topic-attributes-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetTopicAttributes"))
      common-lisp:nil "GetTopicAttributesResult" *error-map* common-lisp:nil)))
 (common-lisp:export 'get-topic-attributes))
(common-lisp:progn
 (common-lisp:defun list-endpoints-by-platform-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key platform-application-arn next-token)
   (common-lisp:declare
    (common-lisp:ignorable platform-application-arn next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-endpoints-by-platform-application-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListEndpointsByPlatformApplication"))
      common-lisp:nil "ListEndpointsByPlatformApplicationResult" *error-map*
      common-lisp:nil)))
 (common-lisp:export 'list-endpoints-by-platform-application))
(common-lisp:progn
 (common-lisp:defun list-origination-numbers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-origination-numbers-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListOriginationNumbers"))
      common-lisp:nil "ListOriginationNumbersResult" *error-map*
      common-lisp:nil)))
 (common-lisp:export 'list-origination-numbers))
(common-lisp:progn
 (common-lisp:defun list-phone-numbers-opted-out
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token)
   (common-lisp:declare (common-lisp:ignorable next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-phone-numbers-opted-out-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListPhoneNumbersOptedOut"))
      common-lisp:nil "ListPhoneNumbersOptedOutResult" *error-map*
      common-lisp:nil)))
 (common-lisp:export 'list-phone-numbers-opted-out))
(common-lisp:progn
 (common-lisp:defun list-platform-applications
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token)
   (common-lisp:declare (common-lisp:ignorable next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-platform-applications-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListPlatformApplications"))
      common-lisp:nil "ListPlatformApplicationsResult" *error-map*
      common-lisp:nil)))
 (common-lisp:export 'list-platform-applications))
(common-lisp:progn
 (common-lisp:defun list-smssandbox-phone-numbers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-smssandbox-phone-numbers-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListSMSSandboxPhoneNumbers"))
      common-lisp:nil "ListSMSSandboxPhoneNumbersResult" *error-map*
      common-lisp:nil)))
 (common-lisp:export 'list-smssandbox-phone-numbers))
(common-lisp:progn
 (common-lisp:defun list-subscriptions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token)
   (common-lisp:declare (common-lisp:ignorable next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-subscriptions-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListSubscriptions"))
      common-lisp:nil "ListSubscriptionsResult" *error-map* common-lisp:nil)))
 (common-lisp:export 'list-subscriptions))
(common-lisp:progn
 (common-lisp:defun list-subscriptions-by-topic
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key topic-arn next-token)
   (common-lisp:declare (common-lisp:ignorable topic-arn next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-subscriptions-by-topic-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListSubscriptionsByTopic"))
      common-lisp:nil "ListSubscriptionsByTopicResult" *error-map*
      common-lisp:nil)))
 (common-lisp:export 'list-subscriptions-by-topic))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListTagsForResource"))
      common-lisp:nil "ListTagsForResourceResult" *error-map*
      common-lisp:nil)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun list-topics
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token)
   (common-lisp:declare (common-lisp:ignorable next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-topics-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListTopics"))
      common-lisp:nil "ListTopicsResult" *error-map* common-lisp:nil)))
 (common-lisp:export 'list-topics))
(common-lisp:progn
 (common-lisp:defun opt-in-phone-number
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key phone-number)
   (common-lisp:declare (common-lisp:ignorable phone-number))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-opt-in-phone-number-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "OptInPhoneNumber"))
      common-lisp:nil "OptInPhoneNumberResult" *error-map* common-lisp:nil)))
 (common-lisp:export 'opt-in-phone-number))
(common-lisp:progn
 (common-lisp:defun publish
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key topic-arn target-arn phone-number message
                     subject message-structure message-attributes
                     message-deduplication-id message-group-id)
   (common-lisp:declare
    (common-lisp:ignorable topic-arn target-arn phone-number message subject
     message-structure message-attributes message-deduplication-id
     message-group-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-publish-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/" "Publish"))
      common-lisp:nil "PublishResult" *error-map* common-lisp:nil)))
 (common-lisp:export 'publish))
(common-lisp:progn
 (common-lisp:defun publish-batch
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key topic-arn publish-batch-request-entries)
   (common-lisp:declare
    (common-lisp:ignorable topic-arn publish-batch-request-entries))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-publish-batch-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "PublishBatch"))
      common-lisp:nil "PublishBatchResult" *error-map* common-lisp:nil)))
 (common-lisp:export 'publish-batch))
(common-lisp:progn
 (common-lisp:defun put-data-protection-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn data-protection-policy)
   (common-lisp:declare
    (common-lisp:ignorable resource-arn data-protection-policy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-data-protection-policy-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "PutDataProtectionPolicy"))
      common-lisp:nil common-lisp:nil *error-map* common-lisp:nil)))
 (common-lisp:export 'put-data-protection-policy))
(common-lisp:progn
 (common-lisp:defun remove-permission
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key topic-arn label)
   (common-lisp:declare (common-lisp:ignorable topic-arn label))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-remove-permission-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "RemovePermission"))
      common-lisp:nil common-lisp:nil *error-map* common-lisp:nil)))
 (common-lisp:export 'remove-permission))
(common-lisp:progn
 (common-lisp:defun set-endpoint-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key endpoint-arn attributes)
   (common-lisp:declare (common-lisp:ignorable endpoint-arn attributes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-set-endpoint-attributes-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "SetEndpointAttributes"))
      common-lisp:nil common-lisp:nil *error-map* common-lisp:nil)))
 (common-lisp:export 'set-endpoint-attributes))
(common-lisp:progn
 (common-lisp:defun set-platform-application-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key platform-application-arn attributes)
   (common-lisp:declare
    (common-lisp:ignorable platform-application-arn attributes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-set-platform-application-attributes-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "SetPlatformApplicationAttributes"))
      common-lisp:nil common-lisp:nil *error-map* common-lisp:nil)))
 (common-lisp:export 'set-platform-application-attributes))
(common-lisp:progn
 (common-lisp:defun set-smsattributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key attributes)
   (common-lisp:declare (common-lisp:ignorable attributes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-set-smsattributes-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "SetSMSAttributes"))
      common-lisp:nil "SetSMSAttributesResult" *error-map* common-lisp:nil)))
 (common-lisp:export 'set-smsattributes))
(common-lisp:progn
 (common-lisp:defun set-subscription-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key subscription-arn attribute-name
                     attribute-value)
   (common-lisp:declare
    (common-lisp:ignorable subscription-arn attribute-name attribute-value))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-set-subscription-attributes-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "SetSubscriptionAttributes"))
      common-lisp:nil common-lisp:nil *error-map* common-lisp:nil)))
 (common-lisp:export 'set-subscription-attributes))
(common-lisp:progn
 (common-lisp:defun set-topic-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key topic-arn attribute-name attribute-value)
   (common-lisp:declare
    (common-lisp:ignorable topic-arn attribute-name attribute-value))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-set-topic-attributes-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "SetTopicAttributes"))
      common-lisp:nil common-lisp:nil *error-map* common-lisp:nil)))
 (common-lisp:export 'set-topic-attributes))
(common-lisp:progn
 (common-lisp:defun subscribe
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key topic-arn protocol endpoint attributes
                     return-subscription-arn)
   (common-lisp:declare
    (common-lisp:ignorable topic-arn protocol endpoint attributes
     return-subscription-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-subscribe-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "Subscribe"))
      common-lisp:nil "SubscribeResult" *error-map* common-lisp:nil)))
 (common-lisp:export 'subscribe))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "TagResource"))
      common-lisp:nil "TagResourceResult" *error-map* common-lisp:nil)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun unsubscribe
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key subscription-arn)
   (common-lisp:declare (common-lisp:ignorable subscription-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-unsubscribe-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "Unsubscribe"))
      common-lisp:nil common-lisp:nil *error-map* common-lisp:nil)))
 (common-lisp:export 'unsubscribe))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UntagResource"))
      common-lisp:nil "UntagResourceResult" *error-map* common-lisp:nil)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun verify-smssandbox-phone-number
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key phone-number one-time-password)
   (common-lisp:declare (common-lisp:ignorable phone-number one-time-password))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-verify-smssandbox-phone-number-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "VerifySMSSandboxPhoneNumber"))
      common-lisp:nil "VerifySMSSandboxPhoneNumberResult" *error-map*
      common-lisp:nil)))
 (common-lisp:export 'verify-smssandbox-phone-number))
