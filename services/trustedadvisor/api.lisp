;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/trustedadvisor/api
  (:use)
  (:nicknames #:aws/trustedadvisor)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/json-request)
  (:import-from #:aws-sdk/rest-json-request)
  (:import-from #:aws-sdk/rest-xml-request)
  (:import-from #:aws-sdk/query-request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/trustedadvisor/api)
(common-lisp:progn
 (common-lisp:define-condition trustedadvisor-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'trustedadvisor-error))
(common-lisp:progn
 (common-lisp:defclass trustedadvisor-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "trustedadvisor"
                        :api-version "2022-09-15" :host-prefix "trustedadvisor"
                        :signing-name "trustedadvisor" :global-host
                        common-lisp:nil))
 (common-lisp:export 'trustedadvisor-request))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ThrottlingException" . throttling-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (trustedadvisor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:deftype account-id () 'common-lisp:string)
(common-lisp:deftype account-recommendation-arn () 'common-lisp:string)
(common-lisp:deftype account-recommendation-identifier () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass account-recommendation-lifecycle-summary common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-account-recommendation-lifecycle-summary-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (account-recommendation-arn :initarg
                         :account-recommendation-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or account-recommendation-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-account-recommendation-lifecycle-summary-account-recommendation-arn
                         :shape "AccountRecommendationArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (last-updated-at :initarg :last-updated-at :initform
                         common-lisp:nil :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor
                         struct-shape-account-recommendation-lifecycle-summary-last-updated-at
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (lifecycle-stage :initarg :lifecycle-stage :initform
                         common-lisp:nil :type
                         (common-lisp:or recommendation-lifecycle-stage
                                         common-lisp:null)
                         :accessor
                         struct-shape-account-recommendation-lifecycle-summary-lifecycle-stage
                         :shape "RecommendationLifecycleStage" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (update-reason :initarg :update-reason :initform
                         common-lisp:nil :type
                         (common-lisp:or recommendation-update-reason
                                         common-lisp:null)
                         :accessor
                         struct-shape-account-recommendation-lifecycle-summary-update-reason
                         :shape "RecommendationUpdateReason" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (update-reason-code :initarg :update-reason-code
                         :initform common-lisp:nil :type
                         (common-lisp:or
                          update-recommendation-lifecycle-stage-reason-code
                          common-lisp:null)
                         :accessor
                         struct-shape-account-recommendation-lifecycle-summary-update-reason-code
                         :shape "UpdateRecommendationLifecycleStageReasonCode"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (updated-on-behalf-of :initarg :updated-on-behalf-of
                         :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-account-recommendation-lifecycle-summary-updated-on-behalf-of
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-on-behalf-of-job-title :initarg
                         :updated-on-behalf-of-job-title :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-account-recommendation-lifecycle-summary-updated-on-behalf-of-job-title
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-account-recommendation-lifecycle-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'account-recommendation-lifecycle-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'account-recommendation-lifecycle-summary
                    'make-account-recommendation-lifecycle-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          account-recommendation-lifecycle-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          account-recommendation-lifecycle-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'account-recommendation-arn))
      (common-lisp:list
       (common-lisp:cons "accountRecommendationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-at))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lifecycle-stage))
      (common-lisp:list
       (common-lisp:cons "lifecycleStage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-reason))
      (common-lisp:list
       (common-lisp:cons "updateReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-reason-code))
      (common-lisp:list
       (common-lisp:cons "updateReasonCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'updated-on-behalf-of))
      (common-lisp:list
       (common-lisp:cons "updatedOnBehalfOf"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'updated-on-behalf-of-job-title))
      (common-lisp:list
       (common-lisp:cons "updatedOnBehalfOfJobTitle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          account-recommendation-lifecycle-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype account-recommendation-lifecycle-summary-list ()
   '(trivial-types:proper-list account-recommendation-lifecycle-summary))
 (common-lisp:defun make-account-recommendation-lifecycle-summary-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            account-recommendation-lifecycle-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype check-arn () 'common-lisp:string)
(common-lisp:deftype check-identifier () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass check-summary common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or check-arn common-lisp:null) :accessor
                         struct-shape-check-summary-arn :shape "CheckArn"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (aws-services :initarg :aws-services :initform
                         (common-lisp:error ":awsservices is required") :type
                         (common-lisp:or recommendation-aws-service-list
                                         common-lisp:null)
                         :accessor struct-shape-check-summary-aws-services
                         :shape "RecommendationAwsServiceList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         (common-lisp:error ":description is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-check-summary-description :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-check-summary-id :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (metadata :initarg :metadata :initform
                         (common-lisp:error ":metadata is required") :type
                         (common-lisp:or string-map common-lisp:null) :accessor
                         struct-shape-check-summary-metadata :shape "StringMap"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-check-summary-name :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (pillars :initarg :pillars :initform
                         (common-lisp:error ":pillars is required") :type
                         (common-lisp:or recommendation-pillar-list
                                         common-lisp:null)
                         :accessor struct-shape-check-summary-pillars :shape
                         "RecommendationPillarList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (source :initarg :source :initform
                         (common-lisp:error ":source is required") :type
                         (common-lisp:or recommendation-source
                                         common-lisp:null)
                         :accessor struct-shape-check-summary-source :shape
                         "RecommendationSource" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-check-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'check-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'check-summary 'make-check-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input check-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input check-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-services))
      (common-lisp:list
       (common-lisp:cons "awsServices"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pillars))
      (common-lisp:list
       (common-lisp:cons "pillars"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input check-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype check-summary-list ()
   '(trivial-types:proper-list check-summary))
 (common-lisp:defun make-check-summary-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list check-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (trustedadvisor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message)))
(common-lisp:deftype double () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defclass get-organization-recommendation-request common-lisp:nil
                       ((organization-recommendation-identifier :initarg
                         :organization-recommendation-identifier :initform
                         (common-lisp:error
                          ":organizationrecommendationidentifier is required")
                         :type
                         (common-lisp:or organization-recommendation-identifier
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-organization-recommendation-request-organization-recommendation-identifier
                         :shape "OrganizationRecommendationIdentifier"
                         :location "uri" :location-name
                         "organizationRecommendationIdentifier"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-organization-recommendation-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-organization-recommendation-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-organization-recommendation-request
                    'make-get-organization-recommendation-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-organization-recommendation-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-organization-recommendation-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-organization-recommendation-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-organization-recommendation-response common-lisp:nil
                       ((organization-recommendation :initarg
                         :organization-recommendation :initform common-lisp:nil
                         :type
                         (common-lisp:or organization-recommendation
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-organization-recommendation-response-organization-recommendation
                         :shape "OrganizationRecommendation" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-organization-recommendation-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-organization-recommendation-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-organization-recommendation-response
                    'make-get-organization-recommendation-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-organization-recommendation-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-organization-recommendation-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'organization-recommendation))
      (common-lisp:list
       (common-lisp:cons "organizationRecommendation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-organization-recommendation-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-recommendation-request common-lisp:nil
                       ((recommendation-identifier :initarg
                         :recommendation-identifier :initform
                         (common-lisp:error
                          ":recommendationidentifier is required")
                         :type
                         (common-lisp:or account-recommendation-identifier
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-recommendation-request-recommendation-identifier
                         :shape "AccountRecommendationIdentifier" :location
                         "uri" :location-name "recommendationIdentifier"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-recommendation-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-recommendation-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-recommendation-request
                    'make-get-recommendation-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-recommendation-response common-lisp:nil
                       ((recommendation :initarg :recommendation :initform
                         common-lisp:nil :type
                         (common-lisp:or recommendation common-lisp:null)
                         :accessor
                         struct-shape-get-recommendation-response-recommendation
                         :shape "Recommendation" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-recommendation-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-recommendation-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-recommendation-response
                    'make-get-recommendation-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recommendation))
      (common-lisp:list
       (common-lisp:cons "recommendation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (trustedadvisor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message)))
(common-lisp:progn
 (common-lisp:defclass list-checks-request common-lisp:nil
                       ((aws-service :initarg :aws-service :initform
                         common-lisp:nil :type
                         (common-lisp:or recommendation-aws-service
                                         common-lisp:null)
                         :accessor struct-shape-list-checks-request-aws-service
                         :shape "RecommendationAwsService" :location
                         "querystring" :location-name "awsService")
                        (language :initarg :language :initform common-lisp:nil
                         :type
                         (common-lisp:or recommendation-language
                                         common-lisp:null)
                         :accessor struct-shape-list-checks-request-language
                         :shape "RecommendationLanguage" :location
                         "querystring" :location-name "language")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          list-checks-request-max-results-integer
                          common-lisp:null)
                         :accessor struct-shape-list-checks-request-max-results
                         :shape "ListChecksRequestMaxResultsInteger" :location
                         "querystring" :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or list-checks-request-next-token-string
                                         common-lisp:null)
                         :accessor struct-shape-list-checks-request-next-token
                         :shape "ListChecksRequestNextTokenString" :location
                         "querystring" :location-name "nextToken")
                        (pillar :initarg :pillar :initform common-lisp:nil
                         :type
                         (common-lisp:or recommendation-pillar
                                         common-lisp:null)
                         :accessor struct-shape-list-checks-request-pillar
                         :shape "RecommendationPillar" :location "querystring"
                         :location-name "pillar")
                        (source :initarg :source :initform common-lisp:nil
                         :type
                         (common-lisp:or recommendation-source
                                         common-lisp:null)
                         :accessor struct-shape-list-checks-request-source
                         :shape "RecommendationSource" :location "querystring"
                         :location-name "source"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-checks-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-checks-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-checks-request 'make-list-checks-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-checks-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-checks-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-checks-request))
   common-lisp:nil))
(common-lisp:deftype list-checks-request-max-results-integer ()
  'common-lisp:integer)
(common-lisp:deftype list-checks-request-next-token-string ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass list-checks-response common-lisp:nil
                       ((check-summaries :initarg :check-summaries :initform
                         (common-lisp:error ":checksummaries is required")
                         :type
                         (common-lisp:or check-summary-list common-lisp:null)
                         :accessor
                         struct-shape-list-checks-response-check-summaries
                         :shape "CheckSummaryList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or list-checks-response-next-token-string
                                         common-lisp:null)
                         :accessor struct-shape-list-checks-response-next-token
                         :shape "ListChecksResponseNextTokenString" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-checks-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-checks-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-checks-response 'make-list-checks-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-checks-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-checks-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'check-summaries))
      (common-lisp:list
       (common-lisp:cons "checkSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-checks-response))
   common-lisp:nil))
(common-lisp:deftype list-checks-response-next-token-string ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass list-organization-recommendation-accounts-request
                       common-lisp:nil
                       ((affected-account-id :initarg :affected-account-id
                         :initform common-lisp:nil :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-list-organization-recommendation-accounts-request-affected-account-id
                         :shape "AccountId" :location "querystring"
                         :location-name "affectedAccountId")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          list-organization-recommendation-accounts-request-max-results-integer
                          common-lisp:null)
                         :accessor
                         struct-shape-list-organization-recommendation-accounts-request-max-results
                         :shape
                         "ListOrganizationRecommendationAccountsRequestMaxResultsInteger"
                         :location "querystring" :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          list-organization-recommendation-accounts-request-next-token-string
                          common-lisp:null)
                         :accessor
                         struct-shape-list-organization-recommendation-accounts-request-next-token
                         :shape
                         "ListOrganizationRecommendationAccountsRequestNextTokenString"
                         :location "querystring" :location-name "nextToken")
                        (organization-recommendation-identifier :initarg
                         :organization-recommendation-identifier :initform
                         (common-lisp:error
                          ":organizationrecommendationidentifier is required")
                         :type
                         (common-lisp:or organization-recommendation-identifier
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-organization-recommendation-accounts-request-organization-recommendation-identifier
                         :shape "OrganizationRecommendationIdentifier"
                         :location "uri" :location-name
                         "organizationRecommendationIdentifier"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-organization-recommendation-accounts-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-organization-recommendation-accounts-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-organization-recommendation-accounts-request
                    'make-list-organization-recommendation-accounts-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-organization-recommendation-accounts-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-organization-recommendation-accounts-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-organization-recommendation-accounts-request))
   common-lisp:nil))
(common-lisp:deftype list-organization-recommendation-accounts-request-max-results-integer
                     ()
  'common-lisp:integer)
(common-lisp:deftype list-organization-recommendation-accounts-request-next-token-string
                     ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass list-organization-recommendation-accounts-response
                       common-lisp:nil
                       ((account-recommendation-lifecycle-summaries :initarg
                         :account-recommendation-lifecycle-summaries :initform
                         (common-lisp:error
                          ":accountrecommendationlifecyclesummaries is required")
                         :type
                         (common-lisp:or
                          account-recommendation-lifecycle-summary-list
                          common-lisp:null)
                         :accessor
                         struct-shape-list-organization-recommendation-accounts-response-account-recommendation-lifecycle-summaries
                         :shape "AccountRecommendationLifecycleSummaryList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          list-organization-recommendation-accounts-response-next-token-string
                          common-lisp:null)
                         :accessor
                         struct-shape-list-organization-recommendation-accounts-response-next-token
                         :shape
                         "ListOrganizationRecommendationAccountsResponseNextTokenString"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-organization-recommendation-accounts-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-organization-recommendation-accounts-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-organization-recommendation-accounts-response
                    'make-list-organization-recommendation-accounts-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-organization-recommendation-accounts-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-organization-recommendation-accounts-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'account-recommendation-lifecycle-summaries))
      (common-lisp:list
       (common-lisp:cons "accountRecommendationLifecycleSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-organization-recommendation-accounts-response))
   common-lisp:nil))
(common-lisp:deftype list-organization-recommendation-accounts-response-next-token-string
                     ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass list-organization-recommendation-resources-request
                       common-lisp:nil
                       ((affected-account-id :initarg :affected-account-id
                         :initform common-lisp:nil :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-list-organization-recommendation-resources-request-affected-account-id
                         :shape "AccountId" :location "querystring"
                         :location-name "affectedAccountId")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          list-organization-recommendation-resources-request-max-results-integer
                          common-lisp:null)
                         :accessor
                         struct-shape-list-organization-recommendation-resources-request-max-results
                         :shape
                         "ListOrganizationRecommendationResourcesRequestMaxResultsInteger"
                         :location "querystring" :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          list-organization-recommendation-resources-request-next-token-string
                          common-lisp:null)
                         :accessor
                         struct-shape-list-organization-recommendation-resources-request-next-token
                         :shape
                         "ListOrganizationRecommendationResourcesRequestNextTokenString"
                         :location "querystring" :location-name "nextToken")
                        (organization-recommendation-identifier :initarg
                         :organization-recommendation-identifier :initform
                         (common-lisp:error
                          ":organizationrecommendationidentifier is required")
                         :type
                         (common-lisp:or organization-recommendation-identifier
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-organization-recommendation-resources-request-organization-recommendation-identifier
                         :shape "OrganizationRecommendationIdentifier"
                         :location "uri" :location-name
                         "organizationRecommendationIdentifier")
                        (region-code :initarg :region-code :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-organization-recommendation-resources-request-region-code
                         :shape "String" :location "querystring" :location-name
                         "regionCode")
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or resource-status common-lisp:null)
                         :accessor
                         struct-shape-list-organization-recommendation-resources-request-status
                         :shape "ResourceStatus" :location "querystring"
                         :location-name "status"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-organization-recommendation-resources-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-organization-recommendation-resources-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-organization-recommendation-resources-request
                    'make-list-organization-recommendation-resources-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-organization-recommendation-resources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-organization-recommendation-resources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-organization-recommendation-resources-request))
   common-lisp:nil))
(common-lisp:deftype list-organization-recommendation-resources-request-max-results-integer
                     ()
  'common-lisp:integer)
(common-lisp:deftype list-organization-recommendation-resources-request-next-token-string
                     ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass list-organization-recommendation-resources-response
                       common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          list-organization-recommendation-resources-response-next-token-string
                          common-lisp:null)
                         :accessor
                         struct-shape-list-organization-recommendation-resources-response-next-token
                         :shape
                         "ListOrganizationRecommendationResourcesResponseNextTokenString"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (organization-recommendation-resource-summaries
                         :initarg
                         :organization-recommendation-resource-summaries
                         :initform
                         (common-lisp:error
                          ":organizationrecommendationresourcesummaries is required")
                         :type
                         (common-lisp:or
                          organization-recommendation-resource-summary-list
                          common-lisp:null)
                         :accessor
                         struct-shape-list-organization-recommendation-resources-response-organization-recommendation-resource-summaries
                         :shape "OrganizationRecommendationResourceSummaryList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-organization-recommendation-resources-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-organization-recommendation-resources-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-organization-recommendation-resources-response
                    'make-list-organization-recommendation-resources-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-organization-recommendation-resources-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-organization-recommendation-resources-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'organization-recommendation-resource-summaries))
      (common-lisp:list
       (common-lisp:cons "organizationRecommendationResourceSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-organization-recommendation-resources-response))
   common-lisp:nil))
(common-lisp:deftype list-organization-recommendation-resources-response-next-token-string
                     ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass list-organization-recommendations-request
                       common-lisp:nil
                       ((after-last-updated-at :initarg :after-last-updated-at
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-list-organization-recommendations-request-after-last-updated-at
                         :shape "Timestamp" :location "querystring"
                         :location-name "afterLastUpdatedAt")
                        (aws-service :initarg :aws-service :initform
                         common-lisp:nil :type
                         (common-lisp:or recommendation-aws-service
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-organization-recommendations-request-aws-service
                         :shape "RecommendationAwsService" :location
                         "querystring" :location-name "awsService")
                        (before-last-updated-at :initarg
                         :before-last-updated-at :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-list-organization-recommendations-request-before-last-updated-at
                         :shape "Timestamp" :location "querystring"
                         :location-name "beforeLastUpdatedAt")
                        (check-identifier :initarg :check-identifier :initform
                         common-lisp:nil :type
                         (common-lisp:or check-identifier common-lisp:null)
                         :accessor
                         struct-shape-list-organization-recommendations-request-check-identifier
                         :shape "CheckIdentifier" :location "querystring"
                         :location-name "checkIdentifier")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          list-organization-recommendations-request-max-results-integer
                          common-lisp:null)
                         :accessor
                         struct-shape-list-organization-recommendations-request-max-results
                         :shape
                         "ListOrganizationRecommendationsRequestMaxResultsInteger"
                         :location "querystring" :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          list-organization-recommendations-request-next-token-string
                          common-lisp:null)
                         :accessor
                         struct-shape-list-organization-recommendations-request-next-token
                         :shape
                         "ListOrganizationRecommendationsRequestNextTokenString"
                         :location "querystring" :location-name "nextToken")
                        (pillar :initarg :pillar :initform common-lisp:nil
                         :type
                         (common-lisp:or recommendation-pillar
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-organization-recommendations-request-pillar
                         :shape "RecommendationPillar" :location "querystring"
                         :location-name "pillar")
                        (source :initarg :source :initform common-lisp:nil
                         :type
                         (common-lisp:or recommendation-source
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-organization-recommendations-request-source
                         :shape "RecommendationSource" :location "querystring"
                         :location-name "source")
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or recommendation-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-organization-recommendations-request-status
                         :shape "RecommendationStatus" :location "querystring"
                         :location-name "status")
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or recommendation-type common-lisp:null)
                         :accessor
                         struct-shape-list-organization-recommendations-request-type
                         :shape "RecommendationType" :location "querystring"
                         :location-name "type"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-organization-recommendations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-organization-recommendations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-organization-recommendations-request
                    'make-list-organization-recommendations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-organization-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-organization-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-organization-recommendations-request))
   common-lisp:nil))
(common-lisp:deftype list-organization-recommendations-request-max-results-integer
                     ()
  'common-lisp:integer)
(common-lisp:deftype list-organization-recommendations-request-next-token-string
                     ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass list-organization-recommendations-response
                       common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          list-organization-recommendations-response-next-token-string
                          common-lisp:null)
                         :accessor
                         struct-shape-list-organization-recommendations-response-next-token
                         :shape
                         "ListOrganizationRecommendationsResponseNextTokenString"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (organization-recommendation-summaries :initarg
                         :organization-recommendation-summaries :initform
                         (common-lisp:error
                          ":organizationrecommendationsummaries is required")
                         :type
                         (common-lisp:or
                          organization-recommendation-summary-list
                          common-lisp:null)
                         :accessor
                         struct-shape-list-organization-recommendations-response-organization-recommendation-summaries
                         :shape "OrganizationRecommendationSummaryList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-organization-recommendations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-organization-recommendations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-organization-recommendations-response
                    'make-list-organization-recommendations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-organization-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-organization-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'organization-recommendation-summaries))
      (common-lisp:list
       (common-lisp:cons "organizationRecommendationSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-organization-recommendations-response))
   common-lisp:nil))
(common-lisp:deftype list-organization-recommendations-response-next-token-string
                     ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass list-recommendation-resources-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          list-recommendation-resources-request-max-results-integer
                          common-lisp:null)
                         :accessor
                         struct-shape-list-recommendation-resources-request-max-results
                         :shape
                         "ListRecommendationResourcesRequestMaxResultsInteger"
                         :location "querystring" :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          list-recommendation-resources-request-next-token-string
                          common-lisp:null)
                         :accessor
                         struct-shape-list-recommendation-resources-request-next-token
                         :shape
                         "ListRecommendationResourcesRequestNextTokenString"
                         :location "querystring" :location-name "nextToken")
                        (recommendation-identifier :initarg
                         :recommendation-identifier :initform
                         (common-lisp:error
                          ":recommendationidentifier is required")
                         :type
                         (common-lisp:or account-recommendation-identifier
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-recommendation-resources-request-recommendation-identifier
                         :shape "AccountRecommendationIdentifier" :location
                         "uri" :location-name "recommendationIdentifier")
                        (region-code :initarg :region-code :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-recommendation-resources-request-region-code
                         :shape "String" :location "querystring" :location-name
                         "regionCode")
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or resource-status common-lisp:null)
                         :accessor
                         struct-shape-list-recommendation-resources-request-status
                         :shape "ResourceStatus" :location "querystring"
                         :location-name "status"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-recommendation-resources-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-recommendation-resources-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-recommendation-resources-request
                    'make-list-recommendation-resources-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-recommendation-resources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-recommendation-resources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-recommendation-resources-request))
   common-lisp:nil))
(common-lisp:deftype list-recommendation-resources-request-max-results-integer
                     ()
  'common-lisp:integer)
(common-lisp:deftype list-recommendation-resources-request-next-token-string ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass list-recommendation-resources-response common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          list-recommendation-resources-response-next-token-string
                          common-lisp:null)
                         :accessor
                         struct-shape-list-recommendation-resources-response-next-token
                         :shape
                         "ListRecommendationResourcesResponseNextTokenString"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (recommendation-resource-summaries :initarg
                         :recommendation-resource-summaries :initform
                         (common-lisp:error
                          ":recommendationresourcesummaries is required")
                         :type
                         (common-lisp:or recommendation-resource-summary-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-recommendation-resources-response-recommendation-resource-summaries
                         :shape "RecommendationResourceSummaryList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-recommendation-resources-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-recommendation-resources-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-recommendation-resources-response
                    'make-list-recommendation-resources-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-recommendation-resources-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-recommendation-resources-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-resource-summaries))
      (common-lisp:list
       (common-lisp:cons "recommendationResourceSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-recommendation-resources-response))
   common-lisp:nil))
(common-lisp:deftype list-recommendation-resources-response-next-token-string
                     ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass list-recommendations-request common-lisp:nil
                       ((after-last-updated-at :initarg :after-last-updated-at
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-list-recommendations-request-after-last-updated-at
                         :shape "Timestamp" :location "querystring"
                         :location-name "afterLastUpdatedAt")
                        (aws-service :initarg :aws-service :initform
                         common-lisp:nil :type
                         (common-lisp:or recommendation-aws-service
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-recommendations-request-aws-service
                         :shape "RecommendationAwsService" :location
                         "querystring" :location-name "awsService")
                        (before-last-updated-at :initarg
                         :before-last-updated-at :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-list-recommendations-request-before-last-updated-at
                         :shape "Timestamp" :location "querystring"
                         :location-name "beforeLastUpdatedAt")
                        (check-identifier :initarg :check-identifier :initform
                         common-lisp:nil :type
                         (common-lisp:or check-identifier common-lisp:null)
                         :accessor
                         struct-shape-list-recommendations-request-check-identifier
                         :shape "CheckIdentifier" :location "querystring"
                         :location-name "checkIdentifier")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          list-recommendations-request-max-results-integer
                          common-lisp:null)
                         :accessor
                         struct-shape-list-recommendations-request-max-results
                         :shape "ListRecommendationsRequestMaxResultsInteger"
                         :location "querystring" :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          list-recommendations-request-next-token-string
                          common-lisp:null)
                         :accessor
                         struct-shape-list-recommendations-request-next-token
                         :shape "ListRecommendationsRequestNextTokenString"
                         :location "querystring" :location-name "nextToken")
                        (pillar :initarg :pillar :initform common-lisp:nil
                         :type
                         (common-lisp:or recommendation-pillar
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-recommendations-request-pillar
                         :shape "RecommendationPillar" :location "querystring"
                         :location-name "pillar")
                        (source :initarg :source :initform common-lisp:nil
                         :type
                         (common-lisp:or recommendation-source
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-recommendations-request-source
                         :shape "RecommendationSource" :location "querystring"
                         :location-name "source")
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or recommendation-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-recommendations-request-status
                         :shape "RecommendationStatus" :location "querystring"
                         :location-name "status")
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or recommendation-type common-lisp:null)
                         :accessor
                         struct-shape-list-recommendations-request-type :shape
                         "RecommendationType" :location "querystring"
                         :location-name "type"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-recommendations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-recommendations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-recommendations-request
                    'make-list-recommendations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-recommendations-request))
   common-lisp:nil))
(common-lisp:deftype list-recommendations-request-max-results-integer ()
  'common-lisp:integer)
(common-lisp:deftype list-recommendations-request-next-token-string ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass list-recommendations-response common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          list-recommendations-response-next-token-string
                          common-lisp:null)
                         :accessor
                         struct-shape-list-recommendations-response-next-token
                         :shape "ListRecommendationsResponseNextTokenString"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (recommendation-summaries :initarg
                         :recommendation-summaries :initform
                         (common-lisp:error
                          ":recommendationsummaries is required")
                         :type
                         (common-lisp:or recommendation-summary-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-recommendations-response-recommendation-summaries
                         :shape "RecommendationSummaryList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-recommendations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-recommendations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-recommendations-response
                    'make-list-recommendations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-summaries))
      (common-lisp:list
       (common-lisp:cons "recommendationSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-recommendations-response))
   common-lisp:nil))
(common-lisp:deftype list-recommendations-response-next-token-string ()
  'common-lisp:string)
(common-lisp:deftype long () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass organization-recommendation common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or organization-recommendation-arn
                                         common-lisp:null)
                         :accessor struct-shape-organization-recommendation-arn
                         :shape "OrganizationRecommendationArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (aws-services :initarg :aws-services :initform
                         common-lisp:nil :type
                         (common-lisp:or recommendation-aws-service-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-organization-recommendation-aws-services
                         :shape "RecommendationAwsServiceList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (check-arn :initarg :check-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-organization-recommendation-check-arn
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor
                         struct-shape-organization-recommendation-created-at
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (created-by :initarg :created-by :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-organization-recommendation-created-by
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         (common-lisp:error ":description is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-organization-recommendation-description
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-organization-recommendation-id :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-updated-at :initarg :last-updated-at :initform
                         common-lisp:nil :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor
                         struct-shape-organization-recommendation-last-updated-at
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (lifecycle-stage :initarg :lifecycle-stage :initform
                         common-lisp:nil :type
                         (common-lisp:or recommendation-lifecycle-stage
                                         common-lisp:null)
                         :accessor
                         struct-shape-organization-recommendation-lifecycle-stage
                         :shape "RecommendationLifecycleStage" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-organization-recommendation-name :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (pillar-specific-aggregates :initarg
                         :pillar-specific-aggregates :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          recommendation-pillar-specific-aggregates
                          common-lisp:null)
                         :accessor
                         struct-shape-organization-recommendation-pillar-specific-aggregates
                         :shape "RecommendationPillarSpecificAggregates"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (pillars :initarg :pillars :initform
                         (common-lisp:error ":pillars is required") :type
                         (common-lisp:or recommendation-pillar-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-organization-recommendation-pillars
                         :shape "RecommendationPillarList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (resolved-at :initarg :resolved-at :initform
                         common-lisp:nil :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor
                         struct-shape-organization-recommendation-resolved-at
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (resources-aggregates :initarg :resources-aggregates
                         :initform
                         (common-lisp:error ":resourcesaggregates is required")
                         :type
                         (common-lisp:or recommendation-resources-aggregates
                                         common-lisp:null)
                         :accessor
                         struct-shape-organization-recommendation-resources-aggregates
                         :shape "RecommendationResourcesAggregates" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (source :initarg :source :initform
                         (common-lisp:error ":source is required") :type
                         (common-lisp:or recommendation-source
                                         common-lisp:null)
                         :accessor
                         struct-shape-organization-recommendation-source :shape
                         "RecommendationSource" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform
                         (common-lisp:error ":status is required") :type
                         (common-lisp:or recommendation-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-organization-recommendation-status :shape
                         "RecommendationStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (type :initarg :type :initform
                         (common-lisp:error ":type is required") :type
                         (common-lisp:or recommendation-type common-lisp:null)
                         :accessor
                         struct-shape-organization-recommendation-type :shape
                         "RecommendationType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (update-reason :initarg :update-reason :initform
                         common-lisp:nil :type
                         (common-lisp:or recommendation-update-reason
                                         common-lisp:null)
                         :accessor
                         struct-shape-organization-recommendation-update-reason
                         :shape "RecommendationUpdateReason" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (update-reason-code :initarg :update-reason-code
                         :initform common-lisp:nil :type
                         (common-lisp:or
                          update-recommendation-lifecycle-stage-reason-code
                          common-lisp:null)
                         :accessor
                         struct-shape-organization-recommendation-update-reason-code
                         :shape "UpdateRecommendationLifecycleStageReasonCode"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (updated-on-behalf-of :initarg :updated-on-behalf-of
                         :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-organization-recommendation-updated-on-behalf-of
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-on-behalf-of-job-title :initarg
                         :updated-on-behalf-of-job-title :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-organization-recommendation-updated-on-behalf-of-job-title
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-organization-recommendation
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'organization-recommendation
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'organization-recommendation
                    'make-organization-recommendation))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          organization-recommendation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          organization-recommendation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-services))
      (common-lisp:list
       (common-lisp:cons "awsServices"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'check-arn))
      (common-lisp:list
       (common-lisp:cons "checkArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-by))
      (common-lisp:list
       (common-lisp:cons "createdBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-at))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lifecycle-stage))
      (common-lisp:list
       (common-lisp:cons "lifecycleStage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pillar-specific-aggregates))
      (common-lisp:list
       (common-lisp:cons "pillarSpecificAggregates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pillars))
      (common-lisp:list
       (common-lisp:cons "pillars"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resolved-at))
      (common-lisp:list
       (common-lisp:cons "resolvedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resources-aggregates))
      (common-lisp:list
       (common-lisp:cons "resourcesAggregates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-reason))
      (common-lisp:list
       (common-lisp:cons "updateReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-reason-code))
      (common-lisp:list
       (common-lisp:cons "updateReasonCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'updated-on-behalf-of))
      (common-lisp:list
       (common-lisp:cons "updatedOnBehalfOf"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'updated-on-behalf-of-job-title))
      (common-lisp:list
       (common-lisp:cons "updatedOnBehalfOfJobTitle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          organization-recommendation))
   common-lisp:nil))
(common-lisp:deftype organization-recommendation-arn () 'common-lisp:string)
(common-lisp:deftype organization-recommendation-identifier ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass organization-recommendation-resource-summary
                       common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-organization-recommendation-resource-summary-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or recommendation-resource-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-organization-recommendation-resource-summary-arn
                         :shape "RecommendationResourceArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (aws-resource-id :initarg :aws-resource-id :initform
                         (common-lisp:error ":awsresourceid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-organization-recommendation-resource-summary-aws-resource-id
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-organization-recommendation-resource-summary-id
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-updated-at :initarg :last-updated-at :initform
                         (common-lisp:error ":lastupdatedat is required") :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor
                         struct-shape-organization-recommendation-resource-summary-last-updated-at
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (metadata :initarg :metadata :initform
                         (common-lisp:error ":metadata is required") :type
                         (common-lisp:or string-map common-lisp:null) :accessor
                         struct-shape-organization-recommendation-resource-summary-metadata
                         :shape "StringMap" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendation-arn :initarg :recommendation-arn
                         :initform
                         (common-lisp:error ":recommendationarn is required")
                         :type
                         (common-lisp:or organization-recommendation-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-organization-recommendation-resource-summary-recommendation-arn
                         :shape "OrganizationRecommendationArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (region-code :initarg :region-code :initform
                         (common-lisp:error ":regioncode is required") :type
                         (common-lisp:or recommendation-region-code
                                         common-lisp:null)
                         :accessor
                         struct-shape-organization-recommendation-resource-summary-region-code
                         :shape "RecommendationRegionCode" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (status :initarg :status :initform
                         (common-lisp:error ":status is required") :type
                         (common-lisp:or resource-status common-lisp:null)
                         :accessor
                         struct-shape-organization-recommendation-resource-summary-status
                         :shape "ResourceStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-organization-recommendation-resource-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'organization-recommendation-resource-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'organization-recommendation-resource-summary
                    'make-organization-recommendation-resource-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          organization-recommendation-resource-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          organization-recommendation-resource-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-resource-id))
      (common-lisp:list
       (common-lisp:cons "awsResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-at))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recommendation-arn))
      (common-lisp:list
       (common-lisp:cons "recommendationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'region-code))
      (common-lisp:list
       (common-lisp:cons "regionCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          organization-recommendation-resource-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype organization-recommendation-resource-summary-list ()
   '(trivial-types:proper-list organization-recommendation-resource-summary))
 (common-lisp:defun make-organization-recommendation-resource-summary-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            organization-recommendation-resource-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass organization-recommendation-summary common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or organization-recommendation-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-organization-recommendation-summary-arn
                         :shape "OrganizationRecommendationArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (aws-services :initarg :aws-services :initform
                         common-lisp:nil :type
                         (common-lisp:or recommendation-aws-service-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-organization-recommendation-summary-aws-services
                         :shape "RecommendationAwsServiceList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (check-arn :initarg :check-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-organization-recommendation-summary-check-arn
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor
                         struct-shape-organization-recommendation-summary-created-at
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-organization-recommendation-summary-id
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-updated-at :initarg :last-updated-at :initform
                         common-lisp:nil :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor
                         struct-shape-organization-recommendation-summary-last-updated-at
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (lifecycle-stage :initarg :lifecycle-stage :initform
                         common-lisp:nil :type
                         (common-lisp:or recommendation-lifecycle-stage
                                         common-lisp:null)
                         :accessor
                         struct-shape-organization-recommendation-summary-lifecycle-stage
                         :shape "RecommendationLifecycleStage" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-organization-recommendation-summary-name
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (pillar-specific-aggregates :initarg
                         :pillar-specific-aggregates :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          recommendation-pillar-specific-aggregates
                          common-lisp:null)
                         :accessor
                         struct-shape-organization-recommendation-summary-pillar-specific-aggregates
                         :shape "RecommendationPillarSpecificAggregates"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (pillars :initarg :pillars :initform
                         (common-lisp:error ":pillars is required") :type
                         (common-lisp:or recommendation-pillar-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-organization-recommendation-summary-pillars
                         :shape "RecommendationPillarList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (resources-aggregates :initarg :resources-aggregates
                         :initform
                         (common-lisp:error ":resourcesaggregates is required")
                         :type
                         (common-lisp:or recommendation-resources-aggregates
                                         common-lisp:null)
                         :accessor
                         struct-shape-organization-recommendation-summary-resources-aggregates
                         :shape "RecommendationResourcesAggregates" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (source :initarg :source :initform
                         (common-lisp:error ":source is required") :type
                         (common-lisp:or recommendation-source
                                         common-lisp:null)
                         :accessor
                         struct-shape-organization-recommendation-summary-source
                         :shape "RecommendationSource" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (status :initarg :status :initform
                         (common-lisp:error ":status is required") :type
                         (common-lisp:or recommendation-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-organization-recommendation-summary-status
                         :shape "RecommendationStatus" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (type :initarg :type :initform
                         (common-lisp:error ":type is required") :type
                         (common-lisp:or recommendation-type common-lisp:null)
                         :accessor
                         struct-shape-organization-recommendation-summary-type
                         :shape "RecommendationType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-organization-recommendation-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'organization-recommendation-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'organization-recommendation-summary
                    'make-organization-recommendation-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          organization-recommendation-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          organization-recommendation-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-services))
      (common-lisp:list
       (common-lisp:cons "awsServices"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'check-arn))
      (common-lisp:list
       (common-lisp:cons "checkArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-at))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lifecycle-stage))
      (common-lisp:list
       (common-lisp:cons "lifecycleStage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pillar-specific-aggregates))
      (common-lisp:list
       (common-lisp:cons "pillarSpecificAggregates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pillars))
      (common-lisp:list
       (common-lisp:cons "pillars"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resources-aggregates))
      (common-lisp:list
       (common-lisp:cons "resourcesAggregates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          organization-recommendation-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype organization-recommendation-summary-list ()
   '(trivial-types:proper-list organization-recommendation-summary))
 (common-lisp:defun make-organization-recommendation-summary-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            organization-recommendation-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass recommendation common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or account-recommendation-arn
                                         common-lisp:null)
                         :accessor struct-shape-recommendation-arn :shape
                         "AccountRecommendationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (aws-services :initarg :aws-services :initform
                         common-lisp:nil :type
                         (common-lisp:or recommendation-aws-service-list
                                         common-lisp:null)
                         :accessor struct-shape-recommendation-aws-services
                         :shape "RecommendationAwsServiceList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (check-arn :initarg :check-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-recommendation-check-arn :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor struct-shape-recommendation-created-at
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (created-by :initarg :created-by :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-recommendation-created-by :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (description :initarg :description :initform
                         (common-lisp:error ":description is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-recommendation-description :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-recommendation-id :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-updated-at :initarg :last-updated-at :initform
                         common-lisp:nil :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor struct-shape-recommendation-last-updated-at
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (lifecycle-stage :initarg :lifecycle-stage :initform
                         common-lisp:nil :type
                         (common-lisp:or recommendation-lifecycle-stage
                                         common-lisp:null)
                         :accessor struct-shape-recommendation-lifecycle-stage
                         :shape "RecommendationLifecycleStage" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-recommendation-name :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (pillar-specific-aggregates :initarg
                         :pillar-specific-aggregates :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          recommendation-pillar-specific-aggregates
                          common-lisp:null)
                         :accessor
                         struct-shape-recommendation-pillar-specific-aggregates
                         :shape "RecommendationPillarSpecificAggregates"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (pillars :initarg :pillars :initform
                         (common-lisp:error ":pillars is required") :type
                         (common-lisp:or recommendation-pillar-list
                                         common-lisp:null)
                         :accessor struct-shape-recommendation-pillars :shape
                         "RecommendationPillarList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resolved-at :initarg :resolved-at :initform
                         common-lisp:nil :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor struct-shape-recommendation-resolved-at
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (resources-aggregates :initarg :resources-aggregates
                         :initform
                         (common-lisp:error ":resourcesaggregates is required")
                         :type
                         (common-lisp:or recommendation-resources-aggregates
                                         common-lisp:null)
                         :accessor
                         struct-shape-recommendation-resources-aggregates
                         :shape "RecommendationResourcesAggregates" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (source :initarg :source :initform
                         (common-lisp:error ":source is required") :type
                         (common-lisp:or recommendation-source
                                         common-lisp:null)
                         :accessor struct-shape-recommendation-source :shape
                         "RecommendationSource" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform
                         (common-lisp:error ":status is required") :type
                         (common-lisp:or recommendation-status
                                         common-lisp:null)
                         :accessor struct-shape-recommendation-status :shape
                         "RecommendationStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (type :initarg :type :initform
                         (common-lisp:error ":type is required") :type
                         (common-lisp:or recommendation-type common-lisp:null)
                         :accessor struct-shape-recommendation-type :shape
                         "RecommendationType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (update-reason :initarg :update-reason :initform
                         common-lisp:nil :type
                         (common-lisp:or recommendation-update-reason
                                         common-lisp:null)
                         :accessor struct-shape-recommendation-update-reason
                         :shape "RecommendationUpdateReason" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (update-reason-code :initarg :update-reason-code
                         :initform common-lisp:nil :type
                         (common-lisp:or
                          update-recommendation-lifecycle-stage-reason-code
                          common-lisp:null)
                         :accessor
                         struct-shape-recommendation-update-reason-code :shape
                         "UpdateRecommendationLifecycleStageReasonCode"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (updated-on-behalf-of :initarg :updated-on-behalf-of
                         :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-recommendation-updated-on-behalf-of
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-on-behalf-of-job-title :initarg
                         :updated-on-behalf-of-job-title :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-recommendation-updated-on-behalf-of-job-title
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-recommendation
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'recommendation
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'recommendation 'make-recommendation))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input recommendation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input recommendation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-services))
      (common-lisp:list
       (common-lisp:cons "awsServices"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'check-arn))
      (common-lisp:list
       (common-lisp:cons "checkArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-by))
      (common-lisp:list
       (common-lisp:cons "createdBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-at))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lifecycle-stage))
      (common-lisp:list
       (common-lisp:cons "lifecycleStage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pillar-specific-aggregates))
      (common-lisp:list
       (common-lisp:cons "pillarSpecificAggregates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pillars))
      (common-lisp:list
       (common-lisp:cons "pillars"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resolved-at))
      (common-lisp:list
       (common-lisp:cons "resolvedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resources-aggregates))
      (common-lisp:list
       (common-lisp:cons "resourcesAggregates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-reason))
      (common-lisp:list
       (common-lisp:cons "updateReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-reason-code))
      (common-lisp:list
       (common-lisp:cons "updateReasonCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'updated-on-behalf-of))
      (common-lisp:list
       (common-lisp:cons "updatedOnBehalfOf"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'updated-on-behalf-of-job-title))
      (common-lisp:list
       (common-lisp:cons "updatedOnBehalfOfJobTitle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input recommendation))
   common-lisp:nil))
(common-lisp:deftype recommendation-aws-service () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype recommendation-aws-service-list ()
   '(trivial-types:proper-list recommendation-aws-service))
 (common-lisp:defun make-recommendation-aws-service-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            recommendation-aws-service))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass recommendation-cost-optimizing-aggregates
                       common-lisp:nil
                       ((estimated-monthly-savings :initarg
                         :estimated-monthly-savings :initform
                         (common-lisp:error
                          ":estimatedmonthlysavings is required")
                         :type (common-lisp:or double common-lisp:null)
                         :accessor
                         struct-shape-recommendation-cost-optimizing-aggregates-estimated-monthly-savings
                         :shape "Double" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (estimated-percent-monthly-savings :initarg
                         :estimated-percent-monthly-savings :initform
                         (common-lisp:error
                          ":estimatedpercentmonthlysavings is required")
                         :type (common-lisp:or double common-lisp:null)
                         :accessor
                         struct-shape-recommendation-cost-optimizing-aggregates-estimated-percent-monthly-savings
                         :shape "Double" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-recommendation-cost-optimizing-aggregates
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'recommendation-cost-optimizing-aggregates
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'recommendation-cost-optimizing-aggregates
                    'make-recommendation-cost-optimizing-aggregates))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-cost-optimizing-aggregates))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-cost-optimizing-aggregates))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'estimated-monthly-savings))
      (common-lisp:list
       (common-lisp:cons "estimatedMonthlySavings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'estimated-percent-monthly-savings))
      (common-lisp:list
       (common-lisp:cons "estimatedPercentMonthlySavings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-cost-optimizing-aggregates))
   common-lisp:nil))
(common-lisp:deftype recommendation-language () 'common-lisp:string)
(common-lisp:deftype recommendation-lifecycle-stage () 'common-lisp:string)
(common-lisp:deftype recommendation-pillar () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype recommendation-pillar-list ()
   '(trivial-types:proper-list recommendation-pillar))
 (common-lisp:defun make-recommendation-pillar-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list recommendation-pillar))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass recommendation-pillar-specific-aggregates
                       common-lisp:nil
                       ((cost-optimizing :initarg :cost-optimizing :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          recommendation-cost-optimizing-aggregates
                          common-lisp:null)
                         :accessor
                         struct-shape-recommendation-pillar-specific-aggregates-cost-optimizing
                         :shape "RecommendationCostOptimizingAggregates"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-recommendation-pillar-specific-aggregates
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'recommendation-pillar-specific-aggregates
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'recommendation-pillar-specific-aggregates
                    'make-recommendation-pillar-specific-aggregates))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-pillar-specific-aggregates))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-pillar-specific-aggregates))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cost-optimizing))
      (common-lisp:list
       (common-lisp:cons "costOptimizing"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-pillar-specific-aggregates))
   common-lisp:nil))
(common-lisp:deftype recommendation-region-code () 'common-lisp:string)
(common-lisp:deftype recommendation-resource-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass recommendation-resource-summary common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or recommendation-resource-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-recommendation-resource-summary-arn
                         :shape "RecommendationResourceArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (aws-resource-id :initarg :aws-resource-id :initform
                         (common-lisp:error ":awsresourceid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-recommendation-resource-summary-aws-resource-id
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-recommendation-resource-summary-id :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-updated-at :initarg :last-updated-at :initform
                         (common-lisp:error ":lastupdatedat is required") :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor
                         struct-shape-recommendation-resource-summary-last-updated-at
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (metadata :initarg :metadata :initform
                         (common-lisp:error ":metadata is required") :type
                         (common-lisp:or string-map common-lisp:null) :accessor
                         struct-shape-recommendation-resource-summary-metadata
                         :shape "StringMap" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendation-arn :initarg :recommendation-arn
                         :initform
                         (common-lisp:error ":recommendationarn is required")
                         :type
                         (common-lisp:or account-recommendation-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-recommendation-resource-summary-recommendation-arn
                         :shape "AccountRecommendationArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (region-code :initarg :region-code :initform
                         (common-lisp:error ":regioncode is required") :type
                         (common-lisp:or recommendation-region-code
                                         common-lisp:null)
                         :accessor
                         struct-shape-recommendation-resource-summary-region-code
                         :shape "RecommendationRegionCode" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (status :initarg :status :initform
                         (common-lisp:error ":status is required") :type
                         (common-lisp:or resource-status common-lisp:null)
                         :accessor
                         struct-shape-recommendation-resource-summary-status
                         :shape "ResourceStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-recommendation-resource-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'recommendation-resource-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'recommendation-resource-summary
                    'make-recommendation-resource-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-resource-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-resource-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-resource-id))
      (common-lisp:list
       (common-lisp:cons "awsResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-at))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recommendation-arn))
      (common-lisp:list
       (common-lisp:cons "recommendationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'region-code))
      (common-lisp:list
       (common-lisp:cons "regionCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-resource-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype recommendation-resource-summary-list ()
   '(trivial-types:proper-list recommendation-resource-summary))
 (common-lisp:defun make-recommendation-resource-summary-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            recommendation-resource-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass recommendation-resources-aggregates common-lisp:nil
                       ((error-count :initarg :error-count :initform
                         (common-lisp:error ":errorcount is required") :type
                         (common-lisp:or long common-lisp:null) :accessor
                         struct-shape-recommendation-resources-aggregates-error-count
                         :shape "Long" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (ok-count :initarg :ok-count :initform
                         (common-lisp:error ":okcount is required") :type
                         (common-lisp:or long common-lisp:null) :accessor
                         struct-shape-recommendation-resources-aggregates-ok-count
                         :shape "Long" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (warning-count :initarg :warning-count :initform
                         (common-lisp:error ":warningcount is required") :type
                         (common-lisp:or long common-lisp:null) :accessor
                         struct-shape-recommendation-resources-aggregates-warning-count
                         :shape "Long" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-recommendation-resources-aggregates
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'recommendation-resources-aggregates
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'recommendation-resources-aggregates
                    'make-recommendation-resources-aggregates))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-resources-aggregates))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-resources-aggregates))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-count))
      (common-lisp:list
       (common-lisp:cons "errorCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ok-count))
      (common-lisp:list
       (common-lisp:cons "okCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warning-count))
      (common-lisp:list
       (common-lisp:cons "warningCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-resources-aggregates))
   common-lisp:nil))
(common-lisp:deftype recommendation-source () 'common-lisp:string)
(common-lisp:deftype recommendation-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass recommendation-summary common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or account-recommendation-arn
                                         common-lisp:null)
                         :accessor struct-shape-recommendation-summary-arn
                         :shape "AccountRecommendationArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (aws-services :initarg :aws-services :initform
                         common-lisp:nil :type
                         (common-lisp:or recommendation-aws-service-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-recommendation-summary-aws-services
                         :shape "RecommendationAwsServiceList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (check-arn :initarg :check-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-recommendation-summary-check-arn :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor
                         struct-shape-recommendation-summary-created-at :shape
                         "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-recommendation-summary-id :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-updated-at :initarg :last-updated-at :initform
                         common-lisp:nil :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor
                         struct-shape-recommendation-summary-last-updated-at
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (lifecycle-stage :initarg :lifecycle-stage :initform
                         common-lisp:nil :type
                         (common-lisp:or recommendation-lifecycle-stage
                                         common-lisp:null)
                         :accessor
                         struct-shape-recommendation-summary-lifecycle-stage
                         :shape "RecommendationLifecycleStage" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-recommendation-summary-name :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (pillar-specific-aggregates :initarg
                         :pillar-specific-aggregates :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          recommendation-pillar-specific-aggregates
                          common-lisp:null)
                         :accessor
                         struct-shape-recommendation-summary-pillar-specific-aggregates
                         :shape "RecommendationPillarSpecificAggregates"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (pillars :initarg :pillars :initform
                         (common-lisp:error ":pillars is required") :type
                         (common-lisp:or recommendation-pillar-list
                                         common-lisp:null)
                         :accessor struct-shape-recommendation-summary-pillars
                         :shape "RecommendationPillarList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (resources-aggregates :initarg :resources-aggregates
                         :initform
                         (common-lisp:error ":resourcesaggregates is required")
                         :type
                         (common-lisp:or recommendation-resources-aggregates
                                         common-lisp:null)
                         :accessor
                         struct-shape-recommendation-summary-resources-aggregates
                         :shape "RecommendationResourcesAggregates" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (source :initarg :source :initform
                         (common-lisp:error ":source is required") :type
                         (common-lisp:or recommendation-source
                                         common-lisp:null)
                         :accessor struct-shape-recommendation-summary-source
                         :shape "RecommendationSource" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (status :initarg :status :initform
                         (common-lisp:error ":status is required") :type
                         (common-lisp:or recommendation-status
                                         common-lisp:null)
                         :accessor struct-shape-recommendation-summary-status
                         :shape "RecommendationStatus" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (type :initarg :type :initform
                         (common-lisp:error ":type is required") :type
                         (common-lisp:or recommendation-type common-lisp:null)
                         :accessor struct-shape-recommendation-summary-type
                         :shape "RecommendationType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-recommendation-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'recommendation-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'recommendation-summary 'make-recommendation-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-services))
      (common-lisp:list
       (common-lisp:cons "awsServices"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'check-arn))
      (common-lisp:list
       (common-lisp:cons "checkArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-at))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lifecycle-stage))
      (common-lisp:list
       (common-lisp:cons "lifecycleStage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pillar-specific-aggregates))
      (common-lisp:list
       (common-lisp:cons "pillarSpecificAggregates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pillars))
      (common-lisp:list
       (common-lisp:cons "pillars"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resources-aggregates))
      (common-lisp:list
       (common-lisp:cons "resourcesAggregates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype recommendation-summary-list ()
   '(trivial-types:proper-list recommendation-summary))
 (common-lisp:defun make-recommendation-summary-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list recommendation-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype recommendation-type () 'common-lisp:string)
(common-lisp:deftype recommendation-update-reason () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (trustedadvisor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:deftype resource-status () 'common-lisp:string)
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype string-map () 'common-lisp:hash-table)
 (common-lisp:defun make-string-map (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype synthetic-timestamp-date-time () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (trustedadvisor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message)))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass update-organization-recommendation-lifecycle-request
                       common-lisp:nil
                       ((lifecycle-stage :initarg :lifecycle-stage :initform
                         (common-lisp:error ":lifecyclestage is required")
                         :type
                         (common-lisp:or update-recommendation-lifecycle-stage
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-organization-recommendation-lifecycle-request-lifecycle-stage
                         :shape "UpdateRecommendationLifecycleStage" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (organization-recommendation-identifier :initarg
                         :organization-recommendation-identifier :initform
                         (common-lisp:error
                          ":organizationrecommendationidentifier is required")
                         :type
                         (common-lisp:or organization-recommendation-identifier
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-organization-recommendation-lifecycle-request-organization-recommendation-identifier
                         :shape "OrganizationRecommendationIdentifier"
                         :location "uri" :location-name
                         "organizationRecommendationIdentifier")
                        (update-reason :initarg :update-reason :initform
                         common-lisp:nil :type
                         (common-lisp:or recommendation-update-reason
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-organization-recommendation-lifecycle-request-update-reason
                         :shape "RecommendationUpdateReason" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (update-reason-code :initarg :update-reason-code
                         :initform common-lisp:nil :type
                         (common-lisp:or
                          update-recommendation-lifecycle-stage-reason-code
                          common-lisp:null)
                         :accessor
                         struct-shape-update-organization-recommendation-lifecycle-request-update-reason-code
                         :shape "UpdateRecommendationLifecycleStageReasonCode"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-organization-recommendation-lifecycle-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-organization-recommendation-lifecycle-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-organization-recommendation-lifecycle-request
                    'make-update-organization-recommendation-lifecycle-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-organization-recommendation-lifecycle-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-organization-recommendation-lifecycle-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lifecycle-stage))
      (common-lisp:list
       (common-lisp:cons "lifecycleStage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-reason))
      (common-lisp:list
       (common-lisp:cons "updateReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-reason-code))
      (common-lisp:list
       (common-lisp:cons "updateReasonCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-organization-recommendation-lifecycle-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-recommendation-lifecycle-request common-lisp:nil
                       ((lifecycle-stage :initarg :lifecycle-stage :initform
                         (common-lisp:error ":lifecyclestage is required")
                         :type
                         (common-lisp:or update-recommendation-lifecycle-stage
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-recommendation-lifecycle-request-lifecycle-stage
                         :shape "UpdateRecommendationLifecycleStage" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (recommendation-identifier :initarg
                         :recommendation-identifier :initform
                         (common-lisp:error
                          ":recommendationidentifier is required")
                         :type
                         (common-lisp:or account-recommendation-identifier
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-recommendation-lifecycle-request-recommendation-identifier
                         :shape "AccountRecommendationIdentifier" :location
                         "uri" :location-name "recommendationIdentifier")
                        (update-reason :initarg :update-reason :initform
                         common-lisp:nil :type
                         (common-lisp:or recommendation-update-reason
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-recommendation-lifecycle-request-update-reason
                         :shape "RecommendationUpdateReason" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (update-reason-code :initarg :update-reason-code
                         :initform common-lisp:nil :type
                         (common-lisp:or
                          update-recommendation-lifecycle-stage-reason-code
                          common-lisp:null)
                         :accessor
                         struct-shape-update-recommendation-lifecycle-request-update-reason-code
                         :shape "UpdateRecommendationLifecycleStageReasonCode"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-recommendation-lifecycle-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-recommendation-lifecycle-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-recommendation-lifecycle-request
                    'make-update-recommendation-lifecycle-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-recommendation-lifecycle-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-recommendation-lifecycle-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lifecycle-stage))
      (common-lisp:list
       (common-lisp:cons "lifecycleStage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-reason))
      (common-lisp:list
       (common-lisp:cons "updateReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-reason-code))
      (common-lisp:list
       (common-lisp:cons "updateReasonCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-recommendation-lifecycle-request))
   common-lisp:nil))
(common-lisp:deftype update-recommendation-lifecycle-stage ()
  'common-lisp:string)
(common-lisp:deftype update-recommendation-lifecycle-stage-reason-code ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (trustedadvisor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message)))
(common-lisp:progn
 (common-lisp:defun get-organization-recommendation
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key organization-recommendation-identifier)
   (common-lisp:declare
    (common-lisp:ignorable organization-recommendation-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-organization-recommendation-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'trustedadvisor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/organization-recommendations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'organization-recommendation-identifier))))
                                                        "GetOrganizationRecommendation"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-organization-recommendation))
(common-lisp:progn
 (common-lisp:defun get-recommendation
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key recommendation-identifier)
   (common-lisp:declare (common-lisp:ignorable recommendation-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-recommendation-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'trustedadvisor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/recommendations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'recommendation-identifier))))
                                                        "GetRecommendation"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-recommendation))
(common-lisp:progn
 (common-lisp:defun list-checks
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key aws-service language max-results
                     next-token pillar source)
   (common-lisp:declare
    (common-lisp:ignorable aws-service language max-results next-token pillar
     source))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-checks-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'trustedadvisor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/v1/checks"
                                                        "ListChecks"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-checks))
(common-lisp:progn
 (common-lisp:defun list-organization-recommendation-accounts
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key affected-account-id max-results
                     next-token organization-recommendation-identifier)
   (common-lisp:declare
    (common-lisp:ignorable affected-account-id max-results next-token
     organization-recommendation-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-organization-recommendation-accounts-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'trustedadvisor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/organization-recommendations/~A/accounts"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'organization-recommendation-identifier))))
                                                        "ListOrganizationRecommendationAccounts"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-organization-recommendation-accounts))
(common-lisp:progn
 (common-lisp:defun list-organization-recommendation-resources
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key affected-account-id max-results
                     next-token organization-recommendation-identifier
                     region-code status)
   (common-lisp:declare
    (common-lisp:ignorable affected-account-id max-results next-token
     organization-recommendation-identifier region-code status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-organization-recommendation-resources-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'trustedadvisor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/organization-recommendations/~A/resources"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'organization-recommendation-identifier))))
                                                        "ListOrganizationRecommendationResources"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-organization-recommendation-resources))
(common-lisp:progn
 (common-lisp:defun list-organization-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key after-last-updated-at aws-service
                     before-last-updated-at check-identifier max-results
                     next-token pillar source status type)
   (common-lisp:declare
    (common-lisp:ignorable after-last-updated-at aws-service
     before-last-updated-at check-identifier max-results next-token pillar
     source status type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-organization-recommendations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'trustedadvisor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/v1/organization-recommendations"
                                                        "ListOrganizationRecommendations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-organization-recommendations))
(common-lisp:progn
 (common-lisp:defun list-recommendation-resources
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token
                     recommendation-identifier region-code status)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token recommendation-identifier
     region-code status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-recommendation-resources-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'trustedadvisor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/recommendations/~A/resources"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'recommendation-identifier))))
                                                        "ListRecommendationResources"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-recommendation-resources))
(common-lisp:progn
 (common-lisp:defun list-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key after-last-updated-at aws-service
                     before-last-updated-at check-identifier max-results
                     next-token pillar source status type)
   (common-lisp:declare
    (common-lisp:ignorable after-last-updated-at aws-service
     before-last-updated-at check-identifier max-results next-token pillar
     source status type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-recommendations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'trustedadvisor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/v1/recommendations"
                                                        "ListRecommendations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-recommendations))
(common-lisp:progn
 (common-lisp:defun update-organization-recommendation-lifecycle
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key lifecycle-stage
                     organization-recommendation-identifier update-reason
                     update-reason-code)
   (common-lisp:declare
    (common-lisp:ignorable lifecycle-stage
     organization-recommendation-identifier update-reason update-reason-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-organization-recommendation-lifecycle-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'trustedadvisor-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/organization-recommendations/~A/lifecycle"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'organization-recommendation-identifier))))
                                                        "UpdateOrganizationRecommendationLifecycle"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-organization-recommendation-lifecycle))
(common-lisp:progn
 (common-lisp:defun update-recommendation-lifecycle
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key lifecycle-stage recommendation-identifier
                     update-reason update-reason-code)
   (common-lisp:declare
    (common-lisp:ignorable lifecycle-stage recommendation-identifier
     update-reason update-reason-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-recommendation-lifecycle-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'trustedadvisor-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/recommendations/~A/lifecycle"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'recommendation-identifier))))
                                                        "UpdateRecommendationLifecycle"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-recommendation-lifecycle))
