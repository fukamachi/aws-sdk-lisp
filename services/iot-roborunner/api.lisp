;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(uiop/package:define-package #:aws-sdk/services/iot-roborunner/api (:use)
                             (:nicknames #:aws/iot-roborunner)
                             (:import-from #:aws-sdk/generator/shape)
                             (:import-from #:aws-sdk/generator/operation)
                             (:import-from #:aws-sdk/api)
                             (:import-from #:aws-sdk/request)
                             (:import-from #:aws-sdk/json-request)
                             (:import-from #:aws-sdk/rest-json-request)
                             (:import-from #:aws-sdk/rest-xml-request)
                             (:import-from #:aws-sdk/query-request)
                             (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/iot-roborunner/api)
(common-lisp:progn
 (common-lisp:define-condition iot-roborunner-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'iot-roborunner-error))
(common-lisp:progn
 (common-lisp:defclass iot-roborunner-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "iot-roborunner"
                        :api-version "2018-05-10" :host-prefix "iotroborunner"
                        :signing-name "iotroborunner" :global-host
                        common-lisp:nil))
 (common-lisp:export 'iot-roborunner-request))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceQuotaExceededException" . service-quota-exceeded-exception)
    ("ThrottlingException" . throttling-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (iot-roborunner-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:progn
 (common-lisp:defclass cartesian-coordinates common-lisp:nil
                       ((x :initarg :x :initform
                         (common-lisp:error ":x is required") :type
                         (common-lisp:or double common-lisp:null) :accessor
                         struct-shape-cartesian-coordinates-x :shape "Double"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (y :initarg :y :initform
                         (common-lisp:error ":y is required") :type
                         (common-lisp:or double common-lisp:null) :accessor
                         struct-shape-cartesian-coordinates-y :shape "Double"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (z :initarg :z :initform common-lisp:nil :type
                         (common-lisp:or double common-lisp:null) :accessor
                         struct-shape-cartesian-coordinates-z :shape "Double"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-cartesian-coordinates
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'cartesian-coordinates
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'cartesian-coordinates 'make-cartesian-coordinates))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cartesian-coordinates))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cartesian-coordinates))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'x))
      (common-lisp:list
       (common-lisp:cons "x"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'y))
      (common-lisp:list
       (common-lisp:cons "y"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'z))
      (common-lisp:list
       (common-lisp:cons "z"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cartesian-coordinates))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (iot-roborunner-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message)))
(common-lisp:progn
 (common-lisp:defclass create-destination-request common-lisp:nil
                       ((client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or idempotency-token common-lisp:null)
                         :accessor
                         struct-shape-create-destination-request-client-token
                         :shape "IdempotencyToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-create-destination-request-name :shape
                         "Name" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (site :initarg :site :initform
                         (common-lisp:error ":site is required") :type
                         (common-lisp:or site-generic-identifier
                                         common-lisp:null)
                         :accessor struct-shape-create-destination-request-site
                         :shape "SiteGenericIdentifier" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or destination-state common-lisp:null)
                         :accessor
                         struct-shape-create-destination-request-state :shape
                         "DestinationState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (additional-fixed-properties :initarg
                         :additional-fixed-properties :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          destination-additional-fixed-properties
                          common-lisp:null)
                         :accessor
                         struct-shape-create-destination-request-additional-fixed-properties
                         :shape "DestinationAdditionalFixedProperties"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-destination-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-destination-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-destination-request
                    'make-create-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-destination-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'site))
      (common-lisp:list
       (common-lisp:cons "site"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-fixed-properties))
      (common-lisp:list
       (common-lisp:cons "additionalFixedProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-destination-response common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or destination-arn common-lisp:null)
                         :accessor struct-shape-create-destination-response-arn
                         :shape "DestinationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or destination-id common-lisp:null)
                         :accessor struct-shape-create-destination-response-id
                         :shape "DestinationId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         (common-lisp:error ":createdat is required") :type
                         (common-lisp:or created-at-timestamp common-lisp:null)
                         :accessor
                         struct-shape-create-destination-response-created-at
                         :shape "CreatedAtTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-at :initarg :updated-at :initform
                         (common-lisp:error ":updatedat is required") :type
                         (common-lisp:or updated-at-timestamp common-lisp:null)
                         :accessor
                         struct-shape-create-destination-response-updated-at
                         :shape "UpdatedAtTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform
                         (common-lisp:error ":state is required") :type
                         (common-lisp:or destination-state common-lisp:null)
                         :accessor
                         struct-shape-create-destination-response-state :shape
                         "DestinationState" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-destination-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-destination-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-destination-response
                    'make-create-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-destination-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-destination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-site-request common-lisp:nil
                       ((client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or idempotency-token common-lisp:null)
                         :accessor
                         struct-shape-create-site-request-client-token :shape
                         "IdempotencyToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-create-site-request-name :shape "Name"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (country-code :initarg :country-code :initform
                         (common-lisp:error ":countrycode is required") :type
                         (common-lisp:or site-country-code common-lisp:null)
                         :accessor
                         struct-shape-create-site-request-country-code :shape
                         "SiteCountryCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or site-description common-lisp:null)
                         :accessor struct-shape-create-site-request-description
                         :shape "SiteDescription" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-site-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-site-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-site-request 'make-create-site-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-site-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-site-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'country-code))
      (common-lisp:list
       (common-lisp:cons "countryCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-site-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-site-response common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or site-arn common-lisp:null) :accessor
                         struct-shape-create-site-response-arn :shape "SiteArn"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or site-id common-lisp:null) :accessor
                         struct-shape-create-site-response-id :shape "SiteId"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         (common-lisp:error ":createdat is required") :type
                         (common-lisp:or created-at-timestamp common-lisp:null)
                         :accessor struct-shape-create-site-response-created-at
                         :shape "CreatedAtTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-at :initarg :updated-at :initform
                         (common-lisp:error ":updatedat is required") :type
                         (common-lisp:or updated-at-timestamp common-lisp:null)
                         :accessor struct-shape-create-site-response-updated-at
                         :shape "UpdatedAtTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-site-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-site-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-site-response 'make-create-site-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-site-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-site-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-site-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-worker-fleet-request common-lisp:nil
                       ((client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or idempotency-token common-lisp:null)
                         :accessor
                         struct-shape-create-worker-fleet-request-client-token
                         :shape "IdempotencyToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-create-worker-fleet-request-name :shape
                         "Name" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (site :initarg :site :initform
                         (common-lisp:error ":site is required") :type
                         (common-lisp:or site-generic-identifier
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-worker-fleet-request-site :shape
                         "SiteGenericIdentifier" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (additional-fixed-properties :initarg
                         :additional-fixed-properties :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          worker-fleet-additional-fixed-properties
                          common-lisp:null)
                         :accessor
                         struct-shape-create-worker-fleet-request-additional-fixed-properties
                         :shape "WorkerFleetAdditionalFixedProperties"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-worker-fleet-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-worker-fleet-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-worker-fleet-request
                    'make-create-worker-fleet-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-worker-fleet-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-worker-fleet-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'site))
      (common-lisp:list
       (common-lisp:cons "site"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-fixed-properties))
      (common-lisp:list
       (common-lisp:cons "additionalFixedProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-worker-fleet-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-worker-fleet-response common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or worker-fleet-arn common-lisp:null)
                         :accessor
                         struct-shape-create-worker-fleet-response-arn :shape
                         "WorkerFleetArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or worker-fleet-id common-lisp:null)
                         :accessor struct-shape-create-worker-fleet-response-id
                         :shape "WorkerFleetId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         (common-lisp:error ":createdat is required") :type
                         (common-lisp:or created-at-timestamp common-lisp:null)
                         :accessor
                         struct-shape-create-worker-fleet-response-created-at
                         :shape "CreatedAtTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-at :initarg :updated-at :initform
                         (common-lisp:error ":updatedat is required") :type
                         (common-lisp:or updated-at-timestamp common-lisp:null)
                         :accessor
                         struct-shape-create-worker-fleet-response-updated-at
                         :shape "UpdatedAtTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-worker-fleet-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-worker-fleet-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-worker-fleet-response
                    'make-create-worker-fleet-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-worker-fleet-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-worker-fleet-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-worker-fleet-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-worker-request common-lisp:nil
                       ((client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or idempotency-token common-lisp:null)
                         :accessor
                         struct-shape-create-worker-request-client-token :shape
                         "IdempotencyToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-create-worker-request-name :shape "Name"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (fleet :initarg :fleet :initform
                         (common-lisp:error ":fleet is required") :type
                         (common-lisp:or worker-fleet-generic-identifier
                                         common-lisp:null)
                         :accessor struct-shape-create-worker-request-fleet
                         :shape "WorkerFleetGenericIdentifier" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (additional-transient-properties :initarg
                         :additional-transient-properties :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          worker-additional-transient-properties-json
                          common-lisp:null)
                         :accessor
                         struct-shape-create-worker-request-additional-transient-properties
                         :shape "WorkerAdditionalTransientPropertiesJson"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (additional-fixed-properties :initarg
                         :additional-fixed-properties :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          worker-additional-fixed-properties-json
                          common-lisp:null)
                         :accessor
                         struct-shape-create-worker-request-additional-fixed-properties
                         :shape "WorkerAdditionalFixedPropertiesJson" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (vendor-properties :initarg :vendor-properties
                         :initform common-lisp:nil :type
                         (common-lisp:or vendor-properties common-lisp:null)
                         :accessor
                         struct-shape-create-worker-request-vendor-properties
                         :shape "VendorProperties" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (position :initarg :position :initform common-lisp:nil
                         :type
                         (common-lisp:or position-coordinates common-lisp:null)
                         :accessor struct-shape-create-worker-request-position
                         :shape "PositionCoordinates" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (orientation :initarg :orientation :initform
                         common-lisp:nil :type
                         (common-lisp:or orientation common-lisp:null)
                         :accessor
                         struct-shape-create-worker-request-orientation :shape
                         "Orientation" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-worker-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-worker-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-worker-request 'make-create-worker-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-worker-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-worker-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fleet))
      (common-lisp:list
       (common-lisp:cons "fleet"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-transient-properties))
      (common-lisp:list
       (common-lisp:cons "additionalTransientProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-fixed-properties))
      (common-lisp:list
       (common-lisp:cons "additionalFixedProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vendor-properties))
      (common-lisp:list
       (common-lisp:cons "vendorProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'orientation))
      (common-lisp:list
       (common-lisp:cons "orientation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-worker-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-worker-response common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or worker-arn common-lisp:null) :accessor
                         struct-shape-create-worker-response-arn :shape
                         "WorkerArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or worker-id common-lisp:null) :accessor
                         struct-shape-create-worker-response-id :shape
                         "WorkerId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         (common-lisp:error ":createdat is required") :type
                         (common-lisp:or created-at-timestamp common-lisp:null)
                         :accessor
                         struct-shape-create-worker-response-created-at :shape
                         "CreatedAtTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-at :initarg :updated-at :initform
                         (common-lisp:error ":updatedat is required") :type
                         (common-lisp:or updated-at-timestamp common-lisp:null)
                         :accessor
                         struct-shape-create-worker-response-updated-at :shape
                         "UpdatedAtTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (site :initarg :site :initform
                         (common-lisp:error ":site is required") :type
                         (common-lisp:or site-arn common-lisp:null) :accessor
                         struct-shape-create-worker-response-site :shape
                         "SiteArn" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-worker-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-worker-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-worker-response 'make-create-worker-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-worker-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-worker-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'site))
      (common-lisp:list
       (common-lisp:cons "site"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-worker-response))
   common-lisp:nil))
(common-lisp:deftype created-at-timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass delete-destination-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or destination-generic-identifier
                                         common-lisp:null)
                         :accessor struct-shape-delete-destination-request-id
                         :shape "DestinationGenericIdentifier" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-destination-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-destination-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-destination-request
                    'make-delete-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-destination-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-destination-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-destination-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-destination-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-destination-response
                    'make-delete-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-destination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-site-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or site-generic-identifier
                                         common-lisp:null)
                         :accessor struct-shape-delete-site-request-id :shape
                         "SiteGenericIdentifier" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-site-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-site-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-site-request 'make-delete-site-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-site-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-site-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-site-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-site-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-site-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-site-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-site-response 'make-delete-site-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-site-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-site-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-site-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-worker-fleet-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or worker-fleet-generic-identifier
                                         common-lisp:null)
                         :accessor struct-shape-delete-worker-fleet-request-id
                         :shape "WorkerFleetGenericIdentifier" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-worker-fleet-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-worker-fleet-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-worker-fleet-request
                    'make-delete-worker-fleet-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-worker-fleet-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-worker-fleet-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-worker-fleet-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-worker-fleet-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-worker-fleet-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-worker-fleet-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-worker-fleet-response
                    'make-delete-worker-fleet-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-worker-fleet-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-worker-fleet-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-worker-fleet-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-worker-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or worker-generic-identifier
                                         common-lisp:null)
                         :accessor struct-shape-delete-worker-request-id :shape
                         "WorkerGenericIdentifier" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-worker-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-worker-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-worker-request 'make-delete-worker-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-worker-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-worker-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-worker-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-worker-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-worker-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-worker-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-worker-response 'make-delete-worker-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-worker-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-worker-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-worker-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass destination common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or destination-arn common-lisp:null)
                         :accessor struct-shape-destination-arn :shape
                         "DestinationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or destination-id common-lisp:null)
                         :accessor struct-shape-destination-id :shape
                         "DestinationId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-destination-name :shape "Name" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (site :initarg :site :initform
                         (common-lisp:error ":site is required") :type
                         (common-lisp:or site-arn common-lisp:null) :accessor
                         struct-shape-destination-site :shape "SiteArn"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         (common-lisp:error ":createdat is required") :type
                         (common-lisp:or created-at-timestamp common-lisp:null)
                         :accessor struct-shape-destination-created-at :shape
                         "CreatedAtTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-at :initarg :updated-at :initform
                         (common-lisp:error ":updatedat is required") :type
                         (common-lisp:or updated-at-timestamp common-lisp:null)
                         :accessor struct-shape-destination-updated-at :shape
                         "UpdatedAtTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform
                         (common-lisp:error ":state is required") :type
                         (common-lisp:or destination-state common-lisp:null)
                         :accessor struct-shape-destination-state :shape
                         "DestinationState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (additional-fixed-properties :initarg
                         :additional-fixed-properties :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          destination-additional-fixed-properties
                          common-lisp:null)
                         :accessor
                         struct-shape-destination-additional-fixed-properties
                         :shape "DestinationAdditionalFixedProperties"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-destination
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'destination
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'destination 'make-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'site))
      (common-lisp:list
       (common-lisp:cons "site"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-fixed-properties))
      (common-lisp:list
       (common-lisp:cons "additionalFixedProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input destination))
   common-lisp:nil))
(common-lisp:deftype destination-additional-fixed-properties ()
  'common-lisp:string)
(common-lisp:deftype destination-arn () 'common-lisp:string)
(common-lisp:deftype destination-generic-identifier () 'common-lisp:string)
(common-lisp:deftype destination-id () 'common-lisp:string)
(common-lisp:deftype destination-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype destinations () '(trivial-types:proper-list destination))
 (common-lisp:defun make-destinations
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list destination))
   aws-sdk/generator/shape::members))
(common-lisp:deftype double () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defclass get-destination-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or destination-generic-identifier
                                         common-lisp:null)
                         :accessor struct-shape-get-destination-request-id
                         :shape "DestinationGenericIdentifier" :location
                         "querystring" :location-name "id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-destination-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-destination-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-destination-request 'make-get-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-destination-response common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or destination-arn common-lisp:null)
                         :accessor struct-shape-get-destination-response-arn
                         :shape "DestinationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or destination-id common-lisp:null)
                         :accessor struct-shape-get-destination-response-id
                         :shape "DestinationId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-get-destination-response-name :shape
                         "Name" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (site :initarg :site :initform
                         (common-lisp:error ":site is required") :type
                         (common-lisp:or site-arn common-lisp:null) :accessor
                         struct-shape-get-destination-response-site :shape
                         "SiteArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         (common-lisp:error ":createdat is required") :type
                         (common-lisp:or created-at-timestamp common-lisp:null)
                         :accessor
                         struct-shape-get-destination-response-created-at
                         :shape "CreatedAtTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-at :initarg :updated-at :initform
                         (common-lisp:error ":updatedat is required") :type
                         (common-lisp:or updated-at-timestamp common-lisp:null)
                         :accessor
                         struct-shape-get-destination-response-updated-at
                         :shape "UpdatedAtTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform
                         (common-lisp:error ":state is required") :type
                         (common-lisp:or destination-state common-lisp:null)
                         :accessor struct-shape-get-destination-response-state
                         :shape "DestinationState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (additional-fixed-properties :initarg
                         :additional-fixed-properties :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          destination-additional-fixed-properties
                          common-lisp:null)
                         :accessor
                         struct-shape-get-destination-response-additional-fixed-properties
                         :shape "DestinationAdditionalFixedProperties"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-destination-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-destination-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-destination-response 'make-get-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-destination-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'site))
      (common-lisp:list
       (common-lisp:cons "site"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-fixed-properties))
      (common-lisp:list
       (common-lisp:cons "additionalFixedProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-destination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-site-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or site-generic-identifier
                                         common-lisp:null)
                         :accessor struct-shape-get-site-request-id :shape
                         "SiteGenericIdentifier" :location "querystring"
                         :location-name "id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-site-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-site-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-site-request 'make-get-site-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-site-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-site-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-site-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-site-response common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or site-arn common-lisp:null) :accessor
                         struct-shape-get-site-response-arn :shape "SiteArn"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or site-id common-lisp:null) :accessor
                         struct-shape-get-site-response-id :shape "SiteId"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-get-site-response-name :shape "Name"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (country-code :initarg :country-code :initform
                         (common-lisp:error ":countrycode is required") :type
                         (common-lisp:or site-country-code common-lisp:null)
                         :accessor struct-shape-get-site-response-country-code
                         :shape "SiteCountryCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or site-description common-lisp:null)
                         :accessor struct-shape-get-site-response-description
                         :shape "SiteDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         (common-lisp:error ":createdat is required") :type
                         (common-lisp:or created-at-timestamp common-lisp:null)
                         :accessor struct-shape-get-site-response-created-at
                         :shape "CreatedAtTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-at :initarg :updated-at :initform
                         (common-lisp:error ":updatedat is required") :type
                         (common-lisp:or updated-at-timestamp common-lisp:null)
                         :accessor struct-shape-get-site-response-updated-at
                         :shape "UpdatedAtTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-site-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-site-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-site-response 'make-get-site-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-site-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-site-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'country-code))
      (common-lisp:list
       (common-lisp:cons "countryCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-site-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-worker-fleet-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or worker-fleet-generic-identifier
                                         common-lisp:null)
                         :accessor struct-shape-get-worker-fleet-request-id
                         :shape "WorkerFleetGenericIdentifier" :location
                         "querystring" :location-name "id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-worker-fleet-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-worker-fleet-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-worker-fleet-request 'make-get-worker-fleet-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-worker-fleet-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-worker-fleet-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-worker-fleet-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-worker-fleet-response common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or worker-fleet-id common-lisp:null)
                         :accessor struct-shape-get-worker-fleet-response-id
                         :shape "WorkerFleetId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or worker-fleet-arn common-lisp:null)
                         :accessor struct-shape-get-worker-fleet-response-arn
                         :shape "WorkerFleetArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-get-worker-fleet-response-name :shape
                         "Name" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (site :initarg :site :initform
                         (common-lisp:error ":site is required") :type
                         (common-lisp:or site-arn common-lisp:null) :accessor
                         struct-shape-get-worker-fleet-response-site :shape
                         "SiteArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         (common-lisp:error ":createdat is required") :type
                         (common-lisp:or created-at-timestamp common-lisp:null)
                         :accessor
                         struct-shape-get-worker-fleet-response-created-at
                         :shape "CreatedAtTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-at :initarg :updated-at :initform
                         (common-lisp:error ":updatedat is required") :type
                         (common-lisp:or updated-at-timestamp common-lisp:null)
                         :accessor
                         struct-shape-get-worker-fleet-response-updated-at
                         :shape "UpdatedAtTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (additional-fixed-properties :initarg
                         :additional-fixed-properties :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          worker-fleet-additional-fixed-properties
                          common-lisp:null)
                         :accessor
                         struct-shape-get-worker-fleet-response-additional-fixed-properties
                         :shape "WorkerFleetAdditionalFixedProperties"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-worker-fleet-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-worker-fleet-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-worker-fleet-response
                    'make-get-worker-fleet-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-worker-fleet-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-worker-fleet-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'site))
      (common-lisp:list
       (common-lisp:cons "site"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-fixed-properties))
      (common-lisp:list
       (common-lisp:cons "additionalFixedProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-worker-fleet-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-worker-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or worker-generic-identifier
                                         common-lisp:null)
                         :accessor struct-shape-get-worker-request-id :shape
                         "WorkerGenericIdentifier" :location "querystring"
                         :location-name "id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-worker-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-worker-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-worker-request 'make-get-worker-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-worker-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-worker-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-worker-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-worker-response common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or worker-arn common-lisp:null) :accessor
                         struct-shape-get-worker-response-arn :shape
                         "WorkerArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or worker-id common-lisp:null) :accessor
                         struct-shape-get-worker-response-id :shape "WorkerId"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (fleet :initarg :fleet :initform
                         (common-lisp:error ":fleet is required") :type
                         (common-lisp:or worker-fleet-arn common-lisp:null)
                         :accessor struct-shape-get-worker-response-fleet
                         :shape "WorkerFleetArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (site :initarg :site :initform
                         (common-lisp:error ":site is required") :type
                         (common-lisp:or site-arn common-lisp:null) :accessor
                         struct-shape-get-worker-response-site :shape "SiteArn"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         (common-lisp:error ":createdat is required") :type
                         (common-lisp:or created-at-timestamp common-lisp:null)
                         :accessor struct-shape-get-worker-response-created-at
                         :shape "CreatedAtTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-at :initarg :updated-at :initform
                         (common-lisp:error ":updatedat is required") :type
                         (common-lisp:or updated-at-timestamp common-lisp:null)
                         :accessor struct-shape-get-worker-response-updated-at
                         :shape "UpdatedAtTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-get-worker-response-name :shape "Name"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (additional-transient-properties :initarg
                         :additional-transient-properties :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          worker-additional-transient-properties-json
                          common-lisp:null)
                         :accessor
                         struct-shape-get-worker-response-additional-transient-properties
                         :shape "WorkerAdditionalTransientPropertiesJson"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (additional-fixed-properties :initarg
                         :additional-fixed-properties :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          worker-additional-fixed-properties-json
                          common-lisp:null)
                         :accessor
                         struct-shape-get-worker-response-additional-fixed-properties
                         :shape "WorkerAdditionalFixedPropertiesJson" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (vendor-properties :initarg :vendor-properties
                         :initform common-lisp:nil :type
                         (common-lisp:or vendor-properties common-lisp:null)
                         :accessor
                         struct-shape-get-worker-response-vendor-properties
                         :shape "VendorProperties" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (position :initarg :position :initform common-lisp:nil
                         :type
                         (common-lisp:or position-coordinates common-lisp:null)
                         :accessor struct-shape-get-worker-response-position
                         :shape "PositionCoordinates" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (orientation :initarg :orientation :initform
                         common-lisp:nil :type
                         (common-lisp:or orientation common-lisp:null)
                         :accessor struct-shape-get-worker-response-orientation
                         :shape "Orientation" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-worker-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-worker-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-worker-response 'make-get-worker-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-worker-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-worker-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fleet))
      (common-lisp:list
       (common-lisp:cons "fleet"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'site))
      (common-lisp:list
       (common-lisp:cons "site"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-transient-properties))
      (common-lisp:list
       (common-lisp:cons "additionalTransientProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-fixed-properties))
      (common-lisp:list
       (common-lisp:cons "additionalFixedProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vendor-properties))
      (common-lisp:list
       (common-lisp:cons "vendorProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'orientation))
      (common-lisp:list
       (common-lisp:cons "orientation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-worker-response))
   common-lisp:nil))
(common-lisp:deftype idempotency-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (iot-roborunner-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message)))
(common-lisp:progn
 (common-lisp:defclass list-destinations-request common-lisp:nil
                       ((site :initarg :site :initform
                         (common-lisp:error ":site is required") :type
                         (common-lisp:or site-generic-identifier
                                         common-lisp:null)
                         :accessor struct-shape-list-destinations-request-site
                         :shape "SiteGenericIdentifier" :location "querystring"
                         :location-name "site")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or page-size common-lisp:null) :accessor
                         struct-shape-list-destinations-request-max-results
                         :shape "PageSize" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor
                         struct-shape-list-destinations-request-next-token
                         :shape "PaginationToken" :location "querystring"
                         :location-name "nextToken")
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or destination-state common-lisp:null)
                         :accessor struct-shape-list-destinations-request-state
                         :shape "DestinationState" :location "querystring"
                         :location-name "state"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-destinations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-destinations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-destinations-request
                    'make-list-destinations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-destinations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-destinations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-destinations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-destinations-response common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor
                         struct-shape-list-destinations-response-next-token
                         :shape "PaginationToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (destinations :initarg :destinations :initform
                         common-lisp:nil :type
                         (common-lisp:or destinations common-lisp:null)
                         :accessor
                         struct-shape-list-destinations-response-destinations
                         :shape "Destinations" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-destinations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-destinations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-destinations-response
                    'make-list-destinations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-destinations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-destinations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destinations))
      (common-lisp:list
       (common-lisp:cons "destinations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-destinations-response))
   common-lisp:nil))
(common-lisp:deftype list-sites-page-size () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass list-sites-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or list-sites-page-size common-lisp:null)
                         :accessor struct-shape-list-sites-request-max-results
                         :shape "ListSitesPageSize" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor struct-shape-list-sites-request-next-token
                         :shape "PaginationToken" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-sites-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-sites-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-sites-request 'make-list-sites-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-sites-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-sites-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-sites-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-sites-response common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor struct-shape-list-sites-response-next-token
                         :shape "PaginationToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sites :initarg :sites :initform common-lisp:nil :type
                         (common-lisp:or sites common-lisp:null) :accessor
                         struct-shape-list-sites-response-sites :shape "Sites"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-sites-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-sites-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-sites-response 'make-list-sites-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-sites-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-sites-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sites))
      (common-lisp:list
       (common-lisp:cons "sites"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-sites-response))
   common-lisp:nil))
(common-lisp:deftype list-worker-fleets-page-size () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass list-worker-fleets-request common-lisp:nil
                       ((site :initarg :site :initform
                         (common-lisp:error ":site is required") :type
                         (common-lisp:or site-generic-identifier
                                         common-lisp:null)
                         :accessor struct-shape-list-worker-fleets-request-site
                         :shape "SiteGenericIdentifier" :location "querystring"
                         :location-name "site")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or list-worker-fleets-page-size
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-worker-fleets-request-max-results
                         :shape "ListWorkerFleetsPageSize" :location
                         "querystring" :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor
                         struct-shape-list-worker-fleets-request-next-token
                         :shape "PaginationToken" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-worker-fleets-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-worker-fleets-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-worker-fleets-request
                    'make-list-worker-fleets-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-worker-fleets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-worker-fleets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-worker-fleets-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-worker-fleets-response common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor
                         struct-shape-list-worker-fleets-response-next-token
                         :shape "PaginationToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (worker-fleets :initarg :worker-fleets :initform
                         common-lisp:nil :type
                         (common-lisp:or worker-fleets common-lisp:null)
                         :accessor
                         struct-shape-list-worker-fleets-response-worker-fleets
                         :shape "WorkerFleets" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-worker-fleets-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-worker-fleets-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-worker-fleets-response
                    'make-list-worker-fleets-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-worker-fleets-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-worker-fleets-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'worker-fleets))
      (common-lisp:list
       (common-lisp:cons "workerFleets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-worker-fleets-response))
   common-lisp:nil))
(common-lisp:deftype list-workers-page-size () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass list-workers-request common-lisp:nil
                       ((site :initarg :site :initform
                         (common-lisp:error ":site is required") :type
                         (common-lisp:or site-generic-identifier
                                         common-lisp:null)
                         :accessor struct-shape-list-workers-request-site
                         :shape "SiteGenericIdentifier" :location "querystring"
                         :location-name "site")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or list-workers-page-size
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-workers-request-max-results :shape
                         "ListWorkersPageSize" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor struct-shape-list-workers-request-next-token
                         :shape "PaginationToken" :location "querystring"
                         :location-name "nextToken")
                        (fleet :initarg :fleet :initform common-lisp:nil :type
                         (common-lisp:or worker-fleet-generic-identifier
                                         common-lisp:null)
                         :accessor struct-shape-list-workers-request-fleet
                         :shape "WorkerFleetGenericIdentifier" :location
                         "querystring" :location-name "fleet"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-workers-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-workers-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-workers-request 'make-list-workers-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-workers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-workers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-workers-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-workers-response common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor
                         struct-shape-list-workers-response-next-token :shape
                         "PaginationToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (workers :initarg :workers :initform common-lisp:nil
                         :type (common-lisp:or workers common-lisp:null)
                         :accessor struct-shape-list-workers-response-workers
                         :shape "Workers" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-workers-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-workers-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-workers-response 'make-list-workers-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-workers-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-workers-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'workers))
      (common-lisp:list
       (common-lisp:cons "workers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-workers-response))
   common-lisp:nil))
(common-lisp:deftype name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass orientation common-lisp:nil
                       ((degrees :initarg :degrees :initform common-lisp:nil
                         :type
                         (common-lisp:or orientation-degrees-double
                                         common-lisp:null)
                         :accessor struct-shape-orientation-degrees :shape
                         "OrientationDegreesDouble" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-orientation
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'orientation
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'orientation 'make-orientation))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input orientation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input orientation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'degrees))
      (common-lisp:list
       (common-lisp:cons "degrees"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input orientation))
   common-lisp:nil))
(common-lisp:deftype orientation-degrees-double () 'common-lisp:double-float)
(common-lisp:deftype page-size () 'common-lisp:integer)
(common-lisp:deftype pagination-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass position-coordinates common-lisp:nil
                       ((cartesian-coordinates :initarg :cartesian-coordinates
                         :initform common-lisp:nil :type
                         (common-lisp:or cartesian-coordinates
                                         common-lisp:null)
                         :accessor
                         struct-shape-position-coordinates-cartesian-coordinates
                         :shape "CartesianCoordinates" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-position-coordinates
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'position-coordinates
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'position-coordinates 'make-position-coordinates))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input position-coordinates))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input position-coordinates))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cartesian-coordinates))
      (common-lisp:list
       (common-lisp:cons "cartesianCoordinates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input position-coordinates))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (iot-roborunner-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition service-quota-exceeded-exception
     (iot-roborunner-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-quota-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-quota-exceeded-exception
                    'service-quota-exceeded-exception-message)))
(common-lisp:progn
 (common-lisp:defclass site common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or site-arn common-lisp:null) :accessor
                         struct-shape-site-arn :shape "SiteArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-site-name :shape "Name" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (country-code :initarg :country-code :initform
                         (common-lisp:error ":countrycode is required") :type
                         (common-lisp:or site-country-code common-lisp:null)
                         :accessor struct-shape-site-country-code :shape
                         "SiteCountryCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         (common-lisp:error ":createdat is required") :type
                         (common-lisp:or created-at-timestamp common-lisp:null)
                         :accessor struct-shape-site-created-at :shape
                         "CreatedAtTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-site (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'site
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'site 'make-site))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input site))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input site))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'country-code))
      (common-lisp:list
       (common-lisp:cons "countryCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input site))
   common-lisp:nil))
(common-lisp:deftype site-arn () 'common-lisp:string)
(common-lisp:deftype site-country-code () 'common-lisp:string)
(common-lisp:deftype site-description () 'common-lisp:string)
(common-lisp:deftype site-generic-identifier () 'common-lisp:string)
(common-lisp:deftype site-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype sites () '(trivial-types:proper-list site))
 (common-lisp:defun make-sites
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list site))
   aws-sdk/generator/shape::members))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (iot-roborunner-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message)))
(common-lisp:progn
 (common-lisp:defclass update-destination-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or destination-generic-identifier
                                         common-lisp:null)
                         :accessor struct-shape-update-destination-request-id
                         :shape "DestinationGenericIdentifier" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-update-destination-request-name :shape
                         "Name" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or destination-state common-lisp:null)
                         :accessor
                         struct-shape-update-destination-request-state :shape
                         "DestinationState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (additional-fixed-properties :initarg
                         :additional-fixed-properties :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          destination-additional-fixed-properties
                          common-lisp:null)
                         :accessor
                         struct-shape-update-destination-request-additional-fixed-properties
                         :shape "DestinationAdditionalFixedProperties"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-destination-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-destination-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-destination-request
                    'make-update-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-destination-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-fixed-properties))
      (common-lisp:list
       (common-lisp:cons "additionalFixedProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-destination-response common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or destination-arn common-lisp:null)
                         :accessor struct-shape-update-destination-response-arn
                         :shape "DestinationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or destination-id common-lisp:null)
                         :accessor struct-shape-update-destination-response-id
                         :shape "DestinationId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-update-destination-response-name :shape
                         "Name" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (updated-at :initarg :updated-at :initform
                         (common-lisp:error ":updatedat is required") :type
                         (common-lisp:or updated-at-timestamp common-lisp:null)
                         :accessor
                         struct-shape-update-destination-response-updated-at
                         :shape "UpdatedAtTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform
                         (common-lisp:error ":state is required") :type
                         (common-lisp:or destination-state common-lisp:null)
                         :accessor
                         struct-shape-update-destination-response-state :shape
                         "DestinationState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (additional-fixed-properties :initarg
                         :additional-fixed-properties :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          destination-additional-fixed-properties
                          common-lisp:null)
                         :accessor
                         struct-shape-update-destination-response-additional-fixed-properties
                         :shape "DestinationAdditionalFixedProperties"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-destination-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-destination-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-destination-response
                    'make-update-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-destination-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-fixed-properties))
      (common-lisp:list
       (common-lisp:cons "additionalFixedProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-destination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-site-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or site-generic-identifier
                                         common-lisp:null)
                         :accessor struct-shape-update-site-request-id :shape
                         "SiteGenericIdentifier" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-update-site-request-name :shape "Name"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (country-code :initarg :country-code :initform
                         common-lisp:nil :type
                         (common-lisp:or site-country-code common-lisp:null)
                         :accessor
                         struct-shape-update-site-request-country-code :shape
                         "SiteCountryCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or site-description common-lisp:null)
                         :accessor struct-shape-update-site-request-description
                         :shape "SiteDescription" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-site-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-site-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-site-request 'make-update-site-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-site-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-site-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'country-code))
      (common-lisp:list
       (common-lisp:cons "countryCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-site-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-site-response common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or site-arn common-lisp:null) :accessor
                         struct-shape-update-site-response-arn :shape "SiteArn"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or site-id common-lisp:null) :accessor
                         struct-shape-update-site-response-id :shape "SiteId"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-update-site-response-name :shape "Name"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (country-code :initarg :country-code :initform
                         common-lisp:nil :type
                         (common-lisp:or site-country-code common-lisp:null)
                         :accessor
                         struct-shape-update-site-response-country-code :shape
                         "SiteCountryCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or site-description common-lisp:null)
                         :accessor
                         struct-shape-update-site-response-description :shape
                         "SiteDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-at :initarg :updated-at :initform
                         (common-lisp:error ":updatedat is required") :type
                         (common-lisp:or updated-at-timestamp common-lisp:null)
                         :accessor struct-shape-update-site-response-updated-at
                         :shape "UpdatedAtTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-site-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-site-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-site-response 'make-update-site-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-site-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-site-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'country-code))
      (common-lisp:list
       (common-lisp:cons "countryCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-site-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-worker-fleet-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or worker-fleet-generic-identifier
                                         common-lisp:null)
                         :accessor struct-shape-update-worker-fleet-request-id
                         :shape "WorkerFleetGenericIdentifier" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-update-worker-fleet-request-name :shape
                         "Name" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (additional-fixed-properties :initarg
                         :additional-fixed-properties :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          worker-fleet-additional-fixed-properties
                          common-lisp:null)
                         :accessor
                         struct-shape-update-worker-fleet-request-additional-fixed-properties
                         :shape "WorkerFleetAdditionalFixedProperties"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-worker-fleet-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-worker-fleet-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-worker-fleet-request
                    'make-update-worker-fleet-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-worker-fleet-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-worker-fleet-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-fixed-properties))
      (common-lisp:list
       (common-lisp:cons "additionalFixedProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-worker-fleet-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-worker-fleet-response common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or worker-fleet-arn common-lisp:null)
                         :accessor
                         struct-shape-update-worker-fleet-response-arn :shape
                         "WorkerFleetArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or worker-fleet-id common-lisp:null)
                         :accessor struct-shape-update-worker-fleet-response-id
                         :shape "WorkerFleetId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-update-worker-fleet-response-name :shape
                         "Name" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (updated-at :initarg :updated-at :initform
                         (common-lisp:error ":updatedat is required") :type
                         (common-lisp:or updated-at-timestamp common-lisp:null)
                         :accessor
                         struct-shape-update-worker-fleet-response-updated-at
                         :shape "UpdatedAtTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (additional-fixed-properties :initarg
                         :additional-fixed-properties :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          worker-fleet-additional-fixed-properties
                          common-lisp:null)
                         :accessor
                         struct-shape-update-worker-fleet-response-additional-fixed-properties
                         :shape "WorkerFleetAdditionalFixedProperties"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-worker-fleet-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-worker-fleet-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-worker-fleet-response
                    'make-update-worker-fleet-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-worker-fleet-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-worker-fleet-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-fixed-properties))
      (common-lisp:list
       (common-lisp:cons "additionalFixedProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-worker-fleet-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-worker-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or worker-generic-identifier
                                         common-lisp:null)
                         :accessor struct-shape-update-worker-request-id :shape
                         "WorkerGenericIdentifier" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-update-worker-request-name :shape "Name"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (additional-transient-properties :initarg
                         :additional-transient-properties :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          worker-additional-transient-properties-json
                          common-lisp:null)
                         :accessor
                         struct-shape-update-worker-request-additional-transient-properties
                         :shape "WorkerAdditionalTransientPropertiesJson"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (additional-fixed-properties :initarg
                         :additional-fixed-properties :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          worker-additional-fixed-properties-json
                          common-lisp:null)
                         :accessor
                         struct-shape-update-worker-request-additional-fixed-properties
                         :shape "WorkerAdditionalFixedPropertiesJson" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (vendor-properties :initarg :vendor-properties
                         :initform common-lisp:nil :type
                         (common-lisp:or vendor-properties common-lisp:null)
                         :accessor
                         struct-shape-update-worker-request-vendor-properties
                         :shape "VendorProperties" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (position :initarg :position :initform common-lisp:nil
                         :type
                         (common-lisp:or position-coordinates common-lisp:null)
                         :accessor struct-shape-update-worker-request-position
                         :shape "PositionCoordinates" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (orientation :initarg :orientation :initform
                         common-lisp:nil :type
                         (common-lisp:or orientation common-lisp:null)
                         :accessor
                         struct-shape-update-worker-request-orientation :shape
                         "Orientation" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-worker-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-worker-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-worker-request 'make-update-worker-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-worker-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-worker-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-transient-properties))
      (common-lisp:list
       (common-lisp:cons "additionalTransientProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-fixed-properties))
      (common-lisp:list
       (common-lisp:cons "additionalFixedProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vendor-properties))
      (common-lisp:list
       (common-lisp:cons "vendorProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'orientation))
      (common-lisp:list
       (common-lisp:cons "orientation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-worker-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-worker-response common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or worker-arn common-lisp:null) :accessor
                         struct-shape-update-worker-response-arn :shape
                         "WorkerArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or worker-id common-lisp:null) :accessor
                         struct-shape-update-worker-response-id :shape
                         "WorkerId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (fleet :initarg :fleet :initform
                         (common-lisp:error ":fleet is required") :type
                         (common-lisp:or worker-fleet-arn common-lisp:null)
                         :accessor struct-shape-update-worker-response-fleet
                         :shape "WorkerFleetArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-at :initarg :updated-at :initform
                         (common-lisp:error ":updatedat is required") :type
                         (common-lisp:or updated-at-timestamp common-lisp:null)
                         :accessor
                         struct-shape-update-worker-response-updated-at :shape
                         "UpdatedAtTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-update-worker-response-name :shape "Name"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (additional-transient-properties :initarg
                         :additional-transient-properties :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          worker-additional-transient-properties-json
                          common-lisp:null)
                         :accessor
                         struct-shape-update-worker-response-additional-transient-properties
                         :shape "WorkerAdditionalTransientPropertiesJson"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (additional-fixed-properties :initarg
                         :additional-fixed-properties :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          worker-additional-fixed-properties-json
                          common-lisp:null)
                         :accessor
                         struct-shape-update-worker-response-additional-fixed-properties
                         :shape "WorkerAdditionalFixedPropertiesJson" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (orientation :initarg :orientation :initform
                         common-lisp:nil :type
                         (common-lisp:or orientation common-lisp:null)
                         :accessor
                         struct-shape-update-worker-response-orientation :shape
                         "Orientation" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (vendor-properties :initarg :vendor-properties
                         :initform common-lisp:nil :type
                         (common-lisp:or vendor-properties common-lisp:null)
                         :accessor
                         struct-shape-update-worker-response-vendor-properties
                         :shape "VendorProperties" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (position :initarg :position :initform common-lisp:nil
                         :type
                         (common-lisp:or position-coordinates common-lisp:null)
                         :accessor struct-shape-update-worker-response-position
                         :shape "PositionCoordinates" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-worker-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-worker-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-worker-response 'make-update-worker-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-worker-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-worker-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fleet))
      (common-lisp:list
       (common-lisp:cons "fleet"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-transient-properties))
      (common-lisp:list
       (common-lisp:cons "additionalTransientProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-fixed-properties))
      (common-lisp:list
       (common-lisp:cons "additionalFixedProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'orientation))
      (common-lisp:list
       (common-lisp:cons "orientation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vendor-properties))
      (common-lisp:list
       (common-lisp:cons "vendorProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-worker-response))
   common-lisp:nil))
(common-lisp:deftype updated-at-timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (iot-roborunner-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message)))
(common-lisp:deftype vendor-additional-fixed-properties-json ()
  'common-lisp:string)
(common-lisp:deftype vendor-additional-transient-properties-json ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass vendor-properties common-lisp:nil
                       ((vendor-worker-id :initarg :vendor-worker-id :initform
                         (common-lisp:error ":vendorworkerid is required")
                         :type
                         (common-lisp:or vendor-worker-id common-lisp:null)
                         :accessor
                         struct-shape-vendor-properties-vendor-worker-id :shape
                         "VendorWorkerId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vendor-worker-ip-address :initarg
                         :vendor-worker-ip-address :initform common-lisp:nil
                         :type
                         (common-lisp:or vendor-worker-ip-address
                                         common-lisp:null)
                         :accessor
                         struct-shape-vendor-properties-vendor-worker-ip-address
                         :shape "VendorWorkerIpAddress" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (vendor-additional-transient-properties :initarg
                         :vendor-additional-transient-properties :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          vendor-additional-transient-properties-json
                          common-lisp:null)
                         :accessor
                         struct-shape-vendor-properties-vendor-additional-transient-properties
                         :shape "VendorAdditionalTransientPropertiesJson"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (vendor-additional-fixed-properties :initarg
                         :vendor-additional-fixed-properties :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          vendor-additional-fixed-properties-json
                          common-lisp:null)
                         :accessor
                         struct-shape-vendor-properties-vendor-additional-fixed-properties
                         :shape "VendorAdditionalFixedPropertiesJson" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-vendor-properties
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'vendor-properties
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'vendor-properties 'make-vendor-properties))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vendor-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vendor-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vendor-worker-id))
      (common-lisp:list
       (common-lisp:cons "vendorWorkerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vendor-worker-ip-address))
      (common-lisp:list
       (common-lisp:cons "vendorWorkerIpAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vendor-additional-transient-properties))
      (common-lisp:list
       (common-lisp:cons "vendorAdditionalTransientProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vendor-additional-fixed-properties))
      (common-lisp:list
       (common-lisp:cons "vendorAdditionalFixedProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vendor-properties))
   common-lisp:nil))
(common-lisp:deftype vendor-worker-id () 'common-lisp:string)
(common-lisp:deftype vendor-worker-ip-address () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass worker common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or worker-arn common-lisp:null) :accessor
                         struct-shape-worker-arn :shape "WorkerArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or worker-id common-lisp:null) :accessor
                         struct-shape-worker-id :shape "WorkerId" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (fleet :initarg :fleet :initform
                         (common-lisp:error ":fleet is required") :type
                         (common-lisp:or worker-fleet-arn common-lisp:null)
                         :accessor struct-shape-worker-fleet :shape
                         "WorkerFleetArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         (common-lisp:error ":createdat is required") :type
                         (common-lisp:or created-at-timestamp common-lisp:null)
                         :accessor struct-shape-worker-created-at :shape
                         "CreatedAtTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-at :initarg :updated-at :initform
                         (common-lisp:error ":updatedat is required") :type
                         (common-lisp:or updated-at-timestamp common-lisp:null)
                         :accessor struct-shape-worker-updated-at :shape
                         "UpdatedAtTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-worker-name :shape "Name" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (site :initarg :site :initform
                         (common-lisp:error ":site is required") :type
                         (common-lisp:or site-arn common-lisp:null) :accessor
                         struct-shape-worker-site :shape "SiteArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (additional-transient-properties :initarg
                         :additional-transient-properties :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          worker-additional-transient-properties-json
                          common-lisp:null)
                         :accessor
                         struct-shape-worker-additional-transient-properties
                         :shape "WorkerAdditionalTransientPropertiesJson"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (additional-fixed-properties :initarg
                         :additional-fixed-properties :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          worker-additional-fixed-properties-json
                          common-lisp:null)
                         :accessor
                         struct-shape-worker-additional-fixed-properties :shape
                         "WorkerAdditionalFixedPropertiesJson" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (vendor-properties :initarg :vendor-properties
                         :initform common-lisp:nil :type
                         (common-lisp:or vendor-properties common-lisp:null)
                         :accessor struct-shape-worker-vendor-properties :shape
                         "VendorProperties" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (position :initarg :position :initform common-lisp:nil
                         :type
                         (common-lisp:or position-coordinates common-lisp:null)
                         :accessor struct-shape-worker-position :shape
                         "PositionCoordinates" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (orientation :initarg :orientation :initform
                         common-lisp:nil :type
                         (common-lisp:or orientation common-lisp:null)
                         :accessor struct-shape-worker-orientation :shape
                         "Orientation" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-worker
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'worker
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'worker 'make-worker))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input worker))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input worker))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fleet))
      (common-lisp:list
       (common-lisp:cons "fleet"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'site))
      (common-lisp:list
       (common-lisp:cons "site"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-transient-properties))
      (common-lisp:list
       (common-lisp:cons "additionalTransientProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-fixed-properties))
      (common-lisp:list
       (common-lisp:cons "additionalFixedProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vendor-properties))
      (common-lisp:list
       (common-lisp:cons "vendorProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'orientation))
      (common-lisp:list
       (common-lisp:cons "orientation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input worker))
   common-lisp:nil))
(common-lisp:deftype worker-additional-fixed-properties-json ()
  'common-lisp:string)
(common-lisp:deftype worker-additional-transient-properties-json ()
  'common-lisp:string)
(common-lisp:deftype worker-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass worker-fleet common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or worker-fleet-arn common-lisp:null)
                         :accessor struct-shape-worker-fleet-arn :shape
                         "WorkerFleetArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or worker-fleet-id common-lisp:null)
                         :accessor struct-shape-worker-fleet-id :shape
                         "WorkerFleetId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-worker-fleet-name :shape "Name" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (site :initarg :site :initform
                         (common-lisp:error ":site is required") :type
                         (common-lisp:or site-arn common-lisp:null) :accessor
                         struct-shape-worker-fleet-site :shape "SiteArn"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         (common-lisp:error ":createdat is required") :type
                         (common-lisp:or created-at-timestamp common-lisp:null)
                         :accessor struct-shape-worker-fleet-created-at :shape
                         "CreatedAtTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-at :initarg :updated-at :initform
                         (common-lisp:error ":updatedat is required") :type
                         (common-lisp:or updated-at-timestamp common-lisp:null)
                         :accessor struct-shape-worker-fleet-updated-at :shape
                         "UpdatedAtTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (additional-fixed-properties :initarg
                         :additional-fixed-properties :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          worker-fleet-additional-fixed-properties
                          common-lisp:null)
                         :accessor
                         struct-shape-worker-fleet-additional-fixed-properties
                         :shape "WorkerFleetAdditionalFixedProperties"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-worker-fleet
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'worker-fleet
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'worker-fleet 'make-worker-fleet))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input worker-fleet))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input worker-fleet))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'site))
      (common-lisp:list
       (common-lisp:cons "site"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-fixed-properties))
      (common-lisp:list
       (common-lisp:cons "additionalFixedProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input worker-fleet))
   common-lisp:nil))
(common-lisp:deftype worker-fleet-additional-fixed-properties ()
  'common-lisp:string)
(common-lisp:deftype worker-fleet-arn () 'common-lisp:string)
(common-lisp:deftype worker-fleet-generic-identifier () 'common-lisp:string)
(common-lisp:deftype worker-fleet-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype worker-fleets ()
   '(trivial-types:proper-list worker-fleet))
 (common-lisp:defun make-worker-fleets
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list worker-fleet))
   aws-sdk/generator/shape::members))
(common-lisp:deftype worker-generic-identifier () 'common-lisp:string)
(common-lisp:deftype worker-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype workers () '(trivial-types:proper-list worker))
 (common-lisp:defun make-workers
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list worker))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defun create-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token name site state
                     additional-fixed-properties)
   (common-lisp:declare
    (common-lisp:ignorable client-token name site state
     additional-fixed-properties))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-destination-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/createDestination"
                                                        "CreateDestination"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-destination))
(common-lisp:progn
 (common-lisp:defun create-site
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token name country-code
                     description)
   (common-lisp:declare
    (common-lisp:ignorable client-token name country-code description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-site-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/createSite"
                                                        "CreateSite"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-site))
(common-lisp:progn
 (common-lisp:defun create-worker
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token name fleet
                     additional-transient-properties
                     additional-fixed-properties vendor-properties position
                     orientation)
   (common-lisp:declare
    (common-lisp:ignorable client-token name fleet
     additional-transient-properties additional-fixed-properties
     vendor-properties position orientation))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-worker-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/createWorker"
                                                        "CreateWorker"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-worker))
(common-lisp:progn
 (common-lisp:defun create-worker-fleet
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token name site
                     additional-fixed-properties)
   (common-lisp:declare
    (common-lisp:ignorable client-token name site additional-fixed-properties))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-worker-fleet-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/createWorkerFleet"
                                                        "CreateWorkerFleet"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-worker-fleet))
(common-lisp:progn
 (common-lisp:defun delete-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-destination-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/deleteDestination"
                                                        "DeleteDestination"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-destination))
(common-lisp:progn
 (common-lisp:defun delete-site
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-site-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/deleteSite"
                                                        "DeleteSite"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-site))
(common-lisp:progn
 (common-lisp:defun delete-worker
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-worker-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/deleteWorker"
                                                        "DeleteWorker"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-worker))
(common-lisp:progn
 (common-lisp:defun delete-worker-fleet
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-worker-fleet-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/deleteWorkerFleet"
                                                        "DeleteWorkerFleet"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-worker-fleet))
(common-lisp:progn
 (common-lisp:defun get-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-destination-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/getDestination"
                                                        "GetDestination"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-destination))
(common-lisp:progn
 (common-lisp:defun get-site
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-site-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/getSite"
                                                        "GetSite"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-site))
(common-lisp:progn
 (common-lisp:defun get-worker
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-worker-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/getWorker"
                                                        "GetWorker"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-worker))
(common-lisp:progn
 (common-lisp:defun get-worker-fleet
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-worker-fleet-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/getWorkerFleet"
                                                        "GetWorkerFleet"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-worker-fleet))
(common-lisp:progn
 (common-lisp:defun list-destinations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key site max-results next-token state)
   (common-lisp:declare
    (common-lisp:ignorable site max-results next-token state))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-destinations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/listDestinations"
                                                        "ListDestinations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-destinations))
(common-lisp:progn
 (common-lisp:defun list-sites
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-sites-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/listSites"
                                                        "ListSites"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-sites))
(common-lisp:progn
 (common-lisp:defun list-worker-fleets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key site max-results next-token)
   (common-lisp:declare (common-lisp:ignorable site max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-worker-fleets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/listWorkerFleets"
                                                        "ListWorkerFleets"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-worker-fleets))
(common-lisp:progn
 (common-lisp:defun list-workers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key site max-results next-token fleet)
   (common-lisp:declare
    (common-lisp:ignorable site max-results next-token fleet))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-workers-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/listWorkers"
                                                        "ListWorkers"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-workers))
(common-lisp:progn
 (common-lisp:defun update-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id name state
                     additional-fixed-properties)
   (common-lisp:declare
    (common-lisp:ignorable id name state additional-fixed-properties))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-destination-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/updateDestination"
                                                        "UpdateDestination"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-destination))
(common-lisp:progn
 (common-lisp:defun update-site
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id name country-code description)
   (common-lisp:declare
    (common-lisp:ignorable id name country-code description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-site-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/updateSite"
                                                        "UpdateSite"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-site))
(common-lisp:progn
 (common-lisp:defun update-worker
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id name additional-transient-properties
                     additional-fixed-properties vendor-properties position
                     orientation)
   (common-lisp:declare
    (common-lisp:ignorable id name additional-transient-properties
     additional-fixed-properties vendor-properties position orientation))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-worker-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/updateWorker"
                                                        "UpdateWorker"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-worker))
(common-lisp:progn
 (common-lisp:defun update-worker-fleet
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id name additional-fixed-properties)
   (common-lisp:declare
    (common-lisp:ignorable id name additional-fixed-properties))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-worker-fleet-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/updateWorkerFleet"
                                                        "UpdateWorkerFleet"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-worker-fleet))
