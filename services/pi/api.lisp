;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(uiop/package:define-package #:aws-sdk/services/pi/api (:use)
                             (:nicknames #:aws/pi)
                             (:import-from #:aws-sdk/generator/shape)
                             (:import-from #:aws-sdk/generator/operation)
                             (:import-from #:aws-sdk/api)
                             (:import-from #:aws-sdk/request)
                             (:import-from #:aws-sdk/json-request)
                             (:import-from #:aws-sdk/rest-json-request)
                             (:import-from #:aws-sdk/rest-xml-request)
                             (:import-from #:aws-sdk/query-request)
                             (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/pi/api)
(common-lisp:progn
 (common-lisp:define-condition pi-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'pi-error))
(common-lisp:progn
 (common-lisp:defclass pi-request (aws-sdk/json-request:json-request)
                       common-lisp:nil
                       (:default-initargs :service "pi" :api-version
                        "2018-02-27" :host-prefix "pi" :signing-name "pi"
                        :global-host common-lisp:nil :target-prefix
                        "PerformanceInsightsv20180227" :json-version "1.1"))
 (common-lisp:export 'pi-request))
(common-lisp:defvar *error-map*
  '(("InternalServiceError" . internal-service-error)
    ("InvalidArgumentException" . invalid-argument-exception)
    ("NotAuthorizedException" . not-authorized-exception)))
(common-lisp:deftype accept-language () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype additional-metrics-list ()
   '(trivial-types:proper-list request-string))
 (common-lisp:defun make-additional-metrics-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list request-string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype additional-metrics-map () 'common-lisp:hash-table)
 (common-lisp:defun make-additional-metrics-map
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype amazon-resource-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass analysis-report common-lisp:nil
                       ((analysis-report-id :initarg :analysis-report-id
                         :initform
                         (common-lisp:error ":analysis-report-id is required")
                         :type
                         (common-lisp:or analysis-report-id common-lisp:null)
                         :accessor
                         struct-shape-analysis-report-analysis-report-id :shape
                         "AnalysisReportId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (identifier :initarg :identifier :initform
                         common-lisp:nil :type
                         (common-lisp:or identifier-string common-lisp:null)
                         :accessor struct-shape-analysis-report-identifier
                         :shape "IdentifierString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (service-type :initarg :service-type :initform
                         common-lisp:nil :type
                         (common-lisp:or service-type common-lisp:null)
                         :accessor struct-shape-analysis-report-service-type
                         :shape "ServiceType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (create-time :initarg :create-time :initform
                         common-lisp:nil :type
                         (common-lisp:or isotimestamp common-lisp:null)
                         :accessor struct-shape-analysis-report-create-time
                         :shape "ISOTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (start-time :initarg :start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or isotimestamp common-lisp:null)
                         :accessor struct-shape-analysis-report-start-time
                         :shape "ISOTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (end-time :initarg :end-time :initform common-lisp:nil
                         :type (common-lisp:or isotimestamp common-lisp:null)
                         :accessor struct-shape-analysis-report-end-time :shape
                         "ISOTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or analysis-status common-lisp:null)
                         :accessor struct-shape-analysis-report-status :shape
                         "AnalysisStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (insights :initarg :insights :initform common-lisp:nil
                         :type (common-lisp:or insight-list common-lisp:null)
                         :accessor struct-shape-analysis-report-insights :shape
                         "InsightList" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-analysis-report
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'analysis-report
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'analysis-report 'make-analysis-report))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input analysis-report))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input analysis-report))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'analysis-report-id))
      (common-lisp:list
       (common-lisp:cons "AnalysisReportId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifier))
      (common-lisp:list
       (common-lisp:cons "Identifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-type))
      (common-lisp:list
       (common-lisp:cons "ServiceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'create-time))
      (common-lisp:list
       (common-lisp:cons "CreateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'insights))
      (common-lisp:list
       (common-lisp:cons "Insights"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input analysis-report))
   common-lisp:nil))
(common-lisp:deftype analysis-report-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass analysis-report-summary common-lisp:nil
                       ((analysis-report-id :initarg :analysis-report-id
                         :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-analysis-report-summary-analysis-report-id
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (create-time :initarg :create-time :initform
                         common-lisp:nil :type
                         (common-lisp:or isotimestamp common-lisp:null)
                         :accessor
                         struct-shape-analysis-report-summary-create-time
                         :shape "ISOTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (start-time :initarg :start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or isotimestamp common-lisp:null)
                         :accessor
                         struct-shape-analysis-report-summary-start-time :shape
                         "ISOTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (end-time :initarg :end-time :initform common-lisp:nil
                         :type (common-lisp:or isotimestamp common-lisp:null)
                         :accessor
                         struct-shape-analysis-report-summary-end-time :shape
                         "ISOTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or analysis-status common-lisp:null)
                         :accessor struct-shape-analysis-report-summary-status
                         :shape "AnalysisStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-analysis-report-summary-tags :shape
                         "TagList" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-analysis-report-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'analysis-report-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'analysis-report-summary 'make-analysis-report-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          analysis-report-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          analysis-report-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'analysis-report-id))
      (common-lisp:list
       (common-lisp:cons "AnalysisReportId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'create-time))
      (common-lisp:list
       (common-lisp:cons "CreateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          analysis-report-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype analysis-report-summary-list ()
   '(trivial-types:proper-list analysis-report-summary))
 (common-lisp:defun make-analysis-report-summary-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list analysis-report-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype analysis-status () 'common-lisp:string)
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:deftype context-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass create-performance-analysis-report-request
                       common-lisp:nil
                       ((service-type :initarg :service-type :initform
                         (common-lisp:error ":service-type is required") :type
                         (common-lisp:or service-type common-lisp:null)
                         :accessor
                         struct-shape-create-performance-analysis-report-request-service-type
                         :shape "ServiceType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (identifier :initarg :identifier :initform
                         (common-lisp:error ":identifier is required") :type
                         (common-lisp:or identifier-string common-lisp:null)
                         :accessor
                         struct-shape-create-performance-analysis-report-request-identifier
                         :shape "IdentifierString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (start-time :initarg :start-time :initform
                         (common-lisp:error ":start-time is required") :type
                         (common-lisp:or isotimestamp common-lisp:null)
                         :accessor
                         struct-shape-create-performance-analysis-report-request-start-time
                         :shape "ISOTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (end-time :initarg :end-time :initform
                         (common-lisp:error ":end-time is required") :type
                         (common-lisp:or isotimestamp common-lisp:null)
                         :accessor
                         struct-shape-create-performance-analysis-report-request-end-time
                         :shape "ISOTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-create-performance-analysis-report-request-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-performance-analysis-report-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-performance-analysis-report-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-performance-analysis-report-request
                    'make-create-performance-analysis-report-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-performance-analysis-report-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-performance-analysis-report-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-type))
      (common-lisp:list
       (common-lisp:cons "ServiceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifier))
      (common-lisp:list
       (common-lisp:cons "Identifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-performance-analysis-report-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-performance-analysis-report-response
                       common-lisp:nil
                       ((analysis-report-id :initarg :analysis-report-id
                         :initform common-lisp:nil :type
                         (common-lisp:or analysis-report-id common-lisp:null)
                         :accessor
                         struct-shape-create-performance-analysis-report-response-analysis-report-id
                         :shape "AnalysisReportId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-performance-analysis-report-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-performance-analysis-report-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-performance-analysis-report-response
                    'make-create-performance-analysis-report-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-performance-analysis-report-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-performance-analysis-report-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'analysis-report-id))
      (common-lisp:list
       (common-lisp:cons "AnalysisReportId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-performance-analysis-report-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass data common-lisp:nil
                       ((performance-insights-metric :initarg
                         :performance-insights-metric :initform common-lisp:nil
                         :type
                         (common-lisp:or performance-insights-metric
                                         common-lisp:null)
                         :accessor
                         struct-shape-data-performance-insights-metric :shape
                         "PerformanceInsightsMetric" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-data (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'data
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'data 'make-data))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input data))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input data))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'performance-insights-metric))
      (common-lisp:list
       (common-lisp:cons "PerformanceInsightsMetric"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input data))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype data-list () '(trivial-types:proper-list data))
 (common-lisp:defun make-data-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list data))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass data-point common-lisp:nil
                       ((timestamp :initarg :timestamp :initform
                         (common-lisp:error ":timestamp is required") :type
                         (common-lisp:or isotimestamp common-lisp:null)
                         :accessor struct-shape-data-point-timestamp :shape
                         "ISOTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (value :initarg :value :initform
                         (common-lisp:error ":value is required") :type
                         (common-lisp:or double common-lisp:null) :accessor
                         struct-shape-data-point-value :shape "Double"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-data-point
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'data-point
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'data-point 'make-data-point))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input data-point))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input data-point))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamp))
      (common-lisp:list
       (common-lisp:cons "Timestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input data-point))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype data-points-list ()
   '(trivial-types:proper-list data-point))
 (common-lisp:defun make-data-points-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list data-point))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass delete-performance-analysis-report-request
                       common-lisp:nil
                       ((service-type :initarg :service-type :initform
                         (common-lisp:error ":service-type is required") :type
                         (common-lisp:or service-type common-lisp:null)
                         :accessor
                         struct-shape-delete-performance-analysis-report-request-service-type
                         :shape "ServiceType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (identifier :initarg :identifier :initform
                         (common-lisp:error ":identifier is required") :type
                         (common-lisp:or identifier-string common-lisp:null)
                         :accessor
                         struct-shape-delete-performance-analysis-report-request-identifier
                         :shape "IdentifierString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (analysis-report-id :initarg :analysis-report-id
                         :initform
                         (common-lisp:error ":analysis-report-id is required")
                         :type
                         (common-lisp:or analysis-report-id common-lisp:null)
                         :accessor
                         struct-shape-delete-performance-analysis-report-request-analysis-report-id
                         :shape "AnalysisReportId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-performance-analysis-report-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-performance-analysis-report-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-performance-analysis-report-request
                    'make-delete-performance-analysis-report-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-performance-analysis-report-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-performance-analysis-report-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-type))
      (common-lisp:list
       (common-lisp:cons "ServiceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifier))
      (common-lisp:list
       (common-lisp:cons "Identifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'analysis-report-id))
      (common-lisp:list
       (common-lisp:cons "AnalysisReportId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-performance-analysis-report-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-performance-analysis-report-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-performance-analysis-report-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-performance-analysis-report-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-performance-analysis-report-response
                    'make-delete-performance-analysis-report-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-performance-analysis-report-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-performance-analysis-report-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-performance-analysis-report-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-dimension-keys-request common-lisp:nil
                       ((service-type :initarg :service-type :initform
                         (common-lisp:error ":service-type is required") :type
                         (common-lisp:or service-type common-lisp:null)
                         :accessor
                         struct-shape-describe-dimension-keys-request-service-type
                         :shape "ServiceType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (identifier :initarg :identifier :initform
                         (common-lisp:error ":identifier is required") :type
                         (common-lisp:or identifier-string common-lisp:null)
                         :accessor
                         struct-shape-describe-dimension-keys-request-identifier
                         :shape "IdentifierString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (start-time :initarg :start-time :initform
                         (common-lisp:error ":start-time is required") :type
                         (common-lisp:or isotimestamp common-lisp:null)
                         :accessor
                         struct-shape-describe-dimension-keys-request-start-time
                         :shape "ISOTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (end-time :initarg :end-time :initform
                         (common-lisp:error ":end-time is required") :type
                         (common-lisp:or isotimestamp common-lisp:null)
                         :accessor
                         struct-shape-describe-dimension-keys-request-end-time
                         :shape "ISOTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metric :initarg :metric :initform
                         (common-lisp:error ":metric is required") :type
                         (common-lisp:or request-string common-lisp:null)
                         :accessor
                         struct-shape-describe-dimension-keys-request-metric
                         :shape "RequestString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (period-in-seconds :initarg :period-in-seconds
                         :initform common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-describe-dimension-keys-request-period-in-seconds
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (group-by :initarg :group-by :initform
                         (common-lisp:error ":group-by is required") :type
                         (common-lisp:or dimension-group common-lisp:null)
                         :accessor
                         struct-shape-describe-dimension-keys-request-group-by
                         :shape "DimensionGroup" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (additional-metrics :initarg :additional-metrics
                         :initform common-lisp:nil :type
                         (common-lisp:or additional-metrics-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-dimension-keys-request-additional-metrics
                         :shape "AdditionalMetricsList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (partition-by :initarg :partition-by :initform
                         common-lisp:nil :type
                         (common-lisp:or dimension-group common-lisp:null)
                         :accessor
                         struct-shape-describe-dimension-keys-request-partition-by
                         :shape "DimensionGroup" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filter :initarg :filter :initform common-lisp:nil
                         :type
                         (common-lisp:or metric-query-filter-map
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-dimension-keys-request-filter
                         :shape "MetricQueryFilterMap" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-describe-dimension-keys-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-describe-dimension-keys-request-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-dimension-keys-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-dimension-keys-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-dimension-keys-request
                    'make-describe-dimension-keys-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-dimension-keys-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-dimension-keys-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-type))
      (common-lisp:list
       (common-lisp:cons "ServiceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifier))
      (common-lisp:list
       (common-lisp:cons "Identifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric))
      (common-lisp:list
       (common-lisp:cons "Metric"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'period-in-seconds))
      (common-lisp:list
       (common-lisp:cons "PeriodInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-by))
      (common-lisp:list
       (common-lisp:cons "GroupBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'additional-metrics))
      (common-lisp:list
       (common-lisp:cons "AdditionalMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'partition-by))
      (common-lisp:list
       (common-lisp:cons "PartitionBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-dimension-keys-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-dimension-keys-response common-lisp:nil
                       ((aligned-start-time :initarg :aligned-start-time
                         :initform common-lisp:nil :type
                         (common-lisp:or isotimestamp common-lisp:null)
                         :accessor
                         struct-shape-describe-dimension-keys-response-aligned-start-time
                         :shape "ISOTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (aligned-end-time :initarg :aligned-end-time :initform
                         common-lisp:nil :type
                         (common-lisp:or isotimestamp common-lisp:null)
                         :accessor
                         struct-shape-describe-dimension-keys-response-aligned-end-time
                         :shape "ISOTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (partition-keys :initarg :partition-keys :initform
                         common-lisp:nil :type
                         (common-lisp:or response-partition-key-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-dimension-keys-response-partition-keys
                         :shape "ResponsePartitionKeyList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (keys :initarg :keys :initform common-lisp:nil :type
                         (common-lisp:or dimension-key-description-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-dimension-keys-response-keys
                         :shape "DimensionKeyDescriptionList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-describe-dimension-keys-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-dimension-keys-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-dimension-keys-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-dimension-keys-response
                    'make-describe-dimension-keys-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-dimension-keys-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-dimension-keys-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aligned-start-time))
      (common-lisp:list
       (common-lisp:cons "AlignedStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aligned-end-time))
      (common-lisp:list
       (common-lisp:cons "AlignedEndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'partition-keys))
      (common-lisp:list
       (common-lisp:cons "PartitionKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'keys))
      (common-lisp:list
       (common-lisp:cons "Keys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-dimension-keys-response))
   common-lisp:nil))
(common-lisp:deftype description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype descriptive-map () 'common-lisp:hash-table)
 (common-lisp:defun make-descriptive-map (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype descriptive-string () 'common-lisp:string)
(common-lisp:deftype detail-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass dimension-detail common-lisp:nil
                       ((identifier :initarg :identifier :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-dimension-detail-identifier :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-dimension-detail
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'dimension-detail
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'dimension-detail 'make-dimension-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dimension-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dimension-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifier))
      (common-lisp:list
       (common-lisp:cons "Identifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dimension-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype dimension-detail-list ()
   '(trivial-types:proper-list dimension-detail))
 (common-lisp:defun make-dimension-detail-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list dimension-detail))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass dimension-group common-lisp:nil
                       ((group :initarg :group :initform
                         (common-lisp:error ":group is required") :type
                         (common-lisp:or request-string common-lisp:null)
                         :accessor struct-shape-dimension-group-group :shape
                         "RequestString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (dimensions :initarg :dimensions :initform
                         common-lisp:nil :type
                         (common-lisp:or request-string-list common-lisp:null)
                         :accessor struct-shape-dimension-group-dimensions
                         :shape "RequestStringList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or limit common-lisp:null) :accessor
                         struct-shape-dimension-group-limit :shape "Limit"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-dimension-group
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'dimension-group
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'dimension-group 'make-dimension-group))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dimension-group))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dimension-group))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group))
      (common-lisp:list
       (common-lisp:cons "Group"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimensions))
      (common-lisp:list
       (common-lisp:cons "Dimensions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dimension-group))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass dimension-group-detail common-lisp:nil
                       ((group :initarg :group :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-dimension-group-detail-group :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (dimensions :initarg :dimensions :initform
                         common-lisp:nil :type
                         (common-lisp:or dimension-detail-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-dimension-group-detail-dimensions :shape
                         "DimensionDetailList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-dimension-group-detail
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'dimension-group-detail
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'dimension-group-detail 'make-dimension-group-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dimension-group-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dimension-group-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group))
      (common-lisp:list
       (common-lisp:cons "Group"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimensions))
      (common-lisp:list
       (common-lisp:cons "Dimensions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dimension-group-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype dimension-group-detail-list ()
   '(trivial-types:proper-list dimension-group-detail))
 (common-lisp:defun make-dimension-group-detail-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list dimension-group-detail))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass dimension-key-description common-lisp:nil
                       ((dimensions :initarg :dimensions :initform
                         common-lisp:nil :type
                         (common-lisp:or dimension-map common-lisp:null)
                         :accessor
                         struct-shape-dimension-key-description-dimensions
                         :shape "DimensionMap" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (total :initarg :total :initform common-lisp:nil :type
                         (common-lisp:or double common-lisp:null) :accessor
                         struct-shape-dimension-key-description-total :shape
                         "Double" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (additional-metrics :initarg :additional-metrics
                         :initform common-lisp:nil :type
                         (common-lisp:or additional-metrics-map
                                         common-lisp:null)
                         :accessor
                         struct-shape-dimension-key-description-additional-metrics
                         :shape "AdditionalMetricsMap" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (partitions :initarg :partitions :initform
                         common-lisp:nil :type
                         (common-lisp:or metric-values-list common-lisp:null)
                         :accessor
                         struct-shape-dimension-key-description-partitions
                         :shape "MetricValuesList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-dimension-key-description
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'dimension-key-description
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'dimension-key-description
                    'make-dimension-key-description))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dimension-key-description))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dimension-key-description))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimensions))
      (common-lisp:list
       (common-lisp:cons "Dimensions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total))
      (common-lisp:list
       (common-lisp:cons "Total"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'additional-metrics))
      (common-lisp:list
       (common-lisp:cons "AdditionalMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'partitions))
      (common-lisp:list
       (common-lisp:cons "Partitions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dimension-key-description))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype dimension-key-description-list ()
   '(trivial-types:proper-list dimension-key-description))
 (common-lisp:defun make-dimension-key-description-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            dimension-key-description))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass dimension-key-detail common-lisp:nil
                       ((value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-dimension-key-detail-value :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (dimension :initarg :dimension :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-dimension-key-detail-dimension :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or detail-status common-lisp:null)
                         :accessor struct-shape-dimension-key-detail-status
                         :shape "DetailStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-dimension-key-detail
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'dimension-key-detail
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'dimension-key-detail 'make-dimension-key-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dimension-key-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dimension-key-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimension))
      (common-lisp:list
       (common-lisp:cons "Dimension"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dimension-key-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype dimension-key-detail-list ()
   '(trivial-types:proper-list dimension-key-detail))
 (common-lisp:defun make-dimension-key-detail-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list dimension-key-detail))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype dimension-map () 'common-lisp:hash-table)
 (common-lisp:defun make-dimension-map (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype dimensions-metric-list ()
   '(trivial-types:proper-list request-string))
 (common-lisp:defun make-dimensions-metric-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list request-string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype double () 'common-lisp:double-float)
(common-lisp:deftype error-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass feature-metadata common-lisp:nil
                       ((status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or feature-status common-lisp:null)
                         :accessor struct-shape-feature-metadata-status :shape
                         "FeatureStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-feature-metadata
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'feature-metadata
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'feature-metadata 'make-feature-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input feature-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input feature-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input feature-metadata))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype feature-metadata-map () 'common-lisp:hash-table)
 (common-lisp:defun make-feature-metadata-map
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype feature-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass get-dimension-key-details-request common-lisp:nil
                       ((service-type :initarg :service-type :initform
                         (common-lisp:error ":service-type is required") :type
                         (common-lisp:or service-type common-lisp:null)
                         :accessor
                         struct-shape-get-dimension-key-details-request-service-type
                         :shape "ServiceType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (identifier :initarg :identifier :initform
                         (common-lisp:error ":identifier is required") :type
                         (common-lisp:or identifier-string common-lisp:null)
                         :accessor
                         struct-shape-get-dimension-key-details-request-identifier
                         :shape "IdentifierString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (group :initarg :group :initform
                         (common-lisp:error ":group is required") :type
                         (common-lisp:or request-string common-lisp:null)
                         :accessor
                         struct-shape-get-dimension-key-details-request-group
                         :shape "RequestString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (group-identifier :initarg :group-identifier :initform
                         (common-lisp:error ":group-identifier is required")
                         :type (common-lisp:or request-string common-lisp:null)
                         :accessor
                         struct-shape-get-dimension-key-details-request-group-identifier
                         :shape "RequestString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (requested-dimensions :initarg :requested-dimensions
                         :initform common-lisp:nil :type
                         (common-lisp:or requested-dimension-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-dimension-key-details-request-requested-dimensions
                         :shape "RequestedDimensionList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-dimension-key-details-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-dimension-key-details-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-dimension-key-details-request
                    'make-get-dimension-key-details-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-dimension-key-details-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-dimension-key-details-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-type))
      (common-lisp:list
       (common-lisp:cons "ServiceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifier))
      (common-lisp:list
       (common-lisp:cons "Identifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group))
      (common-lisp:list
       (common-lisp:cons "Group"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-identifier))
      (common-lisp:list
       (common-lisp:cons "GroupIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'requested-dimensions))
      (common-lisp:list
       (common-lisp:cons "RequestedDimensions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-dimension-key-details-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-dimension-key-details-response common-lisp:nil
                       ((dimensions :initarg :dimensions :initform
                         common-lisp:nil :type
                         (common-lisp:or dimension-key-detail-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-dimension-key-details-response-dimensions
                         :shape "DimensionKeyDetailList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-dimension-key-details-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-dimension-key-details-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-dimension-key-details-response
                    'make-get-dimension-key-details-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-dimension-key-details-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-dimension-key-details-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimensions))
      (common-lisp:list
       (common-lisp:cons "Dimensions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-dimension-key-details-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-performance-analysis-report-request common-lisp:nil
                       ((service-type :initarg :service-type :initform
                         (common-lisp:error ":service-type is required") :type
                         (common-lisp:or service-type common-lisp:null)
                         :accessor
                         struct-shape-get-performance-analysis-report-request-service-type
                         :shape "ServiceType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (identifier :initarg :identifier :initform
                         (common-lisp:error ":identifier is required") :type
                         (common-lisp:or identifier-string common-lisp:null)
                         :accessor
                         struct-shape-get-performance-analysis-report-request-identifier
                         :shape "IdentifierString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (analysis-report-id :initarg :analysis-report-id
                         :initform
                         (common-lisp:error ":analysis-report-id is required")
                         :type
                         (common-lisp:or analysis-report-id common-lisp:null)
                         :accessor
                         struct-shape-get-performance-analysis-report-request-analysis-report-id
                         :shape "AnalysisReportId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (text-format :initarg :text-format :initform
                         common-lisp:nil :type
                         (common-lisp:or text-format common-lisp:null)
                         :accessor
                         struct-shape-get-performance-analysis-report-request-text-format
                         :shape "TextFormat" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (accept-language :initarg :accept-language :initform
                         common-lisp:nil :type
                         (common-lisp:or accept-language common-lisp:null)
                         :accessor
                         struct-shape-get-performance-analysis-report-request-accept-language
                         :shape "AcceptLanguage" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-performance-analysis-report-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-performance-analysis-report-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-performance-analysis-report-request
                    'make-get-performance-analysis-report-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-performance-analysis-report-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-performance-analysis-report-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-type))
      (common-lisp:list
       (common-lisp:cons "ServiceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifier))
      (common-lisp:list
       (common-lisp:cons "Identifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'analysis-report-id))
      (common-lisp:list
       (common-lisp:cons "AnalysisReportId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text-format))
      (common-lisp:list
       (common-lisp:cons "TextFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'accept-language))
      (common-lisp:list
       (common-lisp:cons "AcceptLanguage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-performance-analysis-report-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-performance-analysis-report-response common-lisp:nil
                       ((analysis-report :initarg :analysis-report :initform
                         common-lisp:nil :type
                         (common-lisp:or analysis-report common-lisp:null)
                         :accessor
                         struct-shape-get-performance-analysis-report-response-analysis-report
                         :shape "AnalysisReport" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-performance-analysis-report-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-performance-analysis-report-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-performance-analysis-report-response
                    'make-get-performance-analysis-report-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-performance-analysis-report-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-performance-analysis-report-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'analysis-report))
      (common-lisp:list
       (common-lisp:cons "AnalysisReport"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-performance-analysis-report-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-resource-metadata-request common-lisp:nil
                       ((service-type :initarg :service-type :initform
                         (common-lisp:error ":service-type is required") :type
                         (common-lisp:or service-type common-lisp:null)
                         :accessor
                         struct-shape-get-resource-metadata-request-service-type
                         :shape "ServiceType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (identifier :initarg :identifier :initform
                         (common-lisp:error ":identifier is required") :type
                         (common-lisp:or identifier-string common-lisp:null)
                         :accessor
                         struct-shape-get-resource-metadata-request-identifier
                         :shape "IdentifierString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-resource-metadata-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-resource-metadata-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-resource-metadata-request
                    'make-get-resource-metadata-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-metadata-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-metadata-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-type))
      (common-lisp:list
       (common-lisp:cons "ServiceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifier))
      (common-lisp:list
       (common-lisp:cons "Identifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-metadata-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-resource-metadata-response common-lisp:nil
                       ((identifier :initarg :identifier :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-resource-metadata-response-identifier
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (features :initarg :features :initform common-lisp:nil
                         :type
                         (common-lisp:or feature-metadata-map common-lisp:null)
                         :accessor
                         struct-shape-get-resource-metadata-response-features
                         :shape "FeatureMetadataMap" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-resource-metadata-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-resource-metadata-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-resource-metadata-response
                    'make-get-resource-metadata-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-metadata-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-metadata-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifier))
      (common-lisp:list
       (common-lisp:cons "Identifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'features))
      (common-lisp:list
       (common-lisp:cons "Features"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-metadata-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-resource-metrics-request common-lisp:nil
                       ((service-type :initarg :service-type :initform
                         (common-lisp:error ":service-type is required") :type
                         (common-lisp:or service-type common-lisp:null)
                         :accessor
                         struct-shape-get-resource-metrics-request-service-type
                         :shape "ServiceType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (identifier :initarg :identifier :initform
                         (common-lisp:error ":identifier is required") :type
                         (common-lisp:or identifier-string common-lisp:null)
                         :accessor
                         struct-shape-get-resource-metrics-request-identifier
                         :shape "IdentifierString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metric-queries :initarg :metric-queries :initform
                         (common-lisp:error ":metric-queries is required")
                         :type
                         (common-lisp:or metric-query-list common-lisp:null)
                         :accessor
                         struct-shape-get-resource-metrics-request-metric-queries
                         :shape "MetricQueryList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (start-time :initarg :start-time :initform
                         (common-lisp:error ":start-time is required") :type
                         (common-lisp:or isotimestamp common-lisp:null)
                         :accessor
                         struct-shape-get-resource-metrics-request-start-time
                         :shape "ISOTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (end-time :initarg :end-time :initform
                         (common-lisp:error ":end-time is required") :type
                         (common-lisp:or isotimestamp common-lisp:null)
                         :accessor
                         struct-shape-get-resource-metrics-request-end-time
                         :shape "ISOTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (period-in-seconds :initarg :period-in-seconds
                         :initform common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-get-resource-metrics-request-period-in-seconds
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-get-resource-metrics-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-get-resource-metrics-request-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (period-alignment :initarg :period-alignment :initform
                         common-lisp:nil :type
                         (common-lisp:or period-alignment common-lisp:null)
                         :accessor
                         struct-shape-get-resource-metrics-request-period-alignment
                         :shape "PeriodAlignment" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-resource-metrics-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-resource-metrics-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-resource-metrics-request
                    'make-get-resource-metrics-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-metrics-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-metrics-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-type))
      (common-lisp:list
       (common-lisp:cons "ServiceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifier))
      (common-lisp:list
       (common-lisp:cons "Identifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-queries))
      (common-lisp:list
       (common-lisp:cons "MetricQueries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'period-in-seconds))
      (common-lisp:list
       (common-lisp:cons "PeriodInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'period-alignment))
      (common-lisp:list
       (common-lisp:cons "PeriodAlignment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-metrics-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-resource-metrics-response common-lisp:nil
                       ((aligned-start-time :initarg :aligned-start-time
                         :initform common-lisp:nil :type
                         (common-lisp:or isotimestamp common-lisp:null)
                         :accessor
                         struct-shape-get-resource-metrics-response-aligned-start-time
                         :shape "ISOTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (aligned-end-time :initarg :aligned-end-time :initform
                         common-lisp:nil :type
                         (common-lisp:or isotimestamp common-lisp:null)
                         :accessor
                         struct-shape-get-resource-metrics-response-aligned-end-time
                         :shape "ISOTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (identifier :initarg :identifier :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-resource-metrics-response-identifier
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metric-list :initarg :metric-list :initform
                         common-lisp:nil :type
                         (common-lisp:or metric-key-data-points-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-resource-metrics-response-metric-list
                         :shape "MetricKeyDataPointsList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-get-resource-metrics-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-resource-metrics-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-resource-metrics-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-resource-metrics-response
                    'make-get-resource-metrics-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-metrics-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-metrics-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aligned-start-time))
      (common-lisp:list
       (common-lisp:cons "AlignedStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aligned-end-time))
      (common-lisp:list
       (common-lisp:cons "AlignedEndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifier))
      (common-lisp:list
       (common-lisp:cons "Identifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-list))
      (common-lisp:list
       (common-lisp:cons "MetricList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-metrics-response))
   common-lisp:nil))
(common-lisp:deftype isotimestamp () 'common-lisp:string)
(common-lisp:deftype identifier-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass insight common-lisp:nil
                       ((insight-id :initarg :insight-id :initform
                         (common-lisp:error ":insight-id is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-insight-insight-id :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (insight-type :initarg :insight-type :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-insight-insight-type :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (context :initarg :context :initform common-lisp:nil
                         :type (common-lisp:or context-type common-lisp:null)
                         :accessor struct-shape-insight-context :shape
                         "ContextType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (start-time :initarg :start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or isotimestamp common-lisp:null)
                         :accessor struct-shape-insight-start-time :shape
                         "ISOTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (end-time :initarg :end-time :initform common-lisp:nil
                         :type (common-lisp:or isotimestamp common-lisp:null)
                         :accessor struct-shape-insight-end-time :shape
                         "ISOTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (severity :initarg :severity :initform common-lisp:nil
                         :type (common-lisp:or severity common-lisp:null)
                         :accessor struct-shape-insight-severity :shape
                         "Severity" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (supporting-insights :initarg :supporting-insights
                         :initform common-lisp:nil :type
                         (common-lisp:or insight-list common-lisp:null)
                         :accessor struct-shape-insight-supporting-insights
                         :shape "InsightList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or markdown-string common-lisp:null)
                         :accessor struct-shape-insight-description :shape
                         "MarkdownString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendations :initarg :recommendations :initform
                         common-lisp:nil :type
                         (common-lisp:or recommendation-list common-lisp:null)
                         :accessor struct-shape-insight-recommendations :shape
                         "RecommendationList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (insight-data :initarg :insight-data :initform
                         common-lisp:nil :type
                         (common-lisp:or data-list common-lisp:null) :accessor
                         struct-shape-insight-insight-data :shape "DataList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (baseline-data :initarg :baseline-data :initform
                         common-lisp:nil :type
                         (common-lisp:or data-list common-lisp:null) :accessor
                         struct-shape-insight-baseline-data :shape "DataList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-insight
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'insight
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'insight 'make-insight))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input insight))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input insight))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'insight-id))
      (common-lisp:list
       (common-lisp:cons "InsightId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'insight-type))
      (common-lisp:list
       (common-lisp:cons "InsightType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'context))
      (common-lisp:list
       (common-lisp:cons "Context"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'severity))
      (common-lisp:list
       (common-lisp:cons "Severity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'supporting-insights))
      (common-lisp:list
       (common-lisp:cons "SupportingInsights"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recommendations))
      (common-lisp:list
       (common-lisp:cons "Recommendations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'insight-data))
      (common-lisp:list
       (common-lisp:cons "InsightData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'baseline-data))
      (common-lisp:list
       (common-lisp:cons "BaselineData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input insight))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype insight-list () '(trivial-types:proper-list insight))
 (common-lisp:defun make-insight-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list insight))
   aws-sdk/generator/shape::members))
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition internal-service-error
     (pi-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-service-error-message)))
 (common-lisp:export
  (common-lisp:list 'internal-service-error 'internal-service-error-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-argument-exception
     (pi-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-argument-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-argument-exception
                    'invalid-argument-exception-message)))
(common-lisp:deftype limit () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass list-available-resource-dimensions-request
                       common-lisp:nil
                       ((service-type :initarg :service-type :initform
                         (common-lisp:error ":service-type is required") :type
                         (common-lisp:or service-type common-lisp:null)
                         :accessor
                         struct-shape-list-available-resource-dimensions-request-service-type
                         :shape "ServiceType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (identifier :initarg :identifier :initform
                         (common-lisp:error ":identifier is required") :type
                         (common-lisp:or identifier-string common-lisp:null)
                         :accessor
                         struct-shape-list-available-resource-dimensions-request-identifier
                         :shape "IdentifierString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metrics :initarg :metrics :initform
                         (common-lisp:error ":metrics is required") :type
                         (common-lisp:or dimensions-metric-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-available-resource-dimensions-request-metrics
                         :shape "DimensionsMetricList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-available-resource-dimensions-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-available-resource-dimensions-request-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-available-resource-dimensions-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-available-resource-dimensions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-available-resource-dimensions-request
                    'make-list-available-resource-dimensions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-available-resource-dimensions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-available-resource-dimensions-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-type))
      (common-lisp:list
       (common-lisp:cons "ServiceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifier))
      (common-lisp:list
       (common-lisp:cons "Identifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metrics))
      (common-lisp:list
       (common-lisp:cons "Metrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-available-resource-dimensions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-available-resource-dimensions-response
                       common-lisp:nil
                       ((metric-dimensions :initarg :metric-dimensions
                         :initform common-lisp:nil :type
                         (common-lisp:or metric-dimensions-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-available-resource-dimensions-response-metric-dimensions
                         :shape "MetricDimensionsList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-available-resource-dimensions-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-available-resource-dimensions-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-available-resource-dimensions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-available-resource-dimensions-response
                    'make-list-available-resource-dimensions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-available-resource-dimensions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-available-resource-dimensions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-dimensions))
      (common-lisp:list
       (common-lisp:cons "MetricDimensions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-available-resource-dimensions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-available-resource-metrics-request common-lisp:nil
                       ((service-type :initarg :service-type :initform
                         (common-lisp:error ":service-type is required") :type
                         (common-lisp:or service-type common-lisp:null)
                         :accessor
                         struct-shape-list-available-resource-metrics-request-service-type
                         :shape "ServiceType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (identifier :initarg :identifier :initform
                         (common-lisp:error ":identifier is required") :type
                         (common-lisp:or identifier-string common-lisp:null)
                         :accessor
                         struct-shape-list-available-resource-metrics-request-identifier
                         :shape "IdentifierString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metric-types :initarg :metric-types :initform
                         (common-lisp:error ":metric-types is required") :type
                         (common-lisp:or metric-type-list common-lisp:null)
                         :accessor
                         struct-shape-list-available-resource-metrics-request-metric-types
                         :shape "MetricTypeList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-available-resource-metrics-request-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-available-resource-metrics-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-available-resource-metrics-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-available-resource-metrics-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-available-resource-metrics-request
                    'make-list-available-resource-metrics-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-available-resource-metrics-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-available-resource-metrics-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-type))
      (common-lisp:list
       (common-lisp:cons "ServiceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifier))
      (common-lisp:list
       (common-lisp:cons "Identifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-types))
      (common-lisp:list
       (common-lisp:cons "MetricTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-available-resource-metrics-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-available-resource-metrics-response common-lisp:nil
                       ((metrics :initarg :metrics :initform common-lisp:nil
                         :type
                         (common-lisp:or response-resource-metric-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-available-resource-metrics-response-metrics
                         :shape "ResponseResourceMetricList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-available-resource-metrics-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-available-resource-metrics-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-available-resource-metrics-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-available-resource-metrics-response
                    'make-list-available-resource-metrics-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-available-resource-metrics-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-available-resource-metrics-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metrics))
      (common-lisp:list
       (common-lisp:cons "Metrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-available-resource-metrics-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-performance-analysis-reports-request
                       common-lisp:nil
                       ((service-type :initarg :service-type :initform
                         (common-lisp:error ":service-type is required") :type
                         (common-lisp:or service-type common-lisp:null)
                         :accessor
                         struct-shape-list-performance-analysis-reports-request-service-type
                         :shape "ServiceType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (identifier :initarg :identifier :initform
                         (common-lisp:error ":identifier is required") :type
                         (common-lisp:or identifier-string common-lisp:null)
                         :accessor
                         struct-shape-list-performance-analysis-reports-request-identifier
                         :shape "IdentifierString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-performance-analysis-reports-request-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-performance-analysis-reports-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (list-tags :initarg :list-tags :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-list-performance-analysis-reports-request-list-tags
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-performance-analysis-reports-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-performance-analysis-reports-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-performance-analysis-reports-request
                    'make-list-performance-analysis-reports-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-performance-analysis-reports-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-performance-analysis-reports-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-type))
      (common-lisp:list
       (common-lisp:cons "ServiceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifier))
      (common-lisp:list
       (common-lisp:cons "Identifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'list-tags))
      (common-lisp:list
       (common-lisp:cons "ListTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-performance-analysis-reports-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-performance-analysis-reports-response
                       common-lisp:nil
                       ((analysis-reports :initarg :analysis-reports :initform
                         common-lisp:nil :type
                         (common-lisp:or analysis-report-summary-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-performance-analysis-reports-response-analysis-reports
                         :shape "AnalysisReportSummaryList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-performance-analysis-reports-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-performance-analysis-reports-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-performance-analysis-reports-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-performance-analysis-reports-response
                    'make-list-performance-analysis-reports-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-performance-analysis-reports-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-performance-analysis-reports-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'analysis-reports))
      (common-lisp:list
       (common-lisp:cons "AnalysisReports"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-performance-analysis-reports-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((service-type :initarg :service-type :initform
                         (common-lisp:error ":service-type is required") :type
                         (common-lisp:or service-type common-lisp:null)
                         :accessor
                         struct-shape-list-tags-for-resource-request-service-type
                         :shape "ServiceType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-list-tags-for-resource-request-resource-arn
                         :shape "AmazonResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-type))
      (common-lisp:list
       (common-lisp:cons "ServiceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-response-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:deftype markdown-string () 'common-lisp:string)
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass metric-dimension-groups common-lisp:nil
                       ((metric :initarg :metric :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-metric-dimension-groups-metric
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (groups :initarg :groups :initform common-lisp:nil
                         :type
                         (common-lisp:or dimension-group-detail-list
                                         common-lisp:null)
                         :accessor struct-shape-metric-dimension-groups-groups
                         :shape "DimensionGroupDetailList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-metric-dimension-groups
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'metric-dimension-groups
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'metric-dimension-groups 'make-metric-dimension-groups))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          metric-dimension-groups))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          metric-dimension-groups))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric))
      (common-lisp:list
       (common-lisp:cons "Metric"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'groups))
      (common-lisp:list
       (common-lisp:cons "Groups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          metric-dimension-groups))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype metric-dimensions-list ()
   '(trivial-types:proper-list metric-dimension-groups))
 (common-lisp:defun make-metric-dimensions-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list metric-dimension-groups))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass metric-key-data-points common-lisp:nil
                       ((key :initarg :key :initform common-lisp:nil :type
                         (common-lisp:or response-resource-metric-key
                                         common-lisp:null)
                         :accessor struct-shape-metric-key-data-points-key
                         :shape "ResponseResourceMetricKey" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (data-points :initarg :data-points :initform
                         common-lisp:nil :type
                         (common-lisp:or data-points-list common-lisp:null)
                         :accessor
                         struct-shape-metric-key-data-points-data-points :shape
                         "DataPointsList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-metric-key-data-points
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'metric-key-data-points
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'metric-key-data-points 'make-metric-key-data-points))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          metric-key-data-points))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          metric-key-data-points))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-points))
      (common-lisp:list
       (common-lisp:cons "DataPoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          metric-key-data-points))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype metric-key-data-points-list ()
   '(trivial-types:proper-list metric-key-data-points))
 (common-lisp:defun make-metric-key-data-points-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list metric-key-data-points))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass metric-query common-lisp:nil
                       ((metric :initarg :metric :initform
                         (common-lisp:error ":metric is required") :type
                         (common-lisp:or request-string common-lisp:null)
                         :accessor struct-shape-metric-query-metric :shape
                         "RequestString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (group-by :initarg :group-by :initform common-lisp:nil
                         :type
                         (common-lisp:or dimension-group common-lisp:null)
                         :accessor struct-shape-metric-query-group-by :shape
                         "DimensionGroup" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filter :initarg :filter :initform common-lisp:nil
                         :type
                         (common-lisp:or metric-query-filter-map
                                         common-lisp:null)
                         :accessor struct-shape-metric-query-filter :shape
                         "MetricQueryFilterMap" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-metric-query
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'metric-query
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'metric-query 'make-metric-query))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input metric-query))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input metric-query))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric))
      (common-lisp:list
       (common-lisp:cons "Metric"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-by))
      (common-lisp:list
       (common-lisp:cons "GroupBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input metric-query))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype metric-query-filter-map () 'common-lisp:hash-table)
 (common-lisp:defun make-metric-query-filter-map
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype metric-query-list ()
   '(trivial-types:proper-list metric-query))
 (common-lisp:defun make-metric-query-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list metric-query))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype metric-type-list ()
   '(trivial-types:proper-list request-string))
 (common-lisp:defun make-metric-type-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list request-string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype metric-values-list ()
   '(trivial-types:proper-list double))
 (common-lisp:defun make-metric-values-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list double))
   aws-sdk/generator/shape::members))
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition not-authorized-exception
     (pi-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       not-authorized-exception-message)))
 (common-lisp:export
  (common-lisp:list 'not-authorized-exception
                    'not-authorized-exception-message)))
(common-lisp:progn
 (common-lisp:defclass performance-insights-metric common-lisp:nil
                       ((metric :initarg :metric :initform common-lisp:nil
                         :type
                         (common-lisp:or descriptive-string common-lisp:null)
                         :accessor
                         struct-shape-performance-insights-metric-metric :shape
                         "DescriptiveString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (display-name :initarg :display-name :initform
                         common-lisp:nil :type
                         (common-lisp:or descriptive-string common-lisp:null)
                         :accessor
                         struct-shape-performance-insights-metric-display-name
                         :shape "DescriptiveString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (dimensions :initarg :dimensions :initform
                         common-lisp:nil :type
                         (common-lisp:or descriptive-map common-lisp:null)
                         :accessor
                         struct-shape-performance-insights-metric-dimensions
                         :shape "DescriptiveMap" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or double common-lisp:null) :accessor
                         struct-shape-performance-insights-metric-value :shape
                         "Double" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-performance-insights-metric
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'performance-insights-metric
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'performance-insights-metric
                    'make-performance-insights-metric))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          performance-insights-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          performance-insights-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric))
      (common-lisp:list
       (common-lisp:cons "Metric"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'display-name))
      (common-lisp:list
       (common-lisp:cons "DisplayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimensions))
      (common-lisp:list
       (common-lisp:cons "Dimensions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          performance-insights-metric))
   common-lisp:nil))
(common-lisp:deftype period-alignment () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass recommendation common-lisp:nil
                       ((recommendation-id :initarg :recommendation-id
                         :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-recommendation-recommendation-id :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (recommendation-description :initarg
                         :recommendation-description :initform common-lisp:nil
                         :type
                         (common-lisp:or markdown-string common-lisp:null)
                         :accessor
                         struct-shape-recommendation-recommendation-description
                         :shape "MarkdownString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-recommendation
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'recommendation
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'recommendation 'make-recommendation))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input recommendation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input recommendation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recommendation-id))
      (common-lisp:list
       (common-lisp:cons "RecommendationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-description))
      (common-lisp:list
       (common-lisp:cons "RecommendationDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input recommendation))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype recommendation-list ()
   '(trivial-types:proper-list recommendation))
 (common-lisp:defun make-recommendation-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list recommendation))
   aws-sdk/generator/shape::members))
(common-lisp:deftype request-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype request-string-list ()
   '(trivial-types:proper-list request-string))
 (common-lisp:defun make-request-string-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list request-string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype requested-dimension-list ()
   '(trivial-types:proper-list request-string))
 (common-lisp:defun make-requested-dimension-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list request-string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass response-partition-key common-lisp:nil
                       ((dimensions :initarg :dimensions :initform
                         (common-lisp:error ":dimensions is required") :type
                         (common-lisp:or dimension-map common-lisp:null)
                         :accessor
                         struct-shape-response-partition-key-dimensions :shape
                         "DimensionMap" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-response-partition-key
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'response-partition-key
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'response-partition-key 'make-response-partition-key))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          response-partition-key))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          response-partition-key))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimensions))
      (common-lisp:list
       (common-lisp:cons "Dimensions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          response-partition-key))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype response-partition-key-list ()
   '(trivial-types:proper-list response-partition-key))
 (common-lisp:defun make-response-partition-key-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list response-partition-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass response-resource-metric common-lisp:nil
                       ((metric :initarg :metric :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-response-resource-metric-metric
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or description common-lisp:null)
                         :accessor
                         struct-shape-response-resource-metric-description
                         :shape "Description" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (unit :initarg :unit :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-response-resource-metric-unit :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-response-resource-metric
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'response-resource-metric
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'response-resource-metric 'make-response-resource-metric))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          response-resource-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          response-resource-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric))
      (common-lisp:list
       (common-lisp:cons "Metric"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'unit))
      (common-lisp:list
       (common-lisp:cons "Unit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          response-resource-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass response-resource-metric-key common-lisp:nil
                       ((metric :initarg :metric :initform
                         (common-lisp:error ":metric is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-response-resource-metric-key-metric
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (dimensions :initarg :dimensions :initform
                         common-lisp:nil :type
                         (common-lisp:or dimension-map common-lisp:null)
                         :accessor
                         struct-shape-response-resource-metric-key-dimensions
                         :shape "DimensionMap" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-response-resource-metric-key
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'response-resource-metric-key
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'response-resource-metric-key
                    'make-response-resource-metric-key))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          response-resource-metric-key))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          response-resource-metric-key))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric))
      (common-lisp:list
       (common-lisp:cons "Metric"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimensions))
      (common-lisp:list
       (common-lisp:cons "Dimensions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          response-resource-metric-key))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype response-resource-metric-list ()
   '(trivial-types:proper-list response-resource-metric))
 (common-lisp:defun make-response-resource-metric-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            response-resource-metric))
   aws-sdk/generator/shape::members))
(common-lisp:deftype service-type () 'common-lisp:string)
(common-lisp:deftype severity () 'common-lisp:string)
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass tag common-lisp:nil
                       ((key :initarg :key :initform
                         (common-lisp:error ":key is required") :type
                         (common-lisp:or tag-key common-lisp:null) :accessor
                         struct-shape-tag-key :shape "TagKey" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (value :initarg :value :initform
                         (common-lisp:error ":value is required") :type
                         (common-lisp:or tag-value common-lisp:null) :accessor
                         struct-shape-tag-value :shape "TagValue" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun make-tag-key-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun make-tag-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((service-type :initarg :service-type :initform
                         (common-lisp:error ":service-type is required") :type
                         (common-lisp:or service-type common-lisp:null)
                         :accessor
                         struct-shape-tag-resource-request-service-type :shape
                         "ServiceType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-tag-resource-request-resource-arn :shape
                         "AmazonResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-tag-resource-request-tags :shape
                         "TagList" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-type))
      (common-lisp:list
       (common-lisp:cons "ServiceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:deftype text-format () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((service-type :initarg :service-type :initform
                         (common-lisp:error ":service-type is required") :type
                         (common-lisp:or service-type common-lisp:null)
                         :accessor
                         struct-shape-untag-resource-request-service-type
                         :shape "ServiceType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-untag-resource-request-resource-arn
                         :shape "AmazonResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tag-keys :initarg :tag-keys :initform
                         (common-lisp:error ":tag-keys is required") :type
                         (common-lisp:or tag-key-list common-lisp:null)
                         :accessor struct-shape-untag-resource-request-tag-keys
                         :shape "TagKeyList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-type))
      (common-lisp:list
       (common-lisp:cons "ServiceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "TagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defun create-performance-analysis-report
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key service-type identifier start-time
                     end-time tags)
   (common-lisp:declare
    (common-lisp:ignorable service-type identifier start-time end-time tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-performance-analysis-report-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pi-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreatePerformanceAnalysisReport"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-performance-analysis-report))
(common-lisp:progn
 (common-lisp:defun delete-performance-analysis-report
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key service-type identifier
                     analysis-report-id)
   (common-lisp:declare
    (common-lisp:ignorable service-type identifier analysis-report-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-performance-analysis-report-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pi-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeletePerformanceAnalysisReport"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-performance-analysis-report))
(common-lisp:progn
 (common-lisp:defun describe-dimension-keys
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key service-type identifier start-time
                     end-time metric period-in-seconds group-by
                     additional-metrics partition-by filter max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable service-type identifier start-time end-time metric
     period-in-seconds group-by additional-metrics partition-by filter
     max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-dimension-keys-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pi-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeDimensionKeys"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-dimension-keys))
(common-lisp:progn
 (common-lisp:defun get-dimension-key-details
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key service-type identifier group
                     group-identifier requested-dimensions)
   (common-lisp:declare
    (common-lisp:ignorable service-type identifier group group-identifier
     requested-dimensions))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-dimension-key-details-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pi-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetDimensionKeyDetails"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-dimension-key-details))
(common-lisp:progn
 (common-lisp:defun get-performance-analysis-report
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key service-type identifier
                     analysis-report-id text-format accept-language)
   (common-lisp:declare
    (common-lisp:ignorable service-type identifier analysis-report-id
     text-format accept-language))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-performance-analysis-report-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pi-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetPerformanceAnalysisReport"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-performance-analysis-report))
(common-lisp:progn
 (common-lisp:defun get-resource-metadata
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key service-type identifier)
   (common-lisp:declare (common-lisp:ignorable service-type identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-resource-metadata-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pi-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetResourceMetadata"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-resource-metadata))
(common-lisp:progn
 (common-lisp:defun get-resource-metrics
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key service-type identifier metric-queries
                     start-time end-time period-in-seconds max-results
                     next-token period-alignment)
   (common-lisp:declare
    (common-lisp:ignorable service-type identifier metric-queries start-time
     end-time period-in-seconds max-results next-token period-alignment))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-resource-metrics-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pi-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetResourceMetrics"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-resource-metrics))
(common-lisp:progn
 (common-lisp:defun list-available-resource-dimensions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key service-type identifier metrics
                     max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable service-type identifier metrics max-results
     next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-available-resource-dimensions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pi-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListAvailableResourceDimensions"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-available-resource-dimensions))
(common-lisp:progn
 (common-lisp:defun list-available-resource-metrics
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key service-type identifier metric-types
                     next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable service-type identifier metric-types next-token
     max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-available-resource-metrics-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pi-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListAvailableResourceMetrics"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-available-resource-metrics))
(common-lisp:progn
 (common-lisp:defun list-performance-analysis-reports
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key service-type identifier next-token
                     max-results list-tags)
   (common-lisp:declare
    (common-lisp:ignorable service-type identifier next-token max-results
     list-tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-performance-analysis-reports-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pi-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListPerformanceAnalysisReports"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-performance-analysis-reports))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key service-type resource-arn)
   (common-lisp:declare (common-lisp:ignorable service-type resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pi-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key service-type resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable service-type resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pi-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "TagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key service-type resource-arn tag-keys)
   (common-lisp:declare
    (common-lisp:ignorable service-type resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pi-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'untag-resource))
