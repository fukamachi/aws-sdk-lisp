;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/mediatailor/api
  (:use)
  (:nicknames #:aws/mediatailor)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/json-request)
  (:import-from #:aws-sdk/rest-json-request)
  (:import-from #:aws-sdk/rest-xml-request)
  (:import-from #:aws-sdk/query-request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/mediatailor/api)
(common-lisp:progn
 (common-lisp:define-condition mediatailor-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'mediatailor-error))
(common-lisp:progn
 (common-lisp:defclass mediatailor-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "mediatailor" :api-version
                        "2018-04-23" :host-prefix "api.mediatailor"
                        :signing-name "mediatailor" :global-host
                        common-lisp:nil))
 (common-lisp:export 'mediatailor-request))
(common-lisp:defvar *error-map*
  '(("BadRequestException" . bad-request-exception)))
(common-lisp:progn
 (common-lisp:defclass access-configuration common-lisp:nil
                       ((access-type :initarg :access-type :initform
                         common-lisp:nil :type
                         (common-lisp:or access-type common-lisp:null)
                         :accessor
                         struct-shape-access-configuration-access-type :shape
                         "AccessType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (secrets-manager-access-token-configuration :initarg
                         :secrets-manager-access-token-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          secrets-manager-access-token-configuration
                          common-lisp:null)
                         :accessor
                         struct-shape-access-configuration-secrets-manager-access-token-configuration
                         :shape "SecretsManagerAccessTokenConfiguration"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-access-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'access-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'access-configuration 'make-access-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input access-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input access-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-type))
      (common-lisp:list
       (common-lisp:cons "AccessType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'secrets-manager-access-token-configuration))
      (common-lisp:list
       (common-lisp:cons "SecretsManagerAccessTokenConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input access-configuration))
   common-lisp:nil))
(common-lisp:deftype access-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass ad-break common-lisp:nil
                       ((ad-break-metadata :initarg :ad-break-metadata
                         :initform common-lisp:nil :type
                         (common-lisp:or ad-break-metadata-list
                                         common-lisp:null)
                         :accessor struct-shape-ad-break-ad-break-metadata
                         :shape "AdBreakMetadataList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message-type :initarg :message-type :initform
                         common-lisp:nil :type
                         (common-lisp:or message-type common-lisp:null)
                         :accessor struct-shape-ad-break-message-type :shape
                         "MessageType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (offset-millis :initarg :offset-millis :initform
                         (common-lisp:error ":offset-millis is required") :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-ad-break-offset-millis :shape "__long"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (slate :initarg :slate :initform common-lisp:nil :type
                         (common-lisp:or slate-source common-lisp:null)
                         :accessor struct-shape-ad-break-slate :shape
                         "SlateSource" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (splice-insert-message :initarg :splice-insert-message
                         :initform common-lisp:nil :type
                         (common-lisp:or splice-insert-message
                                         common-lisp:null)
                         :accessor struct-shape-ad-break-splice-insert-message
                         :shape "SpliceInsertMessage" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (time-signal-message :initarg :time-signal-message
                         :initform common-lisp:nil :type
                         (common-lisp:or time-signal-message common-lisp:null)
                         :accessor struct-shape-ad-break-time-signal-message
                         :shape "TimeSignalMessage" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ad-break
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'ad-break
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'ad-break 'make-ad-break))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input ad-break))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input ad-break))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ad-break-metadata))
      (common-lisp:list
       (common-lisp:cons "AdBreakMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-type))
      (common-lisp:list
       (common-lisp:cons "MessageType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'offset-millis))
      (common-lisp:list
       (common-lisp:cons "OffsetMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slate))
      (common-lisp:list
       (common-lisp:cons "Slate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'splice-insert-message))
      (common-lisp:list
       (common-lisp:cons "SpliceInsertMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-signal-message))
      (common-lisp:list
       (common-lisp:cons "TimeSignalMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input ad-break))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype ad-break-metadata-list ()
   '(trivial-types:proper-list key-value-pair))
 (common-lisp:defun make-ad-break-metadata-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list key-value-pair))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype ad-break-opportunities ()
   '(trivial-types:proper-list ad-break-opportunity))
 (common-lisp:defun make-ad-break-opportunities
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ad-break-opportunity))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass ad-break-opportunity common-lisp:nil
                       ((offset-millis :initarg :offset-millis :initform
                         (common-lisp:error ":offset-millis is required") :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-ad-break-opportunity-offset-millis :shape
                         "__long" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ad-break-opportunity
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'ad-break-opportunity
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'ad-break-opportunity 'make-ad-break-opportunity))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input ad-break-opportunity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input ad-break-opportunity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'offset-millis))
      (common-lisp:list
       (common-lisp:cons "OffsetMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input ad-break-opportunity))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass ad-marker-passthrough common-lisp:nil
                       ((enabled :initarg :enabled :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-ad-marker-passthrough-enabled
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ad-marker-passthrough
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'ad-marker-passthrough
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'ad-marker-passthrough 'make-ad-marker-passthrough))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ad-marker-passthrough))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ad-marker-passthrough))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ad-marker-passthrough))
   common-lisp:nil))
(common-lisp:deftype ad-markup-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass alert common-lisp:nil
                       ((alert-code :initarg :alert-code :initform
                         (common-lisp:error ":alert-code is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-alert-alert-code :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (alert-message :initarg :alert-message :initform
                         (common-lisp:error ":alert-message is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-alert-alert-message :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (category :initarg :category :initform common-lisp:nil
                         :type (common-lisp:or alert-category common-lisp:null)
                         :accessor struct-shape-alert-category :shape
                         "AlertCategory" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform
                         (common-lisp:error ":last-modified-time is required")
                         :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor struct-shape-alert-last-modified-time :shape
                         "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (related-resource-arns :initarg :related-resource-arns
                         :initform
                         (common-lisp:error
                          ":related-resource-arns is required")
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-alert-related-resource-arns
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-alert-resource-arn :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-alert
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'alert
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'alert 'make-alert))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input alert))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input alert))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alert-code))
      (common-lisp:list
       (common-lisp:cons "AlertCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alert-message))
      (common-lisp:list
       (common-lisp:cons "AlertMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'category))
      (common-lisp:list
       (common-lisp:cons "Category"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'related-resource-arns))
      (common-lisp:list
       (common-lisp:cons "RelatedResourceArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input alert))
   common-lisp:nil))
(common-lisp:deftype alert-category () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass avail-matching-criteria common-lisp:nil
                       ((dynamic-variable :initarg :dynamic-variable :initform
                         (common-lisp:error ":dynamic-variable is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-avail-matching-criteria-dynamic-variable
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (operator :initarg :operator :initform
                         (common-lisp:error ":operator is required") :type
                         (common-lisp:or operator common-lisp:null) :accessor
                         struct-shape-avail-matching-criteria-operator :shape
                         "Operator" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-avail-matching-criteria
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'avail-matching-criteria
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'avail-matching-criteria 'make-avail-matching-criteria))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          avail-matching-criteria))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          avail-matching-criteria))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dynamic-variable))
      (common-lisp:list
       (common-lisp:cons "DynamicVariable"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operator))
      (common-lisp:list
       (common-lisp:cons "Operator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          avail-matching-criteria))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass avail-suppression common-lisp:nil
                       ((fill-policy :initarg :fill-policy :initform
                         common-lisp:nil :type
                         (common-lisp:or fill-policy common-lisp:null)
                         :accessor struct-shape-avail-suppression-fill-policy
                         :shape "FillPolicy" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (mode :initarg :mode :initform common-lisp:nil :type
                         (common-lisp:or mode common-lisp:null) :accessor
                         struct-shape-avail-suppression-mode :shape "Mode"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-avail-suppression-value :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-avail-suppression
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'avail-suppression
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'avail-suppression 'make-avail-suppression))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input avail-suppression))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input avail-suppression))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fill-policy))
      (common-lisp:list
       (common-lisp:cons "FillPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mode))
      (common-lisp:list
       (common-lisp:cons "Mode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input avail-suppression))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition bad-request-exception
     (mediatailor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       bad-request-exception-message)))
 (common-lisp:export
  (common-lisp:list 'bad-request-exception 'bad-request-exception-message)))
(common-lisp:progn
 (common-lisp:defclass bumper common-lisp:nil
                       ((end-url :initarg :end-url :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-bumper-end-url :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (start-url :initarg :start-url :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-bumper-start-url :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-bumper
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'bumper
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'bumper 'make-bumper))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input bumper))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input bumper))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-url))
      (common-lisp:list
       (common-lisp:cons "EndUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-url))
      (common-lisp:list
       (common-lisp:cons "StartUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input bumper))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass cdn-configuration common-lisp:nil
                       ((ad-segment-url-prefix :initarg :ad-segment-url-prefix
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-cdn-configuration-ad-segment-url-prefix
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (content-segment-url-prefix :initarg
                         :content-segment-url-prefix :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-cdn-configuration-content-segment-url-prefix
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-cdn-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'cdn-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'cdn-configuration 'make-cdn-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input cdn-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input cdn-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ad-segment-url-prefix))
      (common-lisp:list
       (common-lisp:cons "AdSegmentUrlPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-segment-url-prefix))
      (common-lisp:list
       (common-lisp:cons "ContentSegmentUrlPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input cdn-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass channel common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-channel-arn :shape "__string" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-channel-channel-name :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (channel-state :initarg :channel-state :initform
                         (common-lisp:error ":channel-state is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-channel-channel-state :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor struct-shape-channel-creation-time :shape
                         "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filler-slate :initarg :filler-slate :initform
                         common-lisp:nil :type
                         (common-lisp:or slate-source common-lisp:null)
                         :accessor struct-shape-channel-filler-slate :shape
                         "SlateSource" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor struct-shape-channel-last-modified-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (log-configuration :initarg :log-configuration
                         :initform
                         (common-lisp:error ":log-configuration is required")
                         :type
                         (common-lisp:or log-configuration-for-channel
                                         common-lisp:null)
                         :accessor struct-shape-channel-log-configuration
                         :shape "LogConfigurationForChannel" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (outputs :initarg :outputs :initform
                         (common-lisp:error ":outputs is required") :type
                         (common-lisp:or response-outputs common-lisp:null)
                         :accessor struct-shape-channel-outputs :shape
                         "ResponseOutputs" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (playback-mode :initarg :playback-mode :initform
                         (common-lisp:error ":playback-mode is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-channel-playback-mode :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor struct-shape-channel-tags :shape
                         "__mapOf__string" :location common-lisp:nil
                         :location-name "tags")
                        (tier :initarg :tier :initform
                         (common-lisp:error ":tier is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-channel-tier :shape "__string" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channel
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'channel 'make-channel))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input channel))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input channel))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-state))
      (common-lisp:list
       (common-lisp:cons "ChannelState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filler-slate))
      (common-lisp:list
       (common-lisp:cons "FillerSlate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-configuration))
      (common-lisp:list
       (common-lisp:cons "LogConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outputs))
      (common-lisp:list
       (common-lisp:cons "Outputs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'playback-mode))
      (common-lisp:list
       (common-lisp:cons "PlaybackMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tier))
      (common-lisp:list
       (common-lisp:cons "Tier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input channel))
   common-lisp:nil))
(common-lisp:deftype channel-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass clip-range common-lisp:nil
                       ((end-offset-millis :initarg :end-offset-millis
                         :initform
                         (common-lisp:error ":end-offset-millis is required")
                         :type (common-lisp:or |__long| common-lisp:null)
                         :accessor struct-shape-clip-range-end-offset-millis
                         :shape "__long" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-clip-range
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'clip-range
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'clip-range 'make-clip-range))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input clip-range))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input clip-range))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-offset-millis))
      (common-lisp:list
       (common-lisp:cons "EndOffsetMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input clip-range))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype configuration-aliases-request () 'common-lisp:hash-table)
 (common-lisp:defun make-configuration-aliases-request
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype configuration-aliases-response ()
   'common-lisp:hash-table)
 (common-lisp:defun make-configuration-aliases-response
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass configure-logs-for-channel-request common-lisp:nil
                       ((channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-configure-logs-for-channel-request-channel-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (log-types :initarg :log-types :initform
                         (common-lisp:error ":log-types is required") :type
                         (common-lisp:or log-types common-lisp:null) :accessor
                         struct-shape-configure-logs-for-channel-request-log-types
                         :shape "LogTypes" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-configure-logs-for-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'configure-logs-for-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'configure-logs-for-channel-request
                    'make-configure-logs-for-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-for-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-for-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-types))
      (common-lisp:list
       (common-lisp:cons "LogTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-for-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass configure-logs-for-channel-response common-lisp:nil
                       ((channel-name :initarg :channel-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-configure-logs-for-channel-response-channel-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (log-types :initarg :log-types :initform
                         common-lisp:nil :type
                         (common-lisp:or log-types common-lisp:null) :accessor
                         struct-shape-configure-logs-for-channel-response-log-types
                         :shape "LogTypes" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-configure-logs-for-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'configure-logs-for-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'configure-logs-for-channel-response
                    'make-configure-logs-for-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-for-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-for-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-types))
      (common-lisp:list
       (common-lisp:cons "LogTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-for-channel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass configure-logs-for-playback-configuration-request
                       common-lisp:nil
                       ((percent-enabled :initarg :percent-enabled :initform
                         (common-lisp:error ":percent-enabled is required")
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-configure-logs-for-playback-configuration-request-percent-enabled
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (playback-configuration-name :initarg
                         :playback-configuration-name :initform
                         (common-lisp:error
                          ":playback-configuration-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-configure-logs-for-playback-configuration-request-playback-configuration-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-configure-logs-for-playback-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'configure-logs-for-playback-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'configure-logs-for-playback-configuration-request
                    'make-configure-logs-for-playback-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-for-playback-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-for-playback-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'percent-enabled))
      (common-lisp:list
       (common-lisp:cons "PercentEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'playback-configuration-name))
      (common-lisp:list
       (common-lisp:cons "PlaybackConfigurationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-for-playback-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass configure-logs-for-playback-configuration-response
                       common-lisp:nil
                       ((percent-enabled :initarg :percent-enabled :initform
                         (common-lisp:error ":percent-enabled is required")
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-configure-logs-for-playback-configuration-response-percent-enabled
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (playback-configuration-name :initarg
                         :playback-configuration-name :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-configure-logs-for-playback-configuration-response-playback-configuration-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-configure-logs-for-playback-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'configure-logs-for-playback-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'configure-logs-for-playback-configuration-response
                    'make-configure-logs-for-playback-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-for-playback-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-for-playback-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'percent-enabled))
      (common-lisp:list
       (common-lisp:cons "PercentEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'playback-configuration-name))
      (common-lisp:list
       (common-lisp:cons "PlaybackConfigurationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-for-playback-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-channel-request common-lisp:nil
                       ((channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-channel-request-channel-name
                         :shape "__string" :location "uri" :location-name
                         "ChannelName")
                        (filler-slate :initarg :filler-slate :initform
                         common-lisp:nil :type
                         (common-lisp:or slate-source common-lisp:null)
                         :accessor
                         struct-shape-create-channel-request-filler-slate
                         :shape "SlateSource" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (outputs :initarg :outputs :initform
                         (common-lisp:error ":outputs is required") :type
                         (common-lisp:or request-outputs common-lisp:null)
                         :accessor struct-shape-create-channel-request-outputs
                         :shape "RequestOutputs" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (playback-mode :initarg :playback-mode :initform
                         (common-lisp:error ":playback-mode is required") :type
                         (common-lisp:or playback-mode common-lisp:null)
                         :accessor
                         struct-shape-create-channel-request-playback-mode
                         :shape "PlaybackMode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor struct-shape-create-channel-request-tags
                         :shape "__mapOf__string" :location common-lisp:nil
                         :location-name "tags")
                        (tier :initarg :tier :initform common-lisp:nil :type
                         (common-lisp:or tier common-lisp:null) :accessor
                         struct-shape-create-channel-request-tier :shape "Tier"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (time-shift-configuration :initarg
                         :time-shift-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or time-shift-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-channel-request-time-shift-configuration
                         :shape "TimeShiftConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-channel-request 'make-create-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filler-slate))
      (common-lisp:list
       (common-lisp:cons "FillerSlate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outputs))
      (common-lisp:list
       (common-lisp:cons "Outputs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'playback-mode))
      (common-lisp:list
       (common-lisp:cons "PlaybackMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tier))
      (common-lisp:list
       (common-lisp:cons "Tier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'time-shift-configuration))
      (common-lisp:list
       (common-lisp:cons "TimeShiftConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-channel-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-channel-response-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (channel-name :initarg :channel-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-channel-response-channel-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-state :initarg :channel-state :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-state common-lisp:null)
                         :accessor
                         struct-shape-create-channel-response-channel-state
                         :shape "ChannelState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor
                         struct-shape-create-channel-response-creation-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filler-slate :initarg :filler-slate :initform
                         common-lisp:nil :type
                         (common-lisp:or slate-source common-lisp:null)
                         :accessor
                         struct-shape-create-channel-response-filler-slate
                         :shape "SlateSource" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor
                         struct-shape-create-channel-response-last-modified-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (outputs :initarg :outputs :initform common-lisp:nil
                         :type
                         (common-lisp:or response-outputs common-lisp:null)
                         :accessor struct-shape-create-channel-response-outputs
                         :shape "ResponseOutputs" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (playback-mode :initarg :playback-mode :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-channel-response-playback-mode
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor struct-shape-create-channel-response-tags
                         :shape "__mapOf__string" :location common-lisp:nil
                         :location-name "tags")
                        (tier :initarg :tier :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-channel-response-tier :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (time-shift-configuration :initarg
                         :time-shift-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or time-shift-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-channel-response-time-shift-configuration
                         :shape "TimeShiftConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-channel-response 'make-create-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-state))
      (common-lisp:list
       (common-lisp:cons "ChannelState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filler-slate))
      (common-lisp:list
       (common-lisp:cons "FillerSlate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outputs))
      (common-lisp:list
       (common-lisp:cons "Outputs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'playback-mode))
      (common-lisp:list
       (common-lisp:cons "PlaybackMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tier))
      (common-lisp:list
       (common-lisp:cons "Tier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'time-shift-configuration))
      (common-lisp:list
       (common-lisp:cons "TimeShiftConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-live-source-request common-lisp:nil
                       ((http-package-configurations :initarg
                         :http-package-configurations :initform
                         (common-lisp:error
                          ":http-package-configurations is required")
                         :type
                         (common-lisp:or http-package-configurations
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-live-source-request-http-package-configurations
                         :shape "HttpPackageConfigurations" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (live-source-name :initarg :live-source-name :initform
                         (common-lisp:error ":live-source-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-live-source-request-live-source-name
                         :shape "__string" :location "uri" :location-name
                         "LiveSourceName")
                        (source-location-name :initarg :source-location-name
                         :initform
                         (common-lisp:error
                          ":source-location-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-live-source-request-source-location-name
                         :shape "__string" :location "uri" :location-name
                         "SourceLocationName")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor struct-shape-create-live-source-request-tags
                         :shape "__mapOf__string" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-live-source-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-live-source-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-live-source-request
                    'make-create-live-source-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-live-source-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-live-source-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'http-package-configurations))
      (common-lisp:list
       (common-lisp:cons "HttpPackageConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-live-source-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-live-source-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-live-source-response-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor
                         struct-shape-create-live-source-response-creation-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (http-package-configurations :initarg
                         :http-package-configurations :initform common-lisp:nil
                         :type
                         (common-lisp:or http-package-configurations
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-live-source-response-http-package-configurations
                         :shape "HttpPackageConfigurations" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor
                         struct-shape-create-live-source-response-last-modified-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (live-source-name :initarg :live-source-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-live-source-response-live-source-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (source-location-name :initarg :source-location-name
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-live-source-response-source-location-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor
                         struct-shape-create-live-source-response-tags :shape
                         "__mapOf__string" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-live-source-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-live-source-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-live-source-response
                    'make-create-live-source-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-live-source-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-live-source-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'http-package-configurations))
      (common-lisp:list
       (common-lisp:cons "HttpPackageConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'live-source-name))
      (common-lisp:list
       (common-lisp:cons "LiveSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-live-source-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-prefetch-schedule-request common-lisp:nil
                       ((consumption :initarg :consumption :initform
                         (common-lisp:error ":consumption is required") :type
                         (common-lisp:or prefetch-consumption common-lisp:null)
                         :accessor
                         struct-shape-create-prefetch-schedule-request-consumption
                         :shape "PrefetchConsumption" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-prefetch-schedule-request-name
                         :shape "__string" :location "uri" :location-name
                         "Name")
                        (playback-configuration-name :initarg
                         :playback-configuration-name :initform
                         (common-lisp:error
                          ":playback-configuration-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-prefetch-schedule-request-playback-configuration-name
                         :shape "__string" :location "uri" :location-name
                         "PlaybackConfigurationName")
                        (retrieval :initarg :retrieval :initform
                         (common-lisp:error ":retrieval is required") :type
                         (common-lisp:or prefetch-retrieval common-lisp:null)
                         :accessor
                         struct-shape-create-prefetch-schedule-request-retrieval
                         :shape "PrefetchRetrieval" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (stream-id :initarg :stream-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-prefetch-schedule-request-stream-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-prefetch-schedule-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-prefetch-schedule-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-prefetch-schedule-request
                    'make-create-prefetch-schedule-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-prefetch-schedule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-prefetch-schedule-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'consumption))
      (common-lisp:list
       (common-lisp:cons "Consumption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retrieval))
      (common-lisp:list
       (common-lisp:cons "Retrieval"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-id))
      (common-lisp:list
       (common-lisp:cons "StreamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-prefetch-schedule-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-prefetch-schedule-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-prefetch-schedule-response-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (consumption :initarg :consumption :initform
                         common-lisp:nil :type
                         (common-lisp:or prefetch-consumption common-lisp:null)
                         :accessor
                         struct-shape-create-prefetch-schedule-response-consumption
                         :shape "PrefetchConsumption" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-prefetch-schedule-response-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (playback-configuration-name :initarg
                         :playback-configuration-name :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-prefetch-schedule-response-playback-configuration-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (retrieval :initarg :retrieval :initform
                         common-lisp:nil :type
                         (common-lisp:or prefetch-retrieval common-lisp:null)
                         :accessor
                         struct-shape-create-prefetch-schedule-response-retrieval
                         :shape "PrefetchRetrieval" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (stream-id :initarg :stream-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-prefetch-schedule-response-stream-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-prefetch-schedule-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-prefetch-schedule-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-prefetch-schedule-response
                    'make-create-prefetch-schedule-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-prefetch-schedule-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-prefetch-schedule-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'consumption))
      (common-lisp:list
       (common-lisp:cons "Consumption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'playback-configuration-name))
      (common-lisp:list
       (common-lisp:cons "PlaybackConfigurationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retrieval))
      (common-lisp:list
       (common-lisp:cons "Retrieval"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-id))
      (common-lisp:list
       (common-lisp:cons "StreamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-prefetch-schedule-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-program-request common-lisp:nil
                       ((ad-breaks :initarg :ad-breaks :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfAdBreak| common-lisp:null)
                         :accessor
                         struct-shape-create-program-request-ad-breaks :shape
                         "__listOfAdBreak" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-program-request-channel-name
                         :shape "__string" :location "uri" :location-name
                         "ChannelName")
                        (live-source-name :initarg :live-source-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-program-request-live-source-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (program-name :initarg :program-name :initform
                         (common-lisp:error ":program-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-program-request-program-name
                         :shape "__string" :location "uri" :location-name
                         "ProgramName")
                        (schedule-configuration :initarg
                         :schedule-configuration :initform
                         (common-lisp:error
                          ":schedule-configuration is required")
                         :type
                         (common-lisp:or schedule-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-program-request-schedule-configuration
                         :shape "ScheduleConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (source-location-name :initarg :source-location-name
                         :initform
                         (common-lisp:error
                          ":source-location-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-program-request-source-location-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vod-source-name :initarg :vod-source-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-program-request-vod-source-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-program-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-program-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-program-request 'make-create-program-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-program-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-program-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ad-breaks))
      (common-lisp:list
       (common-lisp:cons "AdBreaks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'live-source-name))
      (common-lisp:list
       (common-lisp:cons "LiveSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'schedule-configuration))
      (common-lisp:list
       (common-lisp:cons "ScheduleConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vod-source-name))
      (common-lisp:list
       (common-lisp:cons "VodSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-program-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-program-response common-lisp:nil
                       ((ad-breaks :initarg :ad-breaks :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfAdBreak| common-lisp:null)
                         :accessor
                         struct-shape-create-program-response-ad-breaks :shape
                         "__listOfAdBreak" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-program-response-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (channel-name :initarg :channel-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-program-response-channel-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (clip-range :initarg :clip-range :initform
                         common-lisp:nil :type
                         (common-lisp:or clip-range common-lisp:null) :accessor
                         struct-shape-create-program-response-clip-range :shape
                         "ClipRange" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor
                         struct-shape-create-program-response-creation-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (duration-millis :initarg :duration-millis :initform
                         common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-create-program-response-duration-millis
                         :shape "__long" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (live-source-name :initarg :live-source-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-program-response-live-source-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (program-name :initarg :program-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-program-response-program-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (scheduled-start-time :initarg :scheduled-start-time
                         :initform common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor
                         struct-shape-create-program-response-scheduled-start-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (source-location-name :initarg :source-location-name
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-program-response-source-location-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vod-source-name :initarg :vod-source-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-program-response-vod-source-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-program-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-program-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-program-response 'make-create-program-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-program-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-program-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ad-breaks))
      (common-lisp:list
       (common-lisp:cons "AdBreaks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'clip-range))
      (common-lisp:list
       (common-lisp:cons "ClipRange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration-millis))
      (common-lisp:list
       (common-lisp:cons "DurationMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'live-source-name))
      (common-lisp:list
       (common-lisp:cons "LiveSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'program-name))
      (common-lisp:list
       (common-lisp:cons "ProgramName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'scheduled-start-time))
      (common-lisp:list
       (common-lisp:cons "ScheduledStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vod-source-name))
      (common-lisp:list
       (common-lisp:cons "VodSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-program-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-source-location-request common-lisp:nil
                       ((access-configuration :initarg :access-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or access-configuration common-lisp:null)
                         :accessor
                         struct-shape-create-source-location-request-access-configuration
                         :shape "AccessConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (default-segment-delivery-configuration :initarg
                         :default-segment-delivery-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or default-segment-delivery-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-source-location-request-default-segment-delivery-configuration
                         :shape "DefaultSegmentDeliveryConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (http-configuration :initarg :http-configuration
                         :initform
                         (common-lisp:error ":http-configuration is required")
                         :type
                         (common-lisp:or http-configuration common-lisp:null)
                         :accessor
                         struct-shape-create-source-location-request-http-configuration
                         :shape "HttpConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (segment-delivery-configurations :initarg
                         :segment-delivery-configurations :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfSegmentDeliveryConfiguration|
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-source-location-request-segment-delivery-configurations
                         :shape "__listOfSegmentDeliveryConfiguration"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (source-location-name :initarg :source-location-name
                         :initform
                         (common-lisp:error
                          ":source-location-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-source-location-request-source-location-name
                         :shape "__string" :location "uri" :location-name
                         "SourceLocationName")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor
                         struct-shape-create-source-location-request-tags
                         :shape "__mapOf__string" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-source-location-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-source-location-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-source-location-request
                    'make-create-source-location-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-source-location-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-source-location-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'access-configuration))
      (common-lisp:list
       (common-lisp:cons "AccessConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-segment-delivery-configuration))
      (common-lisp:list
       (common-lisp:cons "DefaultSegmentDeliveryConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'http-configuration))
      (common-lisp:list
       (common-lisp:cons "HttpConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segment-delivery-configurations))
      (common-lisp:list
       (common-lisp:cons "SegmentDeliveryConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-source-location-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-source-location-response common-lisp:nil
                       ((access-configuration :initarg :access-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or access-configuration common-lisp:null)
                         :accessor
                         struct-shape-create-source-location-response-access-configuration
                         :shape "AccessConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-source-location-response-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor
                         struct-shape-create-source-location-response-creation-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (default-segment-delivery-configuration :initarg
                         :default-segment-delivery-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or default-segment-delivery-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-source-location-response-default-segment-delivery-configuration
                         :shape "DefaultSegmentDeliveryConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (http-configuration :initarg :http-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or http-configuration common-lisp:null)
                         :accessor
                         struct-shape-create-source-location-response-http-configuration
                         :shape "HttpConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor
                         struct-shape-create-source-location-response-last-modified-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (segment-delivery-configurations :initarg
                         :segment-delivery-configurations :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfSegmentDeliveryConfiguration|
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-source-location-response-segment-delivery-configurations
                         :shape "__listOfSegmentDeliveryConfiguration"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (source-location-name :initarg :source-location-name
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-source-location-response-source-location-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor
                         struct-shape-create-source-location-response-tags
                         :shape "__mapOf__string" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-source-location-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-source-location-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-source-location-response
                    'make-create-source-location-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-source-location-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-source-location-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'access-configuration))
      (common-lisp:list
       (common-lisp:cons "AccessConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-segment-delivery-configuration))
      (common-lisp:list
       (common-lisp:cons "DefaultSegmentDeliveryConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'http-configuration))
      (common-lisp:list
       (common-lisp:cons "HttpConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segment-delivery-configurations))
      (common-lisp:list
       (common-lisp:cons "SegmentDeliveryConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-source-location-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-vod-source-request common-lisp:nil
                       ((http-package-configurations :initarg
                         :http-package-configurations :initform
                         (common-lisp:error
                          ":http-package-configurations is required")
                         :type
                         (common-lisp:or http-package-configurations
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-vod-source-request-http-package-configurations
                         :shape "HttpPackageConfigurations" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (source-location-name :initarg :source-location-name
                         :initform
                         (common-lisp:error
                          ":source-location-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-vod-source-request-source-location-name
                         :shape "__string" :location "uri" :location-name
                         "SourceLocationName")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor struct-shape-create-vod-source-request-tags
                         :shape "__mapOf__string" :location common-lisp:nil
                         :location-name "tags")
                        (vod-source-name :initarg :vod-source-name :initform
                         (common-lisp:error ":vod-source-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-vod-source-request-vod-source-name
                         :shape "__string" :location "uri" :location-name
                         "VodSourceName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-vod-source-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-vod-source-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-vod-source-request
                    'make-create-vod-source-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-vod-source-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-vod-source-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'http-package-configurations))
      (common-lisp:list
       (common-lisp:cons "HttpPackageConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-vod-source-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-vod-source-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-vod-source-response-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor
                         struct-shape-create-vod-source-response-creation-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (http-package-configurations :initarg
                         :http-package-configurations :initform common-lisp:nil
                         :type
                         (common-lisp:or http-package-configurations
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-vod-source-response-http-package-configurations
                         :shape "HttpPackageConfigurations" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor
                         struct-shape-create-vod-source-response-last-modified-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (source-location-name :initarg :source-location-name
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-vod-source-response-source-location-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor struct-shape-create-vod-source-response-tags
                         :shape "__mapOf__string" :location common-lisp:nil
                         :location-name "tags")
                        (vod-source-name :initarg :vod-source-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-vod-source-response-vod-source-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-vod-source-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-vod-source-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-vod-source-response
                    'make-create-vod-source-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-vod-source-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-vod-source-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'http-package-configurations))
      (common-lisp:list
       (common-lisp:cons "HttpPackageConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vod-source-name))
      (common-lisp:list
       (common-lisp:cons "VodSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-vod-source-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass dash-configuration common-lisp:nil
                       ((manifest-endpoint-prefix :initarg
                         :manifest-endpoint-prefix :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-dash-configuration-manifest-endpoint-prefix
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (mpd-location :initarg :mpd-location :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-dash-configuration-mpd-location :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (origin-manifest-type :initarg :origin-manifest-type
                         :initform common-lisp:nil :type
                         (common-lisp:or origin-manifest-type common-lisp:null)
                         :accessor
                         struct-shape-dash-configuration-origin-manifest-type
                         :shape "OriginManifestType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-dash-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'dash-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'dash-configuration 'make-dash-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dash-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dash-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'manifest-endpoint-prefix))
      (common-lisp:list
       (common-lisp:cons "ManifestEndpointPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mpd-location))
      (common-lisp:list
       (common-lisp:cons "MpdLocation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'origin-manifest-type))
      (common-lisp:list
       (common-lisp:cons "OriginManifestType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dash-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass dash-configuration-for-put common-lisp:nil
                       ((mpd-location :initarg :mpd-location :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-dash-configuration-for-put-mpd-location
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (origin-manifest-type :initarg :origin-manifest-type
                         :initform common-lisp:nil :type
                         (common-lisp:or origin-manifest-type common-lisp:null)
                         :accessor
                         struct-shape-dash-configuration-for-put-origin-manifest-type
                         :shape "OriginManifestType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-dash-configuration-for-put
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'dash-configuration-for-put
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'dash-configuration-for-put
                    'make-dash-configuration-for-put))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dash-configuration-for-put))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dash-configuration-for-put))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mpd-location))
      (common-lisp:list
       (common-lisp:cons "MpdLocation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'origin-manifest-type))
      (common-lisp:list
       (common-lisp:cons "OriginManifestType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dash-configuration-for-put))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass dash-playlist-settings common-lisp:nil
                       ((manifest-window-seconds :initarg
                         :manifest-window-seconds :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-dash-playlist-settings-manifest-window-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (min-buffer-time-seconds :initarg
                         :min-buffer-time-seconds :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-dash-playlist-settings-min-buffer-time-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (min-update-period-seconds :initarg
                         :min-update-period-seconds :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-dash-playlist-settings-min-update-period-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (suggested-presentation-delay-seconds :initarg
                         :suggested-presentation-delay-seconds :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-dash-playlist-settings-suggested-presentation-delay-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-dash-playlist-settings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'dash-playlist-settings
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'dash-playlist-settings 'make-dash-playlist-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dash-playlist-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dash-playlist-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'manifest-window-seconds))
      (common-lisp:list
       (common-lisp:cons "ManifestWindowSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'min-buffer-time-seconds))
      (common-lisp:list
       (common-lisp:cons "MinBufferTimeSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'min-update-period-seconds))
      (common-lisp:list
       (common-lisp:cons "MinUpdatePeriodSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suggested-presentation-delay-seconds))
      (common-lisp:list
       (common-lisp:cons "SuggestedPresentationDelaySeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dash-playlist-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass default-segment-delivery-configuration common-lisp:nil
                       ((base-url :initarg :base-url :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-default-segment-delivery-configuration-base-url
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-default-segment-delivery-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'default-segment-delivery-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'default-segment-delivery-configuration
                    'make-default-segment-delivery-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          default-segment-delivery-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          default-segment-delivery-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'base-url))
      (common-lisp:list
       (common-lisp:cons "BaseUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          default-segment-delivery-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-channel-policy-request common-lisp:nil
                       ((channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-channel-policy-request-channel-name
                         :shape "__string" :location "uri" :location-name
                         "ChannelName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-channel-policy-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-channel-policy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-channel-policy-request
                    'make-delete-channel-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-channel-policy-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-channel-policy-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-channel-policy-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-channel-policy-response
                    'make-delete-channel-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-channel-request common-lisp:nil
                       ((channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-channel-request-channel-name
                         :shape "__string" :location "uri" :location-name
                         "ChannelName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-channel-request 'make-delete-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-channel-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-channel-response 'make-delete-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-live-source-request common-lisp:nil
                       ((live-source-name :initarg :live-source-name :initform
                         (common-lisp:error ":live-source-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-live-source-request-live-source-name
                         :shape "__string" :location "uri" :location-name
                         "LiveSourceName")
                        (source-location-name :initarg :source-location-name
                         :initform
                         (common-lisp:error
                          ":source-location-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-live-source-request-source-location-name
                         :shape "__string" :location "uri" :location-name
                         "SourceLocationName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-live-source-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-live-source-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-live-source-request
                    'make-delete-live-source-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-live-source-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-live-source-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-live-source-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-live-source-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-live-source-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-live-source-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-live-source-response
                    'make-delete-live-source-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-live-source-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-live-source-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-live-source-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-playback-configuration-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-playback-configuration-request-name
                         :shape "__string" :location "uri" :location-name
                         "Name"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-playback-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-playback-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-playback-configuration-request
                    'make-delete-playback-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-playback-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-playback-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-playback-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-playback-configuration-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-playback-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-playback-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-playback-configuration-response
                    'make-delete-playback-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-playback-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-playback-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-playback-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-prefetch-schedule-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-prefetch-schedule-request-name
                         :shape "__string" :location "uri" :location-name
                         "Name")
                        (playback-configuration-name :initarg
                         :playback-configuration-name :initform
                         (common-lisp:error
                          ":playback-configuration-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-prefetch-schedule-request-playback-configuration-name
                         :shape "__string" :location "uri" :location-name
                         "PlaybackConfigurationName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-prefetch-schedule-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-prefetch-schedule-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-prefetch-schedule-request
                    'make-delete-prefetch-schedule-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-prefetch-schedule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-prefetch-schedule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-prefetch-schedule-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-prefetch-schedule-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-prefetch-schedule-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-prefetch-schedule-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-prefetch-schedule-response
                    'make-delete-prefetch-schedule-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-prefetch-schedule-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-prefetch-schedule-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-prefetch-schedule-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-program-request common-lisp:nil
                       ((channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-program-request-channel-name
                         :shape "__string" :location "uri" :location-name
                         "ChannelName")
                        (program-name :initarg :program-name :initform
                         (common-lisp:error ":program-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-program-request-program-name
                         :shape "__string" :location "uri" :location-name
                         "ProgramName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-program-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-program-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-program-request 'make-delete-program-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-program-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-program-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-program-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-program-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-program-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-program-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-program-response 'make-delete-program-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-program-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-program-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-program-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-source-location-request common-lisp:nil
                       ((source-location-name :initarg :source-location-name
                         :initform
                         (common-lisp:error
                          ":source-location-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-source-location-request-source-location-name
                         :shape "__string" :location "uri" :location-name
                         "SourceLocationName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-source-location-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-source-location-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-source-location-request
                    'make-delete-source-location-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-source-location-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-source-location-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-source-location-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-source-location-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-source-location-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-source-location-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-source-location-response
                    'make-delete-source-location-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-source-location-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-source-location-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-source-location-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-vod-source-request common-lisp:nil
                       ((source-location-name :initarg :source-location-name
                         :initform
                         (common-lisp:error
                          ":source-location-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-vod-source-request-source-location-name
                         :shape "__string" :location "uri" :location-name
                         "SourceLocationName")
                        (vod-source-name :initarg :vod-source-name :initform
                         (common-lisp:error ":vod-source-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-vod-source-request-vod-source-name
                         :shape "__string" :location "uri" :location-name
                         "VodSourceName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-vod-source-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-vod-source-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-vod-source-request
                    'make-delete-vod-source-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-vod-source-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-vod-source-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-vod-source-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-vod-source-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-vod-source-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-vod-source-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-vod-source-response
                    'make-delete-vod-source-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-vod-source-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-vod-source-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-vod-source-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-channel-request common-lisp:nil
                       ((channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-channel-request-channel-name
                         :shape "__string" :location "uri" :location-name
                         "ChannelName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-channel-request 'make-describe-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-channel-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-channel-response-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (channel-name :initarg :channel-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-channel-response-channel-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-state :initarg :channel-state :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-state common-lisp:null)
                         :accessor
                         struct-shape-describe-channel-response-channel-state
                         :shape "ChannelState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor
                         struct-shape-describe-channel-response-creation-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filler-slate :initarg :filler-slate :initform
                         common-lisp:nil :type
                         (common-lisp:or slate-source common-lisp:null)
                         :accessor
                         struct-shape-describe-channel-response-filler-slate
                         :shape "SlateSource" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor
                         struct-shape-describe-channel-response-last-modified-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (log-configuration :initarg :log-configuration
                         :initform
                         (common-lisp:error ":log-configuration is required")
                         :type
                         (common-lisp:or log-configuration-for-channel
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-channel-response-log-configuration
                         :shape "LogConfigurationForChannel" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (outputs :initarg :outputs :initform common-lisp:nil
                         :type
                         (common-lisp:or response-outputs common-lisp:null)
                         :accessor
                         struct-shape-describe-channel-response-outputs :shape
                         "ResponseOutputs" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (playback-mode :initarg :playback-mode :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-channel-response-playback-mode
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor struct-shape-describe-channel-response-tags
                         :shape "__mapOf__string" :location common-lisp:nil
                         :location-name "tags")
                        (tier :initarg :tier :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-channel-response-tier :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (time-shift-configuration :initarg
                         :time-shift-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or time-shift-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-channel-response-time-shift-configuration
                         :shape "TimeShiftConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-channel-response
                    'make-describe-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-state))
      (common-lisp:list
       (common-lisp:cons "ChannelState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filler-slate))
      (common-lisp:list
       (common-lisp:cons "FillerSlate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-configuration))
      (common-lisp:list
       (common-lisp:cons "LogConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outputs))
      (common-lisp:list
       (common-lisp:cons "Outputs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'playback-mode))
      (common-lisp:list
       (common-lisp:cons "PlaybackMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tier))
      (common-lisp:list
       (common-lisp:cons "Tier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'time-shift-configuration))
      (common-lisp:list
       (common-lisp:cons "TimeShiftConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-live-source-request common-lisp:nil
                       ((live-source-name :initarg :live-source-name :initform
                         (common-lisp:error ":live-source-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-describe-live-source-request-live-source-name
                         :shape "__string" :location "uri" :location-name
                         "LiveSourceName")
                        (source-location-name :initarg :source-location-name
                         :initform
                         (common-lisp:error
                          ":source-location-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-describe-live-source-request-source-location-name
                         :shape "__string" :location "uri" :location-name
                         "SourceLocationName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-live-source-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-live-source-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-live-source-request
                    'make-describe-live-source-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-live-source-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-live-source-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-live-source-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-live-source-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-live-source-response-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor
                         struct-shape-describe-live-source-response-creation-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (http-package-configurations :initarg
                         :http-package-configurations :initform common-lisp:nil
                         :type
                         (common-lisp:or http-package-configurations
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-live-source-response-http-package-configurations
                         :shape "HttpPackageConfigurations" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor
                         struct-shape-describe-live-source-response-last-modified-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (live-source-name :initarg :live-source-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-live-source-response-live-source-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (source-location-name :initarg :source-location-name
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-live-source-response-source-location-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor
                         struct-shape-describe-live-source-response-tags :shape
                         "__mapOf__string" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-live-source-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-live-source-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-live-source-response
                    'make-describe-live-source-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-live-source-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-live-source-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'http-package-configurations))
      (common-lisp:list
       (common-lisp:cons "HttpPackageConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'live-source-name))
      (common-lisp:list
       (common-lisp:cons "LiveSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-live-source-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-program-request common-lisp:nil
                       ((channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-program-request-channel-name
                         :shape "__string" :location "uri" :location-name
                         "ChannelName")
                        (program-name :initarg :program-name :initform
                         (common-lisp:error ":program-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-program-request-program-name
                         :shape "__string" :location "uri" :location-name
                         "ProgramName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-program-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-program-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-program-request 'make-describe-program-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-program-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-program-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-program-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-program-response common-lisp:nil
                       ((ad-breaks :initarg :ad-breaks :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfAdBreak| common-lisp:null)
                         :accessor
                         struct-shape-describe-program-response-ad-breaks
                         :shape "__listOfAdBreak" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-program-response-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (channel-name :initarg :channel-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-program-response-channel-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (clip-range :initarg :clip-range :initform
                         common-lisp:nil :type
                         (common-lisp:or clip-range common-lisp:null) :accessor
                         struct-shape-describe-program-response-clip-range
                         :shape "ClipRange" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor
                         struct-shape-describe-program-response-creation-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (duration-millis :initarg :duration-millis :initform
                         common-lisp:nil :type
                         (common-lisp:or long common-lisp:null) :accessor
                         struct-shape-describe-program-response-duration-millis
                         :shape "Long" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (live-source-name :initarg :live-source-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-program-response-live-source-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (program-name :initarg :program-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-program-response-program-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (scheduled-start-time :initarg :scheduled-start-time
                         :initform common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor
                         struct-shape-describe-program-response-scheduled-start-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (source-location-name :initarg :source-location-name
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-program-response-source-location-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vod-source-name :initarg :vod-source-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-program-response-vod-source-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-program-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-program-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-program-response
                    'make-describe-program-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-program-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-program-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ad-breaks))
      (common-lisp:list
       (common-lisp:cons "AdBreaks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'clip-range))
      (common-lisp:list
       (common-lisp:cons "ClipRange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration-millis))
      (common-lisp:list
       (common-lisp:cons "DurationMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'live-source-name))
      (common-lisp:list
       (common-lisp:cons "LiveSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'program-name))
      (common-lisp:list
       (common-lisp:cons "ProgramName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'scheduled-start-time))
      (common-lisp:list
       (common-lisp:cons "ScheduledStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vod-source-name))
      (common-lisp:list
       (common-lisp:cons "VodSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-program-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-source-location-request common-lisp:nil
                       ((source-location-name :initarg :source-location-name
                         :initform
                         (common-lisp:error
                          ":source-location-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-describe-source-location-request-source-location-name
                         :shape "__string" :location "uri" :location-name
                         "SourceLocationName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-source-location-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-source-location-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-source-location-request
                    'make-describe-source-location-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-source-location-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-source-location-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-source-location-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-source-location-response common-lisp:nil
                       ((access-configuration :initarg :access-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or access-configuration common-lisp:null)
                         :accessor
                         struct-shape-describe-source-location-response-access-configuration
                         :shape "AccessConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-source-location-response-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor
                         struct-shape-describe-source-location-response-creation-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (default-segment-delivery-configuration :initarg
                         :default-segment-delivery-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or default-segment-delivery-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-source-location-response-default-segment-delivery-configuration
                         :shape "DefaultSegmentDeliveryConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (http-configuration :initarg :http-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or http-configuration common-lisp:null)
                         :accessor
                         struct-shape-describe-source-location-response-http-configuration
                         :shape "HttpConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor
                         struct-shape-describe-source-location-response-last-modified-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (segment-delivery-configurations :initarg
                         :segment-delivery-configurations :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfSegmentDeliveryConfiguration|
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-source-location-response-segment-delivery-configurations
                         :shape "__listOfSegmentDeliveryConfiguration"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (source-location-name :initarg :source-location-name
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-source-location-response-source-location-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor
                         struct-shape-describe-source-location-response-tags
                         :shape "__mapOf__string" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-source-location-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-source-location-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-source-location-response
                    'make-describe-source-location-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-source-location-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-source-location-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'access-configuration))
      (common-lisp:list
       (common-lisp:cons "AccessConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-segment-delivery-configuration))
      (common-lisp:list
       (common-lisp:cons "DefaultSegmentDeliveryConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'http-configuration))
      (common-lisp:list
       (common-lisp:cons "HttpConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segment-delivery-configurations))
      (common-lisp:list
       (common-lisp:cons "SegmentDeliveryConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-source-location-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-vod-source-request common-lisp:nil
                       ((source-location-name :initarg :source-location-name
                         :initform
                         (common-lisp:error
                          ":source-location-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-describe-vod-source-request-source-location-name
                         :shape "__string" :location "uri" :location-name
                         "SourceLocationName")
                        (vod-source-name :initarg :vod-source-name :initform
                         (common-lisp:error ":vod-source-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-describe-vod-source-request-vod-source-name
                         :shape "__string" :location "uri" :location-name
                         "VodSourceName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-vod-source-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-vod-source-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-vod-source-request
                    'make-describe-vod-source-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-vod-source-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-vod-source-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-vod-source-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-vod-source-response common-lisp:nil
                       ((ad-break-opportunities :initarg
                         :ad-break-opportunities :initform common-lisp:nil
                         :type
                         (common-lisp:or ad-break-opportunities
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-vod-source-response-ad-break-opportunities
                         :shape "AdBreakOpportunities" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-vod-source-response-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor
                         struct-shape-describe-vod-source-response-creation-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (http-package-configurations :initarg
                         :http-package-configurations :initform common-lisp:nil
                         :type
                         (common-lisp:or http-package-configurations
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-vod-source-response-http-package-configurations
                         :shape "HttpPackageConfigurations" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor
                         struct-shape-describe-vod-source-response-last-modified-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (source-location-name :initarg :source-location-name
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-vod-source-response-source-location-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor
                         struct-shape-describe-vod-source-response-tags :shape
                         "__mapOf__string" :location common-lisp:nil
                         :location-name "tags")
                        (vod-source-name :initarg :vod-source-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-vod-source-response-vod-source-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-vod-source-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-vod-source-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-vod-source-response
                    'make-describe-vod-source-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-vod-source-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-vod-source-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ad-break-opportunities))
      (common-lisp:list
       (common-lisp:cons "AdBreakOpportunities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'http-package-configurations))
      (common-lisp:list
       (common-lisp:cons "HttpPackageConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vod-source-name))
      (common-lisp:list
       (common-lisp:cons "VodSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-vod-source-response))
   common-lisp:nil))
(common-lisp:deftype fill-policy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass get-channel-policy-request common-lisp:nil
                       ((channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-channel-policy-request-channel-name
                         :shape "__string" :location "uri" :location-name
                         "ChannelName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-channel-policy-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-channel-policy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-channel-policy-request
                    'make-get-channel-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-channel-policy-response common-lisp:nil
                       ((policy :initarg :policy :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-channel-policy-response-policy :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-channel-policy-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-channel-policy-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-channel-policy-response
                    'make-get-channel-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "Policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-channel-schedule-request common-lisp:nil
                       ((channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-channel-schedule-request-channel-name
                         :shape "__string" :location "uri" :location-name
                         "ChannelName")
                        (duration-minutes :initarg :duration-minutes :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-channel-schedule-request-duration-minutes
                         :shape "__string" :location "querystring"
                         :location-name "durationMinutes")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-get-channel-schedule-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-channel-schedule-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-channel-schedule-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-channel-schedule-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-channel-schedule-request
                    'make-get-channel-schedule-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-schedule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-schedule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-schedule-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-channel-schedule-response common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or |__listOfScheduleEntry|
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-channel-schedule-response-items
                         :shape "__listOfScheduleEntry" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-channel-schedule-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-channel-schedule-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-channel-schedule-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-channel-schedule-response
                    'make-get-channel-schedule-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-schedule-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-schedule-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-schedule-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-playback-configuration-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-playback-configuration-request-name
                         :shape "__string" :location "uri" :location-name
                         "Name"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-playback-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-playback-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-playback-configuration-request
                    'make-get-playback-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-playback-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-playback-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-playback-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-playback-configuration-response common-lisp:nil
                       ((ad-decision-server-url :initarg
                         :ad-decision-server-url :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-playback-configuration-response-ad-decision-server-url
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (avail-suppression :initarg :avail-suppression
                         :initform common-lisp:nil :type
                         (common-lisp:or avail-suppression common-lisp:null)
                         :accessor
                         struct-shape-get-playback-configuration-response-avail-suppression
                         :shape "AvailSuppression" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (bumper :initarg :bumper :initform common-lisp:nil
                         :type (common-lisp:or bumper common-lisp:null)
                         :accessor
                         struct-shape-get-playback-configuration-response-bumper
                         :shape "Bumper" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cdn-configuration :initarg :cdn-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or cdn-configuration common-lisp:null)
                         :accessor
                         struct-shape-get-playback-configuration-response-cdn-configuration
                         :shape "CdnConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (configuration-aliases :initarg :configuration-aliases
                         :initform common-lisp:nil :type
                         (common-lisp:or configuration-aliases-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-playback-configuration-response-configuration-aliases
                         :shape "ConfigurationAliasesResponse" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (dash-configuration :initarg :dash-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or dash-configuration common-lisp:null)
                         :accessor
                         struct-shape-get-playback-configuration-response-dash-configuration
                         :shape "DashConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (hls-configuration :initarg :hls-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or hls-configuration common-lisp:null)
                         :accessor
                         struct-shape-get-playback-configuration-response-hls-configuration
                         :shape "HlsConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (live-pre-roll-configuration :initarg
                         :live-pre-roll-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or live-pre-roll-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-playback-configuration-response-live-pre-roll-configuration
                         :shape "LivePreRollConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (log-configuration :initarg :log-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or log-configuration common-lisp:null)
                         :accessor
                         struct-shape-get-playback-configuration-response-log-configuration
                         :shape "LogConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (manifest-processing-rules :initarg
                         :manifest-processing-rules :initform common-lisp:nil
                         :type
                         (common-lisp:or manifest-processing-rules
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-playback-configuration-response-manifest-processing-rules
                         :shape "ManifestProcessingRules" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-playback-configuration-response-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (personalization-threshold-seconds :initarg
                         :personalization-threshold-seconds :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integerMin1| common-lisp:null)
                         :accessor
                         struct-shape-get-playback-configuration-response-personalization-threshold-seconds
                         :shape "__integerMin1" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (playback-configuration-arn :initarg
                         :playback-configuration-arn :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-playback-configuration-response-playback-configuration-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (playback-endpoint-prefix :initarg
                         :playback-endpoint-prefix :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-playback-configuration-response-playback-endpoint-prefix
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (session-initialization-endpoint-prefix :initarg
                         :session-initialization-endpoint-prefix :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-playback-configuration-response-session-initialization-endpoint-prefix
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (slate-ad-url :initarg :slate-ad-url :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-playback-configuration-response-slate-ad-url
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor
                         struct-shape-get-playback-configuration-response-tags
                         :shape "__mapOf__string" :location common-lisp:nil
                         :location-name "tags")
                        (transcode-profile-name :initarg
                         :transcode-profile-name :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-playback-configuration-response-transcode-profile-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (video-content-source-url :initarg
                         :video-content-source-url :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-playback-configuration-response-video-content-source-url
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-playback-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-playback-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-playback-configuration-response
                    'make-get-playback-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-playback-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-playback-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ad-decision-server-url))
      (common-lisp:list
       (common-lisp:cons "AdDecisionServerUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'avail-suppression))
      (common-lisp:list
       (common-lisp:cons "AvailSuppression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bumper))
      (common-lisp:list
       (common-lisp:cons "Bumper"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cdn-configuration))
      (common-lisp:list
       (common-lisp:cons "CdnConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configuration-aliases))
      (common-lisp:list
       (common-lisp:cons "ConfigurationAliases"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dash-configuration))
      (common-lisp:list
       (common-lisp:cons "DashConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-configuration))
      (common-lisp:list
       (common-lisp:cons "HlsConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'live-pre-roll-configuration))
      (common-lisp:list
       (common-lisp:cons "LivePreRollConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-configuration))
      (common-lisp:list
       (common-lisp:cons "LogConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'manifest-processing-rules))
      (common-lisp:list
       (common-lisp:cons "ManifestProcessingRules"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'personalization-threshold-seconds))
      (common-lisp:list
       (common-lisp:cons "PersonalizationThresholdSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'playback-configuration-arn))
      (common-lisp:list
       (common-lisp:cons "PlaybackConfigurationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'playback-endpoint-prefix))
      (common-lisp:list
       (common-lisp:cons "PlaybackEndpointPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'session-initialization-endpoint-prefix))
      (common-lisp:list
       (common-lisp:cons "SessionInitializationEndpointPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slate-ad-url))
      (common-lisp:list
       (common-lisp:cons "SlateAdUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'transcode-profile-name))
      (common-lisp:list
       (common-lisp:cons "TranscodeProfileName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'video-content-source-url))
      (common-lisp:list
       (common-lisp:cons "VideoContentSourceUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-playback-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-prefetch-schedule-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-prefetch-schedule-request-name :shape
                         "__string" :location "uri" :location-name "Name")
                        (playback-configuration-name :initarg
                         :playback-configuration-name :initform
                         (common-lisp:error
                          ":playback-configuration-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-prefetch-schedule-request-playback-configuration-name
                         :shape "__string" :location "uri" :location-name
                         "PlaybackConfigurationName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-prefetch-schedule-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-prefetch-schedule-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-prefetch-schedule-request
                    'make-get-prefetch-schedule-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-prefetch-schedule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-prefetch-schedule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-prefetch-schedule-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-prefetch-schedule-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-prefetch-schedule-response-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (consumption :initarg :consumption :initform
                         common-lisp:nil :type
                         (common-lisp:or prefetch-consumption common-lisp:null)
                         :accessor
                         struct-shape-get-prefetch-schedule-response-consumption
                         :shape "PrefetchConsumption" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-prefetch-schedule-response-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (playback-configuration-name :initarg
                         :playback-configuration-name :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-prefetch-schedule-response-playback-configuration-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (retrieval :initarg :retrieval :initform
                         common-lisp:nil :type
                         (common-lisp:or prefetch-retrieval common-lisp:null)
                         :accessor
                         struct-shape-get-prefetch-schedule-response-retrieval
                         :shape "PrefetchRetrieval" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (stream-id :initarg :stream-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-prefetch-schedule-response-stream-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-prefetch-schedule-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-prefetch-schedule-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-prefetch-schedule-response
                    'make-get-prefetch-schedule-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-prefetch-schedule-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-prefetch-schedule-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'consumption))
      (common-lisp:list
       (common-lisp:cons "Consumption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'playback-configuration-name))
      (common-lisp:list
       (common-lisp:cons "PlaybackConfigurationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retrieval))
      (common-lisp:list
       (common-lisp:cons "Retrieval"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-id))
      (common-lisp:list
       (common-lisp:cons "StreamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-prefetch-schedule-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass hls-configuration common-lisp:nil
                       ((manifest-endpoint-prefix :initarg
                         :manifest-endpoint-prefix :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-hls-configuration-manifest-endpoint-prefix
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-hls-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'hls-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'hls-configuration 'make-hls-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input hls-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input hls-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'manifest-endpoint-prefix))
      (common-lisp:list
       (common-lisp:cons "ManifestEndpointPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input hls-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass hls-playlist-settings common-lisp:nil
                       ((ad-markup-type :initarg :ad-markup-type :initform
                         common-lisp:nil :type
                         (common-lisp:or |adMarkupTypes| common-lisp:null)
                         :accessor
                         struct-shape-hls-playlist-settings-ad-markup-type
                         :shape "adMarkupTypes" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (manifest-window-seconds :initarg
                         :manifest-window-seconds :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-hls-playlist-settings-manifest-window-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-hls-playlist-settings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'hls-playlist-settings
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'hls-playlist-settings 'make-hls-playlist-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          hls-playlist-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          hls-playlist-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ad-markup-type))
      (common-lisp:list
       (common-lisp:cons "AdMarkupType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'manifest-window-seconds))
      (common-lisp:list
       (common-lisp:cons "ManifestWindowSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          hls-playlist-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass http-configuration common-lisp:nil
                       ((base-url :initarg :base-url :initform
                         (common-lisp:error ":base-url is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-http-configuration-base-url :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-http-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'http-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'http-configuration 'make-http-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input http-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input http-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'base-url))
      (common-lisp:list
       (common-lisp:cons "BaseUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input http-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass http-package-configuration common-lisp:nil
                       ((path :initarg :path :initform
                         (common-lisp:error ":path is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-http-package-configuration-path :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (source-group :initarg :source-group :initform
                         (common-lisp:error ":source-group is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-http-package-configuration-source-group
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (type :initarg :type :initform
                         (common-lisp:error ":type is required") :type
                         (common-lisp:or type common-lisp:null) :accessor
                         struct-shape-http-package-configuration-type :shape
                         "Type" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-http-package-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'http-package-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'http-package-configuration
                    'make-http-package-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          http-package-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          http-package-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path))
      (common-lisp:list
       (common-lisp:cons "Path"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-group))
      (common-lisp:list
       (common-lisp:cons "SourceGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          http-package-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype http-package-configurations ()
   '(trivial-types:proper-list http-package-configuration))
 (common-lisp:defun make-http-package-configurations
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            http-package-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass key-value-pair common-lisp:nil
                       ((key :initarg :key :initform
                         (common-lisp:error ":key is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-key-value-pair-key :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (value :initarg :value :initform
                         (common-lisp:error ":value is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-key-value-pair-value :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-key-value-pair
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'key-value-pair
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'key-value-pair 'make-key-value-pair))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input key-value-pair))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input key-value-pair))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input key-value-pair))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-alerts-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor struct-shape-list-alerts-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-alerts-request-next-token :shape
                         "__string" :location "querystring" :location-name
                         "nextToken")
                        (resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-alerts-request-resource-arn :shape
                         "__string" :location "querystring" :location-name
                         "resourceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-alerts-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-alerts-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-alerts-request 'make-list-alerts-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-alerts-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-alerts-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-alerts-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-alerts-response common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or |__listOfAlert| common-lisp:null)
                         :accessor struct-shape-list-alerts-response-items
                         :shape "__listOfAlert" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-alerts-response-next-token :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-alerts-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-alerts-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-alerts-response 'make-list-alerts-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-alerts-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-alerts-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-alerts-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channels-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-channels-request-max-results :shape
                         "MaxResults" :location "querystring" :location-name
                         "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-channels-request-next-token :shape
                         "__string" :location "querystring" :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channels-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-channels-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channels-request 'make-list-channels-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channels-response common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or |__listOfChannel| common-lisp:null)
                         :accessor struct-shape-list-channels-response-items
                         :shape "__listOfChannel" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-channels-response-next-token :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channels-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-channels-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channels-response 'make-list-channels-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-live-sources-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-live-sources-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-live-sources-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "nextToken")
                        (source-location-name :initarg :source-location-name
                         :initform
                         (common-lisp:error
                          ":source-location-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-list-live-sources-request-source-location-name
                         :shape "__string" :location "uri" :location-name
                         "SourceLocationName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-live-sources-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-live-sources-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-live-sources-request
                    'make-list-live-sources-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-live-sources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-live-sources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-live-sources-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-live-sources-response common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or |__listOfLiveSource| common-lisp:null)
                         :accessor
                         struct-shape-list-live-sources-response-items :shape
                         "__listOfLiveSource" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-live-sources-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-live-sources-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-live-sources-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-live-sources-response
                    'make-list-live-sources-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-live-sources-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-live-sources-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-live-sources-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-playback-configurations-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-playback-configurations-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "MaxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-playback-configurations-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "NextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-playback-configurations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-playback-configurations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-playback-configurations-request
                    'make-list-playback-configurations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-playback-configurations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-playback-configurations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-playback-configurations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-playback-configurations-response common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or |__listOfPlaybackConfiguration|
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-playback-configurations-response-items
                         :shape "__listOfPlaybackConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-playback-configurations-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-playback-configurations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-playback-configurations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-playback-configurations-response
                    'make-list-playback-configurations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-playback-configurations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-playback-configurations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-playback-configurations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-prefetch-schedules-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integerMin1Max100|
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-prefetch-schedules-request-max-results
                         :shape "__integerMin1Max100" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-prefetch-schedules-request-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (playback-configuration-name :initarg
                         :playback-configuration-name :initform
                         (common-lisp:error
                          ":playback-configuration-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-list-prefetch-schedules-request-playback-configuration-name
                         :shape "__string" :location "uri" :location-name
                         "PlaybackConfigurationName")
                        (stream-id :initarg :stream-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-prefetch-schedules-request-stream-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-prefetch-schedules-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-prefetch-schedules-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-prefetch-schedules-request
                    'make-list-prefetch-schedules-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-prefetch-schedules-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-prefetch-schedules-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-id))
      (common-lisp:list
       (common-lisp:cons "StreamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-prefetch-schedules-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-prefetch-schedules-response common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or |__listOfPrefetchSchedule|
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-prefetch-schedules-response-items
                         :shape "__listOfPrefetchSchedule" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-prefetch-schedules-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-prefetch-schedules-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-prefetch-schedules-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-prefetch-schedules-response
                    'make-list-prefetch-schedules-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-prefetch-schedules-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-prefetch-schedules-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-prefetch-schedules-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-source-locations-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-source-locations-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-source-locations-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-source-locations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-source-locations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-source-locations-request
                    'make-list-source-locations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-source-locations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-source-locations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-source-locations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-source-locations-response common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or |__listOfSourceLocation|
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-source-locations-response-items
                         :shape "__listOfSourceLocation" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-source-locations-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-source-locations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-source-locations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-source-locations-response
                    'make-list-source-locations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-source-locations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-source-locations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-source-locations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-request-resource-arn
                         :shape "__string" :location "uri" :location-name
                         "ResourceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor
                         struct-shape-list-tags-for-resource-response-tags
                         :shape "__mapOf__string" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-vod-sources-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-vod-sources-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-vod-sources-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "nextToken")
                        (source-location-name :initarg :source-location-name
                         :initform
                         (common-lisp:error
                          ":source-location-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-list-vod-sources-request-source-location-name
                         :shape "__string" :location "uri" :location-name
                         "SourceLocationName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-vod-sources-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-vod-sources-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-vod-sources-request 'make-list-vod-sources-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-vod-sources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-vod-sources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-vod-sources-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-vod-sources-response common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or |__listOfVodSource| common-lisp:null)
                         :accessor struct-shape-list-vod-sources-response-items
                         :shape "__listOfVodSource" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-vod-sources-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-vod-sources-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-vod-sources-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-vod-sources-response
                    'make-list-vod-sources-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-vod-sources-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-vod-sources-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-vod-sources-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass live-pre-roll-configuration common-lisp:nil
                       ((ad-decision-server-url :initarg
                         :ad-decision-server-url :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-live-pre-roll-configuration-ad-decision-server-url
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-duration-seconds :initarg :max-duration-seconds
                         :initform common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-live-pre-roll-configuration-max-duration-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-live-pre-roll-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'live-pre-roll-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'live-pre-roll-configuration
                    'make-live-pre-roll-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          live-pre-roll-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          live-pre-roll-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ad-decision-server-url))
      (common-lisp:list
       (common-lisp:cons "AdDecisionServerUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'max-duration-seconds))
      (common-lisp:list
       (common-lisp:cons "MaxDurationSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          live-pre-roll-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass live-source common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-live-source-arn :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor struct-shape-live-source-creation-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (http-package-configurations :initarg
                         :http-package-configurations :initform
                         (common-lisp:error
                          ":http-package-configurations is required")
                         :type
                         (common-lisp:or http-package-configurations
                                         common-lisp:null)
                         :accessor
                         struct-shape-live-source-http-package-configurations
                         :shape "HttpPackageConfigurations" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor struct-shape-live-source-last-modified-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (live-source-name :initarg :live-source-name :initform
                         (common-lisp:error ":live-source-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-live-source-live-source-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (source-location-name :initarg :source-location-name
                         :initform
                         (common-lisp:error
                          ":source-location-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-live-source-source-location-name :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor struct-shape-live-source-tags :shape
                         "__mapOf__string" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-live-source
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'live-source
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'live-source 'make-live-source))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input live-source))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input live-source))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'http-package-configurations))
      (common-lisp:list
       (common-lisp:cons "HttpPackageConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'live-source-name))
      (common-lisp:list
       (common-lisp:cons "LiveSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input live-source))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass log-configuration common-lisp:nil
                       ((percent-enabled :initarg :percent-enabled :initform
                         (common-lisp:error ":percent-enabled is required")
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-log-configuration-percent-enabled :shape
                         "__integer" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-log-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'log-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'log-configuration 'make-log-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input log-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input log-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'percent-enabled))
      (common-lisp:list
       (common-lisp:cons "PercentEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input log-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass log-configuration-for-channel common-lisp:nil
                       ((log-types :initarg :log-types :initform
                         common-lisp:nil :type
                         (common-lisp:or log-types common-lisp:null) :accessor
                         struct-shape-log-configuration-for-channel-log-types
                         :shape "LogTypes" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-log-configuration-for-channel
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'log-configuration-for-channel
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'log-configuration-for-channel
                    'make-log-configuration-for-channel))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          log-configuration-for-channel))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          log-configuration-for-channel))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-types))
      (common-lisp:list
       (common-lisp:cons "LogTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          log-configuration-for-channel))
   common-lisp:nil))
(common-lisp:deftype log-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype log-types () '(trivial-types:proper-list log-type))
 (common-lisp:defun make-log-types
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list log-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype long () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass manifest-processing-rules common-lisp:nil
                       ((ad-marker-passthrough :initarg :ad-marker-passthrough
                         :initform common-lisp:nil :type
                         (common-lisp:or ad-marker-passthrough
                                         common-lisp:null)
                         :accessor
                         struct-shape-manifest-processing-rules-ad-marker-passthrough
                         :shape "AdMarkerPassthrough" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-manifest-processing-rules
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'manifest-processing-rules
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'manifest-processing-rules
                    'make-manifest-processing-rules))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          manifest-processing-rules))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          manifest-processing-rules))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ad-marker-passthrough))
      (common-lisp:list
       (common-lisp:cons "AdMarkerPassthrough"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          manifest-processing-rules))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype message-type () 'common-lisp:string)
(common-lisp:deftype mode () 'common-lisp:string)
(common-lisp:deftype operator () 'common-lisp:string)
(common-lisp:deftype origin-manifest-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass playback-configuration common-lisp:nil
                       ((ad-decision-server-url :initarg
                         :ad-decision-server-url :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-playback-configuration-ad-decision-server-url
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (avail-suppression :initarg :avail-suppression
                         :initform common-lisp:nil :type
                         (common-lisp:or avail-suppression common-lisp:null)
                         :accessor
                         struct-shape-playback-configuration-avail-suppression
                         :shape "AvailSuppression" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (bumper :initarg :bumper :initform common-lisp:nil
                         :type (common-lisp:or bumper common-lisp:null)
                         :accessor struct-shape-playback-configuration-bumper
                         :shape "Bumper" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cdn-configuration :initarg :cdn-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or cdn-configuration common-lisp:null)
                         :accessor
                         struct-shape-playback-configuration-cdn-configuration
                         :shape "CdnConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (configuration-aliases :initarg :configuration-aliases
                         :initform common-lisp:nil :type
                         (common-lisp:or configuration-aliases-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-playback-configuration-configuration-aliases
                         :shape "ConfigurationAliasesResponse" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (dash-configuration :initarg :dash-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or dash-configuration common-lisp:null)
                         :accessor
                         struct-shape-playback-configuration-dash-configuration
                         :shape "DashConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (hls-configuration :initarg :hls-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or hls-configuration common-lisp:null)
                         :accessor
                         struct-shape-playback-configuration-hls-configuration
                         :shape "HlsConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (live-pre-roll-configuration :initarg
                         :live-pre-roll-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or live-pre-roll-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-playback-configuration-live-pre-roll-configuration
                         :shape "LivePreRollConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (log-configuration :initarg :log-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or log-configuration common-lisp:null)
                         :accessor
                         struct-shape-playback-configuration-log-configuration
                         :shape "LogConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (manifest-processing-rules :initarg
                         :manifest-processing-rules :initform common-lisp:nil
                         :type
                         (common-lisp:or manifest-processing-rules
                                         common-lisp:null)
                         :accessor
                         struct-shape-playback-configuration-manifest-processing-rules
                         :shape "ManifestProcessingRules" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-playback-configuration-name :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (personalization-threshold-seconds :initarg
                         :personalization-threshold-seconds :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integerMin1| common-lisp:null)
                         :accessor
                         struct-shape-playback-configuration-personalization-threshold-seconds
                         :shape "__integerMin1" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (playback-configuration-arn :initarg
                         :playback-configuration-arn :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-playback-configuration-playback-configuration-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (playback-endpoint-prefix :initarg
                         :playback-endpoint-prefix :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-playback-configuration-playback-endpoint-prefix
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (session-initialization-endpoint-prefix :initarg
                         :session-initialization-endpoint-prefix :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-playback-configuration-session-initialization-endpoint-prefix
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (slate-ad-url :initarg :slate-ad-url :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-playback-configuration-slate-ad-url
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor struct-shape-playback-configuration-tags
                         :shape "__mapOf__string" :location common-lisp:nil
                         :location-name "tags")
                        (transcode-profile-name :initarg
                         :transcode-profile-name :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-playback-configuration-transcode-profile-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (video-content-source-url :initarg
                         :video-content-source-url :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-playback-configuration-video-content-source-url
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-playback-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'playback-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'playback-configuration 'make-playback-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          playback-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          playback-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ad-decision-server-url))
      (common-lisp:list
       (common-lisp:cons "AdDecisionServerUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'avail-suppression))
      (common-lisp:list
       (common-lisp:cons "AvailSuppression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bumper))
      (common-lisp:list
       (common-lisp:cons "Bumper"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cdn-configuration))
      (common-lisp:list
       (common-lisp:cons "CdnConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configuration-aliases))
      (common-lisp:list
       (common-lisp:cons "ConfigurationAliases"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dash-configuration))
      (common-lisp:list
       (common-lisp:cons "DashConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-configuration))
      (common-lisp:list
       (common-lisp:cons "HlsConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'live-pre-roll-configuration))
      (common-lisp:list
       (common-lisp:cons "LivePreRollConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-configuration))
      (common-lisp:list
       (common-lisp:cons "LogConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'manifest-processing-rules))
      (common-lisp:list
       (common-lisp:cons "ManifestProcessingRules"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'personalization-threshold-seconds))
      (common-lisp:list
       (common-lisp:cons "PersonalizationThresholdSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'playback-configuration-arn))
      (common-lisp:list
       (common-lisp:cons "PlaybackConfigurationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'playback-endpoint-prefix))
      (common-lisp:list
       (common-lisp:cons "PlaybackEndpointPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'session-initialization-endpoint-prefix))
      (common-lisp:list
       (common-lisp:cons "SessionInitializationEndpointPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slate-ad-url))
      (common-lisp:list
       (common-lisp:cons "SlateAdUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'transcode-profile-name))
      (common-lisp:list
       (common-lisp:cons "TranscodeProfileName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'video-content-source-url))
      (common-lisp:list
       (common-lisp:cons "VideoContentSourceUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          playback-configuration))
   common-lisp:nil))
(common-lisp:deftype playback-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass prefetch-consumption common-lisp:nil
                       ((avail-matching-criteria :initarg
                         :avail-matching-criteria :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOfAvailMatchingCriteria|
                                         common-lisp:null)
                         :accessor
                         struct-shape-prefetch-consumption-avail-matching-criteria
                         :shape "__listOfAvailMatchingCriteria" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (end-time :initarg :end-time :initform
                         (common-lisp:error ":end-time is required") :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor struct-shape-prefetch-consumption-end-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (start-time :initarg :start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor struct-shape-prefetch-consumption-start-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-prefetch-consumption
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'prefetch-consumption
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'prefetch-consumption 'make-prefetch-consumption))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input prefetch-consumption))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input prefetch-consumption))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'avail-matching-criteria))
      (common-lisp:list
       (common-lisp:cons "AvailMatchingCriteria"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input prefetch-consumption))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass prefetch-retrieval common-lisp:nil
                       ((dynamic-variables :initarg :dynamic-variables
                         :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor
                         struct-shape-prefetch-retrieval-dynamic-variables
                         :shape "__mapOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (end-time :initarg :end-time :initform
                         (common-lisp:error ":end-time is required") :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor struct-shape-prefetch-retrieval-end-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (start-time :initarg :start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor struct-shape-prefetch-retrieval-start-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-prefetch-retrieval
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'prefetch-retrieval
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'prefetch-retrieval 'make-prefetch-retrieval))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input prefetch-retrieval))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input prefetch-retrieval))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dynamic-variables))
      (common-lisp:list
       (common-lisp:cons "DynamicVariables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input prefetch-retrieval))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass prefetch-schedule common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-prefetch-schedule-arn :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (consumption :initarg :consumption :initform
                         (common-lisp:error ":consumption is required") :type
                         (common-lisp:or prefetch-consumption common-lisp:null)
                         :accessor struct-shape-prefetch-schedule-consumption
                         :shape "PrefetchConsumption" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-prefetch-schedule-name :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (playback-configuration-name :initarg
                         :playback-configuration-name :initform
                         (common-lisp:error
                          ":playback-configuration-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-prefetch-schedule-playback-configuration-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (retrieval :initarg :retrieval :initform
                         (common-lisp:error ":retrieval is required") :type
                         (common-lisp:or prefetch-retrieval common-lisp:null)
                         :accessor struct-shape-prefetch-schedule-retrieval
                         :shape "PrefetchRetrieval" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (stream-id :initarg :stream-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-prefetch-schedule-stream-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-prefetch-schedule
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'prefetch-schedule
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'prefetch-schedule 'make-prefetch-schedule))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input prefetch-schedule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input prefetch-schedule))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'consumption))
      (common-lisp:list
       (common-lisp:cons "Consumption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'playback-configuration-name))
      (common-lisp:list
       (common-lisp:cons "PlaybackConfigurationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retrieval))
      (common-lisp:list
       (common-lisp:cons "Retrieval"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-id))
      (common-lisp:list
       (common-lisp:cons "StreamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input prefetch-schedule))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-channel-policy-request common-lisp:nil
                       ((channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-put-channel-policy-request-channel-name
                         :shape "__string" :location "uri" :location-name
                         "ChannelName")
                        (policy :initarg :policy :initform
                         (common-lisp:error ":policy is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-put-channel-policy-request-policy :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-channel-policy-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'put-channel-policy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-channel-policy-request
                    'make-put-channel-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-channel-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-channel-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "Policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-channel-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-channel-policy-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-channel-policy-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'put-channel-policy-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-channel-policy-response
                    'make-put-channel-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-channel-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-channel-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-channel-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-playback-configuration-request common-lisp:nil
                       ((ad-decision-server-url :initarg
                         :ad-decision-server-url :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-put-playback-configuration-request-ad-decision-server-url
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (avail-suppression :initarg :avail-suppression
                         :initform common-lisp:nil :type
                         (common-lisp:or avail-suppression common-lisp:null)
                         :accessor
                         struct-shape-put-playback-configuration-request-avail-suppression
                         :shape "AvailSuppression" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (bumper :initarg :bumper :initform common-lisp:nil
                         :type (common-lisp:or bumper common-lisp:null)
                         :accessor
                         struct-shape-put-playback-configuration-request-bumper
                         :shape "Bumper" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cdn-configuration :initarg :cdn-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or cdn-configuration common-lisp:null)
                         :accessor
                         struct-shape-put-playback-configuration-request-cdn-configuration
                         :shape "CdnConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (configuration-aliases :initarg :configuration-aliases
                         :initform common-lisp:nil :type
                         (common-lisp:or configuration-aliases-request
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-playback-configuration-request-configuration-aliases
                         :shape "ConfigurationAliasesRequest" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (dash-configuration :initarg :dash-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or dash-configuration-for-put
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-playback-configuration-request-dash-configuration
                         :shape "DashConfigurationForPut" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (live-pre-roll-configuration :initarg
                         :live-pre-roll-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or live-pre-roll-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-playback-configuration-request-live-pre-roll-configuration
                         :shape "LivePreRollConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (manifest-processing-rules :initarg
                         :manifest-processing-rules :initform common-lisp:nil
                         :type
                         (common-lisp:or manifest-processing-rules
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-playback-configuration-request-manifest-processing-rules
                         :shape "ManifestProcessingRules" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-put-playback-configuration-request-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (personalization-threshold-seconds :initarg
                         :personalization-threshold-seconds :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integerMin1| common-lisp:null)
                         :accessor
                         struct-shape-put-playback-configuration-request-personalization-threshold-seconds
                         :shape "__integerMin1" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (slate-ad-url :initarg :slate-ad-url :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-put-playback-configuration-request-slate-ad-url
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor
                         struct-shape-put-playback-configuration-request-tags
                         :shape "__mapOf__string" :location common-lisp:nil
                         :location-name "tags")
                        (transcode-profile-name :initarg
                         :transcode-profile-name :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-put-playback-configuration-request-transcode-profile-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (video-content-source-url :initarg
                         :video-content-source-url :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-put-playback-configuration-request-video-content-source-url
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-playback-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-playback-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-playback-configuration-request
                    'make-put-playback-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-playback-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-playback-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ad-decision-server-url))
      (common-lisp:list
       (common-lisp:cons "AdDecisionServerUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'avail-suppression))
      (common-lisp:list
       (common-lisp:cons "AvailSuppression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bumper))
      (common-lisp:list
       (common-lisp:cons "Bumper"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cdn-configuration))
      (common-lisp:list
       (common-lisp:cons "CdnConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configuration-aliases))
      (common-lisp:list
       (common-lisp:cons "ConfigurationAliases"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dash-configuration))
      (common-lisp:list
       (common-lisp:cons "DashConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'live-pre-roll-configuration))
      (common-lisp:list
       (common-lisp:cons "LivePreRollConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'manifest-processing-rules))
      (common-lisp:list
       (common-lisp:cons "ManifestProcessingRules"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'personalization-threshold-seconds))
      (common-lisp:list
       (common-lisp:cons "PersonalizationThresholdSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slate-ad-url))
      (common-lisp:list
       (common-lisp:cons "SlateAdUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'transcode-profile-name))
      (common-lisp:list
       (common-lisp:cons "TranscodeProfileName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'video-content-source-url))
      (common-lisp:list
       (common-lisp:cons "VideoContentSourceUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-playback-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-playback-configuration-response common-lisp:nil
                       ((ad-decision-server-url :initarg
                         :ad-decision-server-url :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-put-playback-configuration-response-ad-decision-server-url
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (avail-suppression :initarg :avail-suppression
                         :initform common-lisp:nil :type
                         (common-lisp:or avail-suppression common-lisp:null)
                         :accessor
                         struct-shape-put-playback-configuration-response-avail-suppression
                         :shape "AvailSuppression" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (bumper :initarg :bumper :initform common-lisp:nil
                         :type (common-lisp:or bumper common-lisp:null)
                         :accessor
                         struct-shape-put-playback-configuration-response-bumper
                         :shape "Bumper" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cdn-configuration :initarg :cdn-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or cdn-configuration common-lisp:null)
                         :accessor
                         struct-shape-put-playback-configuration-response-cdn-configuration
                         :shape "CdnConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (configuration-aliases :initarg :configuration-aliases
                         :initform common-lisp:nil :type
                         (common-lisp:or configuration-aliases-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-playback-configuration-response-configuration-aliases
                         :shape "ConfigurationAliasesResponse" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (dash-configuration :initarg :dash-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or dash-configuration common-lisp:null)
                         :accessor
                         struct-shape-put-playback-configuration-response-dash-configuration
                         :shape "DashConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (hls-configuration :initarg :hls-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or hls-configuration common-lisp:null)
                         :accessor
                         struct-shape-put-playback-configuration-response-hls-configuration
                         :shape "HlsConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (live-pre-roll-configuration :initarg
                         :live-pre-roll-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or live-pre-roll-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-playback-configuration-response-live-pre-roll-configuration
                         :shape "LivePreRollConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (log-configuration :initarg :log-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or log-configuration common-lisp:null)
                         :accessor
                         struct-shape-put-playback-configuration-response-log-configuration
                         :shape "LogConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (manifest-processing-rules :initarg
                         :manifest-processing-rules :initform common-lisp:nil
                         :type
                         (common-lisp:or manifest-processing-rules
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-playback-configuration-response-manifest-processing-rules
                         :shape "ManifestProcessingRules" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-put-playback-configuration-response-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (personalization-threshold-seconds :initarg
                         :personalization-threshold-seconds :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integerMin1| common-lisp:null)
                         :accessor
                         struct-shape-put-playback-configuration-response-personalization-threshold-seconds
                         :shape "__integerMin1" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (playback-configuration-arn :initarg
                         :playback-configuration-arn :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-put-playback-configuration-response-playback-configuration-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (playback-endpoint-prefix :initarg
                         :playback-endpoint-prefix :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-put-playback-configuration-response-playback-endpoint-prefix
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (session-initialization-endpoint-prefix :initarg
                         :session-initialization-endpoint-prefix :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-put-playback-configuration-response-session-initialization-endpoint-prefix
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (slate-ad-url :initarg :slate-ad-url :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-put-playback-configuration-response-slate-ad-url
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor
                         struct-shape-put-playback-configuration-response-tags
                         :shape "__mapOf__string" :location common-lisp:nil
                         :location-name "tags")
                        (transcode-profile-name :initarg
                         :transcode-profile-name :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-put-playback-configuration-response-transcode-profile-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (video-content-source-url :initarg
                         :video-content-source-url :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-put-playback-configuration-response-video-content-source-url
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-playback-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-playback-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-playback-configuration-response
                    'make-put-playback-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-playback-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-playback-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ad-decision-server-url))
      (common-lisp:list
       (common-lisp:cons "AdDecisionServerUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'avail-suppression))
      (common-lisp:list
       (common-lisp:cons "AvailSuppression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bumper))
      (common-lisp:list
       (common-lisp:cons "Bumper"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cdn-configuration))
      (common-lisp:list
       (common-lisp:cons "CdnConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configuration-aliases))
      (common-lisp:list
       (common-lisp:cons "ConfigurationAliases"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dash-configuration))
      (common-lisp:list
       (common-lisp:cons "DashConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-configuration))
      (common-lisp:list
       (common-lisp:cons "HlsConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'live-pre-roll-configuration))
      (common-lisp:list
       (common-lisp:cons "LivePreRollConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-configuration))
      (common-lisp:list
       (common-lisp:cons "LogConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'manifest-processing-rules))
      (common-lisp:list
       (common-lisp:cons "ManifestProcessingRules"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'personalization-threshold-seconds))
      (common-lisp:list
       (common-lisp:cons "PersonalizationThresholdSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'playback-configuration-arn))
      (common-lisp:list
       (common-lisp:cons "PlaybackConfigurationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'playback-endpoint-prefix))
      (common-lisp:list
       (common-lisp:cons "PlaybackEndpointPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'session-initialization-endpoint-prefix))
      (common-lisp:list
       (common-lisp:cons "SessionInitializationEndpointPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slate-ad-url))
      (common-lisp:list
       (common-lisp:cons "SlateAdUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'transcode-profile-name))
      (common-lisp:list
       (common-lisp:cons "TranscodeProfileName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'video-content-source-url))
      (common-lisp:list
       (common-lisp:cons "VideoContentSourceUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-playback-configuration-response))
   common-lisp:nil))
(common-lisp:deftype relative-position () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass request-output-item common-lisp:nil
                       ((dash-playlist-settings :initarg
                         :dash-playlist-settings :initform common-lisp:nil
                         :type
                         (common-lisp:or dash-playlist-settings
                                         common-lisp:null)
                         :accessor
                         struct-shape-request-output-item-dash-playlist-settings
                         :shape "DashPlaylistSettings" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (hls-playlist-settings :initarg :hls-playlist-settings
                         :initform common-lisp:nil :type
                         (common-lisp:or hls-playlist-settings
                                         common-lisp:null)
                         :accessor
                         struct-shape-request-output-item-hls-playlist-settings
                         :shape "HlsPlaylistSettings" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (manifest-name :initarg :manifest-name :initform
                         (common-lisp:error ":manifest-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-request-output-item-manifest-name :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (source-group :initarg :source-group :initform
                         (common-lisp:error ":source-group is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-request-output-item-source-group :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-request-output-item
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'request-output-item
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'request-output-item 'make-request-output-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input request-output-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input request-output-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dash-playlist-settings))
      (common-lisp:list
       (common-lisp:cons "DashPlaylistSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'hls-playlist-settings))
      (common-lisp:list
       (common-lisp:cons "HlsPlaylistSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'manifest-name))
      (common-lisp:list
       (common-lisp:cons "ManifestName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-group))
      (common-lisp:list
       (common-lisp:cons "SourceGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input request-output-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype request-outputs ()
   '(trivial-types:proper-list request-output-item))
 (common-lisp:defun make-request-outputs
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list request-output-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass response-output-item common-lisp:nil
                       ((dash-playlist-settings :initarg
                         :dash-playlist-settings :initform common-lisp:nil
                         :type
                         (common-lisp:or dash-playlist-settings
                                         common-lisp:null)
                         :accessor
                         struct-shape-response-output-item-dash-playlist-settings
                         :shape "DashPlaylistSettings" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (hls-playlist-settings :initarg :hls-playlist-settings
                         :initform common-lisp:nil :type
                         (common-lisp:or hls-playlist-settings
                                         common-lisp:null)
                         :accessor
                         struct-shape-response-output-item-hls-playlist-settings
                         :shape "HlsPlaylistSettings" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (manifest-name :initarg :manifest-name :initform
                         (common-lisp:error ":manifest-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-response-output-item-manifest-name :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (playback-url :initarg :playback-url :initform
                         (common-lisp:error ":playback-url is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-response-output-item-playback-url :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (source-group :initarg :source-group :initform
                         (common-lisp:error ":source-group is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-response-output-item-source-group :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-response-output-item
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'response-output-item
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'response-output-item 'make-response-output-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input response-output-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input response-output-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dash-playlist-settings))
      (common-lisp:list
       (common-lisp:cons "DashPlaylistSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'hls-playlist-settings))
      (common-lisp:list
       (common-lisp:cons "HlsPlaylistSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'manifest-name))
      (common-lisp:list
       (common-lisp:cons "ManifestName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'playback-url))
      (common-lisp:list
       (common-lisp:cons "PlaybackUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-group))
      (common-lisp:list
       (common-lisp:cons "SourceGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input response-output-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype response-outputs ()
   '(trivial-types:proper-list response-output-item))
 (common-lisp:defun make-response-outputs
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list response-output-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass schedule-ad-break common-lisp:nil
                       ((approximate-duration-seconds :initarg
                         :approximate-duration-seconds :initform
                         common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-schedule-ad-break-approximate-duration-seconds
                         :shape "__long" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (approximate-start-time :initarg
                         :approximate-start-time :initform common-lisp:nil
                         :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor
                         struct-shape-schedule-ad-break-approximate-start-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (source-location-name :initarg :source-location-name
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-schedule-ad-break-source-location-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vod-source-name :initarg :vod-source-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-schedule-ad-break-vod-source-name :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-schedule-ad-break
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'schedule-ad-break
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'schedule-ad-break 'make-schedule-ad-break))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input schedule-ad-break))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input schedule-ad-break))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'approximate-duration-seconds))
      (common-lisp:list
       (common-lisp:cons "ApproximateDurationSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'approximate-start-time))
      (common-lisp:list
       (common-lisp:cons "ApproximateStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vod-source-name))
      (common-lisp:list
       (common-lisp:cons "VodSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input schedule-ad-break))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass schedule-configuration common-lisp:nil
                       ((clip-range :initarg :clip-range :initform
                         common-lisp:nil :type
                         (common-lisp:or clip-range common-lisp:null) :accessor
                         struct-shape-schedule-configuration-clip-range :shape
                         "ClipRange" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (transition :initarg :transition :initform
                         (common-lisp:error ":transition is required") :type
                         (common-lisp:or transition common-lisp:null) :accessor
                         struct-shape-schedule-configuration-transition :shape
                         "Transition" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-schedule-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'schedule-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'schedule-configuration 'make-schedule-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          schedule-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          schedule-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'clip-range))
      (common-lisp:list
       (common-lisp:cons "ClipRange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'transition))
      (common-lisp:list
       (common-lisp:cons "Transition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          schedule-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass schedule-entry common-lisp:nil
                       ((approximate-duration-seconds :initarg
                         :approximate-duration-seconds :initform
                         common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-schedule-entry-approximate-duration-seconds
                         :shape "__long" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (approximate-start-time :initarg
                         :approximate-start-time :initform common-lisp:nil
                         :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor
                         struct-shape-schedule-entry-approximate-start-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-schedule-entry-arn :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-schedule-entry-channel-name :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (live-source-name :initarg :live-source-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-schedule-entry-live-source-name :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (program-name :initarg :program-name :initform
                         (common-lisp:error ":program-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-schedule-entry-program-name :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (schedule-ad-breaks :initarg :schedule-ad-breaks
                         :initform common-lisp:nil :type
                         (common-lisp:or |__listOfScheduleAdBreak|
                                         common-lisp:null)
                         :accessor
                         struct-shape-schedule-entry-schedule-ad-breaks :shape
                         "__listOfScheduleAdBreak" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (schedule-entry-type :initarg :schedule-entry-type
                         :initform common-lisp:nil :type
                         (common-lisp:or schedule-entry-type common-lisp:null)
                         :accessor
                         struct-shape-schedule-entry-schedule-entry-type :shape
                         "ScheduleEntryType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (source-location-name :initarg :source-location-name
                         :initform
                         (common-lisp:error
                          ":source-location-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-schedule-entry-source-location-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vod-source-name :initarg :vod-source-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-schedule-entry-vod-source-name :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-schedule-entry
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'schedule-entry
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'schedule-entry 'make-schedule-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input schedule-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input schedule-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'approximate-duration-seconds))
      (common-lisp:list
       (common-lisp:cons "ApproximateDurationSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'approximate-start-time))
      (common-lisp:list
       (common-lisp:cons "ApproximateStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'live-source-name))
      (common-lisp:list
       (common-lisp:cons "LiveSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'program-name))
      (common-lisp:list
       (common-lisp:cons "ProgramName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule-ad-breaks))
      (common-lisp:list
       (common-lisp:cons "ScheduleAdBreaks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule-entry-type))
      (common-lisp:list
       (common-lisp:cons "ScheduleEntryType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vod-source-name))
      (common-lisp:list
       (common-lisp:cons "VodSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input schedule-entry))
   common-lisp:nil))
(common-lisp:deftype schedule-entry-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass secrets-manager-access-token-configuration
                       common-lisp:nil
                       ((header-name :initarg :header-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-secrets-manager-access-token-configuration-header-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (secret-arn :initarg :secret-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-secrets-manager-access-token-configuration-secret-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (secret-string-key :initarg :secret-string-key
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-secrets-manager-access-token-configuration-secret-string-key
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-secrets-manager-access-token-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'secrets-manager-access-token-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'secrets-manager-access-token-configuration
                    'make-secrets-manager-access-token-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          secrets-manager-access-token-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          secrets-manager-access-token-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'header-name))
      (common-lisp:list
       (common-lisp:cons "HeaderName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'secret-arn))
      (common-lisp:list
       (common-lisp:cons "SecretArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'secret-string-key))
      (common-lisp:list
       (common-lisp:cons "SecretStringKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          secrets-manager-access-token-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass segment-delivery-configuration common-lisp:nil
                       ((base-url :initarg :base-url :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-segment-delivery-configuration-base-url
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-segment-delivery-configuration-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-segment-delivery-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'segment-delivery-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'segment-delivery-configuration
                    'make-segment-delivery-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          segment-delivery-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          segment-delivery-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'base-url))
      (common-lisp:list
       (common-lisp:cons "BaseUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          segment-delivery-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass segmentation-descriptor common-lisp:nil
                       ((segment-num :initarg :segment-num :initform
                         common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-segmentation-descriptor-segment-num
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (segmentation-event-id :initarg :segmentation-event-id
                         :initform common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-segmentation-descriptor-segmentation-event-id
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (segmentation-type-id :initarg :segmentation-type-id
                         :initform common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-segmentation-descriptor-segmentation-type-id
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (segmentation-upid :initarg :segmentation-upid
                         :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-segmentation-descriptor-segmentation-upid
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (segmentation-upid-type :initarg
                         :segmentation-upid-type :initform common-lisp:nil
                         :type (common-lisp:or integer common-lisp:null)
                         :accessor
                         struct-shape-segmentation-descriptor-segmentation-upid-type
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (segments-expected :initarg :segments-expected
                         :initform common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-segmentation-descriptor-segments-expected
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sub-segment-num :initarg :sub-segment-num :initform
                         common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-segmentation-descriptor-sub-segment-num
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sub-segments-expected :initarg :sub-segments-expected
                         :initform common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-segmentation-descriptor-sub-segments-expected
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-segmentation-descriptor
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'segmentation-descriptor
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'segmentation-descriptor 'make-segmentation-descriptor))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          segmentation-descriptor))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          segmentation-descriptor))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-num))
      (common-lisp:list
       (common-lisp:cons "SegmentNum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segmentation-event-id))
      (common-lisp:list
       (common-lisp:cons "SegmentationEventId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segmentation-type-id))
      (common-lisp:list
       (common-lisp:cons "SegmentationTypeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segmentation-upid))
      (common-lisp:list
       (common-lisp:cons "SegmentationUpid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segmentation-upid-type))
      (common-lisp:list
       (common-lisp:cons "SegmentationUpidType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segments-expected))
      (common-lisp:list
       (common-lisp:cons "SegmentsExpected"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sub-segment-num))
      (common-lisp:list
       (common-lisp:cons "SubSegmentNum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sub-segments-expected))
      (common-lisp:list
       (common-lisp:cons "SubSegmentsExpected"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          segmentation-descriptor))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype segmentation-descriptor-list ()
   '(trivial-types:proper-list segmentation-descriptor))
 (common-lisp:defun make-segmentation-descriptor-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list segmentation-descriptor))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass slate-source common-lisp:nil
                       ((source-location-name :initarg :source-location-name
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-slate-source-source-location-name :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (vod-source-name :initarg :vod-source-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-slate-source-vod-source-name :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-slate-source
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'slate-source
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'slate-source 'make-slate-source))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input slate-source))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input slate-source))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vod-source-name))
      (common-lisp:list
       (common-lisp:cons "VodSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input slate-source))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass source-location common-lisp:nil
                       ((access-configuration :initarg :access-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or access-configuration common-lisp:null)
                         :accessor
                         struct-shape-source-location-access-configuration
                         :shape "AccessConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-source-location-arn :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor struct-shape-source-location-creation-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (default-segment-delivery-configuration :initarg
                         :default-segment-delivery-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or default-segment-delivery-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-source-location-default-segment-delivery-configuration
                         :shape "DefaultSegmentDeliveryConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (http-configuration :initarg :http-configuration
                         :initform
                         (common-lisp:error ":http-configuration is required")
                         :type
                         (common-lisp:or http-configuration common-lisp:null)
                         :accessor
                         struct-shape-source-location-http-configuration :shape
                         "HttpConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor
                         struct-shape-source-location-last-modified-time :shape
                         "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (segment-delivery-configurations :initarg
                         :segment-delivery-configurations :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfSegmentDeliveryConfiguration|
                                         common-lisp:null)
                         :accessor
                         struct-shape-source-location-segment-delivery-configurations
                         :shape "__listOfSegmentDeliveryConfiguration"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (source-location-name :initarg :source-location-name
                         :initform
                         (common-lisp:error
                          ":source-location-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-source-location-source-location-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor struct-shape-source-location-tags :shape
                         "__mapOf__string" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-source-location
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'source-location
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'source-location 'make-source-location))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input source-location))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input source-location))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'access-configuration))
      (common-lisp:list
       (common-lisp:cons "AccessConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-segment-delivery-configuration))
      (common-lisp:list
       (common-lisp:cons "DefaultSegmentDeliveryConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'http-configuration))
      (common-lisp:list
       (common-lisp:cons "HttpConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segment-delivery-configurations))
      (common-lisp:list
       (common-lisp:cons "SegmentDeliveryConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input source-location))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass splice-insert-message common-lisp:nil
                       ((avail-num :initarg :avail-num :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-splice-insert-message-avail-num
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (avails-expected :initarg :avails-expected :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-splice-insert-message-avails-expected
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (splice-event-id :initarg :splice-event-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-splice-insert-message-splice-event-id
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (unique-program-id :initarg :unique-program-id
                         :initform common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-splice-insert-message-unique-program-id
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-splice-insert-message
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'splice-insert-message
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'splice-insert-message 'make-splice-insert-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          splice-insert-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          splice-insert-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'avail-num))
      (common-lisp:list
       (common-lisp:cons "AvailNum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'avails-expected))
      (common-lisp:list
       (common-lisp:cons "AvailsExpected"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'splice-event-id))
      (common-lisp:list
       (common-lisp:cons "SpliceEventId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'unique-program-id))
      (common-lisp:list
       (common-lisp:cons "UniqueProgramId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          splice-insert-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-channel-request common-lisp:nil
                       ((channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-start-channel-request-channel-name :shape
                         "__string" :location "uri" :location-name
                         "ChannelName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'start-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-channel-request 'make-start-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-channel-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'start-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-channel-response 'make-start-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-channel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-channel-request common-lisp:nil
                       ((channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-stop-channel-request-channel-name :shape
                         "__string" :location "uri" :location-name
                         "ChannelName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stop-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'stop-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stop-channel-request 'make-stop-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stop-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stop-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stop-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-channel-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stop-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'stop-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stop-channel-response 'make-stop-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-channel-response))
   common-lisp:nil))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-tag-resource-request-resource-arn :shape
                         "__string" :location "uri" :location-name
                         "ResourceArn")
                        (tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor struct-shape-tag-resource-request-tags
                         :shape "__mapOf__string" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:deftype tier () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass time-shift-configuration common-lisp:nil
                       ((max-time-delay-seconds :initarg
                         :max-time-delay-seconds :initform
                         (common-lisp:error
                          ":max-time-delay-seconds is required")
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-time-shift-configuration-max-time-delay-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-time-shift-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'time-shift-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'time-shift-configuration 'make-time-shift-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          time-shift-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          time-shift-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'max-time-delay-seconds))
      (common-lisp:list
       (common-lisp:cons "MaxTimeDelaySeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          time-shift-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass time-signal-message common-lisp:nil
                       ((segmentation-descriptors :initarg
                         :segmentation-descriptors :initform common-lisp:nil
                         :type
                         (common-lisp:or segmentation-descriptor-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-time-signal-message-segmentation-descriptors
                         :shape "SegmentationDescriptorList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-time-signal-message
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'time-signal-message
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'time-signal-message 'make-time-signal-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input time-signal-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input time-signal-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segmentation-descriptors))
      (common-lisp:list
       (common-lisp:cons "SegmentationDescriptors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input time-signal-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass transition common-lisp:nil
                       ((duration-millis :initarg :duration-millis :initform
                         common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-transition-duration-millis :shape
                         "__long" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (relative-position :initarg :relative-position
                         :initform
                         (common-lisp:error ":relative-position is required")
                         :type
                         (common-lisp:or relative-position common-lisp:null)
                         :accessor struct-shape-transition-relative-position
                         :shape "RelativePosition" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (relative-program :initarg :relative-program :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-transition-relative-program :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (scheduled-start-time-millis :initarg
                         :scheduled-start-time-millis :initform common-lisp:nil
                         :type (common-lisp:or |__long| common-lisp:null)
                         :accessor
                         struct-shape-transition-scheduled-start-time-millis
                         :shape "__long" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (type :initarg :type :initform
                         (common-lisp:error ":type is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-transition-type :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-transition
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'transition
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'transition 'make-transition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input transition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input transition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration-millis))
      (common-lisp:list
       (common-lisp:cons "DurationMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'relative-position))
      (common-lisp:list
       (common-lisp:cons "RelativePosition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'relative-program))
      (common-lisp:list
       (common-lisp:cons "RelativeProgram"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'scheduled-start-time-millis))
      (common-lisp:list
       (common-lisp:cons "ScheduledStartTimeMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input transition))
   common-lisp:nil))
(common-lisp:deftype type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-untag-resource-request-resource-arn
                         :shape "__string" :location "uri" :location-name
                         "ResourceArn")
                        (tag-keys :initarg :tag-keys :initform
                         (common-lisp:error ":tag-keys is required") :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-untag-resource-request-tag-keys
                         :shape "__listOf__string" :location "querystring"
                         :location-name "tagKeys"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-channel-request common-lisp:nil
                       ((channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-channel-request-channel-name
                         :shape "__string" :location "uri" :location-name
                         "ChannelName")
                        (filler-slate :initarg :filler-slate :initform
                         common-lisp:nil :type
                         (common-lisp:or slate-source common-lisp:null)
                         :accessor
                         struct-shape-update-channel-request-filler-slate
                         :shape "SlateSource" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (outputs :initarg :outputs :initform
                         (common-lisp:error ":outputs is required") :type
                         (common-lisp:or request-outputs common-lisp:null)
                         :accessor struct-shape-update-channel-request-outputs
                         :shape "RequestOutputs" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (time-shift-configuration :initarg
                         :time-shift-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or time-shift-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-channel-request-time-shift-configuration
                         :shape "TimeShiftConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-channel-request 'make-update-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filler-slate))
      (common-lisp:list
       (common-lisp:cons "FillerSlate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outputs))
      (common-lisp:list
       (common-lisp:cons "Outputs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'time-shift-configuration))
      (common-lisp:list
       (common-lisp:cons "TimeShiftConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-channel-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-channel-response-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (channel-name :initarg :channel-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-channel-response-channel-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-state :initarg :channel-state :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-state common-lisp:null)
                         :accessor
                         struct-shape-update-channel-response-channel-state
                         :shape "ChannelState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor
                         struct-shape-update-channel-response-creation-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filler-slate :initarg :filler-slate :initform
                         common-lisp:nil :type
                         (common-lisp:or slate-source common-lisp:null)
                         :accessor
                         struct-shape-update-channel-response-filler-slate
                         :shape "SlateSource" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor
                         struct-shape-update-channel-response-last-modified-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (outputs :initarg :outputs :initform common-lisp:nil
                         :type
                         (common-lisp:or response-outputs common-lisp:null)
                         :accessor struct-shape-update-channel-response-outputs
                         :shape "ResponseOutputs" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (playback-mode :initarg :playback-mode :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-channel-response-playback-mode
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor struct-shape-update-channel-response-tags
                         :shape "__mapOf__string" :location common-lisp:nil
                         :location-name "tags")
                        (tier :initarg :tier :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-channel-response-tier :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (time-shift-configuration :initarg
                         :time-shift-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or time-shift-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-channel-response-time-shift-configuration
                         :shape "TimeShiftConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-channel-response 'make-update-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-state))
      (common-lisp:list
       (common-lisp:cons "ChannelState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filler-slate))
      (common-lisp:list
       (common-lisp:cons "FillerSlate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outputs))
      (common-lisp:list
       (common-lisp:cons "Outputs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'playback-mode))
      (common-lisp:list
       (common-lisp:cons "PlaybackMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tier))
      (common-lisp:list
       (common-lisp:cons "Tier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'time-shift-configuration))
      (common-lisp:list
       (common-lisp:cons "TimeShiftConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-live-source-request common-lisp:nil
                       ((http-package-configurations :initarg
                         :http-package-configurations :initform
                         (common-lisp:error
                          ":http-package-configurations is required")
                         :type
                         (common-lisp:or http-package-configurations
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-live-source-request-http-package-configurations
                         :shape "HttpPackageConfigurations" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (live-source-name :initarg :live-source-name :initform
                         (common-lisp:error ":live-source-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-live-source-request-live-source-name
                         :shape "__string" :location "uri" :location-name
                         "LiveSourceName")
                        (source-location-name :initarg :source-location-name
                         :initform
                         (common-lisp:error
                          ":source-location-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-live-source-request-source-location-name
                         :shape "__string" :location "uri" :location-name
                         "SourceLocationName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-live-source-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-live-source-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-live-source-request
                    'make-update-live-source-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-live-source-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-live-source-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'http-package-configurations))
      (common-lisp:list
       (common-lisp:cons "HttpPackageConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-live-source-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-live-source-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-live-source-response-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor
                         struct-shape-update-live-source-response-creation-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (http-package-configurations :initarg
                         :http-package-configurations :initform common-lisp:nil
                         :type
                         (common-lisp:or http-package-configurations
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-live-source-response-http-package-configurations
                         :shape "HttpPackageConfigurations" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor
                         struct-shape-update-live-source-response-last-modified-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (live-source-name :initarg :live-source-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-live-source-response-live-source-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (source-location-name :initarg :source-location-name
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-live-source-response-source-location-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor
                         struct-shape-update-live-source-response-tags :shape
                         "__mapOf__string" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-live-source-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-live-source-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-live-source-response
                    'make-update-live-source-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-live-source-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-live-source-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'http-package-configurations))
      (common-lisp:list
       (common-lisp:cons "HttpPackageConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'live-source-name))
      (common-lisp:list
       (common-lisp:cons "LiveSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-live-source-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-program-request common-lisp:nil
                       ((ad-breaks :initarg :ad-breaks :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfAdBreak| common-lisp:null)
                         :accessor
                         struct-shape-update-program-request-ad-breaks :shape
                         "__listOfAdBreak" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-program-request-channel-name
                         :shape "__string" :location "uri" :location-name
                         "ChannelName")
                        (program-name :initarg :program-name :initform
                         (common-lisp:error ":program-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-program-request-program-name
                         :shape "__string" :location "uri" :location-name
                         "ProgramName")
                        (schedule-configuration :initarg
                         :schedule-configuration :initform
                         (common-lisp:error
                          ":schedule-configuration is required")
                         :type
                         (common-lisp:or update-program-schedule-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-program-request-schedule-configuration
                         :shape "UpdateProgramScheduleConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-program-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-program-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-program-request 'make-update-program-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-program-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-program-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ad-breaks))
      (common-lisp:list
       (common-lisp:cons "AdBreaks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'schedule-configuration))
      (common-lisp:list
       (common-lisp:cons "ScheduleConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-program-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-program-response common-lisp:nil
                       ((ad-breaks :initarg :ad-breaks :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfAdBreak| common-lisp:null)
                         :accessor
                         struct-shape-update-program-response-ad-breaks :shape
                         "__listOfAdBreak" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-program-response-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (channel-name :initarg :channel-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-program-response-channel-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (clip-range :initarg :clip-range :initform
                         common-lisp:nil :type
                         (common-lisp:or clip-range common-lisp:null) :accessor
                         struct-shape-update-program-response-clip-range :shape
                         "ClipRange" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor
                         struct-shape-update-program-response-creation-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (duration-millis :initarg :duration-millis :initform
                         common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-update-program-response-duration-millis
                         :shape "__long" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (live-source-name :initarg :live-source-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-program-response-live-source-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (program-name :initarg :program-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-program-response-program-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (scheduled-start-time :initarg :scheduled-start-time
                         :initform common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor
                         struct-shape-update-program-response-scheduled-start-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (source-location-name :initarg :source-location-name
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-program-response-source-location-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vod-source-name :initarg :vod-source-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-program-response-vod-source-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-program-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-program-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-program-response 'make-update-program-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-program-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-program-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ad-breaks))
      (common-lisp:list
       (common-lisp:cons "AdBreaks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'clip-range))
      (common-lisp:list
       (common-lisp:cons "ClipRange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration-millis))
      (common-lisp:list
       (common-lisp:cons "DurationMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'live-source-name))
      (common-lisp:list
       (common-lisp:cons "LiveSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'program-name))
      (common-lisp:list
       (common-lisp:cons "ProgramName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'scheduled-start-time))
      (common-lisp:list
       (common-lisp:cons "ScheduledStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vod-source-name))
      (common-lisp:list
       (common-lisp:cons "VodSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-program-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-program-schedule-configuration common-lisp:nil
                       ((clip-range :initarg :clip-range :initform
                         common-lisp:nil :type
                         (common-lisp:or clip-range common-lisp:null) :accessor
                         struct-shape-update-program-schedule-configuration-clip-range
                         :shape "ClipRange" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (transition :initarg :transition :initform
                         common-lisp:nil :type
                         (common-lisp:or update-program-transition
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-program-schedule-configuration-transition
                         :shape "UpdateProgramTransition" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-program-schedule-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-program-schedule-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-program-schedule-configuration
                    'make-update-program-schedule-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-program-schedule-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-program-schedule-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'clip-range))
      (common-lisp:list
       (common-lisp:cons "ClipRange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'transition))
      (common-lisp:list
       (common-lisp:cons "Transition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-program-schedule-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-program-transition common-lisp:nil
                       ((duration-millis :initarg :duration-millis :initform
                         common-lisp:nil :type
                         (common-lisp:or |__long| common-lisp:null) :accessor
                         struct-shape-update-program-transition-duration-millis
                         :shape "__long" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (scheduled-start-time-millis :initarg
                         :scheduled-start-time-millis :initform common-lisp:nil
                         :type (common-lisp:or |__long| common-lisp:null)
                         :accessor
                         struct-shape-update-program-transition-scheduled-start-time-millis
                         :shape "__long" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-program-transition
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-program-transition
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-program-transition
                    'make-update-program-transition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-program-transition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-program-transition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration-millis))
      (common-lisp:list
       (common-lisp:cons "DurationMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'scheduled-start-time-millis))
      (common-lisp:list
       (common-lisp:cons "ScheduledStartTimeMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-program-transition))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-source-location-request common-lisp:nil
                       ((access-configuration :initarg :access-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or access-configuration common-lisp:null)
                         :accessor
                         struct-shape-update-source-location-request-access-configuration
                         :shape "AccessConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (default-segment-delivery-configuration :initarg
                         :default-segment-delivery-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or default-segment-delivery-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-source-location-request-default-segment-delivery-configuration
                         :shape "DefaultSegmentDeliveryConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (http-configuration :initarg :http-configuration
                         :initform
                         (common-lisp:error ":http-configuration is required")
                         :type
                         (common-lisp:or http-configuration common-lisp:null)
                         :accessor
                         struct-shape-update-source-location-request-http-configuration
                         :shape "HttpConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (segment-delivery-configurations :initarg
                         :segment-delivery-configurations :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfSegmentDeliveryConfiguration|
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-source-location-request-segment-delivery-configurations
                         :shape "__listOfSegmentDeliveryConfiguration"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (source-location-name :initarg :source-location-name
                         :initform
                         (common-lisp:error
                          ":source-location-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-source-location-request-source-location-name
                         :shape "__string" :location "uri" :location-name
                         "SourceLocationName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-source-location-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-source-location-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-source-location-request
                    'make-update-source-location-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-source-location-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-source-location-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'access-configuration))
      (common-lisp:list
       (common-lisp:cons "AccessConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-segment-delivery-configuration))
      (common-lisp:list
       (common-lisp:cons "DefaultSegmentDeliveryConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'http-configuration))
      (common-lisp:list
       (common-lisp:cons "HttpConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segment-delivery-configurations))
      (common-lisp:list
       (common-lisp:cons "SegmentDeliveryConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-source-location-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-source-location-response common-lisp:nil
                       ((access-configuration :initarg :access-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or access-configuration common-lisp:null)
                         :accessor
                         struct-shape-update-source-location-response-access-configuration
                         :shape "AccessConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-source-location-response-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor
                         struct-shape-update-source-location-response-creation-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (default-segment-delivery-configuration :initarg
                         :default-segment-delivery-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or default-segment-delivery-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-source-location-response-default-segment-delivery-configuration
                         :shape "DefaultSegmentDeliveryConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (http-configuration :initarg :http-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or http-configuration common-lisp:null)
                         :accessor
                         struct-shape-update-source-location-response-http-configuration
                         :shape "HttpConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor
                         struct-shape-update-source-location-response-last-modified-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (segment-delivery-configurations :initarg
                         :segment-delivery-configurations :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfSegmentDeliveryConfiguration|
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-source-location-response-segment-delivery-configurations
                         :shape "__listOfSegmentDeliveryConfiguration"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (source-location-name :initarg :source-location-name
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-source-location-response-source-location-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor
                         struct-shape-update-source-location-response-tags
                         :shape "__mapOf__string" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-source-location-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-source-location-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-source-location-response
                    'make-update-source-location-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-source-location-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-source-location-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'access-configuration))
      (common-lisp:list
       (common-lisp:cons "AccessConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-segment-delivery-configuration))
      (common-lisp:list
       (common-lisp:cons "DefaultSegmentDeliveryConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'http-configuration))
      (common-lisp:list
       (common-lisp:cons "HttpConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segment-delivery-configurations))
      (common-lisp:list
       (common-lisp:cons "SegmentDeliveryConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-source-location-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-vod-source-request common-lisp:nil
                       ((http-package-configurations :initarg
                         :http-package-configurations :initform
                         (common-lisp:error
                          ":http-package-configurations is required")
                         :type
                         (common-lisp:or http-package-configurations
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-vod-source-request-http-package-configurations
                         :shape "HttpPackageConfigurations" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (source-location-name :initarg :source-location-name
                         :initform
                         (common-lisp:error
                          ":source-location-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-vod-source-request-source-location-name
                         :shape "__string" :location "uri" :location-name
                         "SourceLocationName")
                        (vod-source-name :initarg :vod-source-name :initform
                         (common-lisp:error ":vod-source-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-vod-source-request-vod-source-name
                         :shape "__string" :location "uri" :location-name
                         "VodSourceName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-vod-source-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-vod-source-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-vod-source-request
                    'make-update-vod-source-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-vod-source-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-vod-source-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'http-package-configurations))
      (common-lisp:list
       (common-lisp:cons "HttpPackageConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-vod-source-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-vod-source-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-vod-source-response-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor
                         struct-shape-update-vod-source-response-creation-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (http-package-configurations :initarg
                         :http-package-configurations :initform common-lisp:nil
                         :type
                         (common-lisp:or http-package-configurations
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-vod-source-response-http-package-configurations
                         :shape "HttpPackageConfigurations" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor
                         struct-shape-update-vod-source-response-last-modified-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (source-location-name :initarg :source-location-name
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-vod-source-response-source-location-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor struct-shape-update-vod-source-response-tags
                         :shape "__mapOf__string" :location common-lisp:nil
                         :location-name "tags")
                        (vod-source-name :initarg :vod-source-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-vod-source-response-vod-source-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-vod-source-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-vod-source-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-vod-source-response
                    'make-update-vod-source-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-vod-source-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-vod-source-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'http-package-configurations))
      (common-lisp:list
       (common-lisp:cons "HttpPackageConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vod-source-name))
      (common-lisp:list
       (common-lisp:cons "VodSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-vod-source-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass vod-source common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-vod-source-arn :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor struct-shape-vod-source-creation-time :shape
                         "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (http-package-configurations :initarg
                         :http-package-configurations :initform
                         (common-lisp:error
                          ":http-package-configurations is required")
                         :type
                         (common-lisp:or http-package-configurations
                                         common-lisp:null)
                         :accessor
                         struct-shape-vod-source-http-package-configurations
                         :shape "HttpPackageConfigurations" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or |__timestampUnix| common-lisp:null)
                         :accessor struct-shape-vod-source-last-modified-time
                         :shape "__timestampUnix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (source-location-name :initarg :source-location-name
                         :initform
                         (common-lisp:error
                          ":source-location-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-vod-source-source-location-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor struct-shape-vod-source-tags :shape
                         "__mapOf__string" :location common-lisp:nil
                         :location-name "tags")
                        (vod-source-name :initarg :vod-source-name :initform
                         (common-lisp:error ":vod-source-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-vod-source-vod-source-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-vod-source
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'vod-source
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'vod-source 'make-vod-source))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vod-source))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vod-source))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'http-package-configurations))
      (common-lisp:list
       (common-lisp:cons "HttpPackageConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-location-name))
      (common-lisp:list
       (common-lisp:cons "SourceLocationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vod-source-name))
      (common-lisp:list
       (common-lisp:cons "VodSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vod-source))
   common-lisp:nil))
(common-lisp:deftype |__boolean| () 'common-lisp:boolean)
(common-lisp:deftype |__integer| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin1| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin1Max100| () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype |__listOfAdBreak| ()
   '(trivial-types:proper-list ad-break))
 (common-lisp:defun make-__listofadbreak
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ad-break))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfAlert| () '(trivial-types:proper-list alert))
 (common-lisp:defun make-__listofalert
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list alert))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfAvailMatchingCriteria| ()
   '(trivial-types:proper-list avail-matching-criteria))
 (common-lisp:defun make-__listofavailmatchingcriteria
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list avail-matching-criteria))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfChannel| ()
   '(trivial-types:proper-list channel))
 (common-lisp:defun make-__listofchannel
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list channel))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfLiveSource| ()
   '(trivial-types:proper-list live-source))
 (common-lisp:defun make-__listoflivesource
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list live-source))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfPlaybackConfiguration| ()
   '(trivial-types:proper-list playback-configuration))
 (common-lisp:defun make-__listofplaybackconfiguration
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list playback-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfPrefetchSchedule| ()
   '(trivial-types:proper-list prefetch-schedule))
 (common-lisp:defun make-__listofprefetchschedule
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list prefetch-schedule))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfScheduleAdBreak| ()
   '(trivial-types:proper-list schedule-ad-break))
 (common-lisp:defun make-__listofscheduleadbreak
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list schedule-ad-break))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfScheduleEntry| ()
   '(trivial-types:proper-list schedule-entry))
 (common-lisp:defun make-__listofscheduleentry
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list schedule-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfSegmentDeliveryConfiguration| ()
   '(trivial-types:proper-list segment-delivery-configuration))
 (common-lisp:defun make-__listofsegmentdeliveryconfiguration
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            segment-delivery-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfSourceLocation| ()
   '(trivial-types:proper-list source-location))
 (common-lisp:defun make-__listofsourcelocation
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list source-location))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfVodSource| ()
   '(trivial-types:proper-list vod-source))
 (common-lisp:defun make-__listofvodsource
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list vod-source))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOf__string| ()
   '(trivial-types:proper-list |__string|))
 (common-lisp:defun make-__listof__string
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__string|))
   aws-sdk/generator/shape::members))
(common-lisp:deftype |__long| () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype |__mapOf__string| () 'common-lisp:hash-table)
 (common-lisp:defun make-__mapof__string (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype |__string| () 'common-lisp:string)
(common-lisp:deftype |__timestampUnix| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype |adMarkupTypes| ()
   '(trivial-types:proper-list ad-markup-type))
 (common-lisp:defun make-admarkuptypes
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ad-markup-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defun configure-logs-for-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-name log-types)
   (common-lisp:declare (common-lisp:ignorable channel-name log-types))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-configure-logs-for-channel-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        "/configureLogs/channel"
                                                        "ConfigureLogsForChannel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'configure-logs-for-channel))
(common-lisp:progn
 (common-lisp:defun configure-logs-for-playback-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key percent-enabled
                     playback-configuration-name)
   (common-lisp:declare
    (common-lisp:ignorable percent-enabled playback-configuration-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-configure-logs-for-playback-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        "/configureLogs/playbackConfiguration"
                                                        "ConfigureLogsForPlaybackConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'configure-logs-for-playback-configuration))
(common-lisp:progn
 (common-lisp:defun create-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-name filler-slate outputs
                     playback-mode tags tier time-shift-configuration)
   (common-lisp:declare
    (common-lisp:ignorable channel-name filler-slate outputs playback-mode tags
     tier time-shift-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channel/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))))
                                                        "CreateChannel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-channel))
(common-lisp:progn
 (common-lisp:defun create-live-source
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key http-package-configurations
                     live-source-name source-location-name tags)
   (common-lisp:declare
    (common-lisp:ignorable http-package-configurations live-source-name
     source-location-name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-live-source-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sourceLocation/~A/liveSource/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'source-location-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'live-source-name))))
                                                        "CreateLiveSource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-live-source))
(common-lisp:progn
 (common-lisp:defun create-prefetch-schedule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key consumption name
                     playback-configuration-name retrieval stream-id)
   (common-lisp:declare
    (common-lisp:ignorable consumption name playback-configuration-name
     retrieval stream-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-prefetch-schedule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/prefetchSchedule/~A/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'playback-configuration-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "CreatePrefetchSchedule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-prefetch-schedule))
(common-lisp:progn
 (common-lisp:defun create-program
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ad-breaks channel-name live-source-name
                     program-name schedule-configuration source-location-name
                     vod-source-name)
   (common-lisp:declare
    (common-lisp:ignorable ad-breaks channel-name live-source-name program-name
     schedule-configuration source-location-name vod-source-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-program-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channel/~A/program/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'program-name))))
                                                        "CreateProgram"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-program))
(common-lisp:progn
 (common-lisp:defun create-source-location
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key access-configuration
                     default-segment-delivery-configuration http-configuration
                     segment-delivery-configurations source-location-name tags)
   (common-lisp:declare
    (common-lisp:ignorable access-configuration
     default-segment-delivery-configuration http-configuration
     segment-delivery-configurations source-location-name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-source-location-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sourceLocation/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'source-location-name))))
                                                        "CreateSourceLocation"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-source-location))
(common-lisp:progn
 (common-lisp:defun create-vod-source
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key http-package-configurations
                     source-location-name tags vod-source-name)
   (common-lisp:declare
    (common-lisp:ignorable http-package-configurations source-location-name
     tags vod-source-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-vod-source-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sourceLocation/~A/vodSource/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'source-location-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vod-source-name))))
                                                        "CreateVodSource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-vod-source))
(common-lisp:progn
 (common-lisp:defun delete-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-name)
   (common-lisp:declare (common-lisp:ignorable channel-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channel/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))))
                                                        "DeleteChannel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-channel))
(common-lisp:progn
 (common-lisp:defun delete-channel-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-name)
   (common-lisp:declare (common-lisp:ignorable channel-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-channel-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channel/~A/policy"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))))
                                                        "DeleteChannelPolicy"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-channel-policy))
(common-lisp:progn
 (common-lisp:defun delete-live-source
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key live-source-name source-location-name)
   (common-lisp:declare
    (common-lisp:ignorable live-source-name source-location-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-live-source-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sourceLocation/~A/liveSource/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'source-location-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'live-source-name))))
                                                        "DeleteLiveSource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-live-source))
(common-lisp:progn
 (common-lisp:defun delete-playback-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-playback-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/playbackConfiguration/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "DeletePlaybackConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-playback-configuration))
(common-lisp:progn
 (common-lisp:defun delete-prefetch-schedule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name playback-configuration-name)
   (common-lisp:declare
    (common-lisp:ignorable name playback-configuration-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-prefetch-schedule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/prefetchSchedule/~A/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'playback-configuration-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "DeletePrefetchSchedule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-prefetch-schedule))
(common-lisp:progn
 (common-lisp:defun delete-program
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-name program-name)
   (common-lisp:declare (common-lisp:ignorable channel-name program-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-program-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channel/~A/program/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'program-name))))
                                                        "DeleteProgram"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-program))
(common-lisp:progn
 (common-lisp:defun delete-source-location
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key source-location-name)
   (common-lisp:declare (common-lisp:ignorable source-location-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-source-location-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sourceLocation/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'source-location-name))))
                                                        "DeleteSourceLocation"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-source-location))
(common-lisp:progn
 (common-lisp:defun delete-vod-source
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key source-location-name vod-source-name)
   (common-lisp:declare
    (common-lisp:ignorable source-location-name vod-source-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-vod-source-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sourceLocation/~A/vodSource/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'source-location-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vod-source-name))))
                                                        "DeleteVodSource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-vod-source))
(common-lisp:progn
 (common-lisp:defun describe-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-name)
   (common-lisp:declare (common-lisp:ignorable channel-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channel/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))))
                                                        "DescribeChannel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-channel))
(common-lisp:progn
 (common-lisp:defun describe-live-source
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key live-source-name source-location-name)
   (common-lisp:declare
    (common-lisp:ignorable live-source-name source-location-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-live-source-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sourceLocation/~A/liveSource/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'source-location-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'live-source-name))))
                                                        "DescribeLiveSource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-live-source))
(common-lisp:progn
 (common-lisp:defun describe-program
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-name program-name)
   (common-lisp:declare (common-lisp:ignorable channel-name program-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-program-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channel/~A/program/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'program-name))))
                                                        "DescribeProgram"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-program))
(common-lisp:progn
 (common-lisp:defun describe-source-location
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key source-location-name)
   (common-lisp:declare (common-lisp:ignorable source-location-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-source-location-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sourceLocation/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'source-location-name))))
                                                        "DescribeSourceLocation"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-source-location))
(common-lisp:progn
 (common-lisp:defun describe-vod-source
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key source-location-name vod-source-name)
   (common-lisp:declare
    (common-lisp:ignorable source-location-name vod-source-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-vod-source-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sourceLocation/~A/vodSource/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'source-location-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vod-source-name))))
                                                        "DescribeVodSource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-vod-source))
(common-lisp:progn
 (common-lisp:defun get-channel-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-name)
   (common-lisp:declare (common-lisp:ignorable channel-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-channel-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channel/~A/policy"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))))
                                                        "GetChannelPolicy"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-channel-policy))
(common-lisp:progn
 (common-lisp:defun get-channel-schedule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-name duration-minutes max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable channel-name duration-minutes max-results
     next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-channel-schedule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channel/~A/schedule"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))))
                                                        "GetChannelSchedule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-channel-schedule))
(common-lisp:progn
 (common-lisp:defun get-playback-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-playback-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/playbackConfiguration/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "GetPlaybackConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-playback-configuration))
(common-lisp:progn
 (common-lisp:defun get-prefetch-schedule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name playback-configuration-name)
   (common-lisp:declare
    (common-lisp:ignorable name playback-configuration-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-prefetch-schedule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/prefetchSchedule/~A/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'playback-configuration-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "GetPrefetchSchedule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-prefetch-schedule))
(common-lisp:progn
 (common-lisp:defun list-alerts
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token resource-arn)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-alerts-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/alerts"
                                                        "ListAlerts"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-alerts))
(common-lisp:progn
 (common-lisp:defun list-channels
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-channels-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/channels"
                                                        "ListChannels"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-channels))
(common-lisp:progn
 (common-lisp:defun list-live-sources
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token
                     source-location-name)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token source-location-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-live-sources-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sourceLocation/~A/liveSources"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'source-location-name))))
                                                        "ListLiveSources"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-live-sources))
(common-lisp:progn
 (common-lisp:defun list-playback-configurations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-playback-configurations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/playbackConfigurations"
                                                        "ListPlaybackConfigurations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-playback-configurations))
(common-lisp:progn
 (common-lisp:defun list-prefetch-schedules
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token
                     playback-configuration-name stream-id)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token playback-configuration-name
     stream-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-prefetch-schedules-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/prefetchSchedule/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'playback-configuration-name))))
                                                        "ListPrefetchSchedules"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-prefetch-schedules))
(common-lisp:progn
 (common-lisp:defun list-source-locations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-source-locations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/sourceLocations"
                                                        "ListSourceLocations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-source-locations))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun list-vod-sources
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token
                     source-location-name)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token source-location-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-vod-sources-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sourceLocation/~A/vodSources"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'source-location-name))))
                                                        "ListVodSources"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-vod-sources))
(common-lisp:progn
 (common-lisp:defun put-channel-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-name policy)
   (common-lisp:declare (common-lisp:ignorable channel-name policy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-channel-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channel/~A/policy"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))))
                                                        "PutChannelPolicy"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-channel-policy))
(common-lisp:progn
 (common-lisp:defun put-playback-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ad-decision-server-url avail-suppression
                     bumper cdn-configuration configuration-aliases
                     dash-configuration live-pre-roll-configuration
                     manifest-processing-rules name
                     personalization-threshold-seconds slate-ad-url tags
                     transcode-profile-name video-content-source-url)
   (common-lisp:declare
    (common-lisp:ignorable ad-decision-server-url avail-suppression bumper
     cdn-configuration configuration-aliases dash-configuration
     live-pre-roll-configuration manifest-processing-rules name
     personalization-threshold-seconds slate-ad-url tags transcode-profile-name
     video-content-source-url))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-playback-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        "/playbackConfiguration"
                                                        "PutPlaybackConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-playback-configuration))
(common-lisp:progn
 (common-lisp:defun start-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-name)
   (common-lisp:declare (common-lisp:ignorable channel-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channel/~A/start"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))))
                                                        "StartChannel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'start-channel))
(common-lisp:progn
 (common-lisp:defun stop-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-name)
   (common-lisp:declare (common-lisp:ignorable channel-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channel/~A/stop"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))))
                                                        "StopChannel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'stop-channel))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "TagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-name filler-slate outputs
                     time-shift-configuration)
   (common-lisp:declare
    (common-lisp:ignorable channel-name filler-slate outputs
     time-shift-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channel/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))))
                                                        "UpdateChannel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-channel))
(common-lisp:progn
 (common-lisp:defun update-live-source
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key http-package-configurations
                     live-source-name source-location-name)
   (common-lisp:declare
    (common-lisp:ignorable http-package-configurations live-source-name
     source-location-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-live-source-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sourceLocation/~A/liveSource/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'source-location-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'live-source-name))))
                                                        "UpdateLiveSource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-live-source))
(common-lisp:progn
 (common-lisp:defun update-program
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ad-breaks channel-name program-name
                     schedule-configuration)
   (common-lisp:declare
    (common-lisp:ignorable ad-breaks channel-name program-name
     schedule-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-program-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channel/~A/program/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'channel-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'program-name))))
                                                        "UpdateProgram"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-program))
(common-lisp:progn
 (common-lisp:defun update-source-location
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key access-configuration
                     default-segment-delivery-configuration http-configuration
                     segment-delivery-configurations source-location-name)
   (common-lisp:declare
    (common-lisp:ignorable access-configuration
     default-segment-delivery-configuration http-configuration
     segment-delivery-configurations source-location-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-source-location-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sourceLocation/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'source-location-name))))
                                                        "UpdateSourceLocation"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-source-location))
(common-lisp:progn
 (common-lisp:defun update-vod-source
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key http-package-configurations
                     source-location-name vod-source-name)
   (common-lisp:declare
    (common-lisp:ignorable http-package-configurations source-location-name
     vod-source-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-vod-source-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediatailor-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sourceLocation/~A/vodSource/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'source-location-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vod-source-name))))
                                                        "UpdateVodSource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-vod-source))
