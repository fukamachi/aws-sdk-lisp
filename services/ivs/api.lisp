;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/ivs/api
  (:use)
  (:nicknames #:aws/ivs)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/json-request)
  (:import-from #:aws-sdk/rest-json-request)
  (:import-from #:aws-sdk/rest-xml-request)
  (:import-from #:aws-sdk/query-request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/ivs/api)
(common-lisp:progn
 (common-lisp:define-condition ivs-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'ivs-error))
(common-lisp:progn
 (common-lisp:defclass ivs-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "ivs" :api-version
                        "2020-07-14" :host-prefix "ivs" :signing-name "ivs"
                        :global-host common-lisp:nil))
 (common-lisp:export 'ivs-request))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("ChannelNotBroadcasting" . channel-not-broadcasting)
    ("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("PendingVerification" . pending-verification)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceQuotaExceededException" . service-quota-exceeded-exception)
    ("StreamUnavailable" . stream-unavailable)
    ("ThrottlingException" . throttling-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (ivs-error)
     ((exception-message :initarg :exception-message :initform common-lisp:nil
       :reader access-denied-exception-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception
                    'access-denied-exception-exception-message)))
(common-lisp:progn
 (common-lisp:defclass audio-configuration common-lisp:nil
                       ((channels :initarg :channels :initform common-lisp:nil
                         :type (common-lisp:or integer common-lisp:null)
                         :accessor struct-shape-audio-configuration-channels
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (codec :initarg :codec :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-audio-configuration-codec :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (sample-rate :initarg :sample-rate :initform
                         common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-audio-configuration-sample-rate :shape
                         "Integer" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (target-bitrate :initarg :target-bitrate :initform
                         common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-audio-configuration-target-bitrate :shape
                         "Integer" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-audio-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'audio-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'audio-configuration 'make-audio-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input audio-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input audio-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channels))
      (common-lisp:list
       (common-lisp:cons "channels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'codec))
      (common-lisp:list
       (common-lisp:cons "codec"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sample-rate))
      (common-lisp:list
       (common-lisp:cons "sampleRate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-bitrate))
      (common-lisp:list
       (common-lisp:cons "targetBitrate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input audio-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-error common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor struct-shape-batch-error-arn :shape
                         "ResourceArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (code :initarg :code :initform common-lisp:nil :type
                         (common-lisp:or |errorCode| common-lisp:null)
                         :accessor struct-shape-batch-error-code :shape
                         "errorCode" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (message :initarg :message :initform common-lisp:nil
                         :type (common-lisp:or |errorMessage| common-lisp:null)
                         :accessor struct-shape-batch-error-message :shape
                         "errorMessage" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-error
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'batch-error
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'batch-error 'make-batch-error))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input batch-error))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input batch-error))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'code))
      (common-lisp:list
       (common-lisp:cons "code"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input batch-error))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype batch-errors () '(trivial-types:proper-list batch-error))
 (common-lisp:defun make-batch-errors
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list batch-error))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass batch-get-channel-request common-lisp:nil
                       ((arns :initarg :arns :initform
                         (common-lisp:error ":arns is required") :type
                         (common-lisp:or channel-arn-list common-lisp:null)
                         :accessor struct-shape-batch-get-channel-request-arns
                         :shape "ChannelArnList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-get-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'batch-get-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-get-channel-request
                    'make-batch-get-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arns))
      (common-lisp:list
       (common-lisp:cons "arns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-get-channel-response common-lisp:nil
                       ((channels :initarg :channels :initform common-lisp:nil
                         :type (common-lisp:or channels common-lisp:null)
                         :accessor
                         struct-shape-batch-get-channel-response-channels
                         :shape "Channels" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (errors :initarg :errors :initform common-lisp:nil
                         :type (common-lisp:or batch-errors common-lisp:null)
                         :accessor
                         struct-shape-batch-get-channel-response-errors :shape
                         "BatchErrors" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-get-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'batch-get-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-get-channel-response
                    'make-batch-get-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channels))
      (common-lisp:list
       (common-lisp:cons "channels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'errors))
      (common-lisp:list
       (common-lisp:cons "errors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-channel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-get-stream-key-request common-lisp:nil
                       ((arns :initarg :arns :initform
                         (common-lisp:error ":arns is required") :type
                         (common-lisp:or stream-key-arn-list common-lisp:null)
                         :accessor
                         struct-shape-batch-get-stream-key-request-arns :shape
                         "StreamKeyArnList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-get-stream-key-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'batch-get-stream-key-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-get-stream-key-request
                    'make-batch-get-stream-key-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-stream-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-stream-key-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arns))
      (common-lisp:list
       (common-lisp:cons "arns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-stream-key-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-get-stream-key-response common-lisp:nil
                       ((errors :initarg :errors :initform common-lisp:nil
                         :type (common-lisp:or batch-errors common-lisp:null)
                         :accessor
                         struct-shape-batch-get-stream-key-response-errors
                         :shape "BatchErrors" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (stream-keys :initarg :stream-keys :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-keys common-lisp:null)
                         :accessor
                         struct-shape-batch-get-stream-key-response-stream-keys
                         :shape "StreamKeys" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-get-stream-key-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-get-stream-key-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-get-stream-key-response
                    'make-batch-get-stream-key-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-stream-key-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-stream-key-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'errors))
      (common-lisp:list
       (common-lisp:cons "errors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-keys))
      (common-lisp:list
       (common-lisp:cons "streamKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-stream-key-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-start-viewer-session-revocation-error
                       common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channelarn is required") :type
                         (common-lisp:or channel-arn common-lisp:null)
                         :accessor
                         struct-shape-batch-start-viewer-session-revocation-error-channel-arn
                         :shape "ChannelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (code :initarg :code :initform common-lisp:nil :type
                         (common-lisp:or |errorCode| common-lisp:null)
                         :accessor
                         struct-shape-batch-start-viewer-session-revocation-error-code
                         :shape "errorCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message :initarg :message :initform common-lisp:nil
                         :type (common-lisp:or |errorMessage| common-lisp:null)
                         :accessor
                         struct-shape-batch-start-viewer-session-revocation-error-message
                         :shape "errorMessage" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (viewer-id :initarg :viewer-id :initform
                         (common-lisp:error ":viewerid is required") :type
                         (common-lisp:or viewer-id common-lisp:null) :accessor
                         struct-shape-batch-start-viewer-session-revocation-error-viewer-id
                         :shape "ViewerId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-start-viewer-session-revocation-error
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-start-viewer-session-revocation-error
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-start-viewer-session-revocation-error
                    'make-batch-start-viewer-session-revocation-error))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-start-viewer-session-revocation-error))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-start-viewer-session-revocation-error))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "channelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'code))
      (common-lisp:list
       (common-lisp:cons "code"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'viewer-id))
      (common-lisp:list
       (common-lisp:cons "viewerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-start-viewer-session-revocation-error))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype batch-start-viewer-session-revocation-errors ()
   '(trivial-types:proper-list batch-start-viewer-session-revocation-error))
 (common-lisp:defun make-batch-start-viewer-session-revocation-errors
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            batch-start-viewer-session-revocation-error))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass batch-start-viewer-session-revocation-request
                       common-lisp:nil
                       ((viewer-sessions :initarg :viewer-sessions :initform
                         (common-lisp:error ":viewersessions is required")
                         :type
                         (common-lisp:or
                          batch-start-viewer-session-revocation-viewer-session-list
                          common-lisp:null)
                         :accessor
                         struct-shape-batch-start-viewer-session-revocation-request-viewer-sessions
                         :shape
                         "BatchStartViewerSessionRevocationViewerSessionList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-start-viewer-session-revocation-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-start-viewer-session-revocation-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-start-viewer-session-revocation-request
                    'make-batch-start-viewer-session-revocation-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-start-viewer-session-revocation-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-start-viewer-session-revocation-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'viewer-sessions))
      (common-lisp:list
       (common-lisp:cons "viewerSessions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-start-viewer-session-revocation-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-start-viewer-session-revocation-response
                       common-lisp:nil
                       ((errors :initarg :errors :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          batch-start-viewer-session-revocation-errors
                          common-lisp:null)
                         :accessor
                         struct-shape-batch-start-viewer-session-revocation-response-errors
                         :shape "BatchStartViewerSessionRevocationErrors"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-start-viewer-session-revocation-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-start-viewer-session-revocation-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-start-viewer-session-revocation-response
                    'make-batch-start-viewer-session-revocation-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-start-viewer-session-revocation-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-start-viewer-session-revocation-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'errors))
      (common-lisp:list
       (common-lisp:cons "errors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-start-viewer-session-revocation-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-start-viewer-session-revocation-viewer-session
                       common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channelarn is required") :type
                         (common-lisp:or channel-arn common-lisp:null)
                         :accessor
                         struct-shape-batch-start-viewer-session-revocation-viewer-session-channel-arn
                         :shape "ChannelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (viewer-id :initarg :viewer-id :initform
                         (common-lisp:error ":viewerid is required") :type
                         (common-lisp:or viewer-id common-lisp:null) :accessor
                         struct-shape-batch-start-viewer-session-revocation-viewer-session-viewer-id
                         :shape "ViewerId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (viewer-session-versions-less-than-or-equal-to :initarg
                         :viewer-session-versions-less-than-or-equal-to
                         :initform common-lisp:nil :type
                         (common-lisp:or viewer-session-version
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-start-viewer-session-revocation-viewer-session-viewer-session-versions-less-than-or-equal-to
                         :shape "ViewerSessionVersion" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-start-viewer-session-revocation-viewer-session
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-start-viewer-session-revocation-viewer-session
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-start-viewer-session-revocation-viewer-session
                    'make-batch-start-viewer-session-revocation-viewer-session))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-start-viewer-session-revocation-viewer-session))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-start-viewer-session-revocation-viewer-session))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "channelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'viewer-id))
      (common-lisp:list
       (common-lisp:cons "viewerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'viewer-session-versions-less-than-or-equal-to))
      (common-lisp:list
       (common-lisp:cons "viewerSessionVersionsLessThanOrEqualTo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-start-viewer-session-revocation-viewer-session))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype batch-start-viewer-session-revocation-viewer-session-list
                      ()
   '(trivial-types:proper-list
     batch-start-viewer-session-revocation-viewer-session))
 (common-lisp:defun make-batch-start-viewer-session-revocation-viewer-session-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            batch-start-viewer-session-revocation-viewer-session))
   aws-sdk/generator/shape::members))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defclass channel common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or channel-arn common-lisp:null)
                         :accessor struct-shape-channel-arn :shape "ChannelArn"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (authorized :initarg :authorized :initform
                         common-lisp:nil :type
                         (common-lisp:or is-authorized common-lisp:null)
                         :accessor struct-shape-channel-authorized :shape
                         "IsAuthorized" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (ingest-endpoint :initarg :ingest-endpoint :initform
                         common-lisp:nil :type
                         (common-lisp:or ingest-endpoint common-lisp:null)
                         :accessor struct-shape-channel-ingest-endpoint :shape
                         "IngestEndpoint" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (insecure-ingest :initarg :insecure-ingest :initform
                         common-lisp:nil :type
                         (common-lisp:or insecure-ingest common-lisp:null)
                         :accessor struct-shape-channel-insecure-ingest :shape
                         "InsecureIngest" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (latency-mode :initarg :latency-mode :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-latency-mode common-lisp:null)
                         :accessor struct-shape-channel-latency-mode :shape
                         "ChannelLatencyMode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or channel-name common-lisp:null)
                         :accessor struct-shape-channel-name :shape
                         "ChannelName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (playback-restriction-policy-arn :initarg
                         :playback-restriction-policy-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          channel-playback-restriction-policy-arn
                          common-lisp:null)
                         :accessor
                         struct-shape-channel-playback-restriction-policy-arn
                         :shape "ChannelPlaybackRestrictionPolicyArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (playback-url :initarg :playback-url :initform
                         common-lisp:nil :type
                         (common-lisp:or playback-url common-lisp:null)
                         :accessor struct-shape-channel-playback-url :shape
                         "PlaybackURL" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (preset :initarg :preset :initform common-lisp:nil
                         :type
                         (common-lisp:or transcode-preset common-lisp:null)
                         :accessor struct-shape-channel-preset :shape
                         "TranscodePreset" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recording-configuration-arn :initarg
                         :recording-configuration-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or channel-recording-configuration-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-channel-recording-configuration-arn
                         :shape "ChannelRecordingConfigurationArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-channel-tags :shape "Tags" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or channel-type common-lisp:null)
                         :accessor struct-shape-channel-type :shape
                         "ChannelType" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channel
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'channel 'make-channel))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input channel))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input channel))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorized))
      (common-lisp:list
       (common-lisp:cons "authorized"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ingest-endpoint))
      (common-lisp:list
       (common-lisp:cons "ingestEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'insecure-ingest))
      (common-lisp:list
       (common-lisp:cons "insecureIngest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latency-mode))
      (common-lisp:list
       (common-lisp:cons "latencyMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'playback-restriction-policy-arn))
      (common-lisp:list
       (common-lisp:cons "playbackRestrictionPolicyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'playback-url))
      (common-lisp:list
       (common-lisp:cons "playbackUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'preset))
      (common-lisp:list
       (common-lisp:cons "preset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recording-configuration-arn))
      (common-lisp:list
       (common-lisp:cons "recordingConfigurationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input channel))
   common-lisp:nil))
(common-lisp:deftype channel-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype channel-arn-list ()
   '(trivial-types:proper-list channel-arn))
 (common-lisp:defun make-channel-arn-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list channel-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype channel-latency-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype channel-list ()
   '(trivial-types:proper-list channel-summary))
 (common-lisp:defun make-channel-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list channel-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype channel-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition channel-not-broadcasting
     (ivs-error)
     ((exception-message :initarg :exception-message :initform common-lisp:nil
       :reader channel-not-broadcasting-exception-message)))
 (common-lisp:export
  (common-lisp:list 'channel-not-broadcasting
                    'channel-not-broadcasting-exception-message)))
(common-lisp:deftype channel-playback-restriction-policy-arn ()
  'common-lisp:string)
(common-lisp:deftype channel-recording-configuration-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass channel-summary common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or channel-arn common-lisp:null)
                         :accessor struct-shape-channel-summary-arn :shape
                         "ChannelArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (authorized :initarg :authorized :initform
                         common-lisp:nil :type
                         (common-lisp:or is-authorized common-lisp:null)
                         :accessor struct-shape-channel-summary-authorized
                         :shape "IsAuthorized" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (insecure-ingest :initarg :insecure-ingest :initform
                         common-lisp:nil :type
                         (common-lisp:or insecure-ingest common-lisp:null)
                         :accessor struct-shape-channel-summary-insecure-ingest
                         :shape "InsecureIngest" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (latency-mode :initarg :latency-mode :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-latency-mode common-lisp:null)
                         :accessor struct-shape-channel-summary-latency-mode
                         :shape "ChannelLatencyMode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or channel-name common-lisp:null)
                         :accessor struct-shape-channel-summary-name :shape
                         "ChannelName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (playback-restriction-policy-arn :initarg
                         :playback-restriction-policy-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          channel-playback-restriction-policy-arn
                          common-lisp:null)
                         :accessor
                         struct-shape-channel-summary-playback-restriction-policy-arn
                         :shape "ChannelPlaybackRestrictionPolicyArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (preset :initarg :preset :initform common-lisp:nil
                         :type
                         (common-lisp:or transcode-preset common-lisp:null)
                         :accessor struct-shape-channel-summary-preset :shape
                         "TranscodePreset" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recording-configuration-arn :initarg
                         :recording-configuration-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or channel-recording-configuration-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-channel-summary-recording-configuration-arn
                         :shape "ChannelRecordingConfigurationArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-channel-summary-tags :shape "Tags"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or channel-type common-lisp:null)
                         :accessor struct-shape-channel-summary-type :shape
                         "ChannelType" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channel-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'channel-summary 'make-channel-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input channel-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input channel-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorized))
      (common-lisp:list
       (common-lisp:cons "authorized"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'insecure-ingest))
      (common-lisp:list
       (common-lisp:cons "insecureIngest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latency-mode))
      (common-lisp:list
       (common-lisp:cons "latencyMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'playback-restriction-policy-arn))
      (common-lisp:list
       (common-lisp:cons "playbackRestrictionPolicyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'preset))
      (common-lisp:list
       (common-lisp:cons "preset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recording-configuration-arn))
      (common-lisp:list
       (common-lisp:cons "recordingConfigurationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input channel-summary))
   common-lisp:nil))
(common-lisp:deftype channel-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype channels () '(trivial-types:proper-list channel))
 (common-lisp:defun make-channels
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list channel))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (ivs-error)
     ((exception-message :initarg :exception-message :initform common-lisp:nil
       :reader conflict-exception-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-exception-message)))
(common-lisp:progn
 (common-lisp:defclass create-channel-request common-lisp:nil
                       ((authorized :initarg :authorized :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-create-channel-request-authorized :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (insecure-ingest :initarg :insecure-ingest :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-create-channel-request-insecure-ingest
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (latency-mode :initarg :latency-mode :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-latency-mode common-lisp:null)
                         :accessor
                         struct-shape-create-channel-request-latency-mode
                         :shape "ChannelLatencyMode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or channel-name common-lisp:null)
                         :accessor struct-shape-create-channel-request-name
                         :shape "ChannelName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (playback-restriction-policy-arn :initarg
                         :playback-restriction-policy-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          channel-playback-restriction-policy-arn
                          common-lisp:null)
                         :accessor
                         struct-shape-create-channel-request-playback-restriction-policy-arn
                         :shape "ChannelPlaybackRestrictionPolicyArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (preset :initarg :preset :initform common-lisp:nil
                         :type
                         (common-lisp:or transcode-preset common-lisp:null)
                         :accessor struct-shape-create-channel-request-preset
                         :shape "TranscodePreset" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recording-configuration-arn :initarg
                         :recording-configuration-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or channel-recording-configuration-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-channel-request-recording-configuration-arn
                         :shape "ChannelRecordingConfigurationArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-channel-request-tags :shape "Tags"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or channel-type common-lisp:null)
                         :accessor struct-shape-create-channel-request-type
                         :shape "ChannelType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-channel-request 'make-create-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorized))
      (common-lisp:list
       (common-lisp:cons "authorized"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'insecure-ingest))
      (common-lisp:list
       (common-lisp:cons "insecureIngest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latency-mode))
      (common-lisp:list
       (common-lisp:cons "latencyMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'playback-restriction-policy-arn))
      (common-lisp:list
       (common-lisp:cons "playbackRestrictionPolicyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'preset))
      (common-lisp:list
       (common-lisp:cons "preset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recording-configuration-arn))
      (common-lisp:list
       (common-lisp:cons "recordingConfigurationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-channel-response common-lisp:nil
                       ((channel :initarg :channel :initform common-lisp:nil
                         :type (common-lisp:or channel common-lisp:null)
                         :accessor struct-shape-create-channel-response-channel
                         :shape "Channel" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (stream-key :initarg :stream-key :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-key common-lisp:null) :accessor
                         struct-shape-create-channel-response-stream-key :shape
                         "StreamKey" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-channel-response 'make-create-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel))
      (common-lisp:list
       (common-lisp:cons "channel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-key))
      (common-lisp:list
       (common-lisp:cons "streamKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-playback-restriction-policy-request
                       common-lisp:nil
                       ((allowed-countries :initarg :allowed-countries
                         :initform common-lisp:nil :type
                         (common-lisp:or
                          playback-restriction-policy-allowed-country-list
                          common-lisp:null)
                         :accessor
                         struct-shape-create-playback-restriction-policy-request-allowed-countries
                         :shape "PlaybackRestrictionPolicyAllowedCountryList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (allowed-origins :initarg :allowed-origins :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          playback-restriction-policy-allowed-origin-list
                          common-lisp:null)
                         :accessor
                         struct-shape-create-playback-restriction-policy-request-allowed-origins
                         :shape "PlaybackRestrictionPolicyAllowedOriginList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (enable-strict-origin-enforcement :initarg
                         :enable-strict-origin-enforcement :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          playback-restriction-policy-enable-strict-origin-enforcement
                          common-lisp:null)
                         :accessor
                         struct-shape-create-playback-restriction-policy-request-enable-strict-origin-enforcement
                         :shape
                         "PlaybackRestrictionPolicyEnableStrictOriginEnforcement"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or playback-restriction-policy-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-playback-restriction-policy-request-name
                         :shape "PlaybackRestrictionPolicyName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-playback-restriction-policy-request-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-playback-restriction-policy-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-playback-restriction-policy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-playback-restriction-policy-request
                    'make-create-playback-restriction-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-playback-restriction-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-playback-restriction-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allowed-countries))
      (common-lisp:list
       (common-lisp:cons "allowedCountries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allowed-origins))
      (common-lisp:list
       (common-lisp:cons "allowedOrigins"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-strict-origin-enforcement))
      (common-lisp:list
       (common-lisp:cons "enableStrictOriginEnforcement"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-playback-restriction-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-playback-restriction-policy-response
                       common-lisp:nil
                       ((playback-restriction-policy :initarg
                         :playback-restriction-policy :initform common-lisp:nil
                         :type
                         (common-lisp:or playback-restriction-policy
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-playback-restriction-policy-response-playback-restriction-policy
                         :shape "PlaybackRestrictionPolicy" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-playback-restriction-policy-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-playback-restriction-policy-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-playback-restriction-policy-response
                    'make-create-playback-restriction-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-playback-restriction-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-playback-restriction-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'playback-restriction-policy))
      (common-lisp:list
       (common-lisp:cons "playbackRestrictionPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-playback-restriction-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-recording-configuration-request common-lisp:nil
                       ((destination-configuration :initarg
                         :destination-configuration :initform
                         (common-lisp:error
                          ":destinationconfiguration is required")
                         :type
                         (common-lisp:or destination-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-recording-configuration-request-destination-configuration
                         :shape "DestinationConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or recording-configuration-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-recording-configuration-request-name
                         :shape "RecordingConfigurationName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (recording-reconnect-window-seconds :initarg
                         :recording-reconnect-window-seconds :initform
                         common-lisp:nil :type
                         (common-lisp:or recording-reconnect-window-seconds
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-recording-configuration-request-recording-reconnect-window-seconds
                         :shape "RecordingReconnectWindowSeconds" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (rendition-configuration :initarg
                         :rendition-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or rendition-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-recording-configuration-request-rendition-configuration
                         :shape "RenditionConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-recording-configuration-request-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (thumbnail-configuration :initarg
                         :thumbnail-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or thumbnail-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-recording-configuration-request-thumbnail-configuration
                         :shape "ThumbnailConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-recording-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-recording-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-recording-configuration-request
                    'make-create-recording-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-recording-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-recording-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-configuration))
      (common-lisp:list
       (common-lisp:cons "destinationConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recording-reconnect-window-seconds))
      (common-lisp:list
       (common-lisp:cons "recordingReconnectWindowSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'rendition-configuration))
      (common-lisp:list
       (common-lisp:cons "renditionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'thumbnail-configuration))
      (common-lisp:list
       (common-lisp:cons "thumbnailConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-recording-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-recording-configuration-response common-lisp:nil
                       ((recording-configuration :initarg
                         :recording-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or recording-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-recording-configuration-response-recording-configuration
                         :shape "RecordingConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-recording-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-recording-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-recording-configuration-response
                    'make-create-recording-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-recording-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-recording-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recording-configuration))
      (common-lisp:list
       (common-lisp:cons "recordingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-recording-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-stream-key-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channelarn is required") :type
                         (common-lisp:or channel-arn common-lisp:null)
                         :accessor
                         struct-shape-create-stream-key-request-channel-arn
                         :shape "ChannelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-stream-key-request-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-stream-key-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-stream-key-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-stream-key-request
                    'make-create-stream-key-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-stream-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-stream-key-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "channelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-stream-key-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-stream-key-response common-lisp:nil
                       ((stream-key :initarg :stream-key :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-key common-lisp:null) :accessor
                         struct-shape-create-stream-key-response-stream-key
                         :shape "StreamKey" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-stream-key-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-stream-key-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-stream-key-response
                    'make-create-stream-key-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-stream-key-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-stream-key-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-key))
      (common-lisp:list
       (common-lisp:cons "streamKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-stream-key-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-channel-request common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or channel-arn common-lisp:null)
                         :accessor struct-shape-delete-channel-request-arn
                         :shape "ChannelArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-channel-request 'make-delete-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-playback-key-pair-request common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or playback-key-pair-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-playback-key-pair-request-arn
                         :shape "PlaybackKeyPairArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-playback-key-pair-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-playback-key-pair-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-playback-key-pair-request
                    'make-delete-playback-key-pair-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-playback-key-pair-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-playback-key-pair-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-playback-key-pair-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-playback-key-pair-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-playback-key-pair-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-playback-key-pair-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-playback-key-pair-response
                    'make-delete-playback-key-pair-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-playback-key-pair-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-playback-key-pair-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-playback-key-pair-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-playback-restriction-policy-request
                       common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or playback-restriction-policy-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-playback-restriction-policy-request-arn
                         :shape "PlaybackRestrictionPolicyArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-playback-restriction-policy-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-playback-restriction-policy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-playback-restriction-policy-request
                    'make-delete-playback-restriction-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-playback-restriction-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-playback-restriction-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-playback-restriction-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-recording-configuration-request common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or recording-configuration-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-recording-configuration-request-arn
                         :shape "RecordingConfigurationArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-recording-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-recording-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-recording-configuration-request
                    'make-delete-recording-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-recording-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-recording-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-recording-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-stream-key-request common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or stream-key-arn common-lisp:null)
                         :accessor struct-shape-delete-stream-key-request-arn
                         :shape "StreamKeyArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-stream-key-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-stream-key-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-stream-key-request
                    'make-delete-stream-key-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-stream-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-stream-key-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-stream-key-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass destination-configuration common-lisp:nil
                       ((s3 :initarg :s3 :initform common-lisp:nil :type
                         (common-lisp:or s3destination-configuration
                                         common-lisp:null)
                         :accessor struct-shape-destination-configuration-s3
                         :shape "S3DestinationConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-destination-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'destination-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'destination-configuration
                    'make-destination-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          destination-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          destination-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3))
      (common-lisp:list
       (common-lisp:cons "s3"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          destination-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-channel-request common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or channel-arn common-lisp:null)
                         :accessor struct-shape-get-channel-request-arn :shape
                         "ChannelArn" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-channel-request 'make-get-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-channel-response common-lisp:nil
                       ((channel :initarg :channel :initform common-lisp:nil
                         :type (common-lisp:or channel common-lisp:null)
                         :accessor struct-shape-get-channel-response-channel
                         :shape "Channel" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-channel-response 'make-get-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel))
      (common-lisp:list
       (common-lisp:cons "channel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-channel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-playback-key-pair-request common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or playback-key-pair-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-playback-key-pair-request-arn :shape
                         "PlaybackKeyPairArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-playback-key-pair-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-playback-key-pair-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-playback-key-pair-request
                    'make-get-playback-key-pair-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-playback-key-pair-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-playback-key-pair-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-playback-key-pair-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-playback-key-pair-response common-lisp:nil
                       ((key-pair :initarg :key-pair :initform common-lisp:nil
                         :type
                         (common-lisp:or playback-key-pair common-lisp:null)
                         :accessor
                         struct-shape-get-playback-key-pair-response-key-pair
                         :shape "PlaybackKeyPair" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-playback-key-pair-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-playback-key-pair-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-playback-key-pair-response
                    'make-get-playback-key-pair-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-playback-key-pair-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-playback-key-pair-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-pair))
      (common-lisp:list
       (common-lisp:cons "keyPair"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-playback-key-pair-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-playback-restriction-policy-request common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or playback-restriction-policy-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-playback-restriction-policy-request-arn
                         :shape "PlaybackRestrictionPolicyArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-playback-restriction-policy-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-playback-restriction-policy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-playback-restriction-policy-request
                    'make-get-playback-restriction-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-playback-restriction-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-playback-restriction-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-playback-restriction-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-playback-restriction-policy-response common-lisp:nil
                       ((playback-restriction-policy :initarg
                         :playback-restriction-policy :initform common-lisp:nil
                         :type
                         (common-lisp:or playback-restriction-policy
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-playback-restriction-policy-response-playback-restriction-policy
                         :shape "PlaybackRestrictionPolicy" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-playback-restriction-policy-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-playback-restriction-policy-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-playback-restriction-policy-response
                    'make-get-playback-restriction-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-playback-restriction-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-playback-restriction-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'playback-restriction-policy))
      (common-lisp:list
       (common-lisp:cons "playbackRestrictionPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-playback-restriction-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-recording-configuration-request common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or recording-configuration-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-recording-configuration-request-arn
                         :shape "RecordingConfigurationArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-recording-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-recording-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-recording-configuration-request
                    'make-get-recording-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-recording-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-recording-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-recording-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-recording-configuration-response common-lisp:nil
                       ((recording-configuration :initarg
                         :recording-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or recording-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-recording-configuration-response-recording-configuration
                         :shape "RecordingConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-recording-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-recording-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-recording-configuration-response
                    'make-get-recording-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-recording-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-recording-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recording-configuration))
      (common-lisp:list
       (common-lisp:cons "recordingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-recording-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-stream-key-request common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or stream-key-arn common-lisp:null)
                         :accessor struct-shape-get-stream-key-request-arn
                         :shape "StreamKeyArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-stream-key-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-stream-key-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-stream-key-request 'make-get-stream-key-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-stream-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-stream-key-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-stream-key-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-stream-key-response common-lisp:nil
                       ((stream-key :initarg :stream-key :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-key common-lisp:null) :accessor
                         struct-shape-get-stream-key-response-stream-key :shape
                         "StreamKey" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-stream-key-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-stream-key-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-stream-key-response 'make-get-stream-key-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-stream-key-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-stream-key-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-key))
      (common-lisp:list
       (common-lisp:cons "streamKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-stream-key-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-stream-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channelarn is required") :type
                         (common-lisp:or channel-arn common-lisp:null)
                         :accessor struct-shape-get-stream-request-channel-arn
                         :shape "ChannelArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-stream-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-stream-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-stream-request 'make-get-stream-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-stream-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-stream-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "channelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-stream-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-stream-response common-lisp:nil
                       ((stream :initarg :stream :initform common-lisp:nil
                         :type (common-lisp:or stream common-lisp:null)
                         :accessor struct-shape-get-stream-response-stream
                         :shape "Stream" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-stream-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-stream-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-stream-response 'make-get-stream-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-stream-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-stream-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream))
      (common-lisp:list
       (common-lisp:cons "stream"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-stream-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-stream-session-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channelarn is required") :type
                         (common-lisp:or channel-arn common-lisp:null)
                         :accessor
                         struct-shape-get-stream-session-request-channel-arn
                         :shape "ChannelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (stream-id :initarg :stream-id :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-id common-lisp:null) :accessor
                         struct-shape-get-stream-session-request-stream-id
                         :shape "StreamId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-stream-session-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-stream-session-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-stream-session-request
                    'make-get-stream-session-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-stream-session-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-stream-session-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "channelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-id))
      (common-lisp:list
       (common-lisp:cons "streamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-stream-session-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-stream-session-response common-lisp:nil
                       ((stream-session :initarg :stream-session :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-session common-lisp:null)
                         :accessor
                         struct-shape-get-stream-session-response-stream-session
                         :shape "StreamSession" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-stream-session-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-stream-session-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-stream-session-response
                    'make-get-stream-session-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-stream-session-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-stream-session-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-session))
      (common-lisp:list
       (common-lisp:cons "streamSession"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-stream-session-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass import-playback-key-pair-request common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or playback-key-pair-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-import-playback-key-pair-request-name
                         :shape "PlaybackKeyPairName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (public-key-material :initarg :public-key-material
                         :initform
                         (common-lisp:error ":publickeymaterial is required")
                         :type
                         (common-lisp:or playback-public-key-material
                                         common-lisp:null)
                         :accessor
                         struct-shape-import-playback-key-pair-request-public-key-material
                         :shape "PlaybackPublicKeyMaterial" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-import-playback-key-pair-request-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-import-playback-key-pair-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'import-playback-key-pair-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'import-playback-key-pair-request
                    'make-import-playback-key-pair-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-playback-key-pair-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-playback-key-pair-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'public-key-material))
      (common-lisp:list
       (common-lisp:cons "publicKeyMaterial"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-playback-key-pair-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass import-playback-key-pair-response common-lisp:nil
                       ((key-pair :initarg :key-pair :initform common-lisp:nil
                         :type
                         (common-lisp:or playback-key-pair common-lisp:null)
                         :accessor
                         struct-shape-import-playback-key-pair-response-key-pair
                         :shape "PlaybackKeyPair" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-import-playback-key-pair-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'import-playback-key-pair-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'import-playback-key-pair-response
                    'make-import-playback-key-pair-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-playback-key-pair-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-playback-key-pair-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-pair))
      (common-lisp:list
       (common-lisp:cons "keyPair"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-playback-key-pair-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass ingest-configuration common-lisp:nil
                       ((audio :initarg :audio :initform common-lisp:nil :type
                         (common-lisp:or audio-configuration common-lisp:null)
                         :accessor struct-shape-ingest-configuration-audio
                         :shape "AudioConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (video :initarg :video :initform common-lisp:nil :type
                         (common-lisp:or video-configuration common-lisp:null)
                         :accessor struct-shape-ingest-configuration-video
                         :shape "VideoConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ingest-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'ingest-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'ingest-configuration 'make-ingest-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input ingest-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input ingest-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audio))
      (common-lisp:list
       (common-lisp:cons "audio"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'video))
      (common-lisp:list
       (common-lisp:cons "video"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input ingest-configuration))
   common-lisp:nil))
(common-lisp:deftype ingest-endpoint () 'common-lisp:string)
(common-lisp:deftype insecure-ingest () 'common-lisp:boolean)
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (ivs-error)
     ((exception-message :initarg :exception-message :initform common-lisp:nil
       :reader internal-server-exception-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-exception-message)))
(common-lisp:deftype is-authorized () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defclass list-channels-request common-lisp:nil
                       ((filter-by-name :initarg :filter-by-name :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-name common-lisp:null)
                         :accessor
                         struct-shape-list-channels-request-filter-by-name
                         :shape "ChannelName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filter-by-playback-restriction-policy-arn :initarg
                         :filter-by-playback-restriction-policy-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          channel-playback-restriction-policy-arn
                          common-lisp:null)
                         :accessor
                         struct-shape-list-channels-request-filter-by-playback-restriction-policy-arn
                         :shape "ChannelPlaybackRestrictionPolicyArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (filter-by-recording-configuration-arn :initarg
                         :filter-by-recording-configuration-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-recording-configuration-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-channels-request-filter-by-recording-configuration-arn
                         :shape "ChannelRecordingConfigurationArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-channel-results common-lisp:null)
                         :accessor
                         struct-shape-list-channels-request-max-results :shape
                         "MaxChannelResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor
                         struct-shape-list-channels-request-next-token :shape
                         "PaginationToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channels-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-channels-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channels-request 'make-list-channels-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter-by-name))
      (common-lisp:list
       (common-lisp:cons "filterByName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'filter-by-playback-restriction-policy-arn))
      (common-lisp:list
       (common-lisp:cons "filterByPlaybackRestrictionPolicyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'filter-by-recording-configuration-arn))
      (common-lisp:list
       (common-lisp:cons "filterByRecordingConfigurationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channels-response common-lisp:nil
                       ((channels :initarg :channels :initform
                         (common-lisp:error ":channels is required") :type
                         (common-lisp:or channel-list common-lisp:null)
                         :accessor struct-shape-list-channels-response-channels
                         :shape "ChannelList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor
                         struct-shape-list-channels-response-next-token :shape
                         "PaginationToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channels-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-channels-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channels-response 'make-list-channels-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channels))
      (common-lisp:list
       (common-lisp:cons "channels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-playback-key-pairs-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-playback-key-pair-results
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-playback-key-pairs-request-max-results
                         :shape "MaxPlaybackKeyPairResults" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor
                         struct-shape-list-playback-key-pairs-request-next-token
                         :shape "PaginationToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-playback-key-pairs-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-playback-key-pairs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-playback-key-pairs-request
                    'make-list-playback-key-pairs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-playback-key-pairs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-playback-key-pairs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-playback-key-pairs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-playback-key-pairs-response common-lisp:nil
                       ((key-pairs :initarg :key-pairs :initform
                         (common-lisp:error ":keypairs is required") :type
                         (common-lisp:or playback-key-pair-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-playback-key-pairs-response-key-pairs
                         :shape "PlaybackKeyPairList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor
                         struct-shape-list-playback-key-pairs-response-next-token
                         :shape "PaginationToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-playback-key-pairs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-playback-key-pairs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-playback-key-pairs-response
                    'make-list-playback-key-pairs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-playback-key-pairs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-playback-key-pairs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-pairs))
      (common-lisp:list
       (common-lisp:cons "keyPairs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-playback-key-pairs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-playback-restriction-policies-request
                       common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          max-playback-restriction-policy-results
                          common-lisp:null)
                         :accessor
                         struct-shape-list-playback-restriction-policies-request-max-results
                         :shape "MaxPlaybackRestrictionPolicyResults" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor
                         struct-shape-list-playback-restriction-policies-request-next-token
                         :shape "PaginationToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-playback-restriction-policies-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-playback-restriction-policies-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-playback-restriction-policies-request
                    'make-list-playback-restriction-policies-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-playback-restriction-policies-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-playback-restriction-policies-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-playback-restriction-policies-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-playback-restriction-policies-response
                       common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor
                         struct-shape-list-playback-restriction-policies-response-next-token
                         :shape "PaginationToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (playback-restriction-policies :initarg
                         :playback-restriction-policies :initform
                         (common-lisp:error
                          ":playbackrestrictionpolicies is required")
                         :type
                         (common-lisp:or playback-restriction-policy-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-playback-restriction-policies-response-playback-restriction-policies
                         :shape "PlaybackRestrictionPolicyList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-playback-restriction-policies-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-playback-restriction-policies-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-playback-restriction-policies-response
                    'make-list-playback-restriction-policies-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-playback-restriction-policies-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-playback-restriction-policies-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'playback-restriction-policies))
      (common-lisp:list
       (common-lisp:cons "playbackRestrictionPolicies"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-playback-restriction-policies-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-recording-configurations-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-recording-configuration-results
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-recording-configurations-request-max-results
                         :shape "MaxRecordingConfigurationResults" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor
                         struct-shape-list-recording-configurations-request-next-token
                         :shape "PaginationToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-recording-configurations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-recording-configurations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-recording-configurations-request
                    'make-list-recording-configurations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-recording-configurations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-recording-configurations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-recording-configurations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-recording-configurations-response common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor
                         struct-shape-list-recording-configurations-response-next-token
                         :shape "PaginationToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recording-configurations :initarg
                         :recording-configurations :initform
                         (common-lisp:error
                          ":recordingconfigurations is required")
                         :type
                         (common-lisp:or recording-configuration-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-recording-configurations-response-recording-configurations
                         :shape "RecordingConfigurationList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-recording-configurations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-recording-configurations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-recording-configurations-response
                    'make-list-recording-configurations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-recording-configurations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-recording-configurations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recording-configurations))
      (common-lisp:list
       (common-lisp:cons "recordingConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-recording-configurations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-stream-keys-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channelarn is required") :type
                         (common-lisp:or channel-arn common-lisp:null)
                         :accessor
                         struct-shape-list-stream-keys-request-channel-arn
                         :shape "ChannelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-stream-key-results
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-stream-keys-request-max-results
                         :shape "MaxStreamKeyResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor
                         struct-shape-list-stream-keys-request-next-token
                         :shape "PaginationToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-stream-keys-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-stream-keys-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-stream-keys-request 'make-list-stream-keys-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-stream-keys-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-stream-keys-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "channelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-stream-keys-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-stream-keys-response common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor
                         struct-shape-list-stream-keys-response-next-token
                         :shape "PaginationToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (stream-keys :initarg :stream-keys :initform
                         (common-lisp:error ":streamkeys is required") :type
                         (common-lisp:or stream-key-list common-lisp:null)
                         :accessor
                         struct-shape-list-stream-keys-response-stream-keys
                         :shape "StreamKeyList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-stream-keys-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-stream-keys-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-stream-keys-response
                    'make-list-stream-keys-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-stream-keys-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-stream-keys-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-keys))
      (common-lisp:list
       (common-lisp:cons "streamKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-stream-keys-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-stream-sessions-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channelarn is required") :type
                         (common-lisp:or channel-arn common-lisp:null)
                         :accessor
                         struct-shape-list-stream-sessions-request-channel-arn
                         :shape "ChannelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-stream-results common-lisp:null)
                         :accessor
                         struct-shape-list-stream-sessions-request-max-results
                         :shape "MaxStreamResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor
                         struct-shape-list-stream-sessions-request-next-token
                         :shape "PaginationToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-stream-sessions-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-stream-sessions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-stream-sessions-request
                    'make-list-stream-sessions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-stream-sessions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-stream-sessions-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "channelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-stream-sessions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-stream-sessions-response common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor
                         struct-shape-list-stream-sessions-response-next-token
                         :shape "PaginationToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (stream-sessions :initarg :stream-sessions :initform
                         (common-lisp:error ":streamsessions is required")
                         :type
                         (common-lisp:or stream-session-list common-lisp:null)
                         :accessor
                         struct-shape-list-stream-sessions-response-stream-sessions
                         :shape "StreamSessionList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-stream-sessions-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-stream-sessions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-stream-sessions-response
                    'make-list-stream-sessions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-stream-sessions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-stream-sessions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-sessions))
      (common-lisp:list
       (common-lisp:cons "streamSessions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-stream-sessions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-streams-request common-lisp:nil
                       ((filter-by :initarg :filter-by :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-filters common-lisp:null)
                         :accessor struct-shape-list-streams-request-filter-by
                         :shape "StreamFilters" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-stream-results common-lisp:null)
                         :accessor
                         struct-shape-list-streams-request-max-results :shape
                         "MaxStreamResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor struct-shape-list-streams-request-next-token
                         :shape "PaginationToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-streams-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-streams-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-streams-request 'make-list-streams-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-streams-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-streams-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter-by))
      (common-lisp:list
       (common-lisp:cons "filterBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-streams-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-streams-response common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor
                         struct-shape-list-streams-response-next-token :shape
                         "PaginationToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (streams :initarg :streams :initform
                         (common-lisp:error ":streams is required") :type
                         (common-lisp:or stream-list common-lisp:null)
                         :accessor struct-shape-list-streams-response-streams
                         :shape "StreamList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-streams-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-streams-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-streams-response 'make-list-streams-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-streams-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-streams-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'streams))
      (common-lisp:list
       (common-lisp:cons "streams"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-streams-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-list-tags-for-resource-request-resource-arn
                         :shape "ResourceArn" :location "uri" :location-name
                         "resourceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-response-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:deftype max-channel-results () 'common-lisp:integer)
(common-lisp:deftype max-playback-key-pair-results () 'common-lisp:integer)
(common-lisp:deftype max-playback-restriction-policy-results ()
  'common-lisp:integer)
(common-lisp:deftype max-recording-configuration-results ()
  'common-lisp:integer)
(common-lisp:deftype max-stream-key-results () 'common-lisp:integer)
(common-lisp:deftype max-stream-results () 'common-lisp:integer)
(common-lisp:deftype pagination-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition pending-verification
     (ivs-error)
     ((exception-message :initarg :exception-message :initform common-lisp:nil
       :reader pending-verification-exception-message)))
 (common-lisp:export
  (common-lisp:list 'pending-verification
                    'pending-verification-exception-message)))
(common-lisp:progn
 (common-lisp:defclass playback-key-pair common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or playback-key-pair-arn
                                         common-lisp:null)
                         :accessor struct-shape-playback-key-pair-arn :shape
                         "PlaybackKeyPairArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (fingerprint :initarg :fingerprint :initform
                         common-lisp:nil :type
                         (common-lisp:or playback-key-pair-fingerprint
                                         common-lisp:null)
                         :accessor struct-shape-playback-key-pair-fingerprint
                         :shape "PlaybackKeyPairFingerprint" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or playback-key-pair-name
                                         common-lisp:null)
                         :accessor struct-shape-playback-key-pair-name :shape
                         "PlaybackKeyPairName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-playback-key-pair-tags :shape "Tags"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-playback-key-pair
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'playback-key-pair
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'playback-key-pair 'make-playback-key-pair))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input playback-key-pair))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input playback-key-pair))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fingerprint))
      (common-lisp:list
       (common-lisp:cons "fingerprint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input playback-key-pair))
   common-lisp:nil))
(common-lisp:deftype playback-key-pair-arn () 'common-lisp:string)
(common-lisp:deftype playback-key-pair-fingerprint () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype playback-key-pair-list ()
   '(trivial-types:proper-list playback-key-pair-summary))
 (common-lisp:defun make-playback-key-pair-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            playback-key-pair-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype playback-key-pair-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass playback-key-pair-summary common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or playback-key-pair-arn
                                         common-lisp:null)
                         :accessor struct-shape-playback-key-pair-summary-arn
                         :shape "PlaybackKeyPairArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or playback-key-pair-name
                                         common-lisp:null)
                         :accessor struct-shape-playback-key-pair-summary-name
                         :shape "PlaybackKeyPairName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-playback-key-pair-summary-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-playback-key-pair-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'playback-key-pair-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'playback-key-pair-summary
                    'make-playback-key-pair-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          playback-key-pair-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          playback-key-pair-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          playback-key-pair-summary))
   common-lisp:nil))
(common-lisp:deftype playback-public-key-material () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass playback-restriction-policy common-lisp:nil
                       ((allowed-countries :initarg :allowed-countries
                         :initform
                         (common-lisp:error ":allowedcountries is required")
                         :type
                         (common-lisp:or
                          playback-restriction-policy-allowed-country-list
                          common-lisp:null)
                         :accessor
                         struct-shape-playback-restriction-policy-allowed-countries
                         :shape "PlaybackRestrictionPolicyAllowedCountryList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (allowed-origins :initarg :allowed-origins :initform
                         (common-lisp:error ":allowedorigins is required")
                         :type
                         (common-lisp:or
                          playback-restriction-policy-allowed-origin-list
                          common-lisp:null)
                         :accessor
                         struct-shape-playback-restriction-policy-allowed-origins
                         :shape "PlaybackRestrictionPolicyAllowedOriginList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or playback-restriction-policy-arn
                                         common-lisp:null)
                         :accessor struct-shape-playback-restriction-policy-arn
                         :shape "PlaybackRestrictionPolicyArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (enable-strict-origin-enforcement :initarg
                         :enable-strict-origin-enforcement :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          playback-restriction-policy-enable-strict-origin-enforcement
                          common-lisp:null)
                         :accessor
                         struct-shape-playback-restriction-policy-enable-strict-origin-enforcement
                         :shape
                         "PlaybackRestrictionPolicyEnableStrictOriginEnforcement"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or playback-restriction-policy-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-playback-restriction-policy-name :shape
                         "PlaybackRestrictionPolicyName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-playback-restriction-policy-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-playback-restriction-policy
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'playback-restriction-policy
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'playback-restriction-policy
                    'make-playback-restriction-policy))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          playback-restriction-policy))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          playback-restriction-policy))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allowed-countries))
      (common-lisp:list
       (common-lisp:cons "allowedCountries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allowed-origins))
      (common-lisp:list
       (common-lisp:cons "allowedOrigins"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-strict-origin-enforcement))
      (common-lisp:list
       (common-lisp:cons "enableStrictOriginEnforcement"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          playback-restriction-policy))
   common-lisp:nil))
(common-lisp:deftype playback-restriction-policy-allowed-country ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype playback-restriction-policy-allowed-country-list ()
   '(trivial-types:proper-list playback-restriction-policy-allowed-country))
 (common-lisp:defun make-playback-restriction-policy-allowed-country-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            playback-restriction-policy-allowed-country))
   aws-sdk/generator/shape::members))
(common-lisp:deftype playback-restriction-policy-allowed-origin ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype playback-restriction-policy-allowed-origin-list ()
   '(trivial-types:proper-list playback-restriction-policy-allowed-origin))
 (common-lisp:defun make-playback-restriction-policy-allowed-origin-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            playback-restriction-policy-allowed-origin))
   aws-sdk/generator/shape::members))
(common-lisp:deftype playback-restriction-policy-arn () 'common-lisp:string)
(common-lisp:deftype playback-restriction-policy-enable-strict-origin-enforcement
                     ()
  'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:deftype playback-restriction-policy-list ()
   '(trivial-types:proper-list playback-restriction-policy-summary))
 (common-lisp:defun make-playback-restriction-policy-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            playback-restriction-policy-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype playback-restriction-policy-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass playback-restriction-policy-summary common-lisp:nil
                       ((allowed-countries :initarg :allowed-countries
                         :initform
                         (common-lisp:error ":allowedcountries is required")
                         :type
                         (common-lisp:or
                          playback-restriction-policy-allowed-country-list
                          common-lisp:null)
                         :accessor
                         struct-shape-playback-restriction-policy-summary-allowed-countries
                         :shape "PlaybackRestrictionPolicyAllowedCountryList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (allowed-origins :initarg :allowed-origins :initform
                         (common-lisp:error ":allowedorigins is required")
                         :type
                         (common-lisp:or
                          playback-restriction-policy-allowed-origin-list
                          common-lisp:null)
                         :accessor
                         struct-shape-playback-restriction-policy-summary-allowed-origins
                         :shape "PlaybackRestrictionPolicyAllowedOriginList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or playback-restriction-policy-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-playback-restriction-policy-summary-arn
                         :shape "PlaybackRestrictionPolicyArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (enable-strict-origin-enforcement :initarg
                         :enable-strict-origin-enforcement :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          playback-restriction-policy-enable-strict-origin-enforcement
                          common-lisp:null)
                         :accessor
                         struct-shape-playback-restriction-policy-summary-enable-strict-origin-enforcement
                         :shape
                         "PlaybackRestrictionPolicyEnableStrictOriginEnforcement"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or playback-restriction-policy-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-playback-restriction-policy-summary-name
                         :shape "PlaybackRestrictionPolicyName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-playback-restriction-policy-summary-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-playback-restriction-policy-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'playback-restriction-policy-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'playback-restriction-policy-summary
                    'make-playback-restriction-policy-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          playback-restriction-policy-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          playback-restriction-policy-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allowed-countries))
      (common-lisp:list
       (common-lisp:cons "allowedCountries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allowed-origins))
      (common-lisp:list
       (common-lisp:cons "allowedOrigins"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-strict-origin-enforcement))
      (common-lisp:list
       (common-lisp:cons "enableStrictOriginEnforcement"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          playback-restriction-policy-summary))
   common-lisp:nil))
(common-lisp:deftype playback-url () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass put-metadata-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channelarn is required") :type
                         (common-lisp:or channel-arn common-lisp:null)
                         :accessor
                         struct-shape-put-metadata-request-channel-arn :shape
                         "ChannelArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (metadata :initarg :metadata :initform
                         (common-lisp:error ":metadata is required") :type
                         (common-lisp:or stream-metadata common-lisp:null)
                         :accessor struct-shape-put-metadata-request-metadata
                         :shape "StreamMetadata" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-metadata-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'put-metadata-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-metadata-request 'make-put-metadata-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input put-metadata-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input put-metadata-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "channelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input put-metadata-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass recording-configuration common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or recording-configuration-arn
                                         common-lisp:null)
                         :accessor struct-shape-recording-configuration-arn
                         :shape "RecordingConfigurationArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (destination-configuration :initarg
                         :destination-configuration :initform
                         (common-lisp:error
                          ":destinationconfiguration is required")
                         :type
                         (common-lisp:or destination-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-recording-configuration-destination-configuration
                         :shape "DestinationConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or recording-configuration-name
                                         common-lisp:null)
                         :accessor struct-shape-recording-configuration-name
                         :shape "RecordingConfigurationName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (recording-reconnect-window-seconds :initarg
                         :recording-reconnect-window-seconds :initform
                         common-lisp:nil :type
                         (common-lisp:or recording-reconnect-window-seconds
                                         common-lisp:null)
                         :accessor
                         struct-shape-recording-configuration-recording-reconnect-window-seconds
                         :shape "RecordingReconnectWindowSeconds" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (rendition-configuration :initarg
                         :rendition-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or rendition-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-recording-configuration-rendition-configuration
                         :shape "RenditionConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (state :initarg :state :initform
                         (common-lisp:error ":state is required") :type
                         (common-lisp:or recording-configuration-state
                                         common-lisp:null)
                         :accessor struct-shape-recording-configuration-state
                         :shape "RecordingConfigurationState" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-recording-configuration-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (thumbnail-configuration :initarg
                         :thumbnail-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or thumbnail-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-recording-configuration-thumbnail-configuration
                         :shape "ThumbnailConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-recording-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'recording-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'recording-configuration 'make-recording-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          recording-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          recording-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-configuration))
      (common-lisp:list
       (common-lisp:cons "destinationConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recording-reconnect-window-seconds))
      (common-lisp:list
       (common-lisp:cons "recordingReconnectWindowSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'rendition-configuration))
      (common-lisp:list
       (common-lisp:cons "renditionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'thumbnail-configuration))
      (common-lisp:list
       (common-lisp:cons "thumbnailConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          recording-configuration))
   common-lisp:nil))
(common-lisp:deftype recording-configuration-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype recording-configuration-list ()
   '(trivial-types:proper-list recording-configuration-summary))
 (common-lisp:defun make-recording-configuration-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            recording-configuration-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype recording-configuration-name () 'common-lisp:string)
(common-lisp:deftype recording-configuration-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass recording-configuration-summary common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or recording-configuration-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-recording-configuration-summary-arn
                         :shape "RecordingConfigurationArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (destination-configuration :initarg
                         :destination-configuration :initform
                         (common-lisp:error
                          ":destinationconfiguration is required")
                         :type
                         (common-lisp:or destination-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-recording-configuration-summary-destination-configuration
                         :shape "DestinationConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or recording-configuration-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-recording-configuration-summary-name
                         :shape "RecordingConfigurationName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (state :initarg :state :initform
                         (common-lisp:error ":state is required") :type
                         (common-lisp:or recording-configuration-state
                                         common-lisp:null)
                         :accessor
                         struct-shape-recording-configuration-summary-state
                         :shape "RecordingConfigurationState" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-recording-configuration-summary-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-recording-configuration-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'recording-configuration-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'recording-configuration-summary
                    'make-recording-configuration-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          recording-configuration-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          recording-configuration-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-configuration))
      (common-lisp:list
       (common-lisp:cons "destinationConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          recording-configuration-summary))
   common-lisp:nil))
(common-lisp:deftype recording-mode () 'common-lisp:string)
(common-lisp:deftype recording-reconnect-window-seconds () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass rendition-configuration common-lisp:nil
                       ((rendition-selection :initarg :rendition-selection
                         :initform common-lisp:nil :type
                         (common-lisp:or
                          rendition-configuration-rendition-selection
                          common-lisp:null)
                         :accessor
                         struct-shape-rendition-configuration-rendition-selection
                         :shape "RenditionConfigurationRenditionSelection"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (renditions :initarg :renditions :initform
                         common-lisp:nil :type
                         (common-lisp:or rendition-configuration-rendition-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-rendition-configuration-renditions :shape
                         "RenditionConfigurationRenditionList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-rendition-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'rendition-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'rendition-configuration 'make-rendition-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          rendition-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          rendition-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rendition-selection))
      (common-lisp:list
       (common-lisp:cons "renditionSelection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'renditions))
      (common-lisp:list
       (common-lisp:cons "renditions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          rendition-configuration))
   common-lisp:nil))
(common-lisp:deftype rendition-configuration-rendition () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype rendition-configuration-rendition-list ()
   '(trivial-types:proper-list rendition-configuration-rendition))
 (common-lisp:defun make-rendition-configuration-rendition-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            rendition-configuration-rendition))
   aws-sdk/generator/shape::members))
(common-lisp:deftype rendition-configuration-rendition-selection ()
  'common-lisp:string)
(common-lisp:deftype resource-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (ivs-error)
     ((exception-message :initarg :exception-message :initform common-lisp:nil
       :reader resource-not-found-exception-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-exception-message)))
(common-lisp:deftype s3destination-bucket-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass s3destination-configuration common-lisp:nil
                       ((bucket-name :initarg :bucket-name :initform
                         (common-lisp:error ":bucketname is required") :type
                         (common-lisp:or s3destination-bucket-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-s3destination-configuration-bucket-name
                         :shape "S3DestinationBucketName" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-s3destination-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 's3destination-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 's3destination-configuration
                    'make-s3destination-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          s3destination-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          s3destination-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-name))
      (common-lisp:list
       (common-lisp:cons "bucketName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          s3destination-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition service-quota-exceeded-exception
     (ivs-error)
     ((exception-message :initarg :exception-message :initform common-lisp:nil
       :reader service-quota-exceeded-exception-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-quota-exceeded-exception
                    'service-quota-exceeded-exception-exception-message)))
(common-lisp:progn
 (common-lisp:defclass start-viewer-session-revocation-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channelarn is required") :type
                         (common-lisp:or channel-arn common-lisp:null)
                         :accessor
                         struct-shape-start-viewer-session-revocation-request-channel-arn
                         :shape "ChannelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (viewer-id :initarg :viewer-id :initform
                         (common-lisp:error ":viewerid is required") :type
                         (common-lisp:or viewer-id common-lisp:null) :accessor
                         struct-shape-start-viewer-session-revocation-request-viewer-id
                         :shape "ViewerId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (viewer-session-versions-less-than-or-equal-to :initarg
                         :viewer-session-versions-less-than-or-equal-to
                         :initform common-lisp:nil :type
                         (common-lisp:or viewer-session-version
                                         common-lisp:null)
                         :accessor
                         struct-shape-start-viewer-session-revocation-request-viewer-session-versions-less-than-or-equal-to
                         :shape "ViewerSessionVersion" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-viewer-session-revocation-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-viewer-session-revocation-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-viewer-session-revocation-request
                    'make-start-viewer-session-revocation-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-viewer-session-revocation-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-viewer-session-revocation-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "channelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'viewer-id))
      (common-lisp:list
       (common-lisp:cons "viewerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'viewer-session-versions-less-than-or-equal-to))
      (common-lisp:list
       (common-lisp:cons "viewerSessionVersionsLessThanOrEqualTo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-viewer-session-revocation-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-viewer-session-revocation-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-viewer-session-revocation-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-viewer-session-revocation-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-viewer-session-revocation-response
                    'make-start-viewer-session-revocation-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-viewer-session-revocation-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-viewer-session-revocation-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-viewer-session-revocation-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-stream-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channelarn is required") :type
                         (common-lisp:or channel-arn common-lisp:null)
                         :accessor struct-shape-stop-stream-request-channel-arn
                         :shape "ChannelArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stop-stream-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'stop-stream-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stop-stream-request 'make-stop-stream-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stop-stream-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stop-stream-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "channelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stop-stream-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-stream-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stop-stream-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'stop-stream-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stop-stream-response 'make-stop-stream-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stop-stream-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stop-stream-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stop-stream-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stream common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-arn common-lisp:null)
                         :accessor struct-shape-stream-channel-arn :shape
                         "ChannelArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (health :initarg :health :initform common-lisp:nil
                         :type (common-lisp:or stream-health common-lisp:null)
                         :accessor struct-shape-stream-health :shape
                         "StreamHealth" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (playback-url :initarg :playback-url :initform
                         common-lisp:nil :type
                         (common-lisp:or playback-url common-lisp:null)
                         :accessor struct-shape-stream-playback-url :shape
                         "PlaybackURL" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (start-time :initarg :start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-start-time common-lisp:null)
                         :accessor struct-shape-stream-start-time :shape
                         "StreamStartTime" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or stream-state common-lisp:null)
                         :accessor struct-shape-stream-state :shape
                         "StreamState" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (stream-id :initarg :stream-id :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-id common-lisp:null) :accessor
                         struct-shape-stream-stream-id :shape "StreamId"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (viewer-count :initarg :viewer-count :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-viewer-count common-lisp:null)
                         :accessor struct-shape-stream-viewer-count :shape
                         "StreamViewerCount" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stream
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'stream
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'stream 'make-stream))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stream))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stream))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "channelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'health))
      (common-lisp:list
       (common-lisp:cons "health"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'playback-url))
      (common-lisp:list
       (common-lisp:cons "playbackUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "startTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-id))
      (common-lisp:list
       (common-lisp:cons "streamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'viewer-count))
      (common-lisp:list
       (common-lisp:cons "viewerCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stream))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stream-event common-lisp:nil
                       ((event-time :initarg :event-time :initform
                         common-lisp:nil :type
                         (common-lisp:or time common-lisp:null) :accessor
                         struct-shape-stream-event-event-time :shape "Time"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-stream-event-name :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-stream-event-type :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stream-event
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'stream-event
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'stream-event 'make-stream-event))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stream-event))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stream-event))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-time))
      (common-lisp:list
       (common-lisp:cons "eventTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stream-event))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype stream-events ()
   '(trivial-types:proper-list stream-event))
 (common-lisp:defun make-stream-events
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list stream-event))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass stream-filters common-lisp:nil
                       ((health :initarg :health :initform common-lisp:nil
                         :type (common-lisp:or stream-health common-lisp:null)
                         :accessor struct-shape-stream-filters-health :shape
                         "StreamHealth" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stream-filters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'stream-filters
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'stream-filters 'make-stream-filters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stream-filters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stream-filters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'health))
      (common-lisp:list
       (common-lisp:cons "health"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stream-filters))
   common-lisp:nil))
(common-lisp:deftype stream-health () 'common-lisp:string)
(common-lisp:deftype stream-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass stream-key common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or stream-key-arn common-lisp:null)
                         :accessor struct-shape-stream-key-arn :shape
                         "StreamKeyArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-arn common-lisp:null)
                         :accessor struct-shape-stream-key-channel-arn :shape
                         "ChannelArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-stream-key-tags :shape "Tags" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or stream-key-value common-lisp:null)
                         :accessor struct-shape-stream-key-value :shape
                         "StreamKeyValue" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stream-key
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'stream-key
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'stream-key 'make-stream-key))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stream-key))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stream-key))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "channelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stream-key))
   common-lisp:nil))
(common-lisp:deftype stream-key-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype stream-key-arn-list ()
   '(trivial-types:proper-list stream-key-arn))
 (common-lisp:defun make-stream-key-arn-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list stream-key-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype stream-key-list ()
   '(trivial-types:proper-list stream-key-summary))
 (common-lisp:defun make-stream-key-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list stream-key-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass stream-key-summary common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or stream-key-arn common-lisp:null)
                         :accessor struct-shape-stream-key-summary-arn :shape
                         "StreamKeyArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-arn common-lisp:null)
                         :accessor struct-shape-stream-key-summary-channel-arn
                         :shape "ChannelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-stream-key-summary-tags :shape "Tags"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stream-key-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'stream-key-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stream-key-summary 'make-stream-key-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stream-key-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stream-key-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "channelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stream-key-summary))
   common-lisp:nil))
(common-lisp:deftype stream-key-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype stream-keys () '(trivial-types:proper-list stream-key))
 (common-lisp:defun make-stream-keys
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list stream-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype stream-list ()
   '(trivial-types:proper-list stream-summary))
 (common-lisp:defun make-stream-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list stream-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype stream-metadata () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass stream-session common-lisp:nil
                       ((channel :initarg :channel :initform common-lisp:nil
                         :type (common-lisp:or channel common-lisp:null)
                         :accessor struct-shape-stream-session-channel :shape
                         "Channel" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (end-time :initarg :end-time :initform common-lisp:nil
                         :type (common-lisp:or time common-lisp:null) :accessor
                         struct-shape-stream-session-end-time :shape "Time"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (ingest-configuration :initarg :ingest-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or ingest-configuration common-lisp:null)
                         :accessor
                         struct-shape-stream-session-ingest-configuration
                         :shape "IngestConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recording-configuration :initarg
                         :recording-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or recording-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-stream-session-recording-configuration
                         :shape "RecordingConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (start-time :initarg :start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or time common-lisp:null) :accessor
                         struct-shape-stream-session-start-time :shape "Time"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (stream-id :initarg :stream-id :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-id common-lisp:null) :accessor
                         struct-shape-stream-session-stream-id :shape
                         "StreamId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (truncated-events :initarg :truncated-events :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-events common-lisp:null)
                         :accessor struct-shape-stream-session-truncated-events
                         :shape "StreamEvents" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stream-session
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'stream-session
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'stream-session 'make-stream-session))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stream-session))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stream-session))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel))
      (common-lisp:list
       (common-lisp:cons "channel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "endTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ingest-configuration))
      (common-lisp:list
       (common-lisp:cons "ingestConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recording-configuration))
      (common-lisp:list
       (common-lisp:cons "recordingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "startTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-id))
      (common-lisp:list
       (common-lisp:cons "streamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'truncated-events))
      (common-lisp:list
       (common-lisp:cons "truncatedEvents"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stream-session))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype stream-session-list ()
   '(trivial-types:proper-list stream-session-summary))
 (common-lisp:defun make-stream-session-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list stream-session-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass stream-session-summary common-lisp:nil
                       ((end-time :initarg :end-time :initform common-lisp:nil
                         :type (common-lisp:or time common-lisp:null) :accessor
                         struct-shape-stream-session-summary-end-time :shape
                         "Time" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (has-error-event :initarg :has-error-event :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-stream-session-summary-has-error-event
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (start-time :initarg :start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or time common-lisp:null) :accessor
                         struct-shape-stream-session-summary-start-time :shape
                         "Time" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (stream-id :initarg :stream-id :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-id common-lisp:null) :accessor
                         struct-shape-stream-session-summary-stream-id :shape
                         "StreamId" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stream-session-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'stream-session-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stream-session-summary 'make-stream-session-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stream-session-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stream-session-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "endTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'has-error-event))
      (common-lisp:list
       (common-lisp:cons "hasErrorEvent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "startTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-id))
      (common-lisp:list
       (common-lisp:cons "streamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stream-session-summary))
   common-lisp:nil))
(common-lisp:deftype stream-start-time () 'common-lisp:string)
(common-lisp:deftype stream-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass stream-summary common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-arn common-lisp:null)
                         :accessor struct-shape-stream-summary-channel-arn
                         :shape "ChannelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (health :initarg :health :initform common-lisp:nil
                         :type (common-lisp:or stream-health common-lisp:null)
                         :accessor struct-shape-stream-summary-health :shape
                         "StreamHealth" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (start-time :initarg :start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-start-time common-lisp:null)
                         :accessor struct-shape-stream-summary-start-time
                         :shape "StreamStartTime" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or stream-state common-lisp:null)
                         :accessor struct-shape-stream-summary-state :shape
                         "StreamState" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (stream-id :initarg :stream-id :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-id common-lisp:null) :accessor
                         struct-shape-stream-summary-stream-id :shape
                         "StreamId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (viewer-count :initarg :viewer-count :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-viewer-count common-lisp:null)
                         :accessor struct-shape-stream-summary-viewer-count
                         :shape "StreamViewerCount" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stream-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'stream-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'stream-summary 'make-stream-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stream-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stream-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "channelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'health))
      (common-lisp:list
       (common-lisp:cons "health"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "startTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-id))
      (common-lisp:list
       (common-lisp:cons "streamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'viewer-count))
      (common-lisp:list
       (common-lisp:cons "viewerCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stream-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition stream-unavailable
     (ivs-error)
     ((exception-message :initarg :exception-message :initform common-lisp:nil
       :reader stream-unavailable-exception-message)))
 (common-lisp:export
  (common-lisp:list 'stream-unavailable 'stream-unavailable-exception-message)))
(common-lisp:deftype stream-viewer-count () 'common-lisp:integer)
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun make-tag-key-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-tag-resource-request-resource-arn :shape
                         "ResourceArn" :location "uri" :location-name
                         "resourceArn")
                        (tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-tag-resource-request-tags :shape "Tags"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tags () 'common-lisp:hash-table)
 (common-lisp:defun make-tags (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype target-interval-seconds () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (ivs-error)
     ((exception-message :initarg :exception-message :initform common-lisp:nil
       :reader throttling-exception-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception
                    'throttling-exception-exception-message)))
(common-lisp:progn
 (common-lisp:defclass thumbnail-configuration common-lisp:nil
                       ((recording-mode :initarg :recording-mode :initform
                         common-lisp:nil :type
                         (common-lisp:or recording-mode common-lisp:null)
                         :accessor
                         struct-shape-thumbnail-configuration-recording-mode
                         :shape "RecordingMode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resolution :initarg :resolution :initform
                         common-lisp:nil :type
                         (common-lisp:or thumbnail-configuration-resolution
                                         common-lisp:null)
                         :accessor
                         struct-shape-thumbnail-configuration-resolution :shape
                         "ThumbnailConfigurationResolution" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (storage :initarg :storage :initform common-lisp:nil
                         :type
                         (common-lisp:or thumbnail-configuration-storage-list
                                         common-lisp:null)
                         :accessor struct-shape-thumbnail-configuration-storage
                         :shape "ThumbnailConfigurationStorageList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (target-interval-seconds :initarg
                         :target-interval-seconds :initform common-lisp:nil
                         :type
                         (common-lisp:or target-interval-seconds
                                         common-lisp:null)
                         :accessor
                         struct-shape-thumbnail-configuration-target-interval-seconds
                         :shape "TargetIntervalSeconds" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-thumbnail-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'thumbnail-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'thumbnail-configuration 'make-thumbnail-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          thumbnail-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          thumbnail-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recording-mode))
      (common-lisp:list
       (common-lisp:cons "recordingMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resolution))
      (common-lisp:list
       (common-lisp:cons "resolution"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage))
      (common-lisp:list
       (common-lisp:cons "storage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'target-interval-seconds))
      (common-lisp:list
       (common-lisp:cons "targetIntervalSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          thumbnail-configuration))
   common-lisp:nil))
(common-lisp:deftype thumbnail-configuration-resolution () 'common-lisp:string)
(common-lisp:deftype thumbnail-configuration-storage () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype thumbnail-configuration-storage-list ()
   '(trivial-types:proper-list thumbnail-configuration-storage))
 (common-lisp:defun make-thumbnail-configuration-storage-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            thumbnail-configuration-storage))
   aws-sdk/generator/shape::members))
(common-lisp:deftype time () 'common-lisp:string)
(common-lisp:deftype transcode-preset () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-untag-resource-request-resource-arn
                         :shape "ResourceArn" :location "uri" :location-name
                         "resourceArn")
                        (tag-keys :initarg :tag-keys :initform
                         (common-lisp:error ":tagkeys is required") :type
                         (common-lisp:or tag-key-list common-lisp:null)
                         :accessor struct-shape-untag-resource-request-tag-keys
                         :shape "TagKeyList" :location "querystring"
                         :location-name "tagKeys"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-channel-request common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or channel-arn common-lisp:null)
                         :accessor struct-shape-update-channel-request-arn
                         :shape "ChannelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (authorized :initarg :authorized :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-update-channel-request-authorized :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (insecure-ingest :initarg :insecure-ingest :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-update-channel-request-insecure-ingest
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (latency-mode :initarg :latency-mode :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-latency-mode common-lisp:null)
                         :accessor
                         struct-shape-update-channel-request-latency-mode
                         :shape "ChannelLatencyMode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or channel-name common-lisp:null)
                         :accessor struct-shape-update-channel-request-name
                         :shape "ChannelName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (playback-restriction-policy-arn :initarg
                         :playback-restriction-policy-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          channel-playback-restriction-policy-arn
                          common-lisp:null)
                         :accessor
                         struct-shape-update-channel-request-playback-restriction-policy-arn
                         :shape "ChannelPlaybackRestrictionPolicyArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (preset :initarg :preset :initform common-lisp:nil
                         :type
                         (common-lisp:or transcode-preset common-lisp:null)
                         :accessor struct-shape-update-channel-request-preset
                         :shape "TranscodePreset" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recording-configuration-arn :initarg
                         :recording-configuration-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or channel-recording-configuration-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-channel-request-recording-configuration-arn
                         :shape "ChannelRecordingConfigurationArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or channel-type common-lisp:null)
                         :accessor struct-shape-update-channel-request-type
                         :shape "ChannelType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-channel-request 'make-update-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorized))
      (common-lisp:list
       (common-lisp:cons "authorized"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'insecure-ingest))
      (common-lisp:list
       (common-lisp:cons "insecureIngest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latency-mode))
      (common-lisp:list
       (common-lisp:cons "latencyMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'playback-restriction-policy-arn))
      (common-lisp:list
       (common-lisp:cons "playbackRestrictionPolicyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'preset))
      (common-lisp:list
       (common-lisp:cons "preset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recording-configuration-arn))
      (common-lisp:list
       (common-lisp:cons "recordingConfigurationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-channel-response common-lisp:nil
                       ((channel :initarg :channel :initform common-lisp:nil
                         :type (common-lisp:or channel common-lisp:null)
                         :accessor struct-shape-update-channel-response-channel
                         :shape "Channel" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-channel-response 'make-update-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel))
      (common-lisp:list
       (common-lisp:cons "channel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-playback-restriction-policy-request
                       common-lisp:nil
                       ((allowed-countries :initarg :allowed-countries
                         :initform common-lisp:nil :type
                         (common-lisp:or
                          playback-restriction-policy-allowed-country-list
                          common-lisp:null)
                         :accessor
                         struct-shape-update-playback-restriction-policy-request-allowed-countries
                         :shape "PlaybackRestrictionPolicyAllowedCountryList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (allowed-origins :initarg :allowed-origins :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          playback-restriction-policy-allowed-origin-list
                          common-lisp:null)
                         :accessor
                         struct-shape-update-playback-restriction-policy-request-allowed-origins
                         :shape "PlaybackRestrictionPolicyAllowedOriginList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or playback-restriction-policy-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-playback-restriction-policy-request-arn
                         :shape "PlaybackRestrictionPolicyArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (enable-strict-origin-enforcement :initarg
                         :enable-strict-origin-enforcement :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          playback-restriction-policy-enable-strict-origin-enforcement
                          common-lisp:null)
                         :accessor
                         struct-shape-update-playback-restriction-policy-request-enable-strict-origin-enforcement
                         :shape
                         "PlaybackRestrictionPolicyEnableStrictOriginEnforcement"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or playback-restriction-policy-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-playback-restriction-policy-request-name
                         :shape "PlaybackRestrictionPolicyName" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-playback-restriction-policy-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-playback-restriction-policy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-playback-restriction-policy-request
                    'make-update-playback-restriction-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-playback-restriction-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-playback-restriction-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allowed-countries))
      (common-lisp:list
       (common-lisp:cons "allowedCountries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allowed-origins))
      (common-lisp:list
       (common-lisp:cons "allowedOrigins"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-strict-origin-enforcement))
      (common-lisp:list
       (common-lisp:cons "enableStrictOriginEnforcement"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-playback-restriction-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-playback-restriction-policy-response
                       common-lisp:nil
                       ((playback-restriction-policy :initarg
                         :playback-restriction-policy :initform common-lisp:nil
                         :type
                         (common-lisp:or playback-restriction-policy
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-playback-restriction-policy-response-playback-restriction-policy
                         :shape "PlaybackRestrictionPolicy" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-playback-restriction-policy-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-playback-restriction-policy-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-playback-restriction-policy-response
                    'make-update-playback-restriction-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-playback-restriction-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-playback-restriction-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'playback-restriction-policy))
      (common-lisp:list
       (common-lisp:cons "playbackRestrictionPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-playback-restriction-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (ivs-error)
     ((exception-message :initarg :exception-message :initform common-lisp:nil
       :reader validation-exception-exception-message)))
 (common-lisp:export
  (common-lisp:list 'validation-exception
                    'validation-exception-exception-message)))
(common-lisp:progn
 (common-lisp:defclass video-configuration common-lisp:nil
                       ((avc-level :initarg :avc-level :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-video-configuration-avc-level :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (avc-profile :initarg :avc-profile :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-video-configuration-avc-profile :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (codec :initarg :codec :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-video-configuration-codec :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (encoder :initarg :encoder :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-video-configuration-encoder
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (target-bitrate :initarg :target-bitrate :initform
                         common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-video-configuration-target-bitrate :shape
                         "Integer" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (target-framerate :initarg :target-framerate :initform
                         common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-video-configuration-target-framerate
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (video-height :initarg :video-height :initform
                         common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-video-configuration-video-height :shape
                         "Integer" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (video-width :initarg :video-width :initform
                         common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-video-configuration-video-width :shape
                         "Integer" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-video-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'video-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'video-configuration 'make-video-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input video-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input video-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'avc-level))
      (common-lisp:list
       (common-lisp:cons "avcLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'avc-profile))
      (common-lisp:list
       (common-lisp:cons "avcProfile"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'codec))
      (common-lisp:list
       (common-lisp:cons "codec"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encoder))
      (common-lisp:list
       (common-lisp:cons "encoder"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-bitrate))
      (common-lisp:list
       (common-lisp:cons "targetBitrate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-framerate))
      (common-lisp:list
       (common-lisp:cons "targetFramerate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'video-height))
      (common-lisp:list
       (common-lisp:cons "videoHeight"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'video-width))
      (common-lisp:list
       (common-lisp:cons "videoWidth"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input video-configuration))
   common-lisp:nil))
(common-lisp:deftype viewer-id () 'common-lisp:string)
(common-lisp:deftype viewer-session-version () 'common-lisp:integer)
(common-lisp:deftype |errorCode| () 'common-lisp:string)
(common-lisp:deftype |errorMessage| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun batch-get-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arns)
   (common-lisp:declare (common-lisp:ignorable arns))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-get-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/BatchGetChannel"
                                                        "BatchGetChannel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'batch-get-channel))
(common-lisp:progn
 (common-lisp:defun batch-get-stream-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arns)
   (common-lisp:declare (common-lisp:ignorable arns))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-get-stream-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/BatchGetStreamKey"
                                                        "BatchGetStreamKey"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'batch-get-stream-key))
(common-lisp:progn
 (common-lisp:defun batch-start-viewer-session-revocation
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key viewer-sessions)
   (common-lisp:declare (common-lisp:ignorable viewer-sessions))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-batch-start-viewer-session-revocation-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/BatchStartViewerSessionRevocation"
                                                        "BatchStartViewerSessionRevocation"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'batch-start-viewer-session-revocation))
(common-lisp:progn
 (common-lisp:defun create-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authorized insecure-ingest latency-mode
                     name playback-restriction-policy-arn preset
                     recording-configuration-arn tags type)
   (common-lisp:declare
    (common-lisp:ignorable authorized insecure-ingest latency-mode name
     playback-restriction-policy-arn preset recording-configuration-arn tags
     type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/CreateChannel"
                                                        "CreateChannel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-channel))
(common-lisp:progn
 (common-lisp:defun create-playback-restriction-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key allowed-countries allowed-origins
                     enable-strict-origin-enforcement name tags)
   (common-lisp:declare
    (common-lisp:ignorable allowed-countries allowed-origins
     enable-strict-origin-enforcement name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-playback-restriction-policy-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/CreatePlaybackRestrictionPolicy"
                                                        "CreatePlaybackRestrictionPolicy"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-playback-restriction-policy))
(common-lisp:progn
 (common-lisp:defun create-recording-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key destination-configuration name
                     recording-reconnect-window-seconds rendition-configuration
                     tags thumbnail-configuration)
   (common-lisp:declare
    (common-lisp:ignorable destination-configuration name
     recording-reconnect-window-seconds rendition-configuration tags
     thumbnail-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-recording-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/CreateRecordingConfiguration"
                                                        "CreateRecordingConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-recording-configuration))
(common-lisp:progn
 (common-lisp:defun create-stream-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn tags)
   (common-lisp:declare (common-lisp:ignorable channel-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-stream-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/CreateStreamKey"
                                                        "CreateStreamKey"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-stream-key))
(common-lisp:progn
 (common-lisp:defun delete-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/DeleteChannel"
                                                        "DeleteChannel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-channel))
(common-lisp:progn
 (common-lisp:defun delete-playback-key-pair
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-playback-key-pair-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/DeletePlaybackKeyPair"
                                                        "DeletePlaybackKeyPair"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-playback-key-pair))
(common-lisp:progn
 (common-lisp:defun delete-playback-restriction-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-playback-restriction-policy-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/DeletePlaybackRestrictionPolicy"
                                                        "DeletePlaybackRestrictionPolicy"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-playback-restriction-policy))
(common-lisp:progn
 (common-lisp:defun delete-recording-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-recording-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/DeleteRecordingConfiguration"
                                                        "DeleteRecordingConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-recording-configuration))
(common-lisp:progn
 (common-lisp:defun delete-stream-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-stream-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/DeleteStreamKey"
                                                        "DeleteStreamKey"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-stream-key))
(common-lisp:progn
 (common-lisp:defun get-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/GetChannel"
                                                        "GetChannel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-channel))
(common-lisp:progn
 (common-lisp:defun get-playback-key-pair
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-playback-key-pair-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/GetPlaybackKeyPair"
                                                        "GetPlaybackKeyPair"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-playback-key-pair))
(common-lisp:progn
 (common-lisp:defun get-playback-restriction-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-playback-restriction-policy-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/GetPlaybackRestrictionPolicy"
                                                        "GetPlaybackRestrictionPolicy"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-playback-restriction-policy))
(common-lisp:progn
 (common-lisp:defun get-recording-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-recording-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/GetRecordingConfiguration"
                                                        "GetRecordingConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-recording-configuration))
(common-lisp:progn
 (common-lisp:defun get-stream
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn)
   (common-lisp:declare (common-lisp:ignorable channel-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-stream-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/GetStream"
                                                        "GetStream"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-stream))
(common-lisp:progn
 (common-lisp:defun get-stream-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-stream-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/GetStreamKey"
                                                        "GetStreamKey"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-stream-key))
(common-lisp:progn
 (common-lisp:defun get-stream-session
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn stream-id)
   (common-lisp:declare (common-lisp:ignorable channel-arn stream-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-stream-session-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/GetStreamSession"
                                                        "GetStreamSession"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-stream-session))
(common-lisp:progn
 (common-lisp:defun import-playback-key-pair
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name public-key-material tags)
   (common-lisp:declare (common-lisp:ignorable name public-key-material tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-import-playback-key-pair-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/ImportPlaybackKeyPair"
                                                        "ImportPlaybackKeyPair"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'import-playback-key-pair))
(common-lisp:progn
 (common-lisp:defun list-channels
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter-by-name
                     filter-by-playback-restriction-policy-arn
                     filter-by-recording-configuration-arn max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable filter-by-name
     filter-by-playback-restriction-policy-arn
     filter-by-recording-configuration-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-channels-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/ListChannels"
                                                        "ListChannels"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-channels))
(common-lisp:progn
 (common-lisp:defun list-playback-key-pairs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-playback-key-pairs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/ListPlaybackKeyPairs"
                                                        "ListPlaybackKeyPairs"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-playback-key-pairs))
(common-lisp:progn
 (common-lisp:defun list-playback-restriction-policies
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-playback-restriction-policies-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/ListPlaybackRestrictionPolicies"
                                                        "ListPlaybackRestrictionPolicies"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-playback-restriction-policies))
(common-lisp:progn
 (common-lisp:defun list-recording-configurations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-recording-configurations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/ListRecordingConfigurations"
                                                        "ListRecordingConfigurations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-recording-configurations))
(common-lisp:progn
 (common-lisp:defun list-stream-keys
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-stream-keys-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/ListStreamKeys"
                                                        "ListStreamKeys"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-stream-keys))
(common-lisp:progn
 (common-lisp:defun list-stream-sessions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-stream-sessions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/ListStreamSessions"
                                                        "ListStreamSessions"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-stream-sessions))
(common-lisp:progn
 (common-lisp:defun list-streams
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter-by max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable filter-by max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-streams-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/ListStreams"
                                                        "ListStreams"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-streams))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun put-metadata
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn metadata)
   (common-lisp:declare (common-lisp:ignorable channel-arn metadata))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-metadata-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/PutMetadata"
                                                        "PutMetadata"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-metadata))
(common-lisp:progn
 (common-lisp:defun start-viewer-session-revocation
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn viewer-id
                     viewer-session-versions-less-than-or-equal-to)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn viewer-id
     viewer-session-versions-less-than-or-equal-to))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-viewer-session-revocation-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/StartViewerSessionRevocation"
                                                        "StartViewerSessionRevocation"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'start-viewer-session-revocation))
(common-lisp:progn
 (common-lisp:defun stop-stream
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn)
   (common-lisp:declare (common-lisp:ignorable channel-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-stream-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/StopStream"
                                                        "StopStream"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'stop-stream))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "TagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn authorized insecure-ingest
                     latency-mode name playback-restriction-policy-arn preset
                     recording-configuration-arn type)
   (common-lisp:declare
    (common-lisp:ignorable arn authorized insecure-ingest latency-mode name
     playback-restriction-policy-arn preset recording-configuration-arn type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/UpdateChannel"
                                                        "UpdateChannel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-channel))
(common-lisp:progn
 (common-lisp:defun update-playback-restriction-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key allowed-countries allowed-origins arn
                     enable-strict-origin-enforcement name)
   (common-lisp:declare
    (common-lisp:ignorable allowed-countries allowed-origins arn
     enable-strict-origin-enforcement name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-playback-restriction-policy-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/UpdatePlaybackRestrictionPolicy"
                                                        "UpdatePlaybackRestrictionPolicy"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-playback-restriction-policy))
